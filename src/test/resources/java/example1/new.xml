<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:err="http://www.srcML.org/srcML/srcerr" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="Java" filename="gumtree-spoon-ast-diff/src/test/resources/examples/t_212496/right_CoreHelperImpl_1.30.java" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// $Id: CoreHelperImpl.java,v 1.30 2005-10-16 08:33:12 rastaman Exp $</comment>
<comment type="line" pos:line="2" pos:column="1">// Copyright (c) 1996-2005 The Regents of the University of California. All</comment>
<comment type="line" pos:line="3" pos:column="1">// Rights Reserved. Permission to use, copy, modify, and distribute this</comment>
<comment type="line" pos:line="4" pos:column="1">// software and its documentation without fee, and without a written</comment>
<comment type="line" pos:line="5" pos:column="1">// agreement is hereby granted, provided that the above copyright notice</comment>
<comment type="line" pos:line="6" pos:column="1">// and this paragraph appear in all copies.  This software program and</comment>
<comment type="line" pos:line="7" pos:column="1">// documentation are copyrighted by The Regents of the University of</comment>
<comment type="line" pos:line="8" pos:column="1">// California. The software program and documentation are supplied "AS</comment>
<comment type="line" pos:line="9" pos:column="1">// IS", without any accompanying services from The Regents. The Regents</comment>
<comment type="line" pos:line="10" pos:column="1">// does not warrant that the operation of the program will be</comment>
<comment type="line" pos:line="11" pos:column="1">// uninterrupted or error-free. The end-user understands that the program</comment>
<comment type="line" pos:line="12" pos:column="1">// was developed for research purposes and is advised not to rely</comment>
<comment type="line" pos:line="13" pos:column="1">// exclusively on the program for any reason.  IN NO EVENT SHALL THE</comment>
<comment type="line" pos:line="14" pos:column="1">// UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY FOR DIRECT, INDIRECT,</comment>
<comment type="line" pos:line="15" pos:column="1">// SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, INCLUDING LOST PROFITS,</comment>
<comment type="line" pos:line="16" pos:column="1">// ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF</comment>
<comment type="line" pos:line="17" pos:column="1">// THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF</comment>
<comment type="line" pos:line="18" pos:column="1">// SUCH DAMAGE. THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY</comment>
<comment type="line" pos:line="19" pos:column="1">// WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF</comment>
<comment type="line" pos:line="20" pos:column="1">// MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE</comment>
<comment type="line" pos:line="21" pos:column="1">// PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF</comment>
<comment type="line" pos:line="22" pos:column="1">// CALIFORNIA HAS NO OBLIGATIONS TO PROVIDE MAINTENANCE, SUPPORT,</comment>
<comment type="line" pos:line="23" pos:column="1">// UPDATES, ENHANCEMENTS, OR MODIFICATIONS.</comment>

<package pos:line="25" pos:column="1">package <name><name pos:line="25" pos:column="9">org<pos:position pos:line="25" pos:column="12"/></name><operator pos:line="25" pos:column="12">.<pos:position pos:line="25" pos:column="13"/></operator><name pos:line="25" pos:column="13">argouml<pos:position pos:line="25" pos:column="20"/></name><operator pos:line="25" pos:column="20">.<pos:position pos:line="25" pos:column="21"/></operator><name pos:line="25" pos:column="21">model<pos:position pos:line="25" pos:column="26"/></name><operator pos:line="25" pos:column="26">.<pos:position pos:line="25" pos:column="27"/></operator><name pos:line="25" pos:column="27">uml<pos:position pos:line="25" pos:column="30"/></name></name>;<pos:position pos:line="25" pos:column="31"/></package>

<import pos:line="27" pos:column="1">import <name><name pos:line="27" pos:column="8">java<pos:position pos:line="27" pos:column="12"/></name><operator pos:line="27" pos:column="12">.<pos:position pos:line="27" pos:column="13"/></operator><name pos:line="27" pos:column="13">util<pos:position pos:line="27" pos:column="17"/></name><operator pos:line="27" pos:column="17">.<pos:position pos:line="27" pos:column="18"/></operator><name pos:line="27" pos:column="18">ArrayList<pos:position pos:line="27" pos:column="27"/></name></name>;<pos:position pos:line="27" pos:column="28"/></import>
<import pos:line="28" pos:column="1">import <name><name pos:line="28" pos:column="8">java<pos:position pos:line="28" pos:column="12"/></name><operator pos:line="28" pos:column="12">.<pos:position pos:line="28" pos:column="13"/></operator><name pos:line="28" pos:column="13">util<pos:position pos:line="28" pos:column="17"/></name><operator pos:line="28" pos:column="17">.<pos:position pos:line="28" pos:column="18"/></operator><name pos:line="28" pos:column="18">Collection<pos:position pos:line="28" pos:column="28"/></name></name>;<pos:position pos:line="28" pos:column="29"/></import>
<import pos:line="29" pos:column="1">import <name><name pos:line="29" pos:column="8">java<pos:position pos:line="29" pos:column="12"/></name><operator pos:line="29" pos:column="12">.<pos:position pos:line="29" pos:column="13"/></operator><name pos:line="29" pos:column="13">util<pos:position pos:line="29" pos:column="17"/></name><operator pos:line="29" pos:column="17">.<pos:position pos:line="29" pos:column="18"/></operator><name pos:line="29" pos:column="18">HashSet<pos:position pos:line="29" pos:column="25"/></name></name>;<pos:position pos:line="29" pos:column="26"/></import>
<import pos:line="30" pos:column="1">import <name><name pos:line="30" pos:column="8">java<pos:position pos:line="30" pos:column="12"/></name><operator pos:line="30" pos:column="12">.<pos:position pos:line="30" pos:column="13"/></operator><name pos:line="30" pos:column="13">util<pos:position pos:line="30" pos:column="17"/></name><operator pos:line="30" pos:column="17">.<pos:position pos:line="30" pos:column="18"/></operator><name pos:line="30" pos:column="18">Iterator<pos:position pos:line="30" pos:column="26"/></name></name>;<pos:position pos:line="30" pos:column="27"/></import>
<import pos:line="31" pos:column="1">import <name><name pos:line="31" pos:column="8">java<pos:position pos:line="31" pos:column="12"/></name><operator pos:line="31" pos:column="12">.<pos:position pos:line="31" pos:column="13"/></operator><name pos:line="31" pos:column="13">util<pos:position pos:line="31" pos:column="17"/></name><operator pos:line="31" pos:column="17">.<pos:position pos:line="31" pos:column="18"/></operator><name pos:line="31" pos:column="18">List<pos:position pos:line="31" pos:column="22"/></name></name>;<pos:position pos:line="31" pos:column="23"/></import>
<import pos:line="32" pos:column="1">import <name><name pos:line="32" pos:column="8">java<pos:position pos:line="32" pos:column="12"/></name><operator pos:line="32" pos:column="12">.<pos:position pos:line="32" pos:column="13"/></operator><name pos:line="32" pos:column="13">util<pos:position pos:line="32" pos:column="17"/></name><operator pos:line="32" pos:column="17">.<pos:position pos:line="32" pos:column="18"/></operator><name pos:line="32" pos:column="18">Set<pos:position pos:line="32" pos:column="21"/></name></name>;<pos:position pos:line="32" pos:column="22"/></import>
<import pos:line="33" pos:column="1">import <name><name pos:line="33" pos:column="8">java<pos:position pos:line="33" pos:column="12"/></name><operator pos:line="33" pos:column="12">.<pos:position pos:line="33" pos:column="13"/></operator><name pos:line="33" pos:column="13">util<pos:position pos:line="33" pos:column="17"/></name><operator pos:line="33" pos:column="17">.<pos:position pos:line="33" pos:column="18"/></operator><name pos:line="33" pos:column="18">Vector<pos:position pos:line="33" pos:column="24"/></name></name>;<pos:position pos:line="33" pos:column="25"/></import>

<import pos:line="35" pos:column="1">import <name><name pos:line="35" pos:column="8">org<pos:position pos:line="35" pos:column="11"/></name><operator pos:line="35" pos:column="11">.<pos:position pos:line="35" pos:column="12"/></operator><name pos:line="35" pos:column="12">apache<pos:position pos:line="35" pos:column="18"/></name><operator pos:line="35" pos:column="18">.<pos:position pos:line="35" pos:column="19"/></operator><name pos:line="35" pos:column="19">log4j<pos:position pos:line="35" pos:column="24"/></name><operator pos:line="35" pos:column="24">.<pos:position pos:line="35" pos:column="25"/></operator><name pos:line="35" pos:column="25">Logger<pos:position pos:line="35" pos:column="31"/></name></name>;<pos:position pos:line="35" pos:column="32"/></import>
<import pos:line="36" pos:column="1">import <name><name pos:line="36" pos:column="8">org<pos:position pos:line="36" pos:column="11"/></name><operator pos:line="36" pos:column="11">.<pos:position pos:line="36" pos:column="12"/></operator><name pos:line="36" pos:column="12">argouml<pos:position pos:line="36" pos:column="19"/></name><operator pos:line="36" pos:column="19">.<pos:position pos:line="36" pos:column="20"/></operator><name pos:line="36" pos:column="20">model<pos:position pos:line="36" pos:column="25"/></name><operator pos:line="36" pos:column="25">.<pos:position pos:line="36" pos:column="26"/></operator><name pos:line="36" pos:column="26">CoreHelper<pos:position pos:line="36" pos:column="36"/></name></name>;<pos:position pos:line="36" pos:column="37"/></import>
<import pos:line="37" pos:column="1">import <name><name pos:line="37" pos:column="8">org<pos:position pos:line="37" pos:column="11"/></name><operator pos:line="37" pos:column="11">.<pos:position pos:line="37" pos:column="12"/></operator><name pos:line="37" pos:column="12">argouml<pos:position pos:line="37" pos:column="19"/></name><operator pos:line="37" pos:column="19">.<pos:position pos:line="37" pos:column="20"/></operator><name pos:line="37" pos:column="20">model<pos:position pos:line="37" pos:column="25"/></name><operator pos:line="37" pos:column="25">.<pos:position pos:line="37" pos:column="26"/></operator><name pos:line="37" pos:column="26">Model<pos:position pos:line="37" pos:column="31"/></name></name>;<pos:position pos:line="37" pos:column="32"/></import>
<import pos:line="38" pos:column="1">import <name><name pos:line="38" pos:column="8">org<pos:position pos:line="38" pos:column="11"/></name><operator pos:line="38" pos:column="11">.<pos:position pos:line="38" pos:column="12"/></operator><name pos:line="38" pos:column="12">argouml<pos:position pos:line="38" pos:column="19"/></name><operator pos:line="38" pos:column="19">.<pos:position pos:line="38" pos:column="20"/></operator><name pos:line="38" pos:column="20">model<pos:position pos:line="38" pos:column="25"/></name><operator pos:line="38" pos:column="25">.<pos:position pos:line="38" pos:column="26"/></operator><name pos:line="38" pos:column="26">ModelMemento<pos:position pos:line="38" pos:column="38"/></name></name>;<pos:position pos:line="38" pos:column="39"/></import>
<import pos:line="39" pos:column="1">import <name><name pos:line="39" pos:column="8">org<pos:position pos:line="39" pos:column="11"/></name><operator pos:line="39" pos:column="11">.<pos:position pos:line="39" pos:column="12"/></operator><name pos:line="39" pos:column="12">argouml<pos:position pos:line="39" pos:column="19"/></name><operator pos:line="39" pos:column="19">.<pos:position pos:line="39" pos:column="20"/></operator><name pos:line="39" pos:column="20">model<pos:position pos:line="39" pos:column="25"/></name><operator pos:line="39" pos:column="25">.<pos:position pos:line="39" pos:column="26"/></operator><name pos:line="39" pos:column="26">UmlException<pos:position pos:line="39" pos:column="38"/></name></name>;<pos:position pos:line="39" pos:column="39"/></import>
<import pos:line="40" pos:column="1">import <name><name pos:line="40" pos:column="8">org<pos:position pos:line="40" pos:column="11"/></name><operator pos:line="40" pos:column="11">.<pos:position pos:line="40" pos:column="12"/></operator><name pos:line="40" pos:column="12">argouml<pos:position pos:line="40" pos:column="19"/></name><operator pos:line="40" pos:column="19">.<pos:position pos:line="40" pos:column="20"/></operator><name pos:line="40" pos:column="20">util<pos:position pos:line="40" pos:column="24"/></name><operator pos:line="40" pos:column="24">.<pos:position pos:line="40" pos:column="25"/></operator><name pos:line="40" pos:column="25">CollectionUtil<pos:position pos:line="40" pos:column="39"/></name></name>;<pos:position pos:line="40" pos:column="40"/></import>

<import pos:line="42" pos:column="1">import <name><name pos:line="42" pos:column="8">ru<pos:position pos:line="42" pos:column="10"/></name><operator pos:line="42" pos:column="10">.<pos:position pos:line="42" pos:column="11"/></operator><name pos:line="42" pos:column="11">novosoft<pos:position pos:line="42" pos:column="19"/></name><operator pos:line="42" pos:column="19">.<pos:position pos:line="42" pos:column="20"/></operator><name pos:line="42" pos:column="20">uml<pos:position pos:line="42" pos:column="23"/></name><operator pos:line="42" pos:column="23">.<pos:position pos:line="42" pos:column="24"/></operator><name pos:line="42" pos:column="24">MBase<pos:position pos:line="42" pos:column="29"/></name></name>;<pos:position pos:line="42" pos:column="30"/></import>
<import pos:line="43" pos:column="1">import <name><name pos:line="43" pos:column="8">ru<pos:position pos:line="43" pos:column="10"/></name><operator pos:line="43" pos:column="10">.<pos:position pos:line="43" pos:column="11"/></operator><name pos:line="43" pos:column="11">novosoft<pos:position pos:line="43" pos:column="19"/></name><operator pos:line="43" pos:column="19">.<pos:position pos:line="43" pos:column="20"/></operator><name pos:line="43" pos:column="20">uml<pos:position pos:line="43" pos:column="23"/></name><operator pos:line="43" pos:column="23">.<pos:position pos:line="43" pos:column="24"/></operator><name pos:line="43" pos:column="24">behavior<pos:position pos:line="43" pos:column="32"/></name><operator pos:line="43" pos:column="32">.<pos:position pos:line="43" pos:column="33"/></operator><name pos:line="43" pos:column="33">activity_graphs<pos:position pos:line="43" pos:column="48"/></name><operator pos:line="43" pos:column="48">.<pos:position pos:line="43" pos:column="49"/></operator><name pos:line="43" pos:column="49">MActivityGraph<pos:position pos:line="43" pos:column="63"/></name></name>;<pos:position pos:line="43" pos:column="64"/></import>
<import pos:line="44" pos:column="1">import <name><name pos:line="44" pos:column="8">ru<pos:position pos:line="44" pos:column="10"/></name><operator pos:line="44" pos:column="10">.<pos:position pos:line="44" pos:column="11"/></operator><name pos:line="44" pos:column="11">novosoft<pos:position pos:line="44" pos:column="19"/></name><operator pos:line="44" pos:column="19">.<pos:position pos:line="44" pos:column="20"/></operator><name pos:line="44" pos:column="20">uml<pos:position pos:line="44" pos:column="23"/></name><operator pos:line="44" pos:column="23">.<pos:position pos:line="44" pos:column="24"/></operator><name pos:line="44" pos:column="24">behavior<pos:position pos:line="44" pos:column="32"/></name><operator pos:line="44" pos:column="32">.<pos:position pos:line="44" pos:column="33"/></operator><name pos:line="44" pos:column="33">activity_graphs<pos:position pos:line="44" pos:column="48"/></name><operator pos:line="44" pos:column="48">.<pos:position pos:line="44" pos:column="49"/></operator><name pos:line="44" pos:column="49">MClassifierInState<pos:position pos:line="44" pos:column="67"/></name></name>;<pos:position pos:line="44" pos:column="68"/></import>
<import pos:line="45" pos:column="1">import <name><name pos:line="45" pos:column="8">ru<pos:position pos:line="45" pos:column="10"/></name><operator pos:line="45" pos:column="10">.<pos:position pos:line="45" pos:column="11"/></operator><name pos:line="45" pos:column="11">novosoft<pos:position pos:line="45" pos:column="19"/></name><operator pos:line="45" pos:column="19">.<pos:position pos:line="45" pos:column="20"/></operator><name pos:line="45" pos:column="20">uml<pos:position pos:line="45" pos:column="23"/></name><operator pos:line="45" pos:column="23">.<pos:position pos:line="45" pos:column="24"/></operator><name pos:line="45" pos:column="24">behavior<pos:position pos:line="45" pos:column="32"/></name><operator pos:line="45" pos:column="32">.<pos:position pos:line="45" pos:column="33"/></operator><name pos:line="45" pos:column="33">activity_graphs<pos:position pos:line="45" pos:column="48"/></name><operator pos:line="45" pos:column="48">.<pos:position pos:line="45" pos:column="49"/></operator><name pos:line="45" pos:column="49">MObjectFlowState<pos:position pos:line="45" pos:column="65"/></name></name>;<pos:position pos:line="45" pos:column="66"/></import>
<import pos:line="46" pos:column="1">import <name><name pos:line="46" pos:column="8">ru<pos:position pos:line="46" pos:column="10"/></name><operator pos:line="46" pos:column="10">.<pos:position pos:line="46" pos:column="11"/></operator><name pos:line="46" pos:column="11">novosoft<pos:position pos:line="46" pos:column="19"/></name><operator pos:line="46" pos:column="19">.<pos:position pos:line="46" pos:column="20"/></operator><name pos:line="46" pos:column="20">uml<pos:position pos:line="46" pos:column="23"/></name><operator pos:line="46" pos:column="23">.<pos:position pos:line="46" pos:column="24"/></operator><name pos:line="46" pos:column="24">behavior<pos:position pos:line="46" pos:column="32"/></name><operator pos:line="46" pos:column="32">.<pos:position pos:line="46" pos:column="33"/></operator><name pos:line="46" pos:column="33">activity_graphs<pos:position pos:line="46" pos:column="48"/></name><operator pos:line="46" pos:column="48">.<pos:position pos:line="46" pos:column="49"/></operator><name pos:line="46" pos:column="49">MPartition<pos:position pos:line="46" pos:column="59"/></name></name>;<pos:position pos:line="46" pos:column="60"/></import>
<import pos:line="47" pos:column="1">import <name><name pos:line="47" pos:column="8">ru<pos:position pos:line="47" pos:column="10"/></name><operator pos:line="47" pos:column="10">.<pos:position pos:line="47" pos:column="11"/></operator><name pos:line="47" pos:column="11">novosoft<pos:position pos:line="47" pos:column="19"/></name><operator pos:line="47" pos:column="19">.<pos:position pos:line="47" pos:column="20"/></operator><name pos:line="47" pos:column="20">uml<pos:position pos:line="47" pos:column="23"/></name><operator pos:line="47" pos:column="23">.<pos:position pos:line="47" pos:column="24"/></operator><name pos:line="47" pos:column="24">behavior<pos:position pos:line="47" pos:column="32"/></name><operator pos:line="47" pos:column="32">.<pos:position pos:line="47" pos:column="33"/></operator><name pos:line="47" pos:column="33">collaborations<pos:position pos:line="47" pos:column="47"/></name><operator pos:line="47" pos:column="47">.<pos:position pos:line="47" pos:column="48"/></operator><name pos:line="47" pos:column="48">MAssociationEndRole<pos:position pos:line="47" pos:column="67"/></name></name>;<pos:position pos:line="47" pos:column="68"/></import>
<import pos:line="48" pos:column="1">import <name><name pos:line="48" pos:column="8">ru<pos:position pos:line="48" pos:column="10"/></name><operator pos:line="48" pos:column="10">.<pos:position pos:line="48" pos:column="11"/></operator><name pos:line="48" pos:column="11">novosoft<pos:position pos:line="48" pos:column="19"/></name><operator pos:line="48" pos:column="19">.<pos:position pos:line="48" pos:column="20"/></operator><name pos:line="48" pos:column="20">uml<pos:position pos:line="48" pos:column="23"/></name><operator pos:line="48" pos:column="23">.<pos:position pos:line="48" pos:column="24"/></operator><name pos:line="48" pos:column="24">behavior<pos:position pos:line="48" pos:column="32"/></name><operator pos:line="48" pos:column="32">.<pos:position pos:line="48" pos:column="33"/></operator><name pos:line="48" pos:column="33">collaborations<pos:position pos:line="48" pos:column="47"/></name><operator pos:line="48" pos:column="47">.<pos:position pos:line="48" pos:column="48"/></operator><name pos:line="48" pos:column="48">MAssociationRole<pos:position pos:line="48" pos:column="64"/></name></name>;<pos:position pos:line="48" pos:column="65"/></import>
<import pos:line="49" pos:column="1">import <name><name pos:line="49" pos:column="8">ru<pos:position pos:line="49" pos:column="10"/></name><operator pos:line="49" pos:column="10">.<pos:position pos:line="49" pos:column="11"/></operator><name pos:line="49" pos:column="11">novosoft<pos:position pos:line="49" pos:column="19"/></name><operator pos:line="49" pos:column="19">.<pos:position pos:line="49" pos:column="20"/></operator><name pos:line="49" pos:column="20">uml<pos:position pos:line="49" pos:column="23"/></name><operator pos:line="49" pos:column="23">.<pos:position pos:line="49" pos:column="24"/></operator><name pos:line="49" pos:column="24">behavior<pos:position pos:line="49" pos:column="32"/></name><operator pos:line="49" pos:column="32">.<pos:position pos:line="49" pos:column="33"/></operator><name pos:line="49" pos:column="33">collaborations<pos:position pos:line="49" pos:column="47"/></name><operator pos:line="49" pos:column="47">.<pos:position pos:line="49" pos:column="48"/></operator><name pos:line="49" pos:column="48">MClassifierRole<pos:position pos:line="49" pos:column="63"/></name></name>;<pos:position pos:line="49" pos:column="64"/></import>
<import pos:line="50" pos:column="1">import <name><name pos:line="50" pos:column="8">ru<pos:position pos:line="50" pos:column="10"/></name><operator pos:line="50" pos:column="10">.<pos:position pos:line="50" pos:column="11"/></operator><name pos:line="50" pos:column="11">novosoft<pos:position pos:line="50" pos:column="19"/></name><operator pos:line="50" pos:column="19">.<pos:position pos:line="50" pos:column="20"/></operator><name pos:line="50" pos:column="20">uml<pos:position pos:line="50" pos:column="23"/></name><operator pos:line="50" pos:column="23">.<pos:position pos:line="50" pos:column="24"/></operator><name pos:line="50" pos:column="24">behavior<pos:position pos:line="50" pos:column="32"/></name><operator pos:line="50" pos:column="32">.<pos:position pos:line="50" pos:column="33"/></operator><name pos:line="50" pos:column="33">collaborations<pos:position pos:line="50" pos:column="47"/></name><operator pos:line="50" pos:column="47">.<pos:position pos:line="50" pos:column="48"/></operator><name pos:line="50" pos:column="48">MCollaboration<pos:position pos:line="50" pos:column="62"/></name></name>;<pos:position pos:line="50" pos:column="63"/></import>
<import pos:line="51" pos:column="1">import <name><name pos:line="51" pos:column="8">ru<pos:position pos:line="51" pos:column="10"/></name><operator pos:line="51" pos:column="10">.<pos:position pos:line="51" pos:column="11"/></operator><name pos:line="51" pos:column="11">novosoft<pos:position pos:line="51" pos:column="19"/></name><operator pos:line="51" pos:column="19">.<pos:position pos:line="51" pos:column="20"/></operator><name pos:line="51" pos:column="20">uml<pos:position pos:line="51" pos:column="23"/></name><operator pos:line="51" pos:column="23">.<pos:position pos:line="51" pos:column="24"/></operator><name pos:line="51" pos:column="24">behavior<pos:position pos:line="51" pos:column="32"/></name><operator pos:line="51" pos:column="32">.<pos:position pos:line="51" pos:column="33"/></operator><name pos:line="51" pos:column="33">collaborations<pos:position pos:line="51" pos:column="47"/></name><operator pos:line="51" pos:column="47">.<pos:position pos:line="51" pos:column="48"/></operator><name pos:line="51" pos:column="48">MInteraction<pos:position pos:line="51" pos:column="60"/></name></name>;<pos:position pos:line="51" pos:column="61"/></import>
<import pos:line="52" pos:column="1">import <name><name pos:line="52" pos:column="8">ru<pos:position pos:line="52" pos:column="10"/></name><operator pos:line="52" pos:column="10">.<pos:position pos:line="52" pos:column="11"/></operator><name pos:line="52" pos:column="11">novosoft<pos:position pos:line="52" pos:column="19"/></name><operator pos:line="52" pos:column="19">.<pos:position pos:line="52" pos:column="20"/></operator><name pos:line="52" pos:column="20">uml<pos:position pos:line="52" pos:column="23"/></name><operator pos:line="52" pos:column="23">.<pos:position pos:line="52" pos:column="24"/></operator><name pos:line="52" pos:column="24">behavior<pos:position pos:line="52" pos:column="32"/></name><operator pos:line="52" pos:column="32">.<pos:position pos:line="52" pos:column="33"/></operator><name pos:line="52" pos:column="33">collaborations<pos:position pos:line="52" pos:column="47"/></name><operator pos:line="52" pos:column="47">.<pos:position pos:line="52" pos:column="48"/></operator><name pos:line="52" pos:column="48">MMessage<pos:position pos:line="52" pos:column="56"/></name></name>;<pos:position pos:line="52" pos:column="57"/></import>
<import pos:line="53" pos:column="1">import <name><name pos:line="53" pos:column="8">ru<pos:position pos:line="53" pos:column="10"/></name><operator pos:line="53" pos:column="10">.<pos:position pos:line="53" pos:column="11"/></operator><name pos:line="53" pos:column="11">novosoft<pos:position pos:line="53" pos:column="19"/></name><operator pos:line="53" pos:column="19">.<pos:position pos:line="53" pos:column="20"/></operator><name pos:line="53" pos:column="20">uml<pos:position pos:line="53" pos:column="23"/></name><operator pos:line="53" pos:column="23">.<pos:position pos:line="53" pos:column="24"/></operator><name pos:line="53" pos:column="24">behavior<pos:position pos:line="53" pos:column="32"/></name><operator pos:line="53" pos:column="32">.<pos:position pos:line="53" pos:column="33"/></operator><name pos:line="53" pos:column="33">common_behavior<pos:position pos:line="53" pos:column="48"/></name><operator pos:line="53" pos:column="48">.<pos:position pos:line="53" pos:column="49"/></operator><name pos:line="53" pos:column="49">MAction<pos:position pos:line="53" pos:column="56"/></name></name>;<pos:position pos:line="53" pos:column="57"/></import>
<import pos:line="54" pos:column="1">import <name><name pos:line="54" pos:column="8">ru<pos:position pos:line="54" pos:column="10"/></name><operator pos:line="54" pos:column="10">.<pos:position pos:line="54" pos:column="11"/></operator><name pos:line="54" pos:column="11">novosoft<pos:position pos:line="54" pos:column="19"/></name><operator pos:line="54" pos:column="19">.<pos:position pos:line="54" pos:column="20"/></operator><name pos:line="54" pos:column="20">uml<pos:position pos:line="54" pos:column="23"/></name><operator pos:line="54" pos:column="23">.<pos:position pos:line="54" pos:column="24"/></operator><name pos:line="54" pos:column="24">behavior<pos:position pos:line="54" pos:column="32"/></name><operator pos:line="54" pos:column="32">.<pos:position pos:line="54" pos:column="33"/></operator><name pos:line="54" pos:column="33">common_behavior<pos:position pos:line="54" pos:column="48"/></name><operator pos:line="54" pos:column="48">.<pos:position pos:line="54" pos:column="49"/></operator><name pos:line="54" pos:column="49">MAttributeLink<pos:position pos:line="54" pos:column="63"/></name></name>;<pos:position pos:line="54" pos:column="64"/></import>
<import pos:line="55" pos:column="1">import <name><name pos:line="55" pos:column="8">ru<pos:position pos:line="55" pos:column="10"/></name><operator pos:line="55" pos:column="10">.<pos:position pos:line="55" pos:column="11"/></operator><name pos:line="55" pos:column="11">novosoft<pos:position pos:line="55" pos:column="19"/></name><operator pos:line="55" pos:column="19">.<pos:position pos:line="55" pos:column="20"/></operator><name pos:line="55" pos:column="20">uml<pos:position pos:line="55" pos:column="23"/></name><operator pos:line="55" pos:column="23">.<pos:position pos:line="55" pos:column="24"/></operator><name pos:line="55" pos:column="24">behavior<pos:position pos:line="55" pos:column="32"/></name><operator pos:line="55" pos:column="32">.<pos:position pos:line="55" pos:column="33"/></operator><name pos:line="55" pos:column="33">common_behavior<pos:position pos:line="55" pos:column="48"/></name><operator pos:line="55" pos:column="48">.<pos:position pos:line="55" pos:column="49"/></operator><name pos:line="55" pos:column="49">MComponentInstance<pos:position pos:line="55" pos:column="67"/></name></name>;<pos:position pos:line="55" pos:column="68"/></import>
<import pos:line="56" pos:column="1">import <name><name pos:line="56" pos:column="8">ru<pos:position pos:line="56" pos:column="10"/></name><operator pos:line="56" pos:column="10">.<pos:position pos:line="56" pos:column="11"/></operator><name pos:line="56" pos:column="11">novosoft<pos:position pos:line="56" pos:column="19"/></name><operator pos:line="56" pos:column="19">.<pos:position pos:line="56" pos:column="20"/></operator><name pos:line="56" pos:column="20">uml<pos:position pos:line="56" pos:column="23"/></name><operator pos:line="56" pos:column="23">.<pos:position pos:line="56" pos:column="24"/></operator><name pos:line="56" pos:column="24">behavior<pos:position pos:line="56" pos:column="32"/></name><operator pos:line="56" pos:column="32">.<pos:position pos:line="56" pos:column="33"/></operator><name pos:line="56" pos:column="33">common_behavior<pos:position pos:line="56" pos:column="48"/></name><operator pos:line="56" pos:column="48">.<pos:position pos:line="56" pos:column="49"/></operator><name pos:line="56" pos:column="49">MInstance<pos:position pos:line="56" pos:column="58"/></name></name>;<pos:position pos:line="56" pos:column="59"/></import>
<import pos:line="57" pos:column="1">import <name><name pos:line="57" pos:column="8">ru<pos:position pos:line="57" pos:column="10"/></name><operator pos:line="57" pos:column="10">.<pos:position pos:line="57" pos:column="11"/></operator><name pos:line="57" pos:column="11">novosoft<pos:position pos:line="57" pos:column="19"/></name><operator pos:line="57" pos:column="19">.<pos:position pos:line="57" pos:column="20"/></operator><name pos:line="57" pos:column="20">uml<pos:position pos:line="57" pos:column="23"/></name><operator pos:line="57" pos:column="23">.<pos:position pos:line="57" pos:column="24"/></operator><name pos:line="57" pos:column="24">behavior<pos:position pos:line="57" pos:column="32"/></name><operator pos:line="57" pos:column="32">.<pos:position pos:line="57" pos:column="33"/></operator><name pos:line="57" pos:column="33">common_behavior<pos:position pos:line="57" pos:column="48"/></name><operator pos:line="57" pos:column="48">.<pos:position pos:line="57" pos:column="49"/></operator><name pos:line="57" pos:column="49">MLink<pos:position pos:line="57" pos:column="54"/></name></name>;<pos:position pos:line="57" pos:column="55"/></import>
<import pos:line="58" pos:column="1">import <name><name pos:line="58" pos:column="8">ru<pos:position pos:line="58" pos:column="10"/></name><operator pos:line="58" pos:column="10">.<pos:position pos:line="58" pos:column="11"/></operator><name pos:line="58" pos:column="11">novosoft<pos:position pos:line="58" pos:column="19"/></name><operator pos:line="58" pos:column="19">.<pos:position pos:line="58" pos:column="20"/></operator><name pos:line="58" pos:column="20">uml<pos:position pos:line="58" pos:column="23"/></name><operator pos:line="58" pos:column="23">.<pos:position pos:line="58" pos:column="24"/></operator><name pos:line="58" pos:column="24">behavior<pos:position pos:line="58" pos:column="32"/></name><operator pos:line="58" pos:column="32">.<pos:position pos:line="58" pos:column="33"/></operator><name pos:line="58" pos:column="33">common_behavior<pos:position pos:line="58" pos:column="48"/></name><operator pos:line="58" pos:column="48">.<pos:position pos:line="58" pos:column="49"/></operator><name pos:line="58" pos:column="49">MLinkEnd<pos:position pos:line="58" pos:column="57"/></name></name>;<pos:position pos:line="58" pos:column="58"/></import>
<import pos:line="59" pos:column="1">import <name><name pos:line="59" pos:column="8">ru<pos:position pos:line="59" pos:column="10"/></name><operator pos:line="59" pos:column="10">.<pos:position pos:line="59" pos:column="11"/></operator><name pos:line="59" pos:column="11">novosoft<pos:position pos:line="59" pos:column="19"/></name><operator pos:line="59" pos:column="19">.<pos:position pos:line="59" pos:column="20"/></operator><name pos:line="59" pos:column="20">uml<pos:position pos:line="59" pos:column="23"/></name><operator pos:line="59" pos:column="23">.<pos:position pos:line="59" pos:column="24"/></operator><name pos:line="59" pos:column="24">behavior<pos:position pos:line="59" pos:column="32"/></name><operator pos:line="59" pos:column="32">.<pos:position pos:line="59" pos:column="33"/></operator><name pos:line="59" pos:column="33">common_behavior<pos:position pos:line="59" pos:column="48"/></name><operator pos:line="59" pos:column="48">.<pos:position pos:line="59" pos:column="49"/></operator><name pos:line="59" pos:column="49">MNodeInstance<pos:position pos:line="59" pos:column="62"/></name></name>;<pos:position pos:line="59" pos:column="63"/></import>
<import pos:line="60" pos:column="1">import <name><name pos:line="60" pos:column="8">ru<pos:position pos:line="60" pos:column="10"/></name><operator pos:line="60" pos:column="10">.<pos:position pos:line="60" pos:column="11"/></operator><name pos:line="60" pos:column="11">novosoft<pos:position pos:line="60" pos:column="19"/></name><operator pos:line="60" pos:column="19">.<pos:position pos:line="60" pos:column="20"/></operator><name pos:line="60" pos:column="20">uml<pos:position pos:line="60" pos:column="23"/></name><operator pos:line="60" pos:column="23">.<pos:position pos:line="60" pos:column="24"/></operator><name pos:line="60" pos:column="24">behavior<pos:position pos:line="60" pos:column="32"/></name><operator pos:line="60" pos:column="32">.<pos:position pos:line="60" pos:column="33"/></operator><name pos:line="60" pos:column="33">common_behavior<pos:position pos:line="60" pos:column="48"/></name><operator pos:line="60" pos:column="48">.<pos:position pos:line="60" pos:column="49"/></operator><name pos:line="60" pos:column="49">MReception<pos:position pos:line="60" pos:column="59"/></name></name>;<pos:position pos:line="60" pos:column="60"/></import>
<import pos:line="61" pos:column="1">import <name><name pos:line="61" pos:column="8">ru<pos:position pos:line="61" pos:column="10"/></name><operator pos:line="61" pos:column="10">.<pos:position pos:line="61" pos:column="11"/></operator><name pos:line="61" pos:column="11">novosoft<pos:position pos:line="61" pos:column="19"/></name><operator pos:line="61" pos:column="19">.<pos:position pos:line="61" pos:column="20"/></operator><name pos:line="61" pos:column="20">uml<pos:position pos:line="61" pos:column="23"/></name><operator pos:line="61" pos:column="23">.<pos:position pos:line="61" pos:column="24"/></operator><name pos:line="61" pos:column="24">behavior<pos:position pos:line="61" pos:column="32"/></name><operator pos:line="61" pos:column="32">.<pos:position pos:line="61" pos:column="33"/></operator><name pos:line="61" pos:column="33">common_behavior<pos:position pos:line="61" pos:column="48"/></name><operator pos:line="61" pos:column="48">.<pos:position pos:line="61" pos:column="49"/></operator><name pos:line="61" pos:column="49">MSignal<pos:position pos:line="61" pos:column="56"/></name></name>;<pos:position pos:line="61" pos:column="57"/></import>
<import pos:line="62" pos:column="1">import <name><name pos:line="62" pos:column="8">ru<pos:position pos:line="62" pos:column="10"/></name><operator pos:line="62" pos:column="10">.<pos:position pos:line="62" pos:column="11"/></operator><name pos:line="62" pos:column="11">novosoft<pos:position pos:line="62" pos:column="19"/></name><operator pos:line="62" pos:column="19">.<pos:position pos:line="62" pos:column="20"/></operator><name pos:line="62" pos:column="20">uml<pos:position pos:line="62" pos:column="23"/></name><operator pos:line="62" pos:column="23">.<pos:position pos:line="62" pos:column="24"/></operator><name pos:line="62" pos:column="24">behavior<pos:position pos:line="62" pos:column="32"/></name><operator pos:line="62" pos:column="32">.<pos:position pos:line="62" pos:column="33"/></operator><name pos:line="62" pos:column="33">state_machines<pos:position pos:line="62" pos:column="47"/></name><operator pos:line="62" pos:column="47">.<pos:position pos:line="62" pos:column="48"/></operator><name pos:line="62" pos:column="48">MCompositeState<pos:position pos:line="62" pos:column="63"/></name></name>;<pos:position pos:line="62" pos:column="64"/></import>
<import pos:line="63" pos:column="1">import <name><name pos:line="63" pos:column="8">ru<pos:position pos:line="63" pos:column="10"/></name><operator pos:line="63" pos:column="10">.<pos:position pos:line="63" pos:column="11"/></operator><name pos:line="63" pos:column="11">novosoft<pos:position pos:line="63" pos:column="19"/></name><operator pos:line="63" pos:column="19">.<pos:position pos:line="63" pos:column="20"/></operator><name pos:line="63" pos:column="20">uml<pos:position pos:line="63" pos:column="23"/></name><operator pos:line="63" pos:column="23">.<pos:position pos:line="63" pos:column="24"/></operator><name pos:line="63" pos:column="24">behavior<pos:position pos:line="63" pos:column="32"/></name><operator pos:line="63" pos:column="32">.<pos:position pos:line="63" pos:column="33"/></operator><name pos:line="63" pos:column="33">state_machines<pos:position pos:line="63" pos:column="47"/></name><operator pos:line="63" pos:column="47">.<pos:position pos:line="63" pos:column="48"/></operator><name pos:line="63" pos:column="48">MEvent<pos:position pos:line="63" pos:column="54"/></name></name>;<pos:position pos:line="63" pos:column="55"/></import>
<import pos:line="64" pos:column="1">import <name><name pos:line="64" pos:column="8">ru<pos:position pos:line="64" pos:column="10"/></name><operator pos:line="64" pos:column="10">.<pos:position pos:line="64" pos:column="11"/></operator><name pos:line="64" pos:column="11">novosoft<pos:position pos:line="64" pos:column="19"/></name><operator pos:line="64" pos:column="19">.<pos:position pos:line="64" pos:column="20"/></operator><name pos:line="64" pos:column="20">uml<pos:position pos:line="64" pos:column="23"/></name><operator pos:line="64" pos:column="23">.<pos:position pos:line="64" pos:column="24"/></operator><name pos:line="64" pos:column="24">behavior<pos:position pos:line="64" pos:column="32"/></name><operator pos:line="64" pos:column="32">.<pos:position pos:line="64" pos:column="33"/></operator><name pos:line="64" pos:column="33">state_machines<pos:position pos:line="64" pos:column="47"/></name><operator pos:line="64" pos:column="47">.<pos:position pos:line="64" pos:column="48"/></operator><name pos:line="64" pos:column="48">MGuard<pos:position pos:line="64" pos:column="54"/></name></name>;<pos:position pos:line="64" pos:column="55"/></import>
<import pos:line="65" pos:column="1">import <name><name pos:line="65" pos:column="8">ru<pos:position pos:line="65" pos:column="10"/></name><operator pos:line="65" pos:column="10">.<pos:position pos:line="65" pos:column="11"/></operator><name pos:line="65" pos:column="11">novosoft<pos:position pos:line="65" pos:column="19"/></name><operator pos:line="65" pos:column="19">.<pos:position pos:line="65" pos:column="20"/></operator><name pos:line="65" pos:column="20">uml<pos:position pos:line="65" pos:column="23"/></name><operator pos:line="65" pos:column="23">.<pos:position pos:line="65" pos:column="24"/></operator><name pos:line="65" pos:column="24">behavior<pos:position pos:line="65" pos:column="32"/></name><operator pos:line="65" pos:column="32">.<pos:position pos:line="65" pos:column="33"/></operator><name pos:line="65" pos:column="33">state_machines<pos:position pos:line="65" pos:column="47"/></name><operator pos:line="65" pos:column="47">.<pos:position pos:line="65" pos:column="48"/></operator><name pos:line="65" pos:column="48">MPseudostate<pos:position pos:line="65" pos:column="60"/></name></name>;<pos:position pos:line="65" pos:column="61"/></import>
<import pos:line="66" pos:column="1">import <name><name pos:line="66" pos:column="8">ru<pos:position pos:line="66" pos:column="10"/></name><operator pos:line="66" pos:column="10">.<pos:position pos:line="66" pos:column="11"/></operator><name pos:line="66" pos:column="11">novosoft<pos:position pos:line="66" pos:column="19"/></name><operator pos:line="66" pos:column="19">.<pos:position pos:line="66" pos:column="20"/></operator><name pos:line="66" pos:column="20">uml<pos:position pos:line="66" pos:column="23"/></name><operator pos:line="66" pos:column="23">.<pos:position pos:line="66" pos:column="24"/></operator><name pos:line="66" pos:column="24">behavior<pos:position pos:line="66" pos:column="32"/></name><operator pos:line="66" pos:column="32">.<pos:position pos:line="66" pos:column="33"/></operator><name pos:line="66" pos:column="33">state_machines<pos:position pos:line="66" pos:column="47"/></name><operator pos:line="66" pos:column="47">.<pos:position pos:line="66" pos:column="48"/></operator><name pos:line="66" pos:column="48">MState<pos:position pos:line="66" pos:column="54"/></name></name>;<pos:position pos:line="66" pos:column="55"/></import>
<import pos:line="67" pos:column="1">import <name><name pos:line="67" pos:column="8">ru<pos:position pos:line="67" pos:column="10"/></name><operator pos:line="67" pos:column="10">.<pos:position pos:line="67" pos:column="11"/></operator><name pos:line="67" pos:column="11">novosoft<pos:position pos:line="67" pos:column="19"/></name><operator pos:line="67" pos:column="19">.<pos:position pos:line="67" pos:column="20"/></operator><name pos:line="67" pos:column="20">uml<pos:position pos:line="67" pos:column="23"/></name><operator pos:line="67" pos:column="23">.<pos:position pos:line="67" pos:column="24"/></operator><name pos:line="67" pos:column="24">behavior<pos:position pos:line="67" pos:column="32"/></name><operator pos:line="67" pos:column="32">.<pos:position pos:line="67" pos:column="33"/></operator><name pos:line="67" pos:column="33">state_machines<pos:position pos:line="67" pos:column="47"/></name><operator pos:line="67" pos:column="47">.<pos:position pos:line="67" pos:column="48"/></operator><name pos:line="67" pos:column="48">MStateMachine<pos:position pos:line="67" pos:column="61"/></name></name>;<pos:position pos:line="67" pos:column="62"/></import>
<import pos:line="68" pos:column="1">import <name><name pos:line="68" pos:column="8">ru<pos:position pos:line="68" pos:column="10"/></name><operator pos:line="68" pos:column="10">.<pos:position pos:line="68" pos:column="11"/></operator><name pos:line="68" pos:column="11">novosoft<pos:position pos:line="68" pos:column="19"/></name><operator pos:line="68" pos:column="19">.<pos:position pos:line="68" pos:column="20"/></operator><name pos:line="68" pos:column="20">uml<pos:position pos:line="68" pos:column="23"/></name><operator pos:line="68" pos:column="23">.<pos:position pos:line="68" pos:column="24"/></operator><name pos:line="68" pos:column="24">behavior<pos:position pos:line="68" pos:column="32"/></name><operator pos:line="68" pos:column="32">.<pos:position pos:line="68" pos:column="33"/></operator><name pos:line="68" pos:column="33">state_machines<pos:position pos:line="68" pos:column="47"/></name><operator pos:line="68" pos:column="47">.<pos:position pos:line="68" pos:column="48"/></operator><name pos:line="68" pos:column="48">MStateVertex<pos:position pos:line="68" pos:column="60"/></name></name>;<pos:position pos:line="68" pos:column="61"/></import>
<import pos:line="69" pos:column="1">import <name><name pos:line="69" pos:column="8">ru<pos:position pos:line="69" pos:column="10"/></name><operator pos:line="69" pos:column="10">.<pos:position pos:line="69" pos:column="11"/></operator><name pos:line="69" pos:column="11">novosoft<pos:position pos:line="69" pos:column="19"/></name><operator pos:line="69" pos:column="19">.<pos:position pos:line="69" pos:column="20"/></operator><name pos:line="69" pos:column="20">uml<pos:position pos:line="69" pos:column="23"/></name><operator pos:line="69" pos:column="23">.<pos:position pos:line="69" pos:column="24"/></operator><name pos:line="69" pos:column="24">behavior<pos:position pos:line="69" pos:column="32"/></name><operator pos:line="69" pos:column="32">.<pos:position pos:line="69" pos:column="33"/></operator><name pos:line="69" pos:column="33">state_machines<pos:position pos:line="69" pos:column="47"/></name><operator pos:line="69" pos:column="47">.<pos:position pos:line="69" pos:column="48"/></operator><name pos:line="69" pos:column="48">MTransition<pos:position pos:line="69" pos:column="59"/></name></name>;<pos:position pos:line="69" pos:column="60"/></import>
<import pos:line="70" pos:column="1">import <name><name pos:line="70" pos:column="8">ru<pos:position pos:line="70" pos:column="10"/></name><operator pos:line="70" pos:column="10">.<pos:position pos:line="70" pos:column="11"/></operator><name pos:line="70" pos:column="11">novosoft<pos:position pos:line="70" pos:column="19"/></name><operator pos:line="70" pos:column="19">.<pos:position pos:line="70" pos:column="20"/></operator><name pos:line="70" pos:column="20">uml<pos:position pos:line="70" pos:column="23"/></name><operator pos:line="70" pos:column="23">.<pos:position pos:line="70" pos:column="24"/></operator><name pos:line="70" pos:column="24">behavior<pos:position pos:line="70" pos:column="32"/></name><operator pos:line="70" pos:column="32">.<pos:position pos:line="70" pos:column="33"/></operator><name pos:line="70" pos:column="33">use_cases<pos:position pos:line="70" pos:column="42"/></name><operator pos:line="70" pos:column="42">.<pos:position pos:line="70" pos:column="43"/></operator><name pos:line="70" pos:column="43">MActor<pos:position pos:line="70" pos:column="49"/></name></name>;<pos:position pos:line="70" pos:column="50"/></import>
<import pos:line="71" pos:column="1">import <name><name pos:line="71" pos:column="8">ru<pos:position pos:line="71" pos:column="10"/></name><operator pos:line="71" pos:column="10">.<pos:position pos:line="71" pos:column="11"/></operator><name pos:line="71" pos:column="11">novosoft<pos:position pos:line="71" pos:column="19"/></name><operator pos:line="71" pos:column="19">.<pos:position pos:line="71" pos:column="20"/></operator><name pos:line="71" pos:column="20">uml<pos:position pos:line="71" pos:column="23"/></name><operator pos:line="71" pos:column="23">.<pos:position pos:line="71" pos:column="24"/></operator><name pos:line="71" pos:column="24">behavior<pos:position pos:line="71" pos:column="32"/></name><operator pos:line="71" pos:column="32">.<pos:position pos:line="71" pos:column="33"/></operator><name pos:line="71" pos:column="33">use_cases<pos:position pos:line="71" pos:column="42"/></name><operator pos:line="71" pos:column="42">.<pos:position pos:line="71" pos:column="43"/></operator><name pos:line="71" pos:column="43">MExtend<pos:position pos:line="71" pos:column="50"/></name></name>;<pos:position pos:line="71" pos:column="51"/></import>
<import pos:line="72" pos:column="1">import <name><name pos:line="72" pos:column="8">ru<pos:position pos:line="72" pos:column="10"/></name><operator pos:line="72" pos:column="10">.<pos:position pos:line="72" pos:column="11"/></operator><name pos:line="72" pos:column="11">novosoft<pos:position pos:line="72" pos:column="19"/></name><operator pos:line="72" pos:column="19">.<pos:position pos:line="72" pos:column="20"/></operator><name pos:line="72" pos:column="20">uml<pos:position pos:line="72" pos:column="23"/></name><operator pos:line="72" pos:column="23">.<pos:position pos:line="72" pos:column="24"/></operator><name pos:line="72" pos:column="24">behavior<pos:position pos:line="72" pos:column="32"/></name><operator pos:line="72" pos:column="32">.<pos:position pos:line="72" pos:column="33"/></operator><name pos:line="72" pos:column="33">use_cases<pos:position pos:line="72" pos:column="42"/></name><operator pos:line="72" pos:column="42">.<pos:position pos:line="72" pos:column="43"/></operator><name pos:line="72" pos:column="43">MInclude<pos:position pos:line="72" pos:column="51"/></name></name>;<pos:position pos:line="72" pos:column="52"/></import>
<import pos:line="73" pos:column="1">import <name><name pos:line="73" pos:column="8">ru<pos:position pos:line="73" pos:column="10"/></name><operator pos:line="73" pos:column="10">.<pos:position pos:line="73" pos:column="11"/></operator><name pos:line="73" pos:column="11">novosoft<pos:position pos:line="73" pos:column="19"/></name><operator pos:line="73" pos:column="19">.<pos:position pos:line="73" pos:column="20"/></operator><name pos:line="73" pos:column="20">uml<pos:position pos:line="73" pos:column="23"/></name><operator pos:line="73" pos:column="23">.<pos:position pos:line="73" pos:column="24"/></operator><name pos:line="73" pos:column="24">behavior<pos:position pos:line="73" pos:column="32"/></name><operator pos:line="73" pos:column="32">.<pos:position pos:line="73" pos:column="33"/></operator><name pos:line="73" pos:column="33">use_cases<pos:position pos:line="73" pos:column="42"/></name><operator pos:line="73" pos:column="42">.<pos:position pos:line="73" pos:column="43"/></operator><name pos:line="73" pos:column="43">MUseCase<pos:position pos:line="73" pos:column="51"/></name></name>;<pos:position pos:line="73" pos:column="52"/></import>
<import pos:line="74" pos:column="1">import <name><name pos:line="74" pos:column="8">ru<pos:position pos:line="74" pos:column="10"/></name><operator pos:line="74" pos:column="10">.<pos:position pos:line="74" pos:column="11"/></operator><name pos:line="74" pos:column="11">novosoft<pos:position pos:line="74" pos:column="19"/></name><operator pos:line="74" pos:column="19">.<pos:position pos:line="74" pos:column="20"/></operator><name pos:line="74" pos:column="20">uml<pos:position pos:line="74" pos:column="23"/></name><operator pos:line="74" pos:column="23">.<pos:position pos:line="74" pos:column="24"/></operator><name pos:line="74" pos:column="24">foundation<pos:position pos:line="74" pos:column="34"/></name><operator pos:line="74" pos:column="34">.<pos:position pos:line="74" pos:column="35"/></operator><name pos:line="74" pos:column="35">core<pos:position pos:line="74" pos:column="39"/></name><operator pos:line="74" pos:column="39">.<pos:position pos:line="74" pos:column="40"/></operator><name pos:line="74" pos:column="40">MAbstraction<pos:position pos:line="74" pos:column="52"/></name></name>;<pos:position pos:line="74" pos:column="53"/></import>
<import pos:line="75" pos:column="1">import <name><name pos:line="75" pos:column="8">ru<pos:position pos:line="75" pos:column="10"/></name><operator pos:line="75" pos:column="10">.<pos:position pos:line="75" pos:column="11"/></operator><name pos:line="75" pos:column="11">novosoft<pos:position pos:line="75" pos:column="19"/></name><operator pos:line="75" pos:column="19">.<pos:position pos:line="75" pos:column="20"/></operator><name pos:line="75" pos:column="20">uml<pos:position pos:line="75" pos:column="23"/></name><operator pos:line="75" pos:column="23">.<pos:position pos:line="75" pos:column="24"/></operator><name pos:line="75" pos:column="24">foundation<pos:position pos:line="75" pos:column="34"/></name><operator pos:line="75" pos:column="34">.<pos:position pos:line="75" pos:column="35"/></operator><name pos:line="75" pos:column="35">core<pos:position pos:line="75" pos:column="39"/></name><operator pos:line="75" pos:column="39">.<pos:position pos:line="75" pos:column="40"/></operator><name pos:line="75" pos:column="40">MAssociation<pos:position pos:line="75" pos:column="52"/></name></name>;<pos:position pos:line="75" pos:column="53"/></import>
<import pos:line="76" pos:column="1">import <name><name pos:line="76" pos:column="8">ru<pos:position pos:line="76" pos:column="10"/></name><operator pos:line="76" pos:column="10">.<pos:position pos:line="76" pos:column="11"/></operator><name pos:line="76" pos:column="11">novosoft<pos:position pos:line="76" pos:column="19"/></name><operator pos:line="76" pos:column="19">.<pos:position pos:line="76" pos:column="20"/></operator><name pos:line="76" pos:column="20">uml<pos:position pos:line="76" pos:column="23"/></name><operator pos:line="76" pos:column="23">.<pos:position pos:line="76" pos:column="24"/></operator><name pos:line="76" pos:column="24">foundation<pos:position pos:line="76" pos:column="34"/></name><operator pos:line="76" pos:column="34">.<pos:position pos:line="76" pos:column="35"/></operator><name pos:line="76" pos:column="35">core<pos:position pos:line="76" pos:column="39"/></name><operator pos:line="76" pos:column="39">.<pos:position pos:line="76" pos:column="40"/></operator><name pos:line="76" pos:column="40">MAssociationEnd<pos:position pos:line="76" pos:column="55"/></name></name>;<pos:position pos:line="76" pos:column="56"/></import>
<import pos:line="77" pos:column="1">import <name><name pos:line="77" pos:column="8">ru<pos:position pos:line="77" pos:column="10"/></name><operator pos:line="77" pos:column="10">.<pos:position pos:line="77" pos:column="11"/></operator><name pos:line="77" pos:column="11">novosoft<pos:position pos:line="77" pos:column="19"/></name><operator pos:line="77" pos:column="19">.<pos:position pos:line="77" pos:column="20"/></operator><name pos:line="77" pos:column="20">uml<pos:position pos:line="77" pos:column="23"/></name><operator pos:line="77" pos:column="23">.<pos:position pos:line="77" pos:column="24"/></operator><name pos:line="77" pos:column="24">foundation<pos:position pos:line="77" pos:column="34"/></name><operator pos:line="77" pos:column="34">.<pos:position pos:line="77" pos:column="35"/></operator><name pos:line="77" pos:column="35">core<pos:position pos:line="77" pos:column="39"/></name><operator pos:line="77" pos:column="39">.<pos:position pos:line="77" pos:column="40"/></operator><name pos:line="77" pos:column="40">MAttribute<pos:position pos:line="77" pos:column="50"/></name></name>;<pos:position pos:line="77" pos:column="51"/></import>
<import pos:line="78" pos:column="1">import <name><name pos:line="78" pos:column="8">ru<pos:position pos:line="78" pos:column="10"/></name><operator pos:line="78" pos:column="10">.<pos:position pos:line="78" pos:column="11"/></operator><name pos:line="78" pos:column="11">novosoft<pos:position pos:line="78" pos:column="19"/></name><operator pos:line="78" pos:column="19">.<pos:position pos:line="78" pos:column="20"/></operator><name pos:line="78" pos:column="20">uml<pos:position pos:line="78" pos:column="23"/></name><operator pos:line="78" pos:column="23">.<pos:position pos:line="78" pos:column="24"/></operator><name pos:line="78" pos:column="24">foundation<pos:position pos:line="78" pos:column="34"/></name><operator pos:line="78" pos:column="34">.<pos:position pos:line="78" pos:column="35"/></operator><name pos:line="78" pos:column="35">core<pos:position pos:line="78" pos:column="39"/></name><operator pos:line="78" pos:column="39">.<pos:position pos:line="78" pos:column="40"/></operator><name pos:line="78" pos:column="40">MBehavioralFeature<pos:position pos:line="78" pos:column="58"/></name></name>;<pos:position pos:line="78" pos:column="59"/></import>
<import pos:line="79" pos:column="1">import <name><name pos:line="79" pos:column="8">ru<pos:position pos:line="79" pos:column="10"/></name><operator pos:line="79" pos:column="10">.<pos:position pos:line="79" pos:column="11"/></operator><name pos:line="79" pos:column="11">novosoft<pos:position pos:line="79" pos:column="19"/></name><operator pos:line="79" pos:column="19">.<pos:position pos:line="79" pos:column="20"/></operator><name pos:line="79" pos:column="20">uml<pos:position pos:line="79" pos:column="23"/></name><operator pos:line="79" pos:column="23">.<pos:position pos:line="79" pos:column="24"/></operator><name pos:line="79" pos:column="24">foundation<pos:position pos:line="79" pos:column="34"/></name><operator pos:line="79" pos:column="34">.<pos:position pos:line="79" pos:column="35"/></operator><name pos:line="79" pos:column="35">core<pos:position pos:line="79" pos:column="39"/></name><operator pos:line="79" pos:column="39">.<pos:position pos:line="79" pos:column="40"/></operator><name pos:line="79" pos:column="40">MClass<pos:position pos:line="79" pos:column="46"/></name></name>;<pos:position pos:line="79" pos:column="47"/></import>
<import pos:line="80" pos:column="1">import <name><name pos:line="80" pos:column="8">ru<pos:position pos:line="80" pos:column="10"/></name><operator pos:line="80" pos:column="10">.<pos:position pos:line="80" pos:column="11"/></operator><name pos:line="80" pos:column="11">novosoft<pos:position pos:line="80" pos:column="19"/></name><operator pos:line="80" pos:column="19">.<pos:position pos:line="80" pos:column="20"/></operator><name pos:line="80" pos:column="20">uml<pos:position pos:line="80" pos:column="23"/></name><operator pos:line="80" pos:column="23">.<pos:position pos:line="80" pos:column="24"/></operator><name pos:line="80" pos:column="24">foundation<pos:position pos:line="80" pos:column="34"/></name><operator pos:line="80" pos:column="34">.<pos:position pos:line="80" pos:column="35"/></operator><name pos:line="80" pos:column="35">core<pos:position pos:line="80" pos:column="39"/></name><operator pos:line="80" pos:column="39">.<pos:position pos:line="80" pos:column="40"/></operator><name pos:line="80" pos:column="40">MClassifier<pos:position pos:line="80" pos:column="51"/></name></name>;<pos:position pos:line="80" pos:column="52"/></import>
<import pos:line="81" pos:column="1">import <name><name pos:line="81" pos:column="8">ru<pos:position pos:line="81" pos:column="10"/></name><operator pos:line="81" pos:column="10">.<pos:position pos:line="81" pos:column="11"/></operator><name pos:line="81" pos:column="11">novosoft<pos:position pos:line="81" pos:column="19"/></name><operator pos:line="81" pos:column="19">.<pos:position pos:line="81" pos:column="20"/></operator><name pos:line="81" pos:column="20">uml<pos:position pos:line="81" pos:column="23"/></name><operator pos:line="81" pos:column="23">.<pos:position pos:line="81" pos:column="24"/></operator><name pos:line="81" pos:column="24">foundation<pos:position pos:line="81" pos:column="34"/></name><operator pos:line="81" pos:column="34">.<pos:position pos:line="81" pos:column="35"/></operator><name pos:line="81" pos:column="35">core<pos:position pos:line="81" pos:column="39"/></name><operator pos:line="81" pos:column="39">.<pos:position pos:line="81" pos:column="40"/></operator><name pos:line="81" pos:column="40">MComment<pos:position pos:line="81" pos:column="48"/></name></name>;<pos:position pos:line="81" pos:column="49"/></import>
<import pos:line="82" pos:column="1">import <name><name pos:line="82" pos:column="8">ru<pos:position pos:line="82" pos:column="10"/></name><operator pos:line="82" pos:column="10">.<pos:position pos:line="82" pos:column="11"/></operator><name pos:line="82" pos:column="11">novosoft<pos:position pos:line="82" pos:column="19"/></name><operator pos:line="82" pos:column="19">.<pos:position pos:line="82" pos:column="20"/></operator><name pos:line="82" pos:column="20">uml<pos:position pos:line="82" pos:column="23"/></name><operator pos:line="82" pos:column="23">.<pos:position pos:line="82" pos:column="24"/></operator><name pos:line="82" pos:column="24">foundation<pos:position pos:line="82" pos:column="34"/></name><operator pos:line="82" pos:column="34">.<pos:position pos:line="82" pos:column="35"/></operator><name pos:line="82" pos:column="35">core<pos:position pos:line="82" pos:column="39"/></name><operator pos:line="82" pos:column="39">.<pos:position pos:line="82" pos:column="40"/></operator><name pos:line="82" pos:column="40">MComponent<pos:position pos:line="82" pos:column="50"/></name></name>;<pos:position pos:line="82" pos:column="51"/></import>
<import pos:line="83" pos:column="1">import <name><name pos:line="83" pos:column="8">ru<pos:position pos:line="83" pos:column="10"/></name><operator pos:line="83" pos:column="10">.<pos:position pos:line="83" pos:column="11"/></operator><name pos:line="83" pos:column="11">novosoft<pos:position pos:line="83" pos:column="19"/></name><operator pos:line="83" pos:column="19">.<pos:position pos:line="83" pos:column="20"/></operator><name pos:line="83" pos:column="20">uml<pos:position pos:line="83" pos:column="23"/></name><operator pos:line="83" pos:column="23">.<pos:position pos:line="83" pos:column="24"/></operator><name pos:line="83" pos:column="24">foundation<pos:position pos:line="83" pos:column="34"/></name><operator pos:line="83" pos:column="34">.<pos:position pos:line="83" pos:column="35"/></operator><name pos:line="83" pos:column="35">core<pos:position pos:line="83" pos:column="39"/></name><operator pos:line="83" pos:column="39">.<pos:position pos:line="83" pos:column="40"/></operator><name pos:line="83" pos:column="40">MConstraint<pos:position pos:line="83" pos:column="51"/></name></name>;<pos:position pos:line="83" pos:column="52"/></import>
<import pos:line="84" pos:column="1">import <name><name pos:line="84" pos:column="8">ru<pos:position pos:line="84" pos:column="10"/></name><operator pos:line="84" pos:column="10">.<pos:position pos:line="84" pos:column="11"/></operator><name pos:line="84" pos:column="11">novosoft<pos:position pos:line="84" pos:column="19"/></name><operator pos:line="84" pos:column="19">.<pos:position pos:line="84" pos:column="20"/></operator><name pos:line="84" pos:column="20">uml<pos:position pos:line="84" pos:column="23"/></name><operator pos:line="84" pos:column="23">.<pos:position pos:line="84" pos:column="24"/></operator><name pos:line="84" pos:column="24">foundation<pos:position pos:line="84" pos:column="34"/></name><operator pos:line="84" pos:column="34">.<pos:position pos:line="84" pos:column="35"/></operator><name pos:line="84" pos:column="35">core<pos:position pos:line="84" pos:column="39"/></name><operator pos:line="84" pos:column="39">.<pos:position pos:line="84" pos:column="40"/></operator><name pos:line="84" pos:column="40">MDataType<pos:position pos:line="84" pos:column="49"/></name></name>;<pos:position pos:line="84" pos:column="50"/></import>
<import pos:line="85" pos:column="1">import <name><name pos:line="85" pos:column="8">ru<pos:position pos:line="85" pos:column="10"/></name><operator pos:line="85" pos:column="10">.<pos:position pos:line="85" pos:column="11"/></operator><name pos:line="85" pos:column="11">novosoft<pos:position pos:line="85" pos:column="19"/></name><operator pos:line="85" pos:column="19">.<pos:position pos:line="85" pos:column="20"/></operator><name pos:line="85" pos:column="20">uml<pos:position pos:line="85" pos:column="23"/></name><operator pos:line="85" pos:column="23">.<pos:position pos:line="85" pos:column="24"/></operator><name pos:line="85" pos:column="24">foundation<pos:position pos:line="85" pos:column="34"/></name><operator pos:line="85" pos:column="34">.<pos:position pos:line="85" pos:column="35"/></operator><name pos:line="85" pos:column="35">core<pos:position pos:line="85" pos:column="39"/></name><operator pos:line="85" pos:column="39">.<pos:position pos:line="85" pos:column="40"/></operator><name pos:line="85" pos:column="40">MDependency<pos:position pos:line="85" pos:column="51"/></name></name>;<pos:position pos:line="85" pos:column="52"/></import>
<import pos:line="86" pos:column="1">import <name><name pos:line="86" pos:column="8">ru<pos:position pos:line="86" pos:column="10"/></name><operator pos:line="86" pos:column="10">.<pos:position pos:line="86" pos:column="11"/></operator><name pos:line="86" pos:column="11">novosoft<pos:position pos:line="86" pos:column="19"/></name><operator pos:line="86" pos:column="19">.<pos:position pos:line="86" pos:column="20"/></operator><name pos:line="86" pos:column="20">uml<pos:position pos:line="86" pos:column="23"/></name><operator pos:line="86" pos:column="23">.<pos:position pos:line="86" pos:column="24"/></operator><name pos:line="86" pos:column="24">foundation<pos:position pos:line="86" pos:column="34"/></name><operator pos:line="86" pos:column="34">.<pos:position pos:line="86" pos:column="35"/></operator><name pos:line="86" pos:column="35">core<pos:position pos:line="86" pos:column="39"/></name><operator pos:line="86" pos:column="39">.<pos:position pos:line="86" pos:column="40"/></operator><name pos:line="86" pos:column="40">MElementResidence<pos:position pos:line="86" pos:column="57"/></name></name>;<pos:position pos:line="86" pos:column="58"/></import>
<import pos:line="87" pos:column="1">import <name><name pos:line="87" pos:column="8">ru<pos:position pos:line="87" pos:column="10"/></name><operator pos:line="87" pos:column="10">.<pos:position pos:line="87" pos:column="11"/></operator><name pos:line="87" pos:column="11">novosoft<pos:position pos:line="87" pos:column="19"/></name><operator pos:line="87" pos:column="19">.<pos:position pos:line="87" pos:column="20"/></operator><name pos:line="87" pos:column="20">uml<pos:position pos:line="87" pos:column="23"/></name><operator pos:line="87" pos:column="23">.<pos:position pos:line="87" pos:column="24"/></operator><name pos:line="87" pos:column="24">foundation<pos:position pos:line="87" pos:column="34"/></name><operator pos:line="87" pos:column="34">.<pos:position pos:line="87" pos:column="35"/></operator><name pos:line="87" pos:column="35">core<pos:position pos:line="87" pos:column="39"/></name><operator pos:line="87" pos:column="39">.<pos:position pos:line="87" pos:column="40"/></operator><name pos:line="87" pos:column="40">MFeature<pos:position pos:line="87" pos:column="48"/></name></name>;<pos:position pos:line="87" pos:column="49"/></import>
<import pos:line="88" pos:column="1">import <name><name pos:line="88" pos:column="8">ru<pos:position pos:line="88" pos:column="10"/></name><operator pos:line="88" pos:column="10">.<pos:position pos:line="88" pos:column="11"/></operator><name pos:line="88" pos:column="11">novosoft<pos:position pos:line="88" pos:column="19"/></name><operator pos:line="88" pos:column="19">.<pos:position pos:line="88" pos:column="20"/></operator><name pos:line="88" pos:column="20">uml<pos:position pos:line="88" pos:column="23"/></name><operator pos:line="88" pos:column="23">.<pos:position pos:line="88" pos:column="24"/></operator><name pos:line="88" pos:column="24">foundation<pos:position pos:line="88" pos:column="34"/></name><operator pos:line="88" pos:column="34">.<pos:position pos:line="88" pos:column="35"/></operator><name pos:line="88" pos:column="35">core<pos:position pos:line="88" pos:column="39"/></name><operator pos:line="88" pos:column="39">.<pos:position pos:line="88" pos:column="40"/></operator><name pos:line="88" pos:column="40">MFlow<pos:position pos:line="88" pos:column="45"/></name></name>;<pos:position pos:line="88" pos:column="46"/></import>
<import pos:line="89" pos:column="1">import <name><name pos:line="89" pos:column="8">ru<pos:position pos:line="89" pos:column="10"/></name><operator pos:line="89" pos:column="10">.<pos:position pos:line="89" pos:column="11"/></operator><name pos:line="89" pos:column="11">novosoft<pos:position pos:line="89" pos:column="19"/></name><operator pos:line="89" pos:column="19">.<pos:position pos:line="89" pos:column="20"/></operator><name pos:line="89" pos:column="20">uml<pos:position pos:line="89" pos:column="23"/></name><operator pos:line="89" pos:column="23">.<pos:position pos:line="89" pos:column="24"/></operator><name pos:line="89" pos:column="24">foundation<pos:position pos:line="89" pos:column="34"/></name><operator pos:line="89" pos:column="34">.<pos:position pos:line="89" pos:column="35"/></operator><name pos:line="89" pos:column="35">core<pos:position pos:line="89" pos:column="39"/></name><operator pos:line="89" pos:column="39">.<pos:position pos:line="89" pos:column="40"/></operator><name pos:line="89" pos:column="40">MGeneralizableElement<pos:position pos:line="89" pos:column="61"/></name></name>;<pos:position pos:line="89" pos:column="62"/></import>
<import pos:line="90" pos:column="1">import <name><name pos:line="90" pos:column="8">ru<pos:position pos:line="90" pos:column="10"/></name><operator pos:line="90" pos:column="10">.<pos:position pos:line="90" pos:column="11"/></operator><name pos:line="90" pos:column="11">novosoft<pos:position pos:line="90" pos:column="19"/></name><operator pos:line="90" pos:column="19">.<pos:position pos:line="90" pos:column="20"/></operator><name pos:line="90" pos:column="20">uml<pos:position pos:line="90" pos:column="23"/></name><operator pos:line="90" pos:column="23">.<pos:position pos:line="90" pos:column="24"/></operator><name pos:line="90" pos:column="24">foundation<pos:position pos:line="90" pos:column="34"/></name><operator pos:line="90" pos:column="34">.<pos:position pos:line="90" pos:column="35"/></operator><name pos:line="90" pos:column="35">core<pos:position pos:line="90" pos:column="39"/></name><operator pos:line="90" pos:column="39">.<pos:position pos:line="90" pos:column="40"/></operator><name pos:line="90" pos:column="40">MGeneralization<pos:position pos:line="90" pos:column="55"/></name></name>;<pos:position pos:line="90" pos:column="56"/></import>
<import pos:line="91" pos:column="1">import <name><name pos:line="91" pos:column="8">ru<pos:position pos:line="91" pos:column="10"/></name><operator pos:line="91" pos:column="10">.<pos:position pos:line="91" pos:column="11"/></operator><name pos:line="91" pos:column="11">novosoft<pos:position pos:line="91" pos:column="19"/></name><operator pos:line="91" pos:column="19">.<pos:position pos:line="91" pos:column="20"/></operator><name pos:line="91" pos:column="20">uml<pos:position pos:line="91" pos:column="23"/></name><operator pos:line="91" pos:column="23">.<pos:position pos:line="91" pos:column="24"/></operator><name pos:line="91" pos:column="24">foundation<pos:position pos:line="91" pos:column="34"/></name><operator pos:line="91" pos:column="34">.<pos:position pos:line="91" pos:column="35"/></operator><name pos:line="91" pos:column="35">core<pos:position pos:line="91" pos:column="39"/></name><operator pos:line="91" pos:column="39">.<pos:position pos:line="91" pos:column="40"/></operator><name pos:line="91" pos:column="40">MInterface<pos:position pos:line="91" pos:column="50"/></name></name>;<pos:position pos:line="91" pos:column="51"/></import>
<import pos:line="92" pos:column="1">import <name><name pos:line="92" pos:column="8">ru<pos:position pos:line="92" pos:column="10"/></name><operator pos:line="92" pos:column="10">.<pos:position pos:line="92" pos:column="11"/></operator><name pos:line="92" pos:column="11">novosoft<pos:position pos:line="92" pos:column="19"/></name><operator pos:line="92" pos:column="19">.<pos:position pos:line="92" pos:column="20"/></operator><name pos:line="92" pos:column="20">uml<pos:position pos:line="92" pos:column="23"/></name><operator pos:line="92" pos:column="23">.<pos:position pos:line="92" pos:column="24"/></operator><name pos:line="92" pos:column="24">foundation<pos:position pos:line="92" pos:column="34"/></name><operator pos:line="92" pos:column="34">.<pos:position pos:line="92" pos:column="35"/></operator><name pos:line="92" pos:column="35">core<pos:position pos:line="92" pos:column="39"/></name><operator pos:line="92" pos:column="39">.<pos:position pos:line="92" pos:column="40"/></operator><name pos:line="92" pos:column="40">MMethod<pos:position pos:line="92" pos:column="47"/></name></name>;<pos:position pos:line="92" pos:column="48"/></import>
<import pos:line="93" pos:column="1">import <name><name pos:line="93" pos:column="8">ru<pos:position pos:line="93" pos:column="10"/></name><operator pos:line="93" pos:column="10">.<pos:position pos:line="93" pos:column="11"/></operator><name pos:line="93" pos:column="11">novosoft<pos:position pos:line="93" pos:column="19"/></name><operator pos:line="93" pos:column="19">.<pos:position pos:line="93" pos:column="20"/></operator><name pos:line="93" pos:column="20">uml<pos:position pos:line="93" pos:column="23"/></name><operator pos:line="93" pos:column="23">.<pos:position pos:line="93" pos:column="24"/></operator><name pos:line="93" pos:column="24">foundation<pos:position pos:line="93" pos:column="34"/></name><operator pos:line="93" pos:column="34">.<pos:position pos:line="93" pos:column="35"/></operator><name pos:line="93" pos:column="35">core<pos:position pos:line="93" pos:column="39"/></name><operator pos:line="93" pos:column="39">.<pos:position pos:line="93" pos:column="40"/></operator><name pos:line="93" pos:column="40">MModelElement<pos:position pos:line="93" pos:column="53"/></name></name>;<pos:position pos:line="93" pos:column="54"/></import>
<import pos:line="94" pos:column="1">import <name><name pos:line="94" pos:column="8">ru<pos:position pos:line="94" pos:column="10"/></name><operator pos:line="94" pos:column="10">.<pos:position pos:line="94" pos:column="11"/></operator><name pos:line="94" pos:column="11">novosoft<pos:position pos:line="94" pos:column="19"/></name><operator pos:line="94" pos:column="19">.<pos:position pos:line="94" pos:column="20"/></operator><name pos:line="94" pos:column="20">uml<pos:position pos:line="94" pos:column="23"/></name><operator pos:line="94" pos:column="23">.<pos:position pos:line="94" pos:column="24"/></operator><name pos:line="94" pos:column="24">foundation<pos:position pos:line="94" pos:column="34"/></name><operator pos:line="94" pos:column="34">.<pos:position pos:line="94" pos:column="35"/></operator><name pos:line="94" pos:column="35">core<pos:position pos:line="94" pos:column="39"/></name><operator pos:line="94" pos:column="39">.<pos:position pos:line="94" pos:column="40"/></operator><name pos:line="94" pos:column="40">MNamespace<pos:position pos:line="94" pos:column="50"/></name></name>;<pos:position pos:line="94" pos:column="51"/></import>
<import pos:line="95" pos:column="1">import <name><name pos:line="95" pos:column="8">ru<pos:position pos:line="95" pos:column="10"/></name><operator pos:line="95" pos:column="10">.<pos:position pos:line="95" pos:column="11"/></operator><name pos:line="95" pos:column="11">novosoft<pos:position pos:line="95" pos:column="19"/></name><operator pos:line="95" pos:column="19">.<pos:position pos:line="95" pos:column="20"/></operator><name pos:line="95" pos:column="20">uml<pos:position pos:line="95" pos:column="23"/></name><operator pos:line="95" pos:column="23">.<pos:position pos:line="95" pos:column="24"/></operator><name pos:line="95" pos:column="24">foundation<pos:position pos:line="95" pos:column="34"/></name><operator pos:line="95" pos:column="34">.<pos:position pos:line="95" pos:column="35"/></operator><name pos:line="95" pos:column="35">core<pos:position pos:line="95" pos:column="39"/></name><operator pos:line="95" pos:column="39">.<pos:position pos:line="95" pos:column="40"/></operator><name pos:line="95" pos:column="40">MNode<pos:position pos:line="95" pos:column="45"/></name></name>;<pos:position pos:line="95" pos:column="46"/></import>
<import pos:line="96" pos:column="1">import <name><name pos:line="96" pos:column="8">ru<pos:position pos:line="96" pos:column="10"/></name><operator pos:line="96" pos:column="10">.<pos:position pos:line="96" pos:column="11"/></operator><name pos:line="96" pos:column="11">novosoft<pos:position pos:line="96" pos:column="19"/></name><operator pos:line="96" pos:column="19">.<pos:position pos:line="96" pos:column="20"/></operator><name pos:line="96" pos:column="20">uml<pos:position pos:line="96" pos:column="23"/></name><operator pos:line="96" pos:column="23">.<pos:position pos:line="96" pos:column="24"/></operator><name pos:line="96" pos:column="24">foundation<pos:position pos:line="96" pos:column="34"/></name><operator pos:line="96" pos:column="34">.<pos:position pos:line="96" pos:column="35"/></operator><name pos:line="96" pos:column="35">core<pos:position pos:line="96" pos:column="39"/></name><operator pos:line="96" pos:column="39">.<pos:position pos:line="96" pos:column="40"/></operator><name pos:line="96" pos:column="40">MOperation<pos:position pos:line="96" pos:column="50"/></name></name>;<pos:position pos:line="96" pos:column="51"/></import>
<import pos:line="97" pos:column="1">import <name><name pos:line="97" pos:column="8">ru<pos:position pos:line="97" pos:column="10"/></name><operator pos:line="97" pos:column="10">.<pos:position pos:line="97" pos:column="11"/></operator><name pos:line="97" pos:column="11">novosoft<pos:position pos:line="97" pos:column="19"/></name><operator pos:line="97" pos:column="19">.<pos:position pos:line="97" pos:column="20"/></operator><name pos:line="97" pos:column="20">uml<pos:position pos:line="97" pos:column="23"/></name><operator pos:line="97" pos:column="23">.<pos:position pos:line="97" pos:column="24"/></operator><name pos:line="97" pos:column="24">foundation<pos:position pos:line="97" pos:column="34"/></name><operator pos:line="97" pos:column="34">.<pos:position pos:line="97" pos:column="35"/></operator><name pos:line="97" pos:column="35">core<pos:position pos:line="97" pos:column="39"/></name><operator pos:line="97" pos:column="39">.<pos:position pos:line="97" pos:column="40"/></operator><name pos:line="97" pos:column="40">MParameter<pos:position pos:line="97" pos:column="50"/></name></name>;<pos:position pos:line="97" pos:column="51"/></import>
<import pos:line="98" pos:column="1">import <name><name pos:line="98" pos:column="8">ru<pos:position pos:line="98" pos:column="10"/></name><operator pos:line="98" pos:column="10">.<pos:position pos:line="98" pos:column="11"/></operator><name pos:line="98" pos:column="11">novosoft<pos:position pos:line="98" pos:column="19"/></name><operator pos:line="98" pos:column="19">.<pos:position pos:line="98" pos:column="20"/></operator><name pos:line="98" pos:column="20">uml<pos:position pos:line="98" pos:column="23"/></name><operator pos:line="98" pos:column="23">.<pos:position pos:line="98" pos:column="24"/></operator><name pos:line="98" pos:column="24">foundation<pos:position pos:line="98" pos:column="34"/></name><operator pos:line="98" pos:column="34">.<pos:position pos:line="98" pos:column="35"/></operator><name pos:line="98" pos:column="35">core<pos:position pos:line="98" pos:column="39"/></name><operator pos:line="98" pos:column="39">.<pos:position pos:line="98" pos:column="40"/></operator><name pos:line="98" pos:column="40">MRelationship<pos:position pos:line="98" pos:column="53"/></name></name>;<pos:position pos:line="98" pos:column="54"/></import>
<import pos:line="99" pos:column="1">import <name><name pos:line="99" pos:column="8">ru<pos:position pos:line="99" pos:column="10"/></name><operator pos:line="99" pos:column="10">.<pos:position pos:line="99" pos:column="11"/></operator><name pos:line="99" pos:column="11">novosoft<pos:position pos:line="99" pos:column="19"/></name><operator pos:line="99" pos:column="19">.<pos:position pos:line="99" pos:column="20"/></operator><name pos:line="99" pos:column="20">uml<pos:position pos:line="99" pos:column="23"/></name><operator pos:line="99" pos:column="23">.<pos:position pos:line="99" pos:column="24"/></operator><name pos:line="99" pos:column="24">foundation<pos:position pos:line="99" pos:column="34"/></name><operator pos:line="99" pos:column="34">.<pos:position pos:line="99" pos:column="35"/></operator><name pos:line="99" pos:column="35">core<pos:position pos:line="99" pos:column="39"/></name><operator pos:line="99" pos:column="39">.<pos:position pos:line="99" pos:column="40"/></operator><name pos:line="99" pos:column="40">MStructuralFeature<pos:position pos:line="99" pos:column="58"/></name></name>;<pos:position pos:line="99" pos:column="59"/></import>
<import pos:line="100" pos:column="1">import <name><name pos:line="100" pos:column="8">ru<pos:position pos:line="100" pos:column="10"/></name><operator pos:line="100" pos:column="10">.<pos:position pos:line="100" pos:column="11"/></operator><name pos:line="100" pos:column="11">novosoft<pos:position pos:line="100" pos:column="19"/></name><operator pos:line="100" pos:column="19">.<pos:position pos:line="100" pos:column="20"/></operator><name pos:line="100" pos:column="20">uml<pos:position pos:line="100" pos:column="23"/></name><operator pos:line="100" pos:column="23">.<pos:position pos:line="100" pos:column="24"/></operator><name pos:line="100" pos:column="24">foundation<pos:position pos:line="100" pos:column="34"/></name><operator pos:line="100" pos:column="34">.<pos:position pos:line="100" pos:column="35"/></operator><name pos:line="100" pos:column="35">data_types<pos:position pos:line="100" pos:column="45"/></name><operator pos:line="100" pos:column="45">.<pos:position pos:line="100" pos:column="46"/></operator><name pos:line="100" pos:column="46">MAggregationKind<pos:position pos:line="100" pos:column="62"/></name></name>;<pos:position pos:line="100" pos:column="63"/></import>
<import pos:line="101" pos:column="1">import <name><name pos:line="101" pos:column="8">ru<pos:position pos:line="101" pos:column="10"/></name><operator pos:line="101" pos:column="10">.<pos:position pos:line="101" pos:column="11"/></operator><name pos:line="101" pos:column="11">novosoft<pos:position pos:line="101" pos:column="19"/></name><operator pos:line="101" pos:column="19">.<pos:position pos:line="101" pos:column="20"/></operator><name pos:line="101" pos:column="20">uml<pos:position pos:line="101" pos:column="23"/></name><operator pos:line="101" pos:column="23">.<pos:position pos:line="101" pos:column="24"/></operator><name pos:line="101" pos:column="24">foundation<pos:position pos:line="101" pos:column="34"/></name><operator pos:line="101" pos:column="34">.<pos:position pos:line="101" pos:column="35"/></operator><name pos:line="101" pos:column="35">data_types<pos:position pos:line="101" pos:column="45"/></name><operator pos:line="101" pos:column="45">.<pos:position pos:line="101" pos:column="46"/></operator><name pos:line="101" pos:column="46">MBooleanExpression<pos:position pos:line="101" pos:column="64"/></name></name>;<pos:position pos:line="101" pos:column="65"/></import>
<import pos:line="102" pos:column="1">import <name><name pos:line="102" pos:column="8">ru<pos:position pos:line="102" pos:column="10"/></name><operator pos:line="102" pos:column="10">.<pos:position pos:line="102" pos:column="11"/></operator><name pos:line="102" pos:column="11">novosoft<pos:position pos:line="102" pos:column="19"/></name><operator pos:line="102" pos:column="19">.<pos:position pos:line="102" pos:column="20"/></operator><name pos:line="102" pos:column="20">uml<pos:position pos:line="102" pos:column="23"/></name><operator pos:line="102" pos:column="23">.<pos:position pos:line="102" pos:column="24"/></operator><name pos:line="102" pos:column="24">foundation<pos:position pos:line="102" pos:column="34"/></name><operator pos:line="102" pos:column="34">.<pos:position pos:line="102" pos:column="35"/></operator><name pos:line="102" pos:column="35">data_types<pos:position pos:line="102" pos:column="45"/></name><operator pos:line="102" pos:column="45">.<pos:position pos:line="102" pos:column="46"/></operator><name pos:line="102" pos:column="46">MCallConcurrencyKind<pos:position pos:line="102" pos:column="66"/></name></name>;<pos:position pos:line="102" pos:column="67"/></import>
<import pos:line="103" pos:column="1">import <name><name pos:line="103" pos:column="8">ru<pos:position pos:line="103" pos:column="10"/></name><operator pos:line="103" pos:column="10">.<pos:position pos:line="103" pos:column="11"/></operator><name pos:line="103" pos:column="11">novosoft<pos:position pos:line="103" pos:column="19"/></name><operator pos:line="103" pos:column="19">.<pos:position pos:line="103" pos:column="20"/></operator><name pos:line="103" pos:column="20">uml<pos:position pos:line="103" pos:column="23"/></name><operator pos:line="103" pos:column="23">.<pos:position pos:line="103" pos:column="24"/></operator><name pos:line="103" pos:column="24">foundation<pos:position pos:line="103" pos:column="34"/></name><operator pos:line="103" pos:column="34">.<pos:position pos:line="103" pos:column="35"/></operator><name pos:line="103" pos:column="35">data_types<pos:position pos:line="103" pos:column="45"/></name><operator pos:line="103" pos:column="45">.<pos:position pos:line="103" pos:column="46"/></operator><name pos:line="103" pos:column="46">MChangeableKind<pos:position pos:line="103" pos:column="61"/></name></name>;<pos:position pos:line="103" pos:column="62"/></import>
<import pos:line="104" pos:column="1">import <name><name pos:line="104" pos:column="8">ru<pos:position pos:line="104" pos:column="10"/></name><operator pos:line="104" pos:column="10">.<pos:position pos:line="104" pos:column="11"/></operator><name pos:line="104" pos:column="11">novosoft<pos:position pos:line="104" pos:column="19"/></name><operator pos:line="104" pos:column="19">.<pos:position pos:line="104" pos:column="20"/></operator><name pos:line="104" pos:column="20">uml<pos:position pos:line="104" pos:column="23"/></name><operator pos:line="104" pos:column="23">.<pos:position pos:line="104" pos:column="24"/></operator><name pos:line="104" pos:column="24">foundation<pos:position pos:line="104" pos:column="34"/></name><operator pos:line="104" pos:column="34">.<pos:position pos:line="104" pos:column="35"/></operator><name pos:line="104" pos:column="35">data_types<pos:position pos:line="104" pos:column="45"/></name><operator pos:line="104" pos:column="45">.<pos:position pos:line="104" pos:column="46"/></operator><name pos:line="104" pos:column="46">MExpression<pos:position pos:line="104" pos:column="57"/></name></name>;<pos:position pos:line="104" pos:column="58"/></import>
<import pos:line="105" pos:column="1">import <name><name pos:line="105" pos:column="8">ru<pos:position pos:line="105" pos:column="10"/></name><operator pos:line="105" pos:column="10">.<pos:position pos:line="105" pos:column="11"/></operator><name pos:line="105" pos:column="11">novosoft<pos:position pos:line="105" pos:column="19"/></name><operator pos:line="105" pos:column="19">.<pos:position pos:line="105" pos:column="20"/></operator><name pos:line="105" pos:column="20">uml<pos:position pos:line="105" pos:column="23"/></name><operator pos:line="105" pos:column="23">.<pos:position pos:line="105" pos:column="24"/></operator><name pos:line="105" pos:column="24">foundation<pos:position pos:line="105" pos:column="34"/></name><operator pos:line="105" pos:column="34">.<pos:position pos:line="105" pos:column="35"/></operator><name pos:line="105" pos:column="35">data_types<pos:position pos:line="105" pos:column="45"/></name><operator pos:line="105" pos:column="45">.<pos:position pos:line="105" pos:column="46"/></operator><name pos:line="105" pos:column="46">MMultiplicity<pos:position pos:line="105" pos:column="59"/></name></name>;<pos:position pos:line="105" pos:column="60"/></import>
<import pos:line="106" pos:column="1">import <name><name pos:line="106" pos:column="8">ru<pos:position pos:line="106" pos:column="10"/></name><operator pos:line="106" pos:column="10">.<pos:position pos:line="106" pos:column="11"/></operator><name pos:line="106" pos:column="11">novosoft<pos:position pos:line="106" pos:column="19"/></name><operator pos:line="106" pos:column="19">.<pos:position pos:line="106" pos:column="20"/></operator><name pos:line="106" pos:column="20">uml<pos:position pos:line="106" pos:column="23"/></name><operator pos:line="106" pos:column="23">.<pos:position pos:line="106" pos:column="24"/></operator><name pos:line="106" pos:column="24">foundation<pos:position pos:line="106" pos:column="34"/></name><operator pos:line="106" pos:column="34">.<pos:position pos:line="106" pos:column="35"/></operator><name pos:line="106" pos:column="35">data_types<pos:position pos:line="106" pos:column="45"/></name><operator pos:line="106" pos:column="45">.<pos:position pos:line="106" pos:column="46"/></operator><name pos:line="106" pos:column="46">MOrderingKind<pos:position pos:line="106" pos:column="59"/></name></name>;<pos:position pos:line="106" pos:column="60"/></import>
<import pos:line="107" pos:column="1">import <name><name pos:line="107" pos:column="8">ru<pos:position pos:line="107" pos:column="10"/></name><operator pos:line="107" pos:column="10">.<pos:position pos:line="107" pos:column="11"/></operator><name pos:line="107" pos:column="11">novosoft<pos:position pos:line="107" pos:column="19"/></name><operator pos:line="107" pos:column="19">.<pos:position pos:line="107" pos:column="20"/></operator><name pos:line="107" pos:column="20">uml<pos:position pos:line="107" pos:column="23"/></name><operator pos:line="107" pos:column="23">.<pos:position pos:line="107" pos:column="24"/></operator><name pos:line="107" pos:column="24">foundation<pos:position pos:line="107" pos:column="34"/></name><operator pos:line="107" pos:column="34">.<pos:position pos:line="107" pos:column="35"/></operator><name pos:line="107" pos:column="35">data_types<pos:position pos:line="107" pos:column="45"/></name><operator pos:line="107" pos:column="45">.<pos:position pos:line="107" pos:column="46"/></operator><name pos:line="107" pos:column="46">MParameterDirectionKind<pos:position pos:line="107" pos:column="69"/></name></name>;<pos:position pos:line="107" pos:column="70"/></import>
<import pos:line="108" pos:column="1">import <name><name pos:line="108" pos:column="8">ru<pos:position pos:line="108" pos:column="10"/></name><operator pos:line="108" pos:column="10">.<pos:position pos:line="108" pos:column="11"/></operator><name pos:line="108" pos:column="11">novosoft<pos:position pos:line="108" pos:column="19"/></name><operator pos:line="108" pos:column="19">.<pos:position pos:line="108" pos:column="20"/></operator><name pos:line="108" pos:column="20">uml<pos:position pos:line="108" pos:column="23"/></name><operator pos:line="108" pos:column="23">.<pos:position pos:line="108" pos:column="24"/></operator><name pos:line="108" pos:column="24">foundation<pos:position pos:line="108" pos:column="34"/></name><operator pos:line="108" pos:column="34">.<pos:position pos:line="108" pos:column="35"/></operator><name pos:line="108" pos:column="35">data_types<pos:position pos:line="108" pos:column="45"/></name><operator pos:line="108" pos:column="45">.<pos:position pos:line="108" pos:column="46"/></operator><name pos:line="108" pos:column="46">MProcedureExpression<pos:position pos:line="108" pos:column="66"/></name></name>;<pos:position pos:line="108" pos:column="67"/></import>
<import pos:line="109" pos:column="1">import <name><name pos:line="109" pos:column="8">ru<pos:position pos:line="109" pos:column="10"/></name><operator pos:line="109" pos:column="10">.<pos:position pos:line="109" pos:column="11"/></operator><name pos:line="109" pos:column="11">novosoft<pos:position pos:line="109" pos:column="19"/></name><operator pos:line="109" pos:column="19">.<pos:position pos:line="109" pos:column="20"/></operator><name pos:line="109" pos:column="20">uml<pos:position pos:line="109" pos:column="23"/></name><operator pos:line="109" pos:column="23">.<pos:position pos:line="109" pos:column="24"/></operator><name pos:line="109" pos:column="24">foundation<pos:position pos:line="109" pos:column="34"/></name><operator pos:line="109" pos:column="34">.<pos:position pos:line="109" pos:column="35"/></operator><name pos:line="109" pos:column="35">data_types<pos:position pos:line="109" pos:column="45"/></name><operator pos:line="109" pos:column="45">.<pos:position pos:line="109" pos:column="46"/></operator><name pos:line="109" pos:column="46">MPseudostateKind<pos:position pos:line="109" pos:column="62"/></name></name>;<pos:position pos:line="109" pos:column="63"/></import>
<import pos:line="110" pos:column="1">import <name><name pos:line="110" pos:column="8">ru<pos:position pos:line="110" pos:column="10"/></name><operator pos:line="110" pos:column="10">.<pos:position pos:line="110" pos:column="11"/></operator><name pos:line="110" pos:column="11">novosoft<pos:position pos:line="110" pos:column="19"/></name><operator pos:line="110" pos:column="19">.<pos:position pos:line="110" pos:column="20"/></operator><name pos:line="110" pos:column="20">uml<pos:position pos:line="110" pos:column="23"/></name><operator pos:line="110" pos:column="23">.<pos:position pos:line="110" pos:column="24"/></operator><name pos:line="110" pos:column="24">foundation<pos:position pos:line="110" pos:column="34"/></name><operator pos:line="110" pos:column="34">.<pos:position pos:line="110" pos:column="35"/></operator><name pos:line="110" pos:column="35">data_types<pos:position pos:line="110" pos:column="45"/></name><operator pos:line="110" pos:column="45">.<pos:position pos:line="110" pos:column="46"/></operator><name pos:line="110" pos:column="46">MScopeKind<pos:position pos:line="110" pos:column="56"/></name></name>;<pos:position pos:line="110" pos:column="57"/></import>
<import pos:line="111" pos:column="1">import <name><name pos:line="111" pos:column="8">ru<pos:position pos:line="111" pos:column="10"/></name><operator pos:line="111" pos:column="10">.<pos:position pos:line="111" pos:column="11"/></operator><name pos:line="111" pos:column="11">novosoft<pos:position pos:line="111" pos:column="19"/></name><operator pos:line="111" pos:column="19">.<pos:position pos:line="111" pos:column="20"/></operator><name pos:line="111" pos:column="20">uml<pos:position pos:line="111" pos:column="23"/></name><operator pos:line="111" pos:column="23">.<pos:position pos:line="111" pos:column="24"/></operator><name pos:line="111" pos:column="24">foundation<pos:position pos:line="111" pos:column="34"/></name><operator pos:line="111" pos:column="34">.<pos:position pos:line="111" pos:column="35"/></operator><name pos:line="111" pos:column="35">data_types<pos:position pos:line="111" pos:column="45"/></name><operator pos:line="111" pos:column="45">.<pos:position pos:line="111" pos:column="46"/></operator><name pos:line="111" pos:column="46">MVisibilityKind<pos:position pos:line="111" pos:column="61"/></name></name>;<pos:position pos:line="111" pos:column="62"/></import>
<import pos:line="112" pos:column="1">import <name><name pos:line="112" pos:column="8">ru<pos:position pos:line="112" pos:column="10"/></name><operator pos:line="112" pos:column="10">.<pos:position pos:line="112" pos:column="11"/></operator><name pos:line="112" pos:column="11">novosoft<pos:position pos:line="112" pos:column="19"/></name><operator pos:line="112" pos:column="19">.<pos:position pos:line="112" pos:column="20"/></operator><name pos:line="112" pos:column="20">uml<pos:position pos:line="112" pos:column="23"/></name><operator pos:line="112" pos:column="23">.<pos:position pos:line="112" pos:column="24"/></operator><name pos:line="112" pos:column="24">foundation<pos:position pos:line="112" pos:column="34"/></name><operator pos:line="112" pos:column="34">.<pos:position pos:line="112" pos:column="35"/></operator><name pos:line="112" pos:column="35">extension_mechanisms<pos:position pos:line="112" pos:column="55"/></name><operator pos:line="112" pos:column="55">.<pos:position pos:line="112" pos:column="56"/></operator><name pos:line="112" pos:column="56">MStereotype<pos:position pos:line="112" pos:column="67"/></name></name>;<pos:position pos:line="112" pos:column="68"/></import>
<import pos:line="113" pos:column="1">import <name><name pos:line="113" pos:column="8">ru<pos:position pos:line="113" pos:column="10"/></name><operator pos:line="113" pos:column="10">.<pos:position pos:line="113" pos:column="11"/></operator><name pos:line="113" pos:column="11">novosoft<pos:position pos:line="113" pos:column="19"/></name><operator pos:line="113" pos:column="19">.<pos:position pos:line="113" pos:column="20"/></operator><name pos:line="113" pos:column="20">uml<pos:position pos:line="113" pos:column="23"/></name><operator pos:line="113" pos:column="23">.<pos:position pos:line="113" pos:column="24"/></operator><name pos:line="113" pos:column="24">foundation<pos:position pos:line="113" pos:column="34"/></name><operator pos:line="113" pos:column="34">.<pos:position pos:line="113" pos:column="35"/></operator><name pos:line="113" pos:column="35">extension_mechanisms<pos:position pos:line="113" pos:column="55"/></name><operator pos:line="113" pos:column="55">.<pos:position pos:line="113" pos:column="56"/></operator><name pos:line="113" pos:column="56">MTaggedValue<pos:position pos:line="113" pos:column="68"/></name></name>;<pos:position pos:line="113" pos:column="69"/></import>
<import pos:line="114" pos:column="1">import <name><name pos:line="114" pos:column="8">ru<pos:position pos:line="114" pos:column="10"/></name><operator pos:line="114" pos:column="10">.<pos:position pos:line="114" pos:column="11"/></operator><name pos:line="114" pos:column="11">novosoft<pos:position pos:line="114" pos:column="19"/></name><operator pos:line="114" pos:column="19">.<pos:position pos:line="114" pos:column="20"/></operator><name pos:line="114" pos:column="20">uml<pos:position pos:line="114" pos:column="23"/></name><operator pos:line="114" pos:column="23">.<pos:position pos:line="114" pos:column="24"/></operator><name pos:line="114" pos:column="24">model_management<pos:position pos:line="114" pos:column="40"/></name><operator pos:line="114" pos:column="40">.<pos:position pos:line="114" pos:column="41"/></operator><name pos:line="114" pos:column="41">MElementImport<pos:position pos:line="114" pos:column="55"/></name></name>;<pos:position pos:line="114" pos:column="56"/></import>
<import pos:line="115" pos:column="1">import <name><name pos:line="115" pos:column="8">ru<pos:position pos:line="115" pos:column="10"/></name><operator pos:line="115" pos:column="10">.<pos:position pos:line="115" pos:column="11"/></operator><name pos:line="115" pos:column="11">novosoft<pos:position pos:line="115" pos:column="19"/></name><operator pos:line="115" pos:column="19">.<pos:position pos:line="115" pos:column="20"/></operator><name pos:line="115" pos:column="20">uml<pos:position pos:line="115" pos:column="23"/></name><operator pos:line="115" pos:column="23">.<pos:position pos:line="115" pos:column="24"/></operator><name pos:line="115" pos:column="24">model_management<pos:position pos:line="115" pos:column="40"/></name><operator pos:line="115" pos:column="40">.<pos:position pos:line="115" pos:column="41"/></operator><name pos:line="115" pos:column="41">MPackage<pos:position pos:line="115" pos:column="49"/></name></name>;<pos:position pos:line="115" pos:column="50"/></import>

<comment type="block" format="javadoc" pos:line="117" pos:column="1">/**
 * Helper class for UML Foundation::Core Package.&lt;p&gt;
 *
 * @since ARGO0.11.2
 * @author Thierry Lach
 * @author Jaap Branderhorst
 */</comment>
<class pos:line="124" pos:column="1">class <name pos:line="124" pos:column="7">CoreHelperImpl<pos:position pos:line="124" pos:column="21"/></name> <super><implements pos:line="124" pos:column="22">implements <name pos:line="124" pos:column="33">CoreHelper<pos:position pos:line="124" pos:column="43"/></name></implements></super> <block pos:line="124" pos:column="44">{
    <comment type="block" format="javadoc" pos:line="125" pos:column="5">/**
     * Logger.
     */</comment>
    <decl_stmt><decl><specifier pos:line="128" pos:column="5">private<pos:position pos:line="128" pos:column="12"/></specifier> <specifier pos:line="128" pos:column="13">static<pos:position pos:line="128" pos:column="19"/></specifier> <type><specifier pos:line="128" pos:column="20">final<pos:position pos:line="128" pos:column="25"/></specifier> <name pos:line="128" pos:column="26">Logger<pos:position pos:line="128" pos:column="32"/></name></type> <name pos:line="128" pos:column="33">LOG<pos:position pos:line="128" pos:column="36"/></name> <init pos:line="128" pos:column="37">= <expr><call><name><name pos:line="128" pos:column="39">Logger<pos:position pos:line="128" pos:column="45"/></name><operator pos:line="128" pos:column="45">.<pos:position pos:line="128" pos:column="46"/></operator><name pos:line="128" pos:column="46">getLogger<pos:position pos:line="128" pos:column="55"/></name></name><argument_list pos:line="128" pos:column="55">(<argument><expr><name><name pos:line="128" pos:column="56">CoreHelperImpl<pos:position pos:line="128" pos:column="70"/></name><operator pos:line="128" pos:column="70">.<pos:position pos:line="128" pos:column="71"/></operator><name pos:line="128" pos:column="71">class<pos:position pos:line="128" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="128" pos:column="77"/></argument_list></call></expr></init></decl>;<pos:position pos:line="128" pos:column="78"/></decl_stmt>

    <comment type="block" format="javadoc" pos:line="130" pos:column="5">/**
     * The model implementation.
     */</comment>
    <decl_stmt><decl><specifier pos:line="133" pos:column="5">private<pos:position pos:line="133" pos:column="12"/></specifier> <type><name pos:line="133" pos:column="13">NSUMLModelImplementation<pos:position pos:line="133" pos:column="37"/></name></type> <name pos:line="133" pos:column="38">nsmodel<pos:position pos:line="133" pos:column="45"/></name></decl>;<pos:position pos:line="133" pos:column="46"/></decl_stmt>

    <comment type="block" format="javadoc" pos:line="135" pos:column="5">/**
     * Don't allow instantiation.
     *
     * @param implementation To get other helpers and factories.
     */</comment>
    <constructor><name pos:line="140" pos:column="5">CoreHelperImpl<pos:position pos:line="140" pos:column="19"/></name><parameter_list pos:line="140" pos:column="19">(<parameter><decl><type><name pos:line="140" pos:column="20">NSUMLModelImplementation<pos:position pos:line="140" pos:column="44"/></name></type> <name pos:line="140" pos:column="45">implementation<pos:position pos:line="140" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="140" pos:column="60"/></parameter_list> <block pos:line="140" pos:column="61">{
        <expr_stmt><expr><name pos:line="141" pos:column="9">nsmodel<pos:position pos:line="141" pos:column="16"/></name> <operator pos:line="141" pos:column="17">=<pos:position pos:line="141" pos:column="18"/></operator> <name pos:line="141" pos:column="19">implementation<pos:position pos:line="141" pos:column="33"/></name></expr>;<pos:position pos:line="141" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="142" pos:column="6"/></block></constructor>

    <comment type="block" format="javadoc" pos:line="144" pos:column="5">/**
     * Determine if a meta type is a subtype of another.
     * @param type The parent metatype.
     * @param subType The metatype to test for being a subtype.
     * @return true is subType is a sub-type of type.
     */</comment>
    <function><specifier pos:line="150" pos:column="5">public<pos:position pos:line="150" pos:column="11"/></specifier> <type><name pos:line="150" pos:column="12">boolean<pos:position pos:line="150" pos:column="19"/></name></type> <name pos:line="150" pos:column="20">isSubType<pos:position pos:line="150" pos:column="29"/></name><parameter_list pos:line="150" pos:column="29">(<parameter><decl><type><name pos:line="150" pos:column="30">Object<pos:position pos:line="150" pos:column="36"/></name></type> <name pos:line="150" pos:column="37">type<pos:position pos:line="150" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="150" pos:column="43">Object<pos:position pos:line="150" pos:column="49"/></name></type> <name pos:line="150" pos:column="50">subType<pos:position pos:line="150" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="150" pos:column="58"/></parameter_list> <block pos:line="150" pos:column="59">{
        <if pos:line="151" pos:column="9">if <condition pos:line="151" pos:column="12">(<expr><operator pos:line="151" pos:column="13">!<pos:position pos:line="151" pos:column="14"/></operator><operator pos:line="151" pos:column="14">(<pos:position pos:line="151" pos:column="15"/></operator><name pos:line="151" pos:column="15">type<pos:position pos:line="151" pos:column="19"/></name> <operator pos:line="151" pos:column="20">instanceof<pos:position pos:line="151" pos:column="30"/></operator> <name pos:line="151" pos:column="31">Class<pos:position pos:line="151" pos:column="36"/></name><operator pos:line="151" pos:column="36">)<pos:position pos:line="151" pos:column="37"/></operator> <operator pos:line="151" pos:column="38">||<pos:position pos:line="151" pos:column="40"/></operator> <operator pos:line="151" pos:column="41">!<pos:position pos:line="151" pos:column="42"/></operator><operator pos:line="151" pos:column="42">(<pos:position pos:line="151" pos:column="43"/></operator><name pos:line="151" pos:column="43">subType<pos:position pos:line="151" pos:column="50"/></name> <operator pos:line="151" pos:column="51">instanceof<pos:position pos:line="151" pos:column="61"/></operator> <name pos:line="151" pos:column="62">Class<pos:position pos:line="151" pos:column="67"/></name><operator pos:line="151" pos:column="67">)<pos:position pos:line="151" pos:column="68"/></operator></expr>)<pos:position pos:line="151" pos:column="69"/></condition><then pos:line="151" pos:column="69"> <block pos:line="151" pos:column="70">{
            <throw pos:line="152" pos:column="13">throw <expr><operator pos:line="152" pos:column="19">new<pos:position pos:line="152" pos:column="22"/></operator> <call><name pos:line="152" pos:column="23">IllegalArgumentException<pos:position pos:line="152" pos:column="47"/></name><argument_list pos:line="152" pos:column="47">(<argument><expr><literal type="string" pos:line="152" pos:column="48">"Metatypes are expected"<pos:position pos:line="152" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="152" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="74"/></throw>
        }<pos:position pos:line="153" pos:column="10"/></block></then></if>
           <return pos:line="154" pos:column="12">return <expr><operator pos:line="154" pos:column="19">(<pos:position pos:line="154" pos:column="20"/></operator><operator pos:line="154" pos:column="20">(<pos:position pos:line="154" pos:column="21"/></operator><name pos:line="154" pos:column="21">Class<pos:position pos:line="154" pos:column="26"/></name><operator pos:line="154" pos:column="26">)<pos:position pos:line="154" pos:column="27"/></operator> <name pos:line="154" pos:column="28">type<pos:position pos:line="154" pos:column="32"/></name><operator pos:line="154" pos:column="32">)<pos:position pos:line="154" pos:column="33"/></operator><operator pos:line="154" pos:column="33">.<pos:position pos:line="154" pos:column="34"/></operator><call><name pos:line="154" pos:column="34">isAssignableFrom<pos:position pos:line="154" pos:column="50"/></name><argument_list pos:line="154" pos:column="50">(<argument><expr><operator pos:line="154" pos:column="51">(<pos:position pos:line="154" pos:column="52"/></operator><name pos:line="154" pos:column="52">Class<pos:position pos:line="154" pos:column="57"/></name><operator pos:line="154" pos:column="57">)<pos:position pos:line="154" pos:column="58"/></operator> <name pos:line="154" pos:column="59">subType<pos:position pos:line="154" pos:column="66"/></name></expr></argument>)<pos:position pos:line="154" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="68"/></return>
    }<pos:position pos:line="155" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="157" pos:column="5">/**
     * This method returns all Classifiers of which this class is a
     * direct or indirect subtype.
     *
     * @param cls1  the class you want to have the parents for
     * @return a collection of the parents, each of which is a
     *         {@link MGeneralizableElement MGeneralizableElement}
     */</comment>
    <function><specifier pos:line="165" pos:column="5">public<pos:position pos:line="165" pos:column="11"/></specifier> <type><name pos:line="165" pos:column="12">Collection<pos:position pos:line="165" pos:column="22"/></name></type> <name pos:line="165" pos:column="23">getAllSupertypes<pos:position pos:line="165" pos:column="39"/></name><parameter_list pos:line="165" pos:column="39">(<parameter><decl><type><name pos:line="165" pos:column="40">Object<pos:position pos:line="165" pos:column="46"/></name></type> <name pos:line="165" pos:column="47">cls1<pos:position pos:line="165" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="165" pos:column="52"/></parameter_list> <block pos:line="165" pos:column="53">{

        <if pos:line="167" pos:column="9">if <condition pos:line="167" pos:column="12">(<expr><operator pos:line="167" pos:column="13">!<pos:position pos:line="167" pos:column="14"/></operator><operator pos:line="167" pos:column="14">(<pos:position pos:line="167" pos:column="15"/></operator><name pos:line="167" pos:column="15">cls1<pos:position pos:line="167" pos:column="19"/></name> <operator pos:line="167" pos:column="20">instanceof<pos:position pos:line="167" pos:column="30"/></operator> <name pos:line="167" pos:column="31">MClassifier<pos:position pos:line="167" pos:column="42"/></name><operator pos:line="167" pos:column="42">)<pos:position pos:line="167" pos:column="43"/></operator></expr>)<pos:position pos:line="167" pos:column="44"/></condition><then pos:line="167" pos:column="44"> <block pos:line="167" pos:column="45">{
            <throw pos:line="168" pos:column="13">throw <expr><operator pos:line="168" pos:column="19">new<pos:position pos:line="168" pos:column="22"/></operator> <call><name pos:line="168" pos:column="23">IllegalArgumentException<pos:position pos:line="168" pos:column="47"/></name><argument_list pos:line="168" pos:column="47">()<pos:position pos:line="168" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="50"/></throw>
        }<pos:position pos:line="169" pos:column="10"/></block></then></if>

        <decl_stmt><decl><type><name pos:line="171" pos:column="9">MClassifier<pos:position pos:line="171" pos:column="20"/></name></type> <name pos:line="171" pos:column="21">cls<pos:position pos:line="171" pos:column="24"/></name> <init pos:line="171" pos:column="25">= <expr><operator pos:line="171" pos:column="27">(<pos:position pos:line="171" pos:column="28"/></operator><name pos:line="171" pos:column="28">MClassifier<pos:position pos:line="171" pos:column="39"/></name><operator pos:line="171" pos:column="39">)<pos:position pos:line="171" pos:column="40"/></operator> <name pos:line="171" pos:column="41">cls1<pos:position pos:line="171" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="171" pos:column="46"/></decl_stmt>

        <decl_stmt><decl><type><name pos:line="173" pos:column="9">Collection<pos:position pos:line="173" pos:column="19"/></name></type> <name pos:line="173" pos:column="20">result<pos:position pos:line="173" pos:column="26"/></name> <init pos:line="173" pos:column="27">= <expr><operator pos:line="173" pos:column="29">new<pos:position pos:line="173" pos:column="32"/></operator> <call><name pos:line="173" pos:column="33">HashSet<pos:position pos:line="173" pos:column="40"/></name><argument_list pos:line="173" pos:column="40">()<pos:position pos:line="173" pos:column="42"/></argument_list></call></expr></init></decl>;<pos:position pos:line="173" pos:column="43"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="174" pos:column="9">Collection<pos:position pos:line="174" pos:column="19"/></name></type> <name pos:line="174" pos:column="20">add<pos:position pos:line="174" pos:column="23"/></name> <init pos:line="174" pos:column="24">= <expr><call><name pos:line="174" pos:column="26">getSupertypes<pos:position pos:line="174" pos:column="39"/></name><argument_list pos:line="174" pos:column="39">(<argument><expr><name pos:line="174" pos:column="40">cls<pos:position pos:line="174" pos:column="43"/></name></expr></argument>)<pos:position pos:line="174" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="174" pos:column="45"/></decl_stmt>
        <do pos:line="175" pos:column="9">do <block pos:line="175" pos:column="12">{
            <decl_stmt><decl><type><name pos:line="176" pos:column="13">Collection<pos:position pos:line="176" pos:column="23"/></name></type> <name pos:line="176" pos:column="24">newAdd<pos:position pos:line="176" pos:column="30"/></name> <init pos:line="176" pos:column="31">= <expr><operator pos:line="176" pos:column="33">new<pos:position pos:line="176" pos:column="36"/></operator> <call><name pos:line="176" pos:column="37">HashSet<pos:position pos:line="176" pos:column="44"/></name><argument_list pos:line="176" pos:column="44">()<pos:position pos:line="176" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="176" pos:column="47"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="177" pos:column="13">Iterator<pos:position pos:line="177" pos:column="21"/></name></type> <name pos:line="177" pos:column="22">addIter<pos:position pos:line="177" pos:column="29"/></name> <init pos:line="177" pos:column="30">= <expr><call><name><name pos:line="177" pos:column="32">add<pos:position pos:line="177" pos:column="35"/></name><operator pos:line="177" pos:column="35">.<pos:position pos:line="177" pos:column="36"/></operator><name pos:line="177" pos:column="36">iterator<pos:position pos:line="177" pos:column="44"/></name></name><argument_list pos:line="177" pos:column="44">()<pos:position pos:line="177" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="177" pos:column="47"/></decl_stmt>
            <while pos:line="178" pos:column="13">while <condition pos:line="178" pos:column="19">(<expr><call><name><name pos:line="178" pos:column="20">addIter<pos:position pos:line="178" pos:column="27"/></name><operator pos:line="178" pos:column="27">.<pos:position pos:line="178" pos:column="28"/></operator><name pos:line="178" pos:column="28">hasNext<pos:position pos:line="178" pos:column="35"/></name></name><argument_list pos:line="178" pos:column="35">()<pos:position pos:line="178" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="178" pos:column="38"/></condition> <block pos:line="178" pos:column="39">{
                <decl_stmt><decl><type><name pos:line="179" pos:column="17">MGeneralizableElement<pos:position pos:line="179" pos:column="38"/></name></type> <name pos:line="179" pos:column="39">next<pos:position pos:line="179" pos:column="43"/></name> <init pos:line="179" pos:column="44">=
                    <expr><operator pos:line="180" pos:column="21">(<pos:position pos:line="180" pos:column="22"/></operator><name pos:line="180" pos:column="22">MGeneralizableElement<pos:position pos:line="180" pos:column="43"/></name><operator pos:line="180" pos:column="43">)<pos:position pos:line="180" pos:column="44"/></operator> <call><name><name pos:line="180" pos:column="45">addIter<pos:position pos:line="180" pos:column="52"/></name><operator pos:line="180" pos:column="52">.<pos:position pos:line="180" pos:column="53"/></operator><name pos:line="180" pos:column="53">next<pos:position pos:line="180" pos:column="57"/></name></name><argument_list pos:line="180" pos:column="57">()<pos:position pos:line="180" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="180" pos:column="60"/></decl_stmt>
                <if pos:line="181" pos:column="17">if <condition pos:line="181" pos:column="20">(<expr><name pos:line="181" pos:column="21">next<pos:position pos:line="181" pos:column="25"/></name> <operator pos:line="181" pos:column="26">instanceof<pos:position pos:line="181" pos:column="36"/></operator> <name pos:line="181" pos:column="37">MClassifier<pos:position pos:line="181" pos:column="48"/></name></expr>)<pos:position pos:line="181" pos:column="49"/></condition><then pos:line="181" pos:column="49"> <block pos:line="181" pos:column="50">{
                    <expr_stmt><expr><call><name><name pos:line="182" pos:column="21">newAdd<pos:position pos:line="182" pos:column="27"/></name><operator pos:line="182" pos:column="27">.<pos:position pos:line="182" pos:column="28"/></operator><name pos:line="182" pos:column="28">addAll<pos:position pos:line="182" pos:column="34"/></name></name><argument_list pos:line="182" pos:column="34">(<argument><expr><call><name pos:line="182" pos:column="35">getSupertypes<pos:position pos:line="182" pos:column="48"/></name><argument_list pos:line="182" pos:column="48">(<argument><expr><name pos:line="182" pos:column="49">next<pos:position pos:line="182" pos:column="53"/></name></expr></argument>)<pos:position pos:line="182" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="182" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="182" pos:column="56"/></expr_stmt>
                }<pos:position pos:line="183" pos:column="18"/></block></then></if>
            }<pos:position pos:line="184" pos:column="14"/></block></while>
            <expr_stmt><expr><call><name><name pos:line="185" pos:column="13">result<pos:position pos:line="185" pos:column="19"/></name><operator pos:line="185" pos:column="19">.<pos:position pos:line="185" pos:column="20"/></operator><name pos:line="185" pos:column="20">addAll<pos:position pos:line="185" pos:column="26"/></name></name><argument_list pos:line="185" pos:column="26">(<argument><expr><name pos:line="185" pos:column="27">add<pos:position pos:line="185" pos:column="30"/></name></expr></argument>)<pos:position pos:line="185" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="185" pos:column="32"/></expr_stmt>
            <expr_stmt><expr><name pos:line="186" pos:column="13">add<pos:position pos:line="186" pos:column="16"/></name> <operator pos:line="186" pos:column="17">=<pos:position pos:line="186" pos:column="18"/></operator> <name pos:line="186" pos:column="19">newAdd<pos:position pos:line="186" pos:column="25"/></name></expr>;<pos:position pos:line="186" pos:column="26"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="187" pos:column="13">add<pos:position pos:line="187" pos:column="16"/></name><operator pos:line="187" pos:column="16">.<pos:position pos:line="187" pos:column="17"/></operator><name pos:line="187" pos:column="17">removeAll<pos:position pos:line="187" pos:column="26"/></name></name><argument_list pos:line="187" pos:column="26">(<argument><expr><name pos:line="187" pos:column="27">result<pos:position pos:line="187" pos:column="33"/></name></expr></argument>)<pos:position pos:line="187" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="35"/></expr_stmt>
        }<pos:position pos:line="188" pos:column="10"/></block>
        while <condition pos:line="189" pos:column="15">(<expr><operator pos:line="189" pos:column="16">!<pos:position pos:line="189" pos:column="17"/></operator><call><name><name pos:line="189" pos:column="17">add<pos:position pos:line="189" pos:column="20"/></name><operator pos:line="189" pos:column="20">.<pos:position pos:line="189" pos:column="21"/></operator><name pos:line="189" pos:column="21">isEmpty<pos:position pos:line="189" pos:column="28"/></name></name><argument_list pos:line="189" pos:column="28">()<pos:position pos:line="189" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="189" pos:column="31"/></condition>;<pos:position pos:line="189" pos:column="32"/></do>
        <return pos:line="190" pos:column="9">return <expr><name pos:line="190" pos:column="16">result<pos:position pos:line="190" pos:column="22"/></name></expr>;<pos:position pos:line="190" pos:column="23"/></return>
    }<pos:position pos:line="191" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="193" pos:column="5">/**
     * This method returns all Classifiers of which this class is a
     * direct subtype.&lt;p&gt;
     *
     * @param ogeneralizableelement the class you want to have the parents for
     * @return a collection of the parents, each of which is a
     *         {@link MGeneralizableElement MGeneralizableElement}
     */</comment>
    <function><specifier pos:line="201" pos:column="5">public<pos:position pos:line="201" pos:column="11"/></specifier> <type><name pos:line="201" pos:column="12">Collection<pos:position pos:line="201" pos:column="22"/></name></type> <name pos:line="201" pos:column="23">getSupertypes<pos:position pos:line="201" pos:column="36"/></name><parameter_list pos:line="201" pos:column="36">(<parameter><decl><type><name pos:line="201" pos:column="37">Object<pos:position pos:line="201" pos:column="43"/></name></type> <name pos:line="201" pos:column="44">ogeneralizableelement<pos:position pos:line="201" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="201" pos:column="66"/></parameter_list> <block pos:line="201" pos:column="67">{
        <decl_stmt><decl><type><name pos:line="202" pos:column="9">Collection<pos:position pos:line="202" pos:column="19"/></name></type> <name pos:line="202" pos:column="20">result<pos:position pos:line="202" pos:column="26"/></name> <init pos:line="202" pos:column="27">= <expr><operator pos:line="202" pos:column="29">new<pos:position pos:line="202" pos:column="32"/></operator> <call><name pos:line="202" pos:column="33">HashSet<pos:position pos:line="202" pos:column="40"/></name><argument_list pos:line="202" pos:column="40">()<pos:position pos:line="202" pos:column="42"/></argument_list></call></expr></init></decl>;<pos:position pos:line="202" pos:column="43"/></decl_stmt>
        <if pos:line="203" pos:column="9">if <condition pos:line="203" pos:column="12">(<expr><name pos:line="203" pos:column="13">ogeneralizableelement<pos:position pos:line="203" pos:column="34"/></name> <operator pos:line="203" pos:column="35">instanceof<pos:position pos:line="203" pos:column="45"/></operator> <name pos:line="203" pos:column="46">MGeneralizableElement<pos:position pos:line="203" pos:column="67"/></name></expr>)<pos:position pos:line="203" pos:column="68"/></condition><then pos:line="203" pos:column="68"> <block pos:line="203" pos:column="69">{
            <decl_stmt><decl><type><name pos:line="204" pos:column="13">MGeneralizableElement<pos:position pos:line="204" pos:column="34"/></name></type> <name pos:line="204" pos:column="35">cls<pos:position pos:line="204" pos:column="38"/></name> <init pos:line="204" pos:column="39">=
                <expr><operator pos:line="205" pos:column="17">(<pos:position pos:line="205" pos:column="18"/></operator><name pos:line="205" pos:column="18">MGeneralizableElement<pos:position pos:line="205" pos:column="39"/></name><operator pos:line="205" pos:column="39">)<pos:position pos:line="205" pos:column="40"/></operator> <name pos:line="205" pos:column="41">ogeneralizableelement<pos:position pos:line="205" pos:column="62"/></name></expr></init></decl>;<pos:position pos:line="205" pos:column="63"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="206" pos:column="13">Collection<pos:position pos:line="206" pos:column="23"/></name></type> <name pos:line="206" pos:column="24">gens<pos:position pos:line="206" pos:column="28"/></name> <init pos:line="206" pos:column="29">= <expr><call><name><name pos:line="206" pos:column="31">cls<pos:position pos:line="206" pos:column="34"/></name><operator pos:line="206" pos:column="34">.<pos:position pos:line="206" pos:column="35"/></operator><name pos:line="206" pos:column="35">getGeneralizations<pos:position pos:line="206" pos:column="53"/></name></name><argument_list pos:line="206" pos:column="53">()<pos:position pos:line="206" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="206" pos:column="56"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="207" pos:column="13">Iterator<pos:position pos:line="207" pos:column="21"/></name></type> <name pos:line="207" pos:column="22">genIterator<pos:position pos:line="207" pos:column="33"/></name> <init pos:line="207" pos:column="34">= <expr><call><name><name pos:line="207" pos:column="36">gens<pos:position pos:line="207" pos:column="40"/></name><operator pos:line="207" pos:column="40">.<pos:position pos:line="207" pos:column="41"/></operator><name pos:line="207" pos:column="41">iterator<pos:position pos:line="207" pos:column="49"/></name></name><argument_list pos:line="207" pos:column="49">()<pos:position pos:line="207" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="207" pos:column="52"/></decl_stmt>
            <while pos:line="208" pos:column="13">while <condition pos:line="208" pos:column="19">(<expr><call><name><name pos:line="208" pos:column="20">genIterator<pos:position pos:line="208" pos:column="31"/></name><operator pos:line="208" pos:column="31">.<pos:position pos:line="208" pos:column="32"/></operator><name pos:line="208" pos:column="32">hasNext<pos:position pos:line="208" pos:column="39"/></name></name><argument_list pos:line="208" pos:column="39">()<pos:position pos:line="208" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="208" pos:column="42"/></condition> <block pos:line="208" pos:column="43">{
                <decl_stmt><decl><type><name pos:line="209" pos:column="17">MGeneralization<pos:position pos:line="209" pos:column="32"/></name></type> <name pos:line="209" pos:column="33">next<pos:position pos:line="209" pos:column="37"/></name> <init pos:line="209" pos:column="38">= <expr><operator pos:line="209" pos:column="40">(<pos:position pos:line="209" pos:column="41"/></operator><name pos:line="209" pos:column="41">MGeneralization<pos:position pos:line="209" pos:column="56"/></name><operator pos:line="209" pos:column="56">)<pos:position pos:line="209" pos:column="57"/></operator> <call><name><name pos:line="209" pos:column="58">genIterator<pos:position pos:line="209" pos:column="69"/></name><operator pos:line="209" pos:column="69">.<pos:position pos:line="209" pos:column="70"/></operator><name pos:line="209" pos:column="70">next<pos:position pos:line="209" pos:column="74"/></name></name><argument_list pos:line="209" pos:column="74">()<pos:position pos:line="209" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="209" pos:column="77"/></decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="210" pos:column="17">result<pos:position pos:line="210" pos:column="23"/></name><operator pos:line="210" pos:column="23">.<pos:position pos:line="210" pos:column="24"/></operator><name pos:line="210" pos:column="24">add<pos:position pos:line="210" pos:column="27"/></name></name><argument_list pos:line="210" pos:column="27">(<argument><expr><call><name><name pos:line="210" pos:column="28">next<pos:position pos:line="210" pos:column="32"/></name><operator pos:line="210" pos:column="32">.<pos:position pos:line="210" pos:column="33"/></operator><name pos:line="210" pos:column="33">getParent<pos:position pos:line="210" pos:column="42"/></name></name><argument_list pos:line="210" pos:column="42">()<pos:position pos:line="210" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="210" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="210" pos:column="46"/></expr_stmt>
            }<pos:position pos:line="211" pos:column="14"/></block></while>
        }<pos:position pos:line="212" pos:column="10"/></block></then></if>
        <return pos:line="213" pos:column="9">return <expr><name pos:line="213" pos:column="16">result<pos:position pos:line="213" pos:column="22"/></name></expr>;<pos:position pos:line="213" pos:column="23"/></return>
    }<pos:position pos:line="214" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="216" pos:column="5">/**
     * This method returns all opposite AssociationEnds of a given
     * Classifier.
     *
     * @param classifier the classifier you want to have the opposite
     * association ends for
     * @return a collection of the opposite associationends
     */</comment>
    <function><specifier pos:line="224" pos:column="5">public<pos:position pos:line="224" pos:column="11"/></specifier> <type><name pos:line="224" pos:column="12">Collection<pos:position pos:line="224" pos:column="22"/></name></type> <name pos:line="224" pos:column="23">getAssociateEnds<pos:position pos:line="224" pos:column="39"/></name><parameter_list pos:line="224" pos:column="39">(<parameter><decl><type><name pos:line="224" pos:column="40">Object<pos:position pos:line="224" pos:column="46"/></name></type> <name pos:line="224" pos:column="47">classifier<pos:position pos:line="224" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="224" pos:column="58"/></parameter_list> <block pos:line="224" pos:column="59">{
        <if pos:line="225" pos:column="9">if <condition pos:line="225" pos:column="12">(<expr><operator pos:line="225" pos:column="13">!<pos:position pos:line="225" pos:column="14"/></operator><operator pos:line="225" pos:column="14">(<pos:position pos:line="225" pos:column="15"/></operator><name pos:line="225" pos:column="15">classifier<pos:position pos:line="225" pos:column="25"/></name> <operator pos:line="225" pos:column="26">instanceof<pos:position pos:line="225" pos:column="36"/></operator> <name pos:line="225" pos:column="37">MClassifier<pos:position pos:line="225" pos:column="48"/></name><operator pos:line="225" pos:column="48">)<pos:position pos:line="225" pos:column="49"/></operator></expr>)<pos:position pos:line="225" pos:column="50"/></condition><then pos:line="225" pos:column="50"> <block pos:line="225" pos:column="51">{
            <throw pos:line="226" pos:column="13">throw <expr><operator pos:line="226" pos:column="19">new<pos:position pos:line="226" pos:column="22"/></operator> <call><name pos:line="226" pos:column="23">IllegalArgumentException<pos:position pos:line="226" pos:column="47"/></name><argument_list pos:line="226" pos:column="47">()<pos:position pos:line="226" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="226" pos:column="50"/></throw>
        }<pos:position pos:line="227" pos:column="10"/></block></then></if>

        <decl_stmt><decl><type><name pos:line="229" pos:column="9">Collection<pos:position pos:line="229" pos:column="19"/></name></type> <name pos:line="229" pos:column="20">result<pos:position pos:line="229" pos:column="26"/></name> <init pos:line="229" pos:column="27">= <expr><operator pos:line="229" pos:column="29">new<pos:position pos:line="229" pos:column="32"/></operator> <call><name pos:line="229" pos:column="33">ArrayList<pos:position pos:line="229" pos:column="42"/></name><argument_list pos:line="229" pos:column="42">()<pos:position pos:line="229" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="229" pos:column="45"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="230" pos:column="9">Iterator<pos:position pos:line="230" pos:column="17"/></name></type> <name pos:line="230" pos:column="18">ascends<pos:position pos:line="230" pos:column="25"/></name> <init pos:line="230" pos:column="26">=
            <expr><operator pos:line="231" pos:column="13">(<pos:position pos:line="231" pos:column="14"/></operator><operator pos:line="231" pos:column="14">(<pos:position pos:line="231" pos:column="15"/></operator><name pos:line="231" pos:column="15">MClassifier<pos:position pos:line="231" pos:column="26"/></name><operator pos:line="231" pos:column="26">)<pos:position pos:line="231" pos:column="27"/></operator> <name pos:line="231" pos:column="28">classifier<pos:position pos:line="231" pos:column="38"/></name><operator pos:line="231" pos:column="38">)<pos:position pos:line="231" pos:column="39"/></operator><operator pos:line="231" pos:column="39">.<pos:position pos:line="231" pos:column="40"/></operator><call><name pos:line="231" pos:column="40">getAssociationEnds<pos:position pos:line="231" pos:column="58"/></name><argument_list pos:line="231" pos:column="58">()<pos:position pos:line="231" pos:column="60"/></argument_list></call><operator pos:line="231" pos:column="60">.<pos:position pos:line="231" pos:column="61"/></operator><call><name pos:line="231" pos:column="61">iterator<pos:position pos:line="231" pos:column="69"/></name><argument_list pos:line="231" pos:column="69">()<pos:position pos:line="231" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="231" pos:column="72"/></decl_stmt>
        <while pos:line="232" pos:column="9">while <condition pos:line="232" pos:column="15">(<expr><call><name><name pos:line="232" pos:column="16">ascends<pos:position pos:line="232" pos:column="23"/></name><operator pos:line="232" pos:column="23">.<pos:position pos:line="232" pos:column="24"/></operator><name pos:line="232" pos:column="24">hasNext<pos:position pos:line="232" pos:column="31"/></name></name><argument_list pos:line="232" pos:column="31">()<pos:position pos:line="232" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="232" pos:column="34"/></condition> <block pos:line="232" pos:column="35">{
            <decl_stmt><decl><type><name pos:line="233" pos:column="13">MAssociationEnd<pos:position pos:line="233" pos:column="28"/></name></type> <name pos:line="233" pos:column="29">ascend<pos:position pos:line="233" pos:column="35"/></name> <init pos:line="233" pos:column="36">= <expr><operator pos:line="233" pos:column="38">(<pos:position pos:line="233" pos:column="39"/></operator><name pos:line="233" pos:column="39">MAssociationEnd<pos:position pos:line="233" pos:column="54"/></name><operator pos:line="233" pos:column="54">)<pos:position pos:line="233" pos:column="55"/></operator> <call><name><name pos:line="233" pos:column="56">ascends<pos:position pos:line="233" pos:column="63"/></name><operator pos:line="233" pos:column="63">.<pos:position pos:line="233" pos:column="64"/></operator><name pos:line="233" pos:column="64">next<pos:position pos:line="233" pos:column="68"/></name></name><argument_list pos:line="233" pos:column="68">()<pos:position pos:line="233" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="233" pos:column="71"/></decl_stmt>
            <if pos:line="234" pos:column="13">if <condition pos:line="234" pos:column="16">(<expr><operator pos:line="234" pos:column="17">(<pos:position pos:line="234" pos:column="18"/></operator><call><name><name pos:line="234" pos:column="18">ascend<pos:position pos:line="234" pos:column="24"/></name><operator pos:line="234" pos:column="24">.<pos:position pos:line="234" pos:column="25"/></operator><name pos:line="234" pos:column="25">getOppositeEnd<pos:position pos:line="234" pos:column="39"/></name></name><argument_list pos:line="234" pos:column="39">()<pos:position pos:line="234" pos:column="41"/></argument_list></call> <operator pos:line="234" pos:column="42">!=<pos:position pos:line="234" pos:column="44"/></operator> <literal type="null" pos:line="234" pos:column="45">null<pos:position pos:line="234" pos:column="49"/></literal><operator pos:line="234" pos:column="49">)<pos:position pos:line="234" pos:column="50"/></operator></expr>)<pos:position pos:line="234" pos:column="51"/></condition><then pos:line="234" pos:column="51"> <block pos:line="234" pos:column="52">{
                <expr_stmt><expr><call><name><name pos:line="235" pos:column="17">result<pos:position pos:line="235" pos:column="23"/></name><operator pos:line="235" pos:column="23">.<pos:position pos:line="235" pos:column="24"/></operator><name pos:line="235" pos:column="24">add<pos:position pos:line="235" pos:column="27"/></name></name><argument_list pos:line="235" pos:column="27">(<argument><expr><call><name><name pos:line="235" pos:column="28">ascend<pos:position pos:line="235" pos:column="34"/></name><operator pos:line="235" pos:column="34">.<pos:position pos:line="235" pos:column="35"/></operator><name pos:line="235" pos:column="35">getOppositeEnd<pos:position pos:line="235" pos:column="49"/></name></name><argument_list pos:line="235" pos:column="49">()<pos:position pos:line="235" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="235" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="235" pos:column="53"/></expr_stmt>
            }<pos:position pos:line="236" pos:column="14"/></block></then></if>
        }<pos:position pos:line="237" pos:column="10"/></block></while>
        <return pos:line="238" pos:column="9">return <expr><name pos:line="238" pos:column="16">result<pos:position pos:line="238" pos:column="22"/></name></expr>;<pos:position pos:line="238" pos:column="23"/></return>
    }<pos:position pos:line="239" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="241" pos:column="5">/**
     * This method returns all opposite AssociationEnds of a given
     * Classifier, including inherited.
     *
     * @param classifier1 the classifier you want to have the opposite
     * association ends for
     * @return a collection of the opposite associationends
     */</comment>
    <function><specifier pos:line="249" pos:column="5">public<pos:position pos:line="249" pos:column="11"/></specifier> <type><name pos:line="249" pos:column="12">Collection<pos:position pos:line="249" pos:column="22"/></name></type> <name pos:line="249" pos:column="23">getAssociateEndsInh<pos:position pos:line="249" pos:column="42"/></name><parameter_list pos:line="249" pos:column="42">(<parameter><decl><type><name pos:line="249" pos:column="43">Object<pos:position pos:line="249" pos:column="49"/></name></type> <name pos:line="249" pos:column="50">classifier1<pos:position pos:line="249" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="249" pos:column="62"/></parameter_list> <block pos:line="249" pos:column="63">{

        <if pos:line="251" pos:column="9">if <condition pos:line="251" pos:column="12">(<expr><operator pos:line="251" pos:column="13">!<pos:position pos:line="251" pos:column="14"/></operator><operator pos:line="251" pos:column="14">(<pos:position pos:line="251" pos:column="15"/></operator><name pos:line="251" pos:column="15">classifier1<pos:position pos:line="251" pos:column="26"/></name> <operator pos:line="251" pos:column="27">instanceof<pos:position pos:line="251" pos:column="37"/></operator> <name pos:line="251" pos:column="38">MClassifier<pos:position pos:line="251" pos:column="49"/></name><operator pos:line="251" pos:column="49">)<pos:position pos:line="251" pos:column="50"/></operator></expr>)<pos:position pos:line="251" pos:column="51"/></condition><then pos:line="251" pos:column="51"> <block pos:line="251" pos:column="52">{
            <throw pos:line="252" pos:column="13">throw <expr><operator pos:line="252" pos:column="19">new<pos:position pos:line="252" pos:column="22"/></operator> <call><name pos:line="252" pos:column="23">IllegalArgumentException<pos:position pos:line="252" pos:column="47"/></name><argument_list pos:line="252" pos:column="47">()<pos:position pos:line="252" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="252" pos:column="50"/></throw>
        }<pos:position pos:line="253" pos:column="10"/></block></then></if>

        <decl_stmt><decl><type><name pos:line="255" pos:column="9">MClassifier<pos:position pos:line="255" pos:column="20"/></name></type> <name pos:line="255" pos:column="21">classifier<pos:position pos:line="255" pos:column="31"/></name> <init pos:line="255" pos:column="32">= <expr><operator pos:line="255" pos:column="34">(<pos:position pos:line="255" pos:column="35"/></operator><name pos:line="255" pos:column="35">MClassifier<pos:position pos:line="255" pos:column="46"/></name><operator pos:line="255" pos:column="46">)<pos:position pos:line="255" pos:column="47"/></operator> <name pos:line="255" pos:column="48">classifier1<pos:position pos:line="255" pos:column="59"/></name></expr></init></decl>;<pos:position pos:line="255" pos:column="60"/></decl_stmt>

        <decl_stmt><decl><type><name pos:line="257" pos:column="9">Collection<pos:position pos:line="257" pos:column="19"/></name></type> <name pos:line="257" pos:column="20">result<pos:position pos:line="257" pos:column="26"/></name> <init pos:line="257" pos:column="27">= <expr><operator pos:line="257" pos:column="29">new<pos:position pos:line="257" pos:column="32"/></operator> <call><name pos:line="257" pos:column="33">ArrayList<pos:position pos:line="257" pos:column="42"/></name><argument_list pos:line="257" pos:column="42">()<pos:position pos:line="257" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="257" pos:column="45"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="258" pos:column="9">result<pos:position pos:line="258" pos:column="15"/></name><operator pos:line="258" pos:column="15">.<pos:position pos:line="258" pos:column="16"/></operator><name pos:line="258" pos:column="16">addAll<pos:position pos:line="258" pos:column="22"/></name></name><argument_list pos:line="258" pos:column="22">(<argument><expr><call><name pos:line="258" pos:column="23">getAssociateEnds<pos:position pos:line="258" pos:column="39"/></name><argument_list pos:line="258" pos:column="39">(<argument><expr><name pos:line="258" pos:column="40">classifier<pos:position pos:line="258" pos:column="50"/></name></expr></argument>)<pos:position pos:line="258" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="258" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="258" pos:column="53"/></expr_stmt>
        <decl_stmt><decl><type><name pos:line="259" pos:column="9">Iterator<pos:position pos:line="259" pos:column="17"/></name></type> <name pos:line="259" pos:column="18">parents<pos:position pos:line="259" pos:column="25"/></name> <init pos:line="259" pos:column="26">= <expr><call><name><name pos:line="259" pos:column="28">classifier<pos:position pos:line="259" pos:column="38"/></name><operator pos:line="259" pos:column="38">.<pos:position pos:line="259" pos:column="39"/></operator><name pos:line="259" pos:column="39">getParents<pos:position pos:line="259" pos:column="49"/></name></name><argument_list pos:line="259" pos:column="49">()<pos:position pos:line="259" pos:column="51"/></argument_list></call><operator pos:line="259" pos:column="51">.<pos:position pos:line="259" pos:column="52"/></operator><call><name pos:line="259" pos:column="52">iterator<pos:position pos:line="259" pos:column="60"/></name><argument_list pos:line="259" pos:column="60">()<pos:position pos:line="259" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="259" pos:column="63"/></decl_stmt>
        <while pos:line="260" pos:column="9">while <condition pos:line="260" pos:column="15">(<expr><call><name><name pos:line="260" pos:column="16">parents<pos:position pos:line="260" pos:column="23"/></name><operator pos:line="260" pos:column="23">.<pos:position pos:line="260" pos:column="24"/></operator><name pos:line="260" pos:column="24">hasNext<pos:position pos:line="260" pos:column="31"/></name></name><argument_list pos:line="260" pos:column="31">()<pos:position pos:line="260" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="260" pos:column="34"/></condition> <block pos:line="260" pos:column="35">{
            <expr_stmt><expr><call><name><name pos:line="261" pos:column="13">result<pos:position pos:line="261" pos:column="19"/></name><operator pos:line="261" pos:column="19">.<pos:position pos:line="261" pos:column="20"/></operator><name pos:line="261" pos:column="20">addAll<pos:position pos:line="261" pos:column="26"/></name></name><argument_list pos:line="261" pos:column="26">(<argument><expr><call><name pos:line="261" pos:column="27">getAssociateEndsInh<pos:position pos:line="261" pos:column="46"/></name><argument_list pos:line="261" pos:column="46">(<argument><expr><call><name><name pos:line="261" pos:column="47">parents<pos:position pos:line="261" pos:column="54"/></name><operator pos:line="261" pos:column="54">.<pos:position pos:line="261" pos:column="55"/></operator><name pos:line="261" pos:column="55">next<pos:position pos:line="261" pos:column="59"/></name></name><argument_list pos:line="261" pos:column="59">()<pos:position pos:line="261" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="261" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="261" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="261" pos:column="64"/></expr_stmt>
        }<pos:position pos:line="262" pos:column="10"/></block></while>
        <return pos:line="263" pos:column="9">return <expr><name pos:line="263" pos:column="16">result<pos:position pos:line="263" pos:column="22"/></name></expr>;<pos:position pos:line="263" pos:column="23"/></return>
    }<pos:position pos:line="264" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="266" pos:column="5">/**
     * This method removes a feature from a classifier.
     *
     * @param cls the classifier
     * @param feature the feature to be removed
     */</comment>
    <function><specifier pos:line="272" pos:column="5">public<pos:position pos:line="272" pos:column="11"/></specifier> <type><name pos:line="272" pos:column="12">void<pos:position pos:line="272" pos:column="16"/></name></type> <name pos:line="272" pos:column="17">removeFeature<pos:position pos:line="272" pos:column="30"/></name><parameter_list pos:line="272" pos:column="30">(<parameter><decl><type><name pos:line="272" pos:column="31">Object<pos:position pos:line="272" pos:column="37"/></name></type> <name pos:line="272" pos:column="38">cls<pos:position pos:line="272" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="272" pos:column="43">Object<pos:position pos:line="272" pos:column="49"/></name></type> <name pos:line="272" pos:column="50">feature<pos:position pos:line="272" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="272" pos:column="58"/></parameter_list> <block pos:line="272" pos:column="59">{
        <if pos:line="273" pos:column="9">if <condition pos:line="273" pos:column="12">(<expr><name pos:line="273" pos:column="13">cls<pos:position pos:line="273" pos:column="16"/></name> <operator pos:line="273" pos:column="17">instanceof<pos:position pos:line="273" pos:column="27"/></operator> <name pos:line="273" pos:column="28">MClassifier<pos:position pos:line="273" pos:column="39"/></name> <operator pos:line="273" pos:column="40">&amp;&amp;<pos:position pos:line="273" pos:column="50"/></operator> <name pos:line="273" pos:column="43">feature<pos:position pos:line="273" pos:column="50"/></name> <operator pos:line="273" pos:column="51">instanceof<pos:position pos:line="273" pos:column="61"/></operator> <name pos:line="273" pos:column="62">MFeature<pos:position pos:line="273" pos:column="70"/></name></expr>)<pos:position pos:line="273" pos:column="71"/></condition><then pos:line="273" pos:column="71"> <block pos:line="273" pos:column="72">{
            <if pos:line="274" pos:column="13">if <condition pos:line="274" pos:column="16">(<expr><call><name><name pos:line="274" pos:column="17">LOG<pos:position pos:line="274" pos:column="20"/></name><operator pos:line="274" pos:column="20">.<pos:position pos:line="274" pos:column="21"/></operator><name pos:line="274" pos:column="21">isInfoEnabled<pos:position pos:line="274" pos:column="34"/></name></name><argument_list pos:line="274" pos:column="34">()<pos:position pos:line="274" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="274" pos:column="37"/></condition><then pos:line="274" pos:column="37"> <block pos:line="274" pos:column="38">{
                <expr_stmt><expr><call><name><name pos:line="275" pos:column="17">LOG<pos:position pos:line="275" pos:column="20"/></name><operator pos:line="275" pos:column="20">.<pos:position pos:line="275" pos:column="21"/></operator><name pos:line="275" pos:column="21">info<pos:position pos:line="275" pos:column="25"/></name></name><argument_list pos:line="275" pos:column="25">(<argument><expr><literal type="string" pos:line="275" pos:column="26">"Removing the feature "<pos:position pos:line="275" pos:column="49"/></literal> <operator pos:line="275" pos:column="50">+<pos:position pos:line="275" pos:column="51"/></operator> <name pos:line="275" pos:column="52">feature<pos:position pos:line="275" pos:column="59"/></name></expr></argument>)<pos:position pos:line="275" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="275" pos:column="61"/></expr_stmt>
            }<pos:position pos:line="276" pos:column="14"/></block></then></if>
            <expr_stmt><expr><operator pos:line="277" pos:column="13">(<pos:position pos:line="277" pos:column="14"/></operator><operator pos:line="277" pos:column="14">(<pos:position pos:line="277" pos:column="15"/></operator><name pos:line="277" pos:column="15">MClassifier<pos:position pos:line="277" pos:column="26"/></name><operator pos:line="277" pos:column="26">)<pos:position pos:line="277" pos:column="27"/></operator> <name pos:line="277" pos:column="28">cls<pos:position pos:line="277" pos:column="31"/></name><operator pos:line="277" pos:column="31">)<pos:position pos:line="277" pos:column="32"/></operator><operator pos:line="277" pos:column="32">.<pos:position pos:line="277" pos:column="33"/></operator><call><name pos:line="277" pos:column="33">removeFeature<pos:position pos:line="277" pos:column="46"/></name><argument_list pos:line="277" pos:column="46">(<argument><expr><operator pos:line="277" pos:column="47">(<pos:position pos:line="277" pos:column="48"/></operator><name pos:line="277" pos:column="48">MFeature<pos:position pos:line="277" pos:column="56"/></name><operator pos:line="277" pos:column="56">)<pos:position pos:line="277" pos:column="57"/></operator> <name pos:line="277" pos:column="58">feature<pos:position pos:line="277" pos:column="65"/></name></expr></argument>)<pos:position pos:line="277" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="277" pos:column="67"/></expr_stmt>
        }<pos:position pos:line="278" pos:column="10"/></block></then></if>
    }<pos:position pos:line="279" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="281" pos:column="5">/**
     * This method returns the name of a feature.
     *
     * @param o is the feature
     * @return name
     */</comment>
    <function><specifier pos:line="287" pos:column="5">public<pos:position pos:line="287" pos:column="11"/></specifier> <type><name pos:line="287" pos:column="12">String<pos:position pos:line="287" pos:column="18"/></name></type> <name pos:line="287" pos:column="19">getFeatureName<pos:position pos:line="287" pos:column="33"/></name><parameter_list pos:line="287" pos:column="33">(<parameter><decl><type><name pos:line="287" pos:column="34">Object<pos:position pos:line="287" pos:column="40"/></name></type> <name pos:line="287" pos:column="41">o<pos:position pos:line="287" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="287" pos:column="43"/></parameter_list> <block pos:line="287" pos:column="44">{
        <if pos:line="288" pos:column="9">if <condition pos:line="288" pos:column="12">(<expr><name pos:line="288" pos:column="13">o<pos:position pos:line="288" pos:column="14"/></name> <operator pos:line="288" pos:column="15">!=<pos:position pos:line="288" pos:column="17"/></operator> <literal type="null" pos:line="288" pos:column="18">null<pos:position pos:line="288" pos:column="22"/></literal> <operator pos:line="288" pos:column="23">&amp;&amp;<pos:position pos:line="288" pos:column="33"/></operator> <name pos:line="288" pos:column="26">o<pos:position pos:line="288" pos:column="27"/></name> <operator pos:line="288" pos:column="28">instanceof<pos:position pos:line="288" pos:column="38"/></operator> <name pos:line="288" pos:column="39">MFeature<pos:position pos:line="288" pos:column="47"/></name></expr>)<pos:position pos:line="288" pos:column="48"/></condition><then pos:line="288" pos:column="48"> <block pos:line="288" pos:column="49">{
            <return pos:line="289" pos:column="13">return <expr><operator pos:line="289" pos:column="20">(<pos:position pos:line="289" pos:column="21"/></operator><operator pos:line="289" pos:column="21">(<pos:position pos:line="289" pos:column="22"/></operator><name pos:line="289" pos:column="22">MFeature<pos:position pos:line="289" pos:column="30"/></name><operator pos:line="289" pos:column="30">)<pos:position pos:line="289" pos:column="31"/></operator> <name pos:line="289" pos:column="32">o<pos:position pos:line="289" pos:column="33"/></name><operator pos:line="289" pos:column="33">)<pos:position pos:line="289" pos:column="34"/></operator><operator pos:line="289" pos:column="34">.<pos:position pos:line="289" pos:column="35"/></operator><call><name pos:line="289" pos:column="35">getName<pos:position pos:line="289" pos:column="42"/></name><argument_list pos:line="289" pos:column="42">()<pos:position pos:line="289" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="289" pos:column="45"/></return>
        }<pos:position pos:line="290" pos:column="10"/></block></then></if>
        <return pos:line="291" pos:column="9">return <expr><literal type="null" pos:line="291" pos:column="16">null<pos:position pos:line="291" pos:column="20"/></literal></expr>;<pos:position pos:line="291" pos:column="21"/></return>
    }<pos:position pos:line="292" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="294" pos:column="5">/**
     * This method returns if the object is a method.
     *
     * @param o object
     * @return true if it's a method, false if not
     */</comment>
    <function><specifier pos:line="300" pos:column="5">public<pos:position pos:line="300" pos:column="11"/></specifier> <type><name pos:line="300" pos:column="12">boolean<pos:position pos:line="300" pos:column="19"/></name></type> <name pos:line="300" pos:column="20">isMethod<pos:position pos:line="300" pos:column="28"/></name><parameter_list pos:line="300" pos:column="28">(<parameter><decl><type><name pos:line="300" pos:column="29">Object<pos:position pos:line="300" pos:column="35"/></name></type> <name pos:line="300" pos:column="36">o<pos:position pos:line="300" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="300" pos:column="38"/></parameter_list> <block pos:line="300" pos:column="39">{
        <return pos:line="301" pos:column="9">return <expr><operator pos:line="301" pos:column="16">(<pos:position pos:line="301" pos:column="17"/></operator><name pos:line="301" pos:column="17">o<pos:position pos:line="301" pos:column="18"/></name> <operator pos:line="301" pos:column="19">instanceof<pos:position pos:line="301" pos:column="29"/></operator> <name pos:line="301" pos:column="30">MMethod<pos:position pos:line="301" pos:column="37"/></name><operator pos:line="301" pos:column="37">)<pos:position pos:line="301" pos:column="38"/></operator></expr>;<pos:position pos:line="301" pos:column="39"/></return>
    }<pos:position pos:line="302" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="304" pos:column="5">/**
     * This method returns if the object is an operation.
     *
     * @param o object
     * @return true if it's an operation, false if not
     */</comment>
    <function><specifier pos:line="310" pos:column="5">public<pos:position pos:line="310" pos:column="11"/></specifier> <type><name pos:line="310" pos:column="12">boolean<pos:position pos:line="310" pos:column="19"/></name></type> <name pos:line="310" pos:column="20">isOperation<pos:position pos:line="310" pos:column="31"/></name><parameter_list pos:line="310" pos:column="31">(<parameter><decl><type><name pos:line="310" pos:column="32">Object<pos:position pos:line="310" pos:column="38"/></name></type> <name pos:line="310" pos:column="39">o<pos:position pos:line="310" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="310" pos:column="41"/></parameter_list> <block pos:line="310" pos:column="42">{
        <return pos:line="311" pos:column="9">return <expr><operator pos:line="311" pos:column="16">(<pos:position pos:line="311" pos:column="17"/></operator><name pos:line="311" pos:column="17">o<pos:position pos:line="311" pos:column="18"/></name> <operator pos:line="311" pos:column="19">instanceof<pos:position pos:line="311" pos:column="29"/></operator> <name pos:line="311" pos:column="30">MOperation<pos:position pos:line="311" pos:column="40"/></name><operator pos:line="311" pos:column="40">)<pos:position pos:line="311" pos:column="41"/></operator></expr>;<pos:position pos:line="311" pos:column="42"/></return>
    }<pos:position pos:line="312" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="314" pos:column="5">/**
     * This method returns all operations of a given Classifier.
     *
     * @param classifier the classifier you want to have the operations for
     * @return a collection of the operations
     */</comment>
    <function><specifier pos:line="320" pos:column="5">public<pos:position pos:line="320" pos:column="11"/></specifier> <type><name pos:line="320" pos:column="12">Collection<pos:position pos:line="320" pos:column="22"/></name></type> <name pos:line="320" pos:column="23">getOperations<pos:position pos:line="320" pos:column="36"/></name><parameter_list pos:line="320" pos:column="36">(<parameter><decl><type><name pos:line="320" pos:column="37">Object<pos:position pos:line="320" pos:column="43"/></name></type> <name pos:line="320" pos:column="44">classifier<pos:position pos:line="320" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="320" pos:column="55"/></parameter_list> <block pos:line="320" pos:column="56">{
        <decl_stmt><decl><type><name pos:line="321" pos:column="9">Collection<pos:position pos:line="321" pos:column="19"/></name></type> <name pos:line="321" pos:column="20">result<pos:position pos:line="321" pos:column="26"/></name> <init pos:line="321" pos:column="27">= <expr><operator pos:line="321" pos:column="29">new<pos:position pos:line="321" pos:column="32"/></operator> <call><name pos:line="321" pos:column="33">ArrayList<pos:position pos:line="321" pos:column="42"/></name><argument_list pos:line="321" pos:column="42">()<pos:position pos:line="321" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="321" pos:column="45"/></decl_stmt>
        <if pos:line="322" pos:column="9">if <condition pos:line="322" pos:column="12">(<expr><name pos:line="322" pos:column="13">classifier<pos:position pos:line="322" pos:column="23"/></name> <operator pos:line="322" pos:column="24">instanceof<pos:position pos:line="322" pos:column="34"/></operator> <name pos:line="322" pos:column="35">MClassifier<pos:position pos:line="322" pos:column="46"/></name></expr>)<pos:position pos:line="322" pos:column="47"/></condition><then pos:line="322" pos:column="47"> <block pos:line="322" pos:column="48">{
            <decl_stmt><decl><type><name pos:line="323" pos:column="13">MClassifier<pos:position pos:line="323" pos:column="24"/></name></type> <name pos:line="323" pos:column="25">mclassifier<pos:position pos:line="323" pos:column="36"/></name> <init pos:line="323" pos:column="37">= <expr><operator pos:line="323" pos:column="39">(<pos:position pos:line="323" pos:column="40"/></operator><name pos:line="323" pos:column="40">MClassifier<pos:position pos:line="323" pos:column="51"/></name><operator pos:line="323" pos:column="51">)<pos:position pos:line="323" pos:column="52"/></operator> <name pos:line="323" pos:column="53">classifier<pos:position pos:line="323" pos:column="63"/></name></expr></init></decl>;<pos:position pos:line="323" pos:column="64"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="324" pos:column="13">Iterator<pos:position pos:line="324" pos:column="21"/></name></type> <name pos:line="324" pos:column="22">features<pos:position pos:line="324" pos:column="30"/></name> <init pos:line="324" pos:column="31">= <expr><call><name><name pos:line="324" pos:column="33">mclassifier<pos:position pos:line="324" pos:column="44"/></name><operator pos:line="324" pos:column="44">.<pos:position pos:line="324" pos:column="45"/></operator><name pos:line="324" pos:column="45">getFeatures<pos:position pos:line="324" pos:column="56"/></name></name><argument_list pos:line="324" pos:column="56">()<pos:position pos:line="324" pos:column="58"/></argument_list></call><operator pos:line="324" pos:column="58">.<pos:position pos:line="324" pos:column="59"/></operator><call><name pos:line="324" pos:column="59">iterator<pos:position pos:line="324" pos:column="67"/></name><argument_list pos:line="324" pos:column="67">()<pos:position pos:line="324" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="324" pos:column="70"/></decl_stmt>
            <while pos:line="325" pos:column="13">while <condition pos:line="325" pos:column="19">(<expr><call><name><name pos:line="325" pos:column="20">features<pos:position pos:line="325" pos:column="28"/></name><operator pos:line="325" pos:column="28">.<pos:position pos:line="325" pos:column="29"/></operator><name pos:line="325" pos:column="29">hasNext<pos:position pos:line="325" pos:column="36"/></name></name><argument_list pos:line="325" pos:column="36">()<pos:position pos:line="325" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="325" pos:column="39"/></condition> <block pos:line="325" pos:column="40">{
                <decl_stmt><decl><type><name pos:line="326" pos:column="17">MFeature<pos:position pos:line="326" pos:column="25"/></name></type> <name pos:line="326" pos:column="26">feature<pos:position pos:line="326" pos:column="33"/></name> <init pos:line="326" pos:column="34">= <expr><operator pos:line="326" pos:column="36">(<pos:position pos:line="326" pos:column="37"/></operator><name pos:line="326" pos:column="37">MFeature<pos:position pos:line="326" pos:column="45"/></name><operator pos:line="326" pos:column="45">)<pos:position pos:line="326" pos:column="46"/></operator> <call><name><name pos:line="326" pos:column="47">features<pos:position pos:line="326" pos:column="55"/></name><operator pos:line="326" pos:column="55">.<pos:position pos:line="326" pos:column="56"/></operator><name pos:line="326" pos:column="56">next<pos:position pos:line="326" pos:column="60"/></name></name><argument_list pos:line="326" pos:column="60">()<pos:position pos:line="326" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="326" pos:column="63"/></decl_stmt>
                <if pos:line="327" pos:column="17">if <condition pos:line="327" pos:column="20">(<expr><name pos:line="327" pos:column="21">feature<pos:position pos:line="327" pos:column="28"/></name> <operator pos:line="327" pos:column="29">instanceof<pos:position pos:line="327" pos:column="39"/></operator> <name pos:line="327" pos:column="40">MOperation<pos:position pos:line="327" pos:column="50"/></name></expr>)<pos:position pos:line="327" pos:column="51"/></condition><then pos:line="327" pos:column="51"> <block pos:line="327" pos:column="52">{
                    <expr_stmt><expr><call><name><name pos:line="328" pos:column="21">result<pos:position pos:line="328" pos:column="27"/></name><operator pos:line="328" pos:column="27">.<pos:position pos:line="328" pos:column="28"/></operator><name pos:line="328" pos:column="28">add<pos:position pos:line="328" pos:column="31"/></name></name><argument_list pos:line="328" pos:column="31">(<argument><expr><name pos:line="328" pos:column="32">feature<pos:position pos:line="328" pos:column="39"/></name></expr></argument>)<pos:position pos:line="328" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="328" pos:column="41"/></expr_stmt>
                }<pos:position pos:line="329" pos:column="18"/></block></then></if>
            }<pos:position pos:line="330" pos:column="14"/></block></while>
        }<pos:position pos:line="331" pos:column="10"/></block></then></if>
        <return pos:line="332" pos:column="9">return <expr><name pos:line="332" pos:column="16">result<pos:position pos:line="332" pos:column="22"/></name></expr>;<pos:position pos:line="332" pos:column="23"/></return>
    }<pos:position pos:line="333" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="335" pos:column="5">/**
     * This method replaces all operations of the given classifier
     * by the given collection of operations.
     *
     * @param classifier the given classifier
     * @param operations the new operations
     */</comment>
    <function><specifier pos:line="342" pos:column="5">public<pos:position pos:line="342" pos:column="11"/></specifier> <type><name pos:line="342" pos:column="12">void<pos:position pos:line="342" pos:column="16"/></name></type> <name pos:line="342" pos:column="17">setOperations<pos:position pos:line="342" pos:column="30"/></name><parameter_list pos:line="342" pos:column="30">(<parameter><decl><type><name pos:line="342" pos:column="31">Object<pos:position pos:line="342" pos:column="37"/></name></type> <name pos:line="342" pos:column="38">classifier<pos:position pos:line="342" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="342" pos:column="50">Collection<pos:position pos:line="342" pos:column="60"/></name></type> <name pos:line="342" pos:column="61">operations<pos:position pos:line="342" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="342" pos:column="72"/></parameter_list> <block pos:line="342" pos:column="73">{
        <if pos:line="343" pos:column="9">if <condition pos:line="343" pos:column="12">(<expr><name pos:line="343" pos:column="13">classifier<pos:position pos:line="343" pos:column="23"/></name> <operator pos:line="343" pos:column="24">instanceof<pos:position pos:line="343" pos:column="34"/></operator> <name pos:line="343" pos:column="35">MClassifier<pos:position pos:line="343" pos:column="46"/></name></expr>)<pos:position pos:line="343" pos:column="47"/></condition><then pos:line="343" pos:column="47"> <block pos:line="343" pos:column="48">{
            <decl_stmt><decl><type><name pos:line="344" pos:column="13">MClassifier<pos:position pos:line="344" pos:column="24"/></name></type> <name pos:line="344" pos:column="25">mclassifier<pos:position pos:line="344" pos:column="36"/></name> <init pos:line="344" pos:column="37">= <expr><operator pos:line="344" pos:column="39">(<pos:position pos:line="344" pos:column="40"/></operator><name pos:line="344" pos:column="40">MClassifier<pos:position pos:line="344" pos:column="51"/></name><operator pos:line="344" pos:column="51">)<pos:position pos:line="344" pos:column="52"/></operator> <name pos:line="344" pos:column="53">classifier<pos:position pos:line="344" pos:column="63"/></name></expr></init></decl>;<pos:position pos:line="344" pos:column="64"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="345" pos:column="13">List<pos:position pos:line="345" pos:column="17"/></name></type> <name pos:line="345" pos:column="18">result<pos:position pos:line="345" pos:column="24"/></name> <init pos:line="345" pos:column="25">= <expr><operator pos:line="345" pos:column="27">new<pos:position pos:line="345" pos:column="30"/></operator> <call><name pos:line="345" pos:column="31">ArrayList<pos:position pos:line="345" pos:column="40"/></name><argument_list pos:line="345" pos:column="40">(<argument><expr><call><name><name pos:line="345" pos:column="41">mclassifier<pos:position pos:line="345" pos:column="52"/></name><operator pos:line="345" pos:column="52">.<pos:position pos:line="345" pos:column="53"/></operator><name pos:line="345" pos:column="53">getFeatures<pos:position pos:line="345" pos:column="64"/></name></name><argument_list pos:line="345" pos:column="64">()<pos:position pos:line="345" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="345" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="345" pos:column="68"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="346" pos:column="13">Iterator<pos:position pos:line="346" pos:column="21"/></name></type> <name pos:line="346" pos:column="22">features<pos:position pos:line="346" pos:column="30"/></name> <init pos:line="346" pos:column="31">= <expr><call><name><name pos:line="346" pos:column="33">mclassifier<pos:position pos:line="346" pos:column="44"/></name><operator pos:line="346" pos:column="44">.<pos:position pos:line="346" pos:column="45"/></operator><name pos:line="346" pos:column="45">getFeatures<pos:position pos:line="346" pos:column="56"/></name></name><argument_list pos:line="346" pos:column="56">()<pos:position pos:line="346" pos:column="58"/></argument_list></call><operator pos:line="346" pos:column="58">.<pos:position pos:line="346" pos:column="59"/></operator><call><name pos:line="346" pos:column="59">iterator<pos:position pos:line="346" pos:column="67"/></name><argument_list pos:line="346" pos:column="67">()<pos:position pos:line="346" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="346" pos:column="70"/></decl_stmt>
            <while pos:line="347" pos:column="13">while <condition pos:line="347" pos:column="19">(<expr><call><name><name pos:line="347" pos:column="20">features<pos:position pos:line="347" pos:column="28"/></name><operator pos:line="347" pos:column="28">.<pos:position pos:line="347" pos:column="29"/></operator><name pos:line="347" pos:column="29">hasNext<pos:position pos:line="347" pos:column="36"/></name></name><argument_list pos:line="347" pos:column="36">()<pos:position pos:line="347" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="347" pos:column="39"/></condition> <block pos:line="347" pos:column="40">{
                <decl_stmt><decl><type><name pos:line="348" pos:column="17">MFeature<pos:position pos:line="348" pos:column="25"/></name></type> <name pos:line="348" pos:column="26">feature<pos:position pos:line="348" pos:column="33"/></name> <init pos:line="348" pos:column="34">= <expr><operator pos:line="348" pos:column="36">(<pos:position pos:line="348" pos:column="37"/></operator><name pos:line="348" pos:column="37">MFeature<pos:position pos:line="348" pos:column="45"/></name><operator pos:line="348" pos:column="45">)<pos:position pos:line="348" pos:column="46"/></operator> <call><name><name pos:line="348" pos:column="47">features<pos:position pos:line="348" pos:column="55"/></name><operator pos:line="348" pos:column="55">.<pos:position pos:line="348" pos:column="56"/></operator><name pos:line="348" pos:column="56">next<pos:position pos:line="348" pos:column="60"/></name></name><argument_list pos:line="348" pos:column="60">()<pos:position pos:line="348" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="348" pos:column="63"/></decl_stmt>
                <if pos:line="349" pos:column="17">if <condition pos:line="349" pos:column="20">(<expr><name pos:line="349" pos:column="21">feature<pos:position pos:line="349" pos:column="28"/></name> <operator pos:line="349" pos:column="29">instanceof<pos:position pos:line="349" pos:column="39"/></operator> <name pos:line="349" pos:column="40">MOperation<pos:position pos:line="349" pos:column="50"/></name></expr>)<pos:position pos:line="349" pos:column="51"/></condition><then pos:line="349" pos:column="51"> <block pos:line="349" pos:column="52">{
                    <expr_stmt><expr><call><name><name pos:line="350" pos:column="21">result<pos:position pos:line="350" pos:column="27"/></name><operator pos:line="350" pos:column="27">.<pos:position pos:line="350" pos:column="28"/></operator><name pos:line="350" pos:column="28">remove<pos:position pos:line="350" pos:column="34"/></name></name><argument_list pos:line="350" pos:column="34">(<argument><expr><name pos:line="350" pos:column="35">feature<pos:position pos:line="350" pos:column="42"/></name></expr></argument>)<pos:position pos:line="350" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="350" pos:column="44"/></expr_stmt>
                }<pos:position pos:line="351" pos:column="18"/></block></then></if>
            }<pos:position pos:line="352" pos:column="14"/></block></while>
            <expr_stmt><expr><call><name><name pos:line="353" pos:column="13">result<pos:position pos:line="353" pos:column="19"/></name><operator pos:line="353" pos:column="19">.<pos:position pos:line="353" pos:column="20"/></operator><name pos:line="353" pos:column="20">addAll<pos:position pos:line="353" pos:column="26"/></name></name><argument_list pos:line="353" pos:column="26">(<argument><expr><name pos:line="353" pos:column="27">operations<pos:position pos:line="353" pos:column="37"/></name></expr></argument>)<pos:position pos:line="353" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="353" pos:column="39"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="354" pos:column="13">mclassifier<pos:position pos:line="354" pos:column="24"/></name><operator pos:line="354" pos:column="24">.<pos:position pos:line="354" pos:column="25"/></operator><name pos:line="354" pos:column="25">setFeatures<pos:position pos:line="354" pos:column="36"/></name></name><argument_list pos:line="354" pos:column="36">(<argument><expr><name pos:line="354" pos:column="37">result<pos:position pos:line="354" pos:column="43"/></name></expr></argument>)<pos:position pos:line="354" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="354" pos:column="45"/></expr_stmt>
        }<pos:position pos:line="355" pos:column="10"/></block></then></if>
    }<pos:position pos:line="356" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="358" pos:column="5">/**
     * This method returns all attributes of a given Classifier.
     *
     * @param classifier the classifier you want to have the attributes for
     * @return a collection of the attributes
     */</comment>
    <function><specifier pos:line="364" pos:column="5">public<pos:position pos:line="364" pos:column="11"/></specifier> <type><name pos:line="364" pos:column="12">Collection<pos:position pos:line="364" pos:column="22"/></name></type> <name pos:line="364" pos:column="23">getAttributes<pos:position pos:line="364" pos:column="36"/></name><parameter_list pos:line="364" pos:column="36">(<parameter><decl><type><name pos:line="364" pos:column="37">Object<pos:position pos:line="364" pos:column="43"/></name></type> <name pos:line="364" pos:column="44">classifier<pos:position pos:line="364" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="364" pos:column="55"/></parameter_list> <block pos:line="364" pos:column="56">{
        <if pos:line="365" pos:column="9">if <condition pos:line="365" pos:column="12">(<expr><operator pos:line="365" pos:column="13">!<pos:position pos:line="365" pos:column="14"/></operator><operator pos:line="365" pos:column="14">(<pos:position pos:line="365" pos:column="15"/></operator><name pos:line="365" pos:column="15">classifier<pos:position pos:line="365" pos:column="25"/></name> <operator pos:line="365" pos:column="26">instanceof<pos:position pos:line="365" pos:column="36"/></operator> <name pos:line="365" pos:column="37">MClassifier<pos:position pos:line="365" pos:column="48"/></name><operator pos:line="365" pos:column="48">)<pos:position pos:line="365" pos:column="49"/></operator></expr>)<pos:position pos:line="365" pos:column="50"/></condition><then pos:line="365" pos:column="50"> <block pos:line="365" pos:column="51">{
            <throw pos:line="366" pos:column="13">throw <expr><operator pos:line="366" pos:column="19">new<pos:position pos:line="366" pos:column="22"/></operator> <call><name pos:line="366" pos:column="23">IllegalArgumentException<pos:position pos:line="366" pos:column="47"/></name><argument_list pos:line="366" pos:column="47">()<pos:position pos:line="366" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="366" pos:column="50"/></throw>
        }<pos:position pos:line="367" pos:column="10"/></block></then></if>

	<decl_stmt><decl><type><name pos:line="369" pos:column="9">Collection<pos:position pos:line="369" pos:column="19"/></name></type> <name pos:line="369" pos:column="20">result<pos:position pos:line="369" pos:column="26"/></name> <init pos:line="369" pos:column="27">= <expr><operator pos:line="369" pos:column="29">new<pos:position pos:line="369" pos:column="32"/></operator> <call><name pos:line="369" pos:column="33">ArrayList<pos:position pos:line="369" pos:column="42"/></name><argument_list pos:line="369" pos:column="42">()<pos:position pos:line="369" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="369" pos:column="45"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="370" pos:column="9">Iterator<pos:position pos:line="370" pos:column="17"/></name></type> <name pos:line="370" pos:column="18">features<pos:position pos:line="370" pos:column="26"/></name> <init pos:line="370" pos:column="27">= <expr><operator pos:line="370" pos:column="29">(<pos:position pos:line="370" pos:column="30"/></operator><operator pos:line="370" pos:column="30">(<pos:position pos:line="370" pos:column="31"/></operator><name pos:line="370" pos:column="31">MClassifier<pos:position pos:line="370" pos:column="42"/></name><operator pos:line="370" pos:column="42">)<pos:position pos:line="370" pos:column="43"/></operator> <name pos:line="370" pos:column="44">classifier<pos:position pos:line="370" pos:column="54"/></name><operator pos:line="370" pos:column="54">)<pos:position pos:line="370" pos:column="55"/></operator><operator pos:line="370" pos:column="55">.<pos:position pos:line="370" pos:column="56"/></operator><call><name pos:line="370" pos:column="56">getFeatures<pos:position pos:line="370" pos:column="67"/></name><argument_list pos:line="370" pos:column="67">()<pos:position pos:line="370" pos:column="69"/></argument_list></call><operator pos:line="370" pos:column="69">.<pos:position pos:line="370" pos:column="70"/></operator><call><name pos:line="370" pos:column="70">iterator<pos:position pos:line="370" pos:column="78"/></name><argument_list pos:line="370" pos:column="78">()<pos:position pos:line="370" pos:column="80"/></argument_list></call></expr></init></decl>;<pos:position pos:line="370" pos:column="81"/></decl_stmt>
	<while pos:line="371" pos:column="9">while <condition pos:line="371" pos:column="15">(<expr><call><name><name pos:line="371" pos:column="16">features<pos:position pos:line="371" pos:column="24"/></name><operator pos:line="371" pos:column="24">.<pos:position pos:line="371" pos:column="25"/></operator><name pos:line="371" pos:column="25">hasNext<pos:position pos:line="371" pos:column="32"/></name></name><argument_list pos:line="371" pos:column="32">()<pos:position pos:line="371" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="371" pos:column="35"/></condition> <block pos:line="371" pos:column="36">{
	    <decl_stmt><decl><type><name pos:line="372" pos:column="13">MFeature<pos:position pos:line="372" pos:column="21"/></name></type> <name pos:line="372" pos:column="22">feature<pos:position pos:line="372" pos:column="29"/></name> <init pos:line="372" pos:column="30">= <expr><operator pos:line="372" pos:column="32">(<pos:position pos:line="372" pos:column="33"/></operator><name pos:line="372" pos:column="33">MFeature<pos:position pos:line="372" pos:column="41"/></name><operator pos:line="372" pos:column="41">)<pos:position pos:line="372" pos:column="42"/></operator> <call><name><name pos:line="372" pos:column="43">features<pos:position pos:line="372" pos:column="51"/></name><operator pos:line="372" pos:column="51">.<pos:position pos:line="372" pos:column="52"/></operator><name pos:line="372" pos:column="52">next<pos:position pos:line="372" pos:column="56"/></name></name><argument_list pos:line="372" pos:column="56">()<pos:position pos:line="372" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="372" pos:column="59"/></decl_stmt>
	    <if pos:line="373" pos:column="13">if <condition pos:line="373" pos:column="16">(<expr><name pos:line="373" pos:column="17">feature<pos:position pos:line="373" pos:column="24"/></name> <operator pos:line="373" pos:column="25">instanceof<pos:position pos:line="373" pos:column="35"/></operator> <name pos:line="373" pos:column="36">MAttribute<pos:position pos:line="373" pos:column="46"/></name></expr>)<pos:position pos:line="373" pos:column="47"/></condition><then pos:line="373" pos:column="47"> <block pos:line="373" pos:column="48">{
	        <expr_stmt><expr><call><name><name pos:line="374" pos:column="17">result<pos:position pos:line="374" pos:column="23"/></name><operator pos:line="374" pos:column="23">.<pos:position pos:line="374" pos:column="24"/></operator><name pos:line="374" pos:column="24">add<pos:position pos:line="374" pos:column="27"/></name></name><argument_list pos:line="374" pos:column="27">(<argument><expr><name pos:line="374" pos:column="28">feature<pos:position pos:line="374" pos:column="35"/></name></expr></argument>)<pos:position pos:line="374" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="374" pos:column="37"/></expr_stmt>
	    }<pos:position pos:line="375" pos:column="14"/></block></then></if>
	}<pos:position pos:line="376" pos:column="10"/></block></while>
	<return pos:line="377" pos:column="9">return <expr><name pos:line="377" pos:column="16">result<pos:position pos:line="377" pos:column="22"/></name></expr>;<pos:position pos:line="377" pos:column="23"/></return>
    }<pos:position pos:line="378" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="380" pos:column="5">/**
     * This method replaces all attributes of the given classifier
     * by the given collection of attributes.
     * @param classifier the classifier
     * @param attributes the new attributes
     */</comment>
    <function><specifier pos:line="386" pos:column="5">public<pos:position pos:line="386" pos:column="11"/></specifier> <type><name pos:line="386" pos:column="12">void<pos:position pos:line="386" pos:column="16"/></name></type> <name pos:line="386" pos:column="17">setAttributes<pos:position pos:line="386" pos:column="30"/></name><parameter_list pos:line="386" pos:column="30">(<parameter><decl><type><name pos:line="386" pos:column="31">Object<pos:position pos:line="386" pos:column="37"/></name></type> <name pos:line="386" pos:column="38">classifier<pos:position pos:line="386" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="386" pos:column="50">Collection<pos:position pos:line="386" pos:column="60"/></name></type> <name pos:line="386" pos:column="61">attributes<pos:position pos:line="386" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="386" pos:column="72"/></parameter_list> <block pos:line="386" pos:column="73">{
        <if pos:line="387" pos:column="9">if <condition pos:line="387" pos:column="12">(<expr><name pos:line="387" pos:column="13">classifier<pos:position pos:line="387" pos:column="23"/></name> <operator pos:line="387" pos:column="24">instanceof<pos:position pos:line="387" pos:column="34"/></operator> <name pos:line="387" pos:column="35">MClassifier<pos:position pos:line="387" pos:column="46"/></name></expr>)<pos:position pos:line="387" pos:column="47"/></condition><then pos:line="387" pos:column="47"> <block pos:line="387" pos:column="48">{
            <decl_stmt><decl><type><name pos:line="388" pos:column="13">MClassifier<pos:position pos:line="388" pos:column="24"/></name></type> <name pos:line="388" pos:column="25">mclassifier<pos:position pos:line="388" pos:column="36"/></name> <init pos:line="388" pos:column="37">= <expr><operator pos:line="388" pos:column="39">(<pos:position pos:line="388" pos:column="40"/></operator><name pos:line="388" pos:column="40">MClassifier<pos:position pos:line="388" pos:column="51"/></name><operator pos:line="388" pos:column="51">)<pos:position pos:line="388" pos:column="52"/></operator> <name pos:line="388" pos:column="53">classifier<pos:position pos:line="388" pos:column="63"/></name></expr></init></decl>;<pos:position pos:line="388" pos:column="64"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="389" pos:column="13">List<pos:position pos:line="389" pos:column="17"/></name></type> <name pos:line="389" pos:column="18">result<pos:position pos:line="389" pos:column="24"/></name> <init pos:line="389" pos:column="25">= <expr><operator pos:line="389" pos:column="27">new<pos:position pos:line="389" pos:column="30"/></operator> <call><name pos:line="389" pos:column="31">ArrayList<pos:position pos:line="389" pos:column="40"/></name><argument_list pos:line="389" pos:column="40">(<argument><expr><call><name><name pos:line="389" pos:column="41">mclassifier<pos:position pos:line="389" pos:column="52"/></name><operator pos:line="389" pos:column="52">.<pos:position pos:line="389" pos:column="53"/></operator><name pos:line="389" pos:column="53">getFeatures<pos:position pos:line="389" pos:column="64"/></name></name><argument_list pos:line="389" pos:column="64">()<pos:position pos:line="389" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="389" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="389" pos:column="68"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="390" pos:column="13">Iterator<pos:position pos:line="390" pos:column="21"/></name></type> <name pos:line="390" pos:column="22">features<pos:position pos:line="390" pos:column="30"/></name> <init pos:line="390" pos:column="31">= <expr><call><name><name pos:line="390" pos:column="33">mclassifier<pos:position pos:line="390" pos:column="44"/></name><operator pos:line="390" pos:column="44">.<pos:position pos:line="390" pos:column="45"/></operator><name pos:line="390" pos:column="45">getFeatures<pos:position pos:line="390" pos:column="56"/></name></name><argument_list pos:line="390" pos:column="56">()<pos:position pos:line="390" pos:column="58"/></argument_list></call><operator pos:line="390" pos:column="58">.<pos:position pos:line="390" pos:column="59"/></operator><call><name pos:line="390" pos:column="59">iterator<pos:position pos:line="390" pos:column="67"/></name><argument_list pos:line="390" pos:column="67">()<pos:position pos:line="390" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="390" pos:column="70"/></decl_stmt>
            <while pos:line="391" pos:column="13">while <condition pos:line="391" pos:column="19">(<expr><call><name><name pos:line="391" pos:column="20">features<pos:position pos:line="391" pos:column="28"/></name><operator pos:line="391" pos:column="28">.<pos:position pos:line="391" pos:column="29"/></operator><name pos:line="391" pos:column="29">hasNext<pos:position pos:line="391" pos:column="36"/></name></name><argument_list pos:line="391" pos:column="36">()<pos:position pos:line="391" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="391" pos:column="39"/></condition> <block pos:line="391" pos:column="40">{
                <decl_stmt><decl><type><name pos:line="392" pos:column="17">MFeature<pos:position pos:line="392" pos:column="25"/></name></type> <name pos:line="392" pos:column="26">feature<pos:position pos:line="392" pos:column="33"/></name> <init pos:line="392" pos:column="34">= <expr><operator pos:line="392" pos:column="36">(<pos:position pos:line="392" pos:column="37"/></operator><name pos:line="392" pos:column="37">MFeature<pos:position pos:line="392" pos:column="45"/></name><operator pos:line="392" pos:column="45">)<pos:position pos:line="392" pos:column="46"/></operator> <call><name><name pos:line="392" pos:column="47">features<pos:position pos:line="392" pos:column="55"/></name><operator pos:line="392" pos:column="55">.<pos:position pos:line="392" pos:column="56"/></operator><name pos:line="392" pos:column="56">next<pos:position pos:line="392" pos:column="60"/></name></name><argument_list pos:line="392" pos:column="60">()<pos:position pos:line="392" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="392" pos:column="63"/></decl_stmt>
                <if pos:line="393" pos:column="17">if <condition pos:line="393" pos:column="20">(<expr><name pos:line="393" pos:column="21">feature<pos:position pos:line="393" pos:column="28"/></name> <operator pos:line="393" pos:column="29">instanceof<pos:position pos:line="393" pos:column="39"/></operator> <name pos:line="393" pos:column="40">MAttribute<pos:position pos:line="393" pos:column="50"/></name></expr>)<pos:position pos:line="393" pos:column="51"/></condition><then pos:line="393" pos:column="51"> <block pos:line="393" pos:column="52">{
                    <expr_stmt><expr><call><name><name pos:line="394" pos:column="21">result<pos:position pos:line="394" pos:column="27"/></name><operator pos:line="394" pos:column="27">.<pos:position pos:line="394" pos:column="28"/></operator><name pos:line="394" pos:column="28">remove<pos:position pos:line="394" pos:column="34"/></name></name><argument_list pos:line="394" pos:column="34">(<argument><expr><name pos:line="394" pos:column="35">feature<pos:position pos:line="394" pos:column="42"/></name></expr></argument>)<pos:position pos:line="394" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="394" pos:column="44"/></expr_stmt>
                }<pos:position pos:line="395" pos:column="18"/></block></then></if>
            }<pos:position pos:line="396" pos:column="14"/></block></while>
            <expr_stmt><expr><call><name><name pos:line="397" pos:column="13">result<pos:position pos:line="397" pos:column="19"/></name><operator pos:line="397" pos:column="19">.<pos:position pos:line="397" pos:column="20"/></operator><name pos:line="397" pos:column="20">addAll<pos:position pos:line="397" pos:column="26"/></name></name><argument_list pos:line="397" pos:column="26">(<argument><expr><name pos:line="397" pos:column="27">attributes<pos:position pos:line="397" pos:column="37"/></name></expr></argument>)<pos:position pos:line="397" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="397" pos:column="39"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="398" pos:column="13">mclassifier<pos:position pos:line="398" pos:column="24"/></name><operator pos:line="398" pos:column="24">.<pos:position pos:line="398" pos:column="25"/></operator><name pos:line="398" pos:column="25">setFeatures<pos:position pos:line="398" pos:column="36"/></name></name><argument_list pos:line="398" pos:column="36">(<argument><expr><name pos:line="398" pos:column="37">result<pos:position pos:line="398" pos:column="43"/></name></expr></argument>)<pos:position pos:line="398" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="398" pos:column="45"/></expr_stmt>
        }<pos:position pos:line="399" pos:column="10"/></block></then></if>
    }<pos:position pos:line="400" pos:column="6"/></block></function>


    <comment type="block" format="javadoc" pos:line="403" pos:column="5">/**
     * This method returns all attributes of a given Classifier,
     * including inherited.
     *
     * @param classifier the classifier you want to have the attributes for
     * @return a collection of the attributes
     */</comment>
    <function><specifier pos:line="410" pos:column="5">public<pos:position pos:line="410" pos:column="11"/></specifier> <type><name pos:line="410" pos:column="12">Collection<pos:position pos:line="410" pos:column="22"/></name></type> <name pos:line="410" pos:column="23">getAttributesInh<pos:position pos:line="410" pos:column="39"/></name><parameter_list pos:line="410" pos:column="39">(<parameter><decl><type><name pos:line="410" pos:column="40">Object<pos:position pos:line="410" pos:column="46"/></name></type> <name pos:line="410" pos:column="47">classifier<pos:position pos:line="410" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="410" pos:column="58"/></parameter_list> <block pos:line="410" pos:column="59">{

        <if pos:line="412" pos:column="9">if <condition pos:line="412" pos:column="12">(<expr><operator pos:line="412" pos:column="13">!<pos:position pos:line="412" pos:column="14"/></operator><operator pos:line="412" pos:column="14">(<pos:position pos:line="412" pos:column="15"/></operator><name pos:line="412" pos:column="15">classifier<pos:position pos:line="412" pos:column="25"/></name> <operator pos:line="412" pos:column="26">instanceof<pos:position pos:line="412" pos:column="36"/></operator> <name pos:line="412" pos:column="37">MClassifier<pos:position pos:line="412" pos:column="48"/></name><operator pos:line="412" pos:column="48">)<pos:position pos:line="412" pos:column="49"/></operator></expr>)<pos:position pos:line="412" pos:column="50"/></condition><then pos:line="412" pos:column="50"> <block pos:line="412" pos:column="51">{
            <throw pos:line="413" pos:column="13">throw <expr><operator pos:line="413" pos:column="19">new<pos:position pos:line="413" pos:column="22"/></operator> <call><name pos:line="413" pos:column="23">IllegalArgumentException<pos:position pos:line="413" pos:column="47"/></name><argument_list pos:line="413" pos:column="47">()<pos:position pos:line="413" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="413" pos:column="50"/></throw>
        }<pos:position pos:line="414" pos:column="10"/></block></then></if>

        <decl_stmt><decl><type><name pos:line="416" pos:column="9">Collection<pos:position pos:line="416" pos:column="19"/></name></type> <name pos:line="416" pos:column="20">result<pos:position pos:line="416" pos:column="26"/></name> <init pos:line="416" pos:column="27">= <expr><operator pos:line="416" pos:column="29">new<pos:position pos:line="416" pos:column="32"/></operator> <call><name pos:line="416" pos:column="33">ArrayList<pos:position pos:line="416" pos:column="42"/></name><argument_list pos:line="416" pos:column="42">()<pos:position pos:line="416" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="416" pos:column="45"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="417" pos:column="9">result<pos:position pos:line="417" pos:column="15"/></name><operator pos:line="417" pos:column="15">.<pos:position pos:line="417" pos:column="16"/></operator><name pos:line="417" pos:column="16">addAll<pos:position pos:line="417" pos:column="22"/></name></name><argument_list pos:line="417" pos:column="22">(<argument><expr><call><name><name pos:line="417" pos:column="23">nsmodel<pos:position pos:line="417" pos:column="30"/></name><operator pos:line="417" pos:column="30">.<pos:position pos:line="417" pos:column="31"/></operator><name pos:line="417" pos:column="31">getFacade<pos:position pos:line="417" pos:column="40"/></name></name><argument_list pos:line="417" pos:column="40">()<pos:position pos:line="417" pos:column="42"/></argument_list></call><operator pos:line="417" pos:column="42">.<pos:position pos:line="417" pos:column="43"/></operator><call><name pos:line="417" pos:column="43">getStructuralFeatures<pos:position pos:line="417" pos:column="64"/></name><argument_list pos:line="417" pos:column="64">(<argument><expr><name pos:line="417" pos:column="65">classifier<pos:position pos:line="417" pos:column="75"/></name></expr></argument>)<pos:position pos:line="417" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="417" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="417" pos:column="78"/></expr_stmt>
        <decl_stmt><decl><type><name pos:line="418" pos:column="9">Iterator<pos:position pos:line="418" pos:column="17"/></name></type> <name pos:line="418" pos:column="18">parents<pos:position pos:line="418" pos:column="25"/></name> <init pos:line="418" pos:column="26">= <expr><operator pos:line="418" pos:column="28">(<pos:position pos:line="418" pos:column="29"/></operator><operator pos:line="418" pos:column="29">(<pos:position pos:line="418" pos:column="30"/></operator><name pos:line="418" pos:column="30">MClassifier<pos:position pos:line="418" pos:column="41"/></name><operator pos:line="418" pos:column="41">)<pos:position pos:line="418" pos:column="42"/></operator> <name pos:line="418" pos:column="43">classifier<pos:position pos:line="418" pos:column="53"/></name><operator pos:line="418" pos:column="53">)<pos:position pos:line="418" pos:column="54"/></operator><operator pos:line="418" pos:column="54">.<pos:position pos:line="418" pos:column="55"/></operator><call><name pos:line="418" pos:column="55">getParents<pos:position pos:line="418" pos:column="65"/></name><argument_list pos:line="418" pos:column="65">()<pos:position pos:line="418" pos:column="67"/></argument_list></call><operator pos:line="418" pos:column="67">.<pos:position pos:line="418" pos:column="68"/></operator><call><name pos:line="418" pos:column="68">iterator<pos:position pos:line="418" pos:column="76"/></name><argument_list pos:line="418" pos:column="76">()<pos:position pos:line="418" pos:column="78"/></argument_list></call></expr></init></decl>;<pos:position pos:line="418" pos:column="79"/></decl_stmt>
        <while pos:line="419" pos:column="9">while <condition pos:line="419" pos:column="15">(<expr><call><name><name pos:line="419" pos:column="16">parents<pos:position pos:line="419" pos:column="23"/></name><operator pos:line="419" pos:column="23">.<pos:position pos:line="419" pos:column="24"/></operator><name pos:line="419" pos:column="24">hasNext<pos:position pos:line="419" pos:column="31"/></name></name><argument_list pos:line="419" pos:column="31">()<pos:position pos:line="419" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="419" pos:column="34"/></condition> <block pos:line="419" pos:column="35">{
            <decl_stmt><decl><type><name pos:line="420" pos:column="13">MClassifier<pos:position pos:line="420" pos:column="24"/></name></type> <name pos:line="420" pos:column="25">parent<pos:position pos:line="420" pos:column="31"/></name> <init pos:line="420" pos:column="32">= <expr><operator pos:line="420" pos:column="34">(<pos:position pos:line="420" pos:column="35"/></operator><name pos:line="420" pos:column="35">MClassifier<pos:position pos:line="420" pos:column="46"/></name><operator pos:line="420" pos:column="46">)<pos:position pos:line="420" pos:column="47"/></operator> <call><name><name pos:line="420" pos:column="48">parents<pos:position pos:line="420" pos:column="55"/></name><operator pos:line="420" pos:column="55">.<pos:position pos:line="420" pos:column="56"/></operator><name pos:line="420" pos:column="56">next<pos:position pos:line="420" pos:column="60"/></name></name><argument_list pos:line="420" pos:column="60">()<pos:position pos:line="420" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="420" pos:column="63"/></decl_stmt>
            <if pos:line="421" pos:column="13">if <condition pos:line="421" pos:column="16">(<expr><call><name><name pos:line="421" pos:column="17">LOG<pos:position pos:line="421" pos:column="20"/></name><operator pos:line="421" pos:column="20">.<pos:position pos:line="421" pos:column="21"/></operator><name pos:line="421" pos:column="21">isDebugEnabled<pos:position pos:line="421" pos:column="35"/></name></name><argument_list pos:line="421" pos:column="35">()<pos:position pos:line="421" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="421" pos:column="38"/></condition><then pos:line="421" pos:column="38"> <block pos:line="421" pos:column="39">{
                <expr_stmt><expr><call><name><name pos:line="422" pos:column="17">LOG<pos:position pos:line="422" pos:column="20"/></name><operator pos:line="422" pos:column="20">.<pos:position pos:line="422" pos:column="21"/></operator><name pos:line="422" pos:column="21">debug<pos:position pos:line="422" pos:column="26"/></name></name><argument_list pos:line="422" pos:column="26">(<argument><expr><literal type="string" pos:line="422" pos:column="27">"Adding attributes for: "<pos:position pos:line="422" pos:column="52"/></literal> <operator pos:line="422" pos:column="53">+<pos:position pos:line="422" pos:column="54"/></operator> <name pos:line="422" pos:column="55">parent<pos:position pos:line="422" pos:column="61"/></name></expr></argument>)<pos:position pos:line="422" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="422" pos:column="63"/></expr_stmt>
            }<pos:position pos:line="423" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name><name pos:line="424" pos:column="13">result<pos:position pos:line="424" pos:column="19"/></name><operator pos:line="424" pos:column="19">.<pos:position pos:line="424" pos:column="20"/></operator><name pos:line="424" pos:column="20">addAll<pos:position pos:line="424" pos:column="26"/></name></name><argument_list pos:line="424" pos:column="26">(<argument><expr><call><name pos:line="424" pos:column="27">getAttributesInh<pos:position pos:line="424" pos:column="43"/></name><argument_list pos:line="424" pos:column="43">(<argument><expr><name pos:line="424" pos:column="44">parent<pos:position pos:line="424" pos:column="50"/></name></expr></argument>)<pos:position pos:line="424" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="424" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="424" pos:column="53"/></expr_stmt>
        }<pos:position pos:line="425" pos:column="10"/></block></while>
        <return pos:line="426" pos:column="9">return <expr><name pos:line="426" pos:column="16">result<pos:position pos:line="426" pos:column="22"/></name></expr>;<pos:position pos:line="426" pos:column="23"/></return>
    }<pos:position pos:line="427" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="429" pos:column="5">/**
     * This method returns all operations of a given Classifier,
     * including inherited.
     *
     * @param classifier the classifier you want to have the operations for
     * @return a collection of the operations
     */</comment>
    <function><specifier pos:line="436" pos:column="5">public<pos:position pos:line="436" pos:column="11"/></specifier> <type><name pos:line="436" pos:column="12">Collection<pos:position pos:line="436" pos:column="22"/></name></type> <name pos:line="436" pos:column="23">getOperationsInh<pos:position pos:line="436" pos:column="39"/></name><parameter_list pos:line="436" pos:column="39">(<parameter><decl><type><name pos:line="436" pos:column="40">Object<pos:position pos:line="436" pos:column="46"/></name></type> <name pos:line="436" pos:column="47">classifier<pos:position pos:line="436" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="436" pos:column="58"/></parameter_list> <block pos:line="436" pos:column="59">{
        <if pos:line="437" pos:column="9">if <condition pos:line="437" pos:column="12">(<expr><operator pos:line="437" pos:column="13">!<pos:position pos:line="437" pos:column="14"/></operator><operator pos:line="437" pos:column="14">(<pos:position pos:line="437" pos:column="15"/></operator><name pos:line="437" pos:column="15">classifier<pos:position pos:line="437" pos:column="25"/></name> <operator pos:line="437" pos:column="26">instanceof<pos:position pos:line="437" pos:column="36"/></operator> <name pos:line="437" pos:column="37">MClassifier<pos:position pos:line="437" pos:column="48"/></name><operator pos:line="437" pos:column="48">)<pos:position pos:line="437" pos:column="49"/></operator></expr>)<pos:position pos:line="437" pos:column="50"/></condition><then pos:line="437" pos:column="50"> <block pos:line="437" pos:column="51">{
            <throw pos:line="438" pos:column="13">throw <expr><operator pos:line="438" pos:column="19">new<pos:position pos:line="438" pos:column="22"/></operator> <call><name pos:line="438" pos:column="23">IllegalArgumentException<pos:position pos:line="438" pos:column="47"/></name><argument_list pos:line="438" pos:column="47">()<pos:position pos:line="438" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="438" pos:column="50"/></throw>
        }<pos:position pos:line="439" pos:column="10"/></block></then></if>

        <decl_stmt><decl><type><name pos:line="441" pos:column="9">Collection<pos:position pos:line="441" pos:column="19"/></name></type> <name pos:line="441" pos:column="20">result<pos:position pos:line="441" pos:column="26"/></name> <init pos:line="441" pos:column="27">= <expr><operator pos:line="441" pos:column="29">new<pos:position pos:line="441" pos:column="32"/></operator> <call><name pos:line="441" pos:column="33">ArrayList<pos:position pos:line="441" pos:column="42"/></name><argument_list pos:line="441" pos:column="42">()<pos:position pos:line="441" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="441" pos:column="45"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="442" pos:column="9">result<pos:position pos:line="442" pos:column="15"/></name><operator pos:line="442" pos:column="15">.<pos:position pos:line="442" pos:column="16"/></operator><name pos:line="442" pos:column="16">addAll<pos:position pos:line="442" pos:column="22"/></name></name><argument_list pos:line="442" pos:column="22">(<argument><expr><call><name><name pos:line="442" pos:column="23">nsmodel<pos:position pos:line="442" pos:column="30"/></name><operator pos:line="442" pos:column="30">.<pos:position pos:line="442" pos:column="31"/></operator><name pos:line="442" pos:column="31">getFacade<pos:position pos:line="442" pos:column="40"/></name></name><argument_list pos:line="442" pos:column="40">()<pos:position pos:line="442" pos:column="42"/></argument_list></call><operator pos:line="442" pos:column="42">.<pos:position pos:line="442" pos:column="43"/></operator><call><name pos:line="442" pos:column="43">getOperations<pos:position pos:line="442" pos:column="56"/></name><argument_list pos:line="442" pos:column="56">(<argument><expr><name pos:line="442" pos:column="57">classifier<pos:position pos:line="442" pos:column="67"/></name></expr></argument>)<pos:position pos:line="442" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="442" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="442" pos:column="70"/></expr_stmt>
        <decl_stmt><decl><type><name pos:line="443" pos:column="9">Iterator<pos:position pos:line="443" pos:column="17"/></name></type> <name pos:line="443" pos:column="18">parents<pos:position pos:line="443" pos:column="25"/></name> <init pos:line="443" pos:column="26">= <expr><operator pos:line="443" pos:column="28">(<pos:position pos:line="443" pos:column="29"/></operator><operator pos:line="443" pos:column="29">(<pos:position pos:line="443" pos:column="30"/></operator><name pos:line="443" pos:column="30">MClassifier<pos:position pos:line="443" pos:column="41"/></name><operator pos:line="443" pos:column="41">)<pos:position pos:line="443" pos:column="42"/></operator> <name pos:line="443" pos:column="43">classifier<pos:position pos:line="443" pos:column="53"/></name><operator pos:line="443" pos:column="53">)<pos:position pos:line="443" pos:column="54"/></operator><operator pos:line="443" pos:column="54">.<pos:position pos:line="443" pos:column="55"/></operator><call><name pos:line="443" pos:column="55">getParents<pos:position pos:line="443" pos:column="65"/></name><argument_list pos:line="443" pos:column="65">()<pos:position pos:line="443" pos:column="67"/></argument_list></call><operator pos:line="443" pos:column="67">.<pos:position pos:line="443" pos:column="68"/></operator><call><name pos:line="443" pos:column="68">iterator<pos:position pos:line="443" pos:column="76"/></name><argument_list pos:line="443" pos:column="76">()<pos:position pos:line="443" pos:column="78"/></argument_list></call></expr></init></decl>;<pos:position pos:line="443" pos:column="79"/></decl_stmt>
        <while pos:line="444" pos:column="9">while <condition pos:line="444" pos:column="15">(<expr><call><name><name pos:line="444" pos:column="16">parents<pos:position pos:line="444" pos:column="23"/></name><operator pos:line="444" pos:column="23">.<pos:position pos:line="444" pos:column="24"/></operator><name pos:line="444" pos:column="24">hasNext<pos:position pos:line="444" pos:column="31"/></name></name><argument_list pos:line="444" pos:column="31">()<pos:position pos:line="444" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="444" pos:column="34"/></condition> <block pos:line="444" pos:column="35">{
            <expr_stmt><expr><call><name><name pos:line="445" pos:column="13">result<pos:position pos:line="445" pos:column="19"/></name><operator pos:line="445" pos:column="19">.<pos:position pos:line="445" pos:column="20"/></operator><name pos:line="445" pos:column="20">addAll<pos:position pos:line="445" pos:column="26"/></name></name><argument_list pos:line="445" pos:column="26">(<argument><expr><call><name pos:line="445" pos:column="27">getOperationsInh<pos:position pos:line="445" pos:column="43"/></name><argument_list pos:line="445" pos:column="43">(<argument><expr><call><name><name pos:line="445" pos:column="44">parents<pos:position pos:line="445" pos:column="51"/></name><operator pos:line="445" pos:column="51">.<pos:position pos:line="445" pos:column="52"/></operator><name pos:line="445" pos:column="52">next<pos:position pos:line="445" pos:column="56"/></name></name><argument_list pos:line="445" pos:column="56">()<pos:position pos:line="445" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="445" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="445" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="445" pos:column="61"/></expr_stmt>
        }<pos:position pos:line="446" pos:column="10"/></block></while>
        <return pos:line="447" pos:column="9">return <expr><name pos:line="447" pos:column="16">result<pos:position pos:line="447" pos:column="22"/></name></expr>;<pos:position pos:line="447" pos:column="23"/></return>
    }<pos:position pos:line="448" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="450" pos:column="5">/**
     * This method finds all paramters of the given operation which
     * have the MParamterDirectionType RETURN. If it is only one, it
     * is returned.  In case there are no return parameters, null is
     * returned. If there is more than one return paramter, first of
     * them is returned, but a message is logged.&lt;p&gt;
     *
     * @param operation1 the operation you want to find the return
     * parameter for.
     * @return If this operation has only one paramter with Kind: RETURN,
     *         this is it, otherwise null
     */</comment>
    <function><specifier pos:line="462" pos:column="5">public<pos:position pos:line="462" pos:column="11"/></specifier> <type><name pos:line="462" pos:column="12">Object<pos:position pos:line="462" pos:column="18"/></name></type> <name pos:line="462" pos:column="19">getReturnParameter<pos:position pos:line="462" pos:column="37"/></name><parameter_list pos:line="462" pos:column="37">(<parameter><decl><type><name pos:line="462" pos:column="38">Object<pos:position pos:line="462" pos:column="44"/></name></type> <name pos:line="462" pos:column="45">operation1<pos:position pos:line="462" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="462" pos:column="56"/></parameter_list> <block pos:line="462" pos:column="57">{

        <if pos:line="464" pos:column="9">if <condition pos:line="464" pos:column="12">(<expr><operator pos:line="464" pos:column="13">!<pos:position pos:line="464" pos:column="14"/></operator><operator pos:line="464" pos:column="14">(<pos:position pos:line="464" pos:column="15"/></operator><name pos:line="464" pos:column="15">operation1<pos:position pos:line="464" pos:column="25"/></name> <operator pos:line="464" pos:column="26">instanceof<pos:position pos:line="464" pos:column="36"/></operator> <name pos:line="464" pos:column="37">MOperation<pos:position pos:line="464" pos:column="47"/></name><operator pos:line="464" pos:column="47">)<pos:position pos:line="464" pos:column="48"/></operator></expr>)<pos:position pos:line="464" pos:column="49"/></condition><then pos:line="464" pos:column="49"> <block pos:line="464" pos:column="50">{
            <throw pos:line="465" pos:column="13">throw <expr><operator pos:line="465" pos:column="19">new<pos:position pos:line="465" pos:column="22"/></operator> <call><name pos:line="465" pos:column="23">IllegalArgumentException<pos:position pos:line="465" pos:column="47"/></name><argument_list pos:line="465" pos:column="47">()<pos:position pos:line="465" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="465" pos:column="50"/></throw>
        }<pos:position pos:line="466" pos:column="10"/></block></then></if>

        <decl_stmt><decl><type><name pos:line="468" pos:column="9">MOperation<pos:position pos:line="468" pos:column="19"/></name></type> <name pos:line="468" pos:column="20">operation<pos:position pos:line="468" pos:column="29"/></name> <init pos:line="468" pos:column="30">= <expr><operator pos:line="468" pos:column="32">(<pos:position pos:line="468" pos:column="33"/></operator><name pos:line="468" pos:column="33">MOperation<pos:position pos:line="468" pos:column="43"/></name><operator pos:line="468" pos:column="43">)<pos:position pos:line="468" pos:column="44"/></operator> <name pos:line="468" pos:column="45">operation1<pos:position pos:line="468" pos:column="55"/></name></expr></init></decl>;<pos:position pos:line="468" pos:column="56"/></decl_stmt>

        <decl_stmt><decl><type><name pos:line="470" pos:column="9">Vector<pos:position pos:line="470" pos:column="15"/></name></type> <name pos:line="470" pos:column="16">returnParams<pos:position pos:line="470" pos:column="28"/></name> <init pos:line="470" pos:column="29">= <expr><operator pos:line="470" pos:column="31">new<pos:position pos:line="470" pos:column="34"/></operator> <call><name pos:line="470" pos:column="35">Vector<pos:position pos:line="470" pos:column="41"/></name><argument_list pos:line="470" pos:column="41">()<pos:position pos:line="470" pos:column="43"/></argument_list></call></expr></init></decl>;<pos:position pos:line="470" pos:column="44"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="471" pos:column="9">Iterator<pos:position pos:line="471" pos:column="17"/></name></type> <name pos:line="471" pos:column="18">params<pos:position pos:line="471" pos:column="24"/></name> <init pos:line="471" pos:column="25">= <expr><call><name><name pos:line="471" pos:column="27">operation<pos:position pos:line="471" pos:column="36"/></name><operator pos:line="471" pos:column="36">.<pos:position pos:line="471" pos:column="37"/></operator><name pos:line="471" pos:column="37">getParameters<pos:position pos:line="471" pos:column="50"/></name></name><argument_list pos:line="471" pos:column="50">()<pos:position pos:line="471" pos:column="52"/></argument_list></call><operator pos:line="471" pos:column="52">.<pos:position pos:line="471" pos:column="53"/></operator><call><name pos:line="471" pos:column="53">iterator<pos:position pos:line="471" pos:column="61"/></name><argument_list pos:line="471" pos:column="61">()<pos:position pos:line="471" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="471" pos:column="64"/></decl_stmt>
        <while pos:line="472" pos:column="9">while <condition pos:line="472" pos:column="15">(<expr><call><name><name pos:line="472" pos:column="16">params<pos:position pos:line="472" pos:column="22"/></name><operator pos:line="472" pos:column="22">.<pos:position pos:line="472" pos:column="23"/></operator><name pos:line="472" pos:column="23">hasNext<pos:position pos:line="472" pos:column="30"/></name></name><argument_list pos:line="472" pos:column="30">()<pos:position pos:line="472" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="472" pos:column="33"/></condition> <block pos:line="472" pos:column="34">{
            <decl_stmt><decl><type><name pos:line="473" pos:column="13">MParameter<pos:position pos:line="473" pos:column="23"/></name></type> <name pos:line="473" pos:column="24">parameter<pos:position pos:line="473" pos:column="33"/></name> <init pos:line="473" pos:column="34">= <expr><operator pos:line="473" pos:column="36">(<pos:position pos:line="473" pos:column="37"/></operator><name pos:line="473" pos:column="37">MParameter<pos:position pos:line="473" pos:column="47"/></name><operator pos:line="473" pos:column="47">)<pos:position pos:line="473" pos:column="48"/></operator> <call><name><name pos:line="473" pos:column="49">params<pos:position pos:line="473" pos:column="55"/></name><operator pos:line="473" pos:column="55">.<pos:position pos:line="473" pos:column="56"/></operator><name pos:line="473" pos:column="56">next<pos:position pos:line="473" pos:column="60"/></name></name><argument_list pos:line="473" pos:column="60">()<pos:position pos:line="473" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="473" pos:column="63"/></decl_stmt>
            <if pos:line="474" pos:column="13">if <condition pos:line="474" pos:column="16">(<expr><operator pos:line="474" pos:column="17">(<pos:position pos:line="474" pos:column="18"/></operator><call><name><name pos:line="474" pos:column="18">parameter<pos:position pos:line="474" pos:column="27"/></name><operator pos:line="474" pos:column="27">.<pos:position pos:line="474" pos:column="28"/></operator><name pos:line="474" pos:column="28">getKind<pos:position pos:line="474" pos:column="35"/></name></name><argument_list pos:line="474" pos:column="35">()<pos:position pos:line="474" pos:column="37"/></argument_list></call><operator pos:line="474" pos:column="37">)<pos:position pos:line="474" pos:column="38"/></operator><operator pos:line="474" pos:column="38">.<pos:position pos:line="474" pos:column="39"/></operator><call><name pos:line="474" pos:column="39">equals<pos:position pos:line="474" pos:column="45"/></name><argument_list pos:line="474" pos:column="45">(<argument><expr><name><name pos:line="474" pos:column="46">MParameterDirectionKind<pos:position pos:line="474" pos:column="69"/></name><operator pos:line="474" pos:column="69">.<pos:position pos:line="474" pos:column="70"/></operator><name pos:line="474" pos:column="70">RETURN<pos:position pos:line="474" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="474" pos:column="77"/></argument_list></call></expr>)<pos:position pos:line="474" pos:column="78"/></condition><then pos:line="474" pos:column="78"> <block pos:line="474" pos:column="79">{
                <expr_stmt><expr><call><name><name pos:line="475" pos:column="17">returnParams<pos:position pos:line="475" pos:column="29"/></name><operator pos:line="475" pos:column="29">.<pos:position pos:line="475" pos:column="30"/></operator><name pos:line="475" pos:column="30">add<pos:position pos:line="475" pos:column="33"/></name></name><argument_list pos:line="475" pos:column="33">(<argument><expr><name pos:line="475" pos:column="34">parameter<pos:position pos:line="475" pos:column="43"/></name></expr></argument>)<pos:position pos:line="475" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="475" pos:column="45"/></expr_stmt>
            }<pos:position pos:line="476" pos:column="14"/></block></then></if>
        }<pos:position pos:line="477" pos:column="10"/></block></while>
        <switch pos:line="478" pos:column="9">switch <condition pos:line="478" pos:column="16">(<expr><call><name><name pos:line="478" pos:column="17">returnParams<pos:position pos:line="478" pos:column="29"/></name><operator pos:line="478" pos:column="29">.<pos:position pos:line="478" pos:column="30"/></operator><name pos:line="478" pos:column="30">size<pos:position pos:line="478" pos:column="34"/></name></name><argument_list pos:line="478" pos:column="34">()<pos:position pos:line="478" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="478" pos:column="37"/></condition> <block pos:line="478" pos:column="38">{
	<case pos:line="479" pos:column="9">case <expr><literal type="number" pos:line="479" pos:column="14">1<pos:position pos:line="479" pos:column="15"/></literal></expr> :<pos:position pos:line="479" pos:column="17"/></case>
	    <return pos:line="480" pos:column="13">return <expr><operator pos:line="480" pos:column="20">(<pos:position pos:line="480" pos:column="21"/></operator><name pos:line="480" pos:column="21">MParameter<pos:position pos:line="480" pos:column="31"/></name><operator pos:line="480" pos:column="31">)<pos:position pos:line="480" pos:column="32"/></operator> <call><name><name pos:line="480" pos:column="33">returnParams<pos:position pos:line="480" pos:column="45"/></name><operator pos:line="480" pos:column="45">.<pos:position pos:line="480" pos:column="46"/></operator><name pos:line="480" pos:column="46">elementAt<pos:position pos:line="480" pos:column="55"/></name></name><argument_list pos:line="480" pos:column="55">(<argument><expr><literal type="number" pos:line="480" pos:column="56">0<pos:position pos:line="480" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="480" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="480" pos:column="59"/></return>
	<case pos:line="481" pos:column="9">case <expr><literal type="number" pos:line="481" pos:column="14">0<pos:position pos:line="481" pos:column="15"/></literal></expr> :<pos:position pos:line="481" pos:column="17"/></case>
	    <comment type="line" pos:line="482" pos:column="13">//Next line gives too many strings while debugging</comment>
	    <comment type="line" pos:line="483" pos:column="13">// obscuring other errors.</comment>
	    <comment type="line" pos:line="484" pos:column="13">//cat.debug("No ReturnParameter found!");</comment>
	    <return pos:line="485" pos:column="13">return <expr><literal type="null" pos:line="485" pos:column="20">null<pos:position pos:line="485" pos:column="24"/></literal></expr>;<pos:position pos:line="485" pos:column="25"/></return>
	<default pos:line="486" pos:column="9">default :<pos:position pos:line="486" pos:column="18"/></default>
	    <expr_stmt><expr><call><name><name pos:line="487" pos:column="13">LOG<pos:position pos:line="487" pos:column="16"/></name><operator pos:line="487" pos:column="16">.<pos:position pos:line="487" pos:column="17"/></operator><name pos:line="487" pos:column="17">debug<pos:position pos:line="487" pos:column="22"/></name></name><argument_list pos:line="487" pos:column="22">(
		      <argument><expr><literal type="string" pos:line="488" pos:column="23">"More than one ReturnParameter found, returning first!"<pos:position pos:line="488" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="488" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="488" pos:column="80"/></expr_stmt>
	    <return pos:line="489" pos:column="13">return <expr><operator pos:line="489" pos:column="20">(<pos:position pos:line="489" pos:column="21"/></operator><name pos:line="489" pos:column="21">MParameter<pos:position pos:line="489" pos:column="31"/></name><operator pos:line="489" pos:column="31">)<pos:position pos:line="489" pos:column="32"/></operator> <call><name><name pos:line="489" pos:column="33">returnParams<pos:position pos:line="489" pos:column="45"/></name><operator pos:line="489" pos:column="45">.<pos:position pos:line="489" pos:column="46"/></operator><name pos:line="489" pos:column="46">elementAt<pos:position pos:line="489" pos:column="55"/></name></name><argument_list pos:line="489" pos:column="55">(<argument><expr><literal type="number" pos:line="489" pos:column="56">0<pos:position pos:line="489" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="489" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="489" pos:column="59"/></return>
        }<pos:position pos:line="490" pos:column="10"/></block></switch>
    }<pos:position pos:line="491" pos:column="6"/></block></function>
    <comment type="block" format="javadoc" pos:line="492" pos:column="5">/**
     * Returns all return parameters for an operation.
     *
     * @param operation is the operation.
     * @return Collection
     */</comment>
    <function><specifier pos:line="498" pos:column="5">public<pos:position pos:line="498" pos:column="11"/></specifier> <type><name pos:line="498" pos:column="12">Collection<pos:position pos:line="498" pos:column="22"/></name></type> <name pos:line="498" pos:column="23">getReturnParameters<pos:position pos:line="498" pos:column="42"/></name><parameter_list pos:line="498" pos:column="42">(<parameter><decl><type><name pos:line="498" pos:column="43">Object<pos:position pos:line="498" pos:column="49"/></name></type> <name pos:line="498" pos:column="50">operation<pos:position pos:line="498" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="498" pos:column="60"/></parameter_list> <block pos:line="498" pos:column="61">{
        <decl_stmt><decl><type><name pos:line="499" pos:column="9">Vector<pos:position pos:line="499" pos:column="15"/></name></type> <name pos:line="499" pos:column="16">returnParams<pos:position pos:line="499" pos:column="28"/></name> <init pos:line="499" pos:column="29">= <expr><operator pos:line="499" pos:column="31">new<pos:position pos:line="499" pos:column="34"/></operator> <call><name pos:line="499" pos:column="35">Vector<pos:position pos:line="499" pos:column="41"/></name><argument_list pos:line="499" pos:column="41">()<pos:position pos:line="499" pos:column="43"/></argument_list></call></expr></init></decl>;<pos:position pos:line="499" pos:column="44"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="500" pos:column="9">Iterator<pos:position pos:line="500" pos:column="17"/></name></type> <name pos:line="500" pos:column="18">params<pos:position pos:line="500" pos:column="24"/></name> <init pos:line="500" pos:column="25">= <expr><operator pos:line="500" pos:column="27">(<pos:position pos:line="500" pos:column="28"/></operator><operator pos:line="500" pos:column="28">(<pos:position pos:line="500" pos:column="29"/></operator><name pos:line="500" pos:column="29">MOperation<pos:position pos:line="500" pos:column="39"/></name><operator pos:line="500" pos:column="39">)<pos:position pos:line="500" pos:column="40"/></operator> <name pos:line="500" pos:column="41">operation<pos:position pos:line="500" pos:column="50"/></name><operator pos:line="500" pos:column="50">)<pos:position pos:line="500" pos:column="51"/></operator><operator pos:line="500" pos:column="51">.<pos:position pos:line="500" pos:column="52"/></operator><call><name pos:line="500" pos:column="52">getParameters<pos:position pos:line="500" pos:column="65"/></name><argument_list pos:line="500" pos:column="65">()<pos:position pos:line="500" pos:column="67"/></argument_list></call><operator pos:line="500" pos:column="67">.<pos:position pos:line="500" pos:column="68"/></operator><call><name pos:line="500" pos:column="68">iterator<pos:position pos:line="500" pos:column="76"/></name><argument_list pos:line="500" pos:column="76">()<pos:position pos:line="500" pos:column="78"/></argument_list></call></expr></init></decl>;<pos:position pos:line="500" pos:column="79"/></decl_stmt>
        <while pos:line="501" pos:column="9">while <condition pos:line="501" pos:column="15">(<expr><call><name><name pos:line="501" pos:column="16">params<pos:position pos:line="501" pos:column="22"/></name><operator pos:line="501" pos:column="22">.<pos:position pos:line="501" pos:column="23"/></operator><name pos:line="501" pos:column="23">hasNext<pos:position pos:line="501" pos:column="30"/></name></name><argument_list pos:line="501" pos:column="30">()<pos:position pos:line="501" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="501" pos:column="33"/></condition> <block pos:line="501" pos:column="34">{
            <decl_stmt><decl><type><name pos:line="502" pos:column="13">MParameter<pos:position pos:line="502" pos:column="23"/></name></type> <name pos:line="502" pos:column="24">parameter<pos:position pos:line="502" pos:column="33"/></name> <init pos:line="502" pos:column="34">= <expr><operator pos:line="502" pos:column="36">(<pos:position pos:line="502" pos:column="37"/></operator><name pos:line="502" pos:column="37">MParameter<pos:position pos:line="502" pos:column="47"/></name><operator pos:line="502" pos:column="47">)<pos:position pos:line="502" pos:column="48"/></operator> <call><name><name pos:line="502" pos:column="49">params<pos:position pos:line="502" pos:column="55"/></name><operator pos:line="502" pos:column="55">.<pos:position pos:line="502" pos:column="56"/></operator><name pos:line="502" pos:column="56">next<pos:position pos:line="502" pos:column="60"/></name></name><argument_list pos:line="502" pos:column="60">()<pos:position pos:line="502" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="502" pos:column="63"/></decl_stmt>
            <if pos:line="503" pos:column="13">if <condition pos:line="503" pos:column="16">(<expr><operator pos:line="503" pos:column="17">(<pos:position pos:line="503" pos:column="18"/></operator><call><name><name pos:line="503" pos:column="18">parameter<pos:position pos:line="503" pos:column="27"/></name><operator pos:line="503" pos:column="27">.<pos:position pos:line="503" pos:column="28"/></operator><name pos:line="503" pos:column="28">getKind<pos:position pos:line="503" pos:column="35"/></name></name><argument_list pos:line="503" pos:column="35">()<pos:position pos:line="503" pos:column="37"/></argument_list></call><operator pos:line="503" pos:column="37">)<pos:position pos:line="503" pos:column="38"/></operator><operator pos:line="503" pos:column="38">.<pos:position pos:line="503" pos:column="39"/></operator><call><name pos:line="503" pos:column="39">equals<pos:position pos:line="503" pos:column="45"/></name><argument_list pos:line="503" pos:column="45">(<argument><expr><name><name pos:line="503" pos:column="46">MParameterDirectionKind<pos:position pos:line="503" pos:column="69"/></name><operator pos:line="503" pos:column="69">.<pos:position pos:line="503" pos:column="70"/></operator><name pos:line="503" pos:column="70">RETURN<pos:position pos:line="503" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="503" pos:column="77"/></argument_list></call></expr>)<pos:position pos:line="503" pos:column="78"/></condition><then pos:line="503" pos:column="78"> <block pos:line="503" pos:column="79">{
                <expr_stmt><expr><call><name><name pos:line="504" pos:column="17">returnParams<pos:position pos:line="504" pos:column="29"/></name><operator pos:line="504" pos:column="29">.<pos:position pos:line="504" pos:column="30"/></operator><name pos:line="504" pos:column="30">add<pos:position pos:line="504" pos:column="33"/></name></name><argument_list pos:line="504" pos:column="33">(<argument><expr><name pos:line="504" pos:column="34">parameter<pos:position pos:line="504" pos:column="43"/></name></expr></argument>)<pos:position pos:line="504" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="504" pos:column="45"/></expr_stmt>
            }<pos:position pos:line="505" pos:column="14"/></block></then></if>
        }<pos:position pos:line="506" pos:column="10"/></block></while>
        <return pos:line="507" pos:column="9">return <expr><name pos:line="507" pos:column="16">returnParams<pos:position pos:line="507" pos:column="28"/></name></expr>;<pos:position pos:line="507" pos:column="29"/></return>
    }<pos:position pos:line="508" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="510" pos:column="5">/**
     * Returns the operation that some method realized. Returns null if
     * object isn't a method or, possibly, if the method isn't properly
     * defined.
     *
     * @param object  the method you want the realized operation of.
     * @return an operation, or null.
     */</comment>
    <function><specifier pos:line="518" pos:column="5">public<pos:position pos:line="518" pos:column="11"/></specifier> <type><name pos:line="518" pos:column="12">Object<pos:position pos:line="518" pos:column="18"/></name></type> <name pos:line="518" pos:column="19">getSpecification<pos:position pos:line="518" pos:column="35"/></name><parameter_list pos:line="518" pos:column="35">(<parameter><decl><type><name pos:line="518" pos:column="36">Object<pos:position pos:line="518" pos:column="42"/></name></type> <name pos:line="518" pos:column="43">object<pos:position pos:line="518" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="518" pos:column="50"/></parameter_list> <block pos:line="518" pos:column="51">{
	<if pos:line="519" pos:column="9">if <condition pos:line="519" pos:column="12">(<expr><operator pos:line="519" pos:column="13">!<pos:position pos:line="519" pos:column="14"/></operator><operator pos:line="519" pos:column="14">(<pos:position pos:line="519" pos:column="15"/></operator><name pos:line="519" pos:column="15">object<pos:position pos:line="519" pos:column="21"/></name> <operator pos:line="519" pos:column="22">instanceof<pos:position pos:line="519" pos:column="32"/></operator> <name pos:line="519" pos:column="33">MMethod<pos:position pos:line="519" pos:column="40"/></name><operator pos:line="519" pos:column="40">)<pos:position pos:line="519" pos:column="41"/></operator></expr>)<pos:position pos:line="519" pos:column="42"/></condition><then pos:line="519" pos:column="42"> <block pos:line="519" pos:column="43">{
	    <return pos:line="520" pos:column="13">return <expr><literal type="null" pos:line="520" pos:column="20">null<pos:position pos:line="520" pos:column="24"/></literal></expr>;<pos:position pos:line="520" pos:column="25"/></return>
	}<pos:position pos:line="521" pos:column="10"/></block></then></if>
	<return pos:line="522" pos:column="9">return <expr><operator pos:line="522" pos:column="16">(<pos:position pos:line="522" pos:column="17"/></operator><operator pos:line="522" pos:column="17">(<pos:position pos:line="522" pos:column="18"/></operator><name pos:line="522" pos:column="18">MMethod<pos:position pos:line="522" pos:column="25"/></name><operator pos:line="522" pos:column="25">)<pos:position pos:line="522" pos:column="26"/></operator> <name pos:line="522" pos:column="27">object<pos:position pos:line="522" pos:column="33"/></name><operator pos:line="522" pos:column="33">)<pos:position pos:line="522" pos:column="34"/></operator><operator pos:line="522" pos:column="34">.<pos:position pos:line="522" pos:column="35"/></operator><call><name pos:line="522" pos:column="35">getSpecification<pos:position pos:line="522" pos:column="51"/></name><argument_list pos:line="522" pos:column="51">()<pos:position pos:line="522" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="522" pos:column="54"/></return>
    }<pos:position pos:line="523" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="525" pos:column="5">/**
     * Returns all Interfaces of which this class is a realization.&lt;p&gt;
     *
     * @param classifier  the class you want to have the interfaces for
     * @return a collection of the Interfaces
     */</comment>
    <function><specifier pos:line="531" pos:column="5">public<pos:position pos:line="531" pos:column="11"/></specifier> <type><name pos:line="531" pos:column="12">Collection<pos:position pos:line="531" pos:column="22"/></name></type> <name pos:line="531" pos:column="23">getSpecifications<pos:position pos:line="531" pos:column="40"/></name><parameter_list pos:line="531" pos:column="40">(<parameter><decl><type><name pos:line="531" pos:column="41">Object<pos:position pos:line="531" pos:column="47"/></name></type> <name pos:line="531" pos:column="48">classifier<pos:position pos:line="531" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="531" pos:column="59"/></parameter_list> <block pos:line="531" pos:column="60">{
        <decl_stmt><decl><type><name pos:line="532" pos:column="9">Collection<pos:position pos:line="532" pos:column="19"/></name></type> <name pos:line="532" pos:column="20">result<pos:position pos:line="532" pos:column="26"/></name> <init pos:line="532" pos:column="27">= <expr><operator pos:line="532" pos:column="29">new<pos:position pos:line="532" pos:column="32"/></operator> <call><name pos:line="532" pos:column="33">Vector<pos:position pos:line="532" pos:column="39"/></name><argument_list pos:line="532" pos:column="39">()<pos:position pos:line="532" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="532" pos:column="42"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="533" pos:column="9">Collection<pos:position pos:line="533" pos:column="19"/></name></type> <name pos:line="533" pos:column="20">deps<pos:position pos:line="533" pos:column="24"/></name> <init pos:line="533" pos:column="25">= <expr><operator pos:line="533" pos:column="27">(<pos:position pos:line="533" pos:column="28"/></operator><operator pos:line="533" pos:column="28">(<pos:position pos:line="533" pos:column="29"/></operator><name pos:line="533" pos:column="29">MClassifier<pos:position pos:line="533" pos:column="40"/></name><operator pos:line="533" pos:column="40">)<pos:position pos:line="533" pos:column="41"/></operator> <name pos:line="533" pos:column="42">classifier<pos:position pos:line="533" pos:column="52"/></name><operator pos:line="533" pos:column="52">)<pos:position pos:line="533" pos:column="53"/></operator><operator pos:line="533" pos:column="53">.<pos:position pos:line="533" pos:column="54"/></operator><call><name pos:line="533" pos:column="54">getClientDependencies<pos:position pos:line="533" pos:column="75"/></name><argument_list pos:line="533" pos:column="75">()<pos:position pos:line="533" pos:column="77"/></argument_list></call></expr></init></decl>;<pos:position pos:line="533" pos:column="78"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="534" pos:column="9">Iterator<pos:position pos:line="534" pos:column="17"/></name></type> <name pos:line="534" pos:column="18">depIterator<pos:position pos:line="534" pos:column="29"/></name> <init pos:line="534" pos:column="30">= <expr><call><name><name pos:line="534" pos:column="32">deps<pos:position pos:line="534" pos:column="36"/></name><operator pos:line="534" pos:column="36">.<pos:position pos:line="534" pos:column="37"/></operator><name pos:line="534" pos:column="37">iterator<pos:position pos:line="534" pos:column="45"/></name></name><argument_list pos:line="534" pos:column="45">()<pos:position pos:line="534" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="534" pos:column="48"/></decl_stmt>
        <while pos:line="535" pos:column="9">while <condition pos:line="535" pos:column="15">(<expr><call><name><name pos:line="535" pos:column="16">depIterator<pos:position pos:line="535" pos:column="27"/></name><operator pos:line="535" pos:column="27">.<pos:position pos:line="535" pos:column="28"/></operator><name pos:line="535" pos:column="28">hasNext<pos:position pos:line="535" pos:column="35"/></name></name><argument_list pos:line="535" pos:column="35">()<pos:position pos:line="535" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="535" pos:column="38"/></condition> <block pos:line="535" pos:column="39">{
            <decl_stmt><decl><type><name pos:line="536" pos:column="13">Object<pos:position pos:line="536" pos:column="19"/></name></type> <name pos:line="536" pos:column="20">dep<pos:position pos:line="536" pos:column="23"/></name> <init pos:line="536" pos:column="24">= <expr><call><name><name pos:line="536" pos:column="26">depIterator<pos:position pos:line="536" pos:column="37"/></name><operator pos:line="536" pos:column="37">.<pos:position pos:line="536" pos:column="38"/></operator><name pos:line="536" pos:column="38">next<pos:position pos:line="536" pos:column="42"/></name></name><argument_list pos:line="536" pos:column="42">()<pos:position pos:line="536" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="536" pos:column="45"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="537" pos:column="13">Object<pos:position pos:line="537" pos:column="19"/></name></type> <name pos:line="537" pos:column="20">stereo<pos:position pos:line="537" pos:column="26"/></name> <init pos:line="537" pos:column="27">= <expr><call><name><name pos:line="537" pos:column="29">CollectionUtil<pos:position pos:line="537" pos:column="43"/></name><operator pos:line="537" pos:column="43">.<pos:position pos:line="537" pos:column="44"/></operator><name pos:line="537" pos:column="44">getFirstItemOrNull<pos:position pos:line="537" pos:column="62"/></name></name><argument_list pos:line="537" pos:column="62">(
                    <argument><expr><call><name><name pos:line="538" pos:column="21">Model<pos:position pos:line="538" pos:column="26"/></name><operator pos:line="538" pos:column="26">.<pos:position pos:line="538" pos:column="27"/></operator><name pos:line="538" pos:column="27">getFacade<pos:position pos:line="538" pos:column="36"/></name></name><argument_list pos:line="538" pos:column="36">()<pos:position pos:line="538" pos:column="38"/></argument_list></call><operator pos:line="538" pos:column="38">.<pos:position pos:line="538" pos:column="39"/></operator><call><name pos:line="538" pos:column="39">getStereotypes<pos:position pos:line="538" pos:column="53"/></name><argument_list pos:line="538" pos:column="53">(<argument><expr><name pos:line="538" pos:column="54">dep<pos:position pos:line="538" pos:column="57"/></name></expr></argument>)<pos:position pos:line="538" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="538" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="538" pos:column="60"/></decl_stmt>
            <if pos:line="539" pos:column="13">if <condition pos:line="539" pos:column="16">(<expr><operator pos:line="539" pos:column="17">(<pos:position pos:line="539" pos:column="18"/></operator><name pos:line="539" pos:column="18">dep<pos:position pos:line="539" pos:column="21"/></name> <operator pos:line="539" pos:column="22">instanceof<pos:position pos:line="539" pos:column="32"/></operator> <name pos:line="539" pos:column="33">MAbstraction<pos:position pos:line="539" pos:column="45"/></name><operator pos:line="539" pos:column="45">)<pos:position pos:line="539" pos:column="46"/></operator>
                <operator pos:line="540" pos:column="17">&amp;&amp;<pos:position pos:line="540" pos:column="27"/></operator> <name pos:line="540" pos:column="20">stereo<pos:position pos:line="540" pos:column="26"/></name> <operator pos:line="540" pos:column="27">!=<pos:position pos:line="540" pos:column="29"/></operator> <literal type="null" pos:line="540" pos:column="30">null<pos:position pos:line="540" pos:column="34"/></literal>
                <operator pos:line="541" pos:column="17">&amp;&amp;<pos:position pos:line="541" pos:column="27"/></operator> <call><name><name pos:line="541" pos:column="20">nsmodel<pos:position pos:line="541" pos:column="27"/></name><operator pos:line="541" pos:column="27">.<pos:position pos:line="541" pos:column="28"/></operator><name pos:line="541" pos:column="28">getFacade<pos:position pos:line="541" pos:column="37"/></name></name><argument_list pos:line="541" pos:column="37">()<pos:position pos:line="541" pos:column="39"/></argument_list></call><operator pos:line="541" pos:column="39">.<pos:position pos:line="541" pos:column="40"/></operator><call><name pos:line="541" pos:column="40">getName<pos:position pos:line="541" pos:column="47"/></name><argument_list pos:line="541" pos:column="47">(<argument><expr><name pos:line="541" pos:column="48">stereo<pos:position pos:line="541" pos:column="54"/></name></expr></argument>)<pos:position pos:line="541" pos:column="55"/></argument_list></call> <operator pos:line="541" pos:column="56">!=<pos:position pos:line="541" pos:column="58"/></operator> <literal type="null" pos:line="541" pos:column="59">null<pos:position pos:line="541" pos:column="63"/></literal>
                <operator pos:line="542" pos:column="17">&amp;&amp;<pos:position pos:line="542" pos:column="27"/></operator> <call><name><name pos:line="542" pos:column="20">nsmodel<pos:position pos:line="542" pos:column="27"/></name><operator pos:line="542" pos:column="27">.<pos:position pos:line="542" pos:column="28"/></operator><name pos:line="542" pos:column="28">getFacade<pos:position pos:line="542" pos:column="37"/></name></name><argument_list pos:line="542" pos:column="37">()<pos:position pos:line="542" pos:column="39"/></argument_list></call><operator pos:line="542" pos:column="39">.<pos:position pos:line="542" pos:column="40"/></operator><call><name pos:line="542" pos:column="40">getName<pos:position pos:line="542" pos:column="47"/></name><argument_list pos:line="542" pos:column="47">(<argument><expr><name pos:line="542" pos:column="48">stereo<pos:position pos:line="542" pos:column="54"/></name></expr></argument>)<pos:position pos:line="542" pos:column="55"/></argument_list></call><operator pos:line="542" pos:column="55">.<pos:position pos:line="542" pos:column="56"/></operator><call><name pos:line="542" pos:column="56">equals<pos:position pos:line="542" pos:column="62"/></name><argument_list pos:line="542" pos:column="62">(<argument><expr><literal type="string" pos:line="542" pos:column="63">"realize"<pos:position pos:line="542" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="542" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="542" pos:column="74"/></condition><then pos:line="542" pos:column="74"> <block pos:line="542" pos:column="75">{
		<decl_stmt><decl><type><name pos:line="543" pos:column="17">Object<pos:position pos:line="543" pos:column="23"/></name></type> <name pos:line="543" pos:column="24">i<pos:position pos:line="543" pos:column="25"/></name> <init pos:line="543" pos:column="26">= <expr><call><name><name pos:line="543" pos:column="28">nsmodel<pos:position pos:line="543" pos:column="35"/></name><operator pos:line="543" pos:column="35">.<pos:position pos:line="543" pos:column="36"/></operator><name pos:line="543" pos:column="36">getFacade<pos:position pos:line="543" pos:column="45"/></name></name><argument_list pos:line="543" pos:column="45">()<pos:position pos:line="543" pos:column="47"/></argument_list></call><operator pos:line="543" pos:column="47">.<pos:position pos:line="543" pos:column="48"/></operator><call><name pos:line="543" pos:column="48">getSuppliers<pos:position pos:line="543" pos:column="60"/></name><argument_list pos:line="543" pos:column="60">(<argument><expr><name pos:line="543" pos:column="61">dep<pos:position pos:line="543" pos:column="64"/></name></expr></argument>)<pos:position pos:line="543" pos:column="65"/></argument_list></call><operator pos:line="543" pos:column="65">.<pos:position pos:line="543" pos:column="66"/></operator><call><name pos:line="543" pos:column="66">toArray<pos:position pos:line="543" pos:column="73"/></name><argument_list pos:line="543" pos:column="73">()<pos:position pos:line="543" pos:column="75"/></argument_list></call><index pos:line="543" pos:column="75">[<expr><literal type="number" pos:line="543" pos:column="76">0<pos:position pos:line="543" pos:column="77"/></literal></expr>]<pos:position pos:line="543" pos:column="78"/></index></expr></init></decl>;<pos:position pos:line="543" pos:column="79"/></decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="544" pos:column="17">result<pos:position pos:line="544" pos:column="23"/></name><operator pos:line="544" pos:column="23">.<pos:position pos:line="544" pos:column="24"/></operator><name pos:line="544" pos:column="24">add<pos:position pos:line="544" pos:column="27"/></name></name><argument_list pos:line="544" pos:column="27">(<argument><expr><name pos:line="544" pos:column="28">i<pos:position pos:line="544" pos:column="29"/></name></expr></argument>)<pos:position pos:line="544" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="544" pos:column="31"/></expr_stmt>
            }<pos:position pos:line="545" pos:column="14"/></block></then></if>
        }<pos:position pos:line="546" pos:column="10"/></block></while>
        <return pos:line="547" pos:column="9">return <expr><name pos:line="547" pos:column="16">result<pos:position pos:line="547" pos:column="22"/></name></expr>;<pos:position pos:line="547" pos:column="23"/></return>
    }<pos:position pos:line="548" pos:column="6"/></block></function>
    <comment type="block" format="javadoc" pos:line="549" pos:column="5">/**
     * This method returns all Classifiers of which this class is a
     * direct supertype.
     *
     * @param cls  the class you want to have the children for
     * @return a collection of the children, each of which is a
     *         {@link MGeneralizableElement MGeneralizableElement}
     */</comment>
    <function><specifier pos:line="557" pos:column="5">public<pos:position pos:line="557" pos:column="11"/></specifier> <type><name pos:line="557" pos:column="12">Collection<pos:position pos:line="557" pos:column="22"/></name></type> <name pos:line="557" pos:column="23">getSubtypes<pos:position pos:line="557" pos:column="34"/></name><parameter_list pos:line="557" pos:column="34">(<parameter><decl><type><name pos:line="557" pos:column="35">Object<pos:position pos:line="557" pos:column="41"/></name></type> <name pos:line="557" pos:column="42">cls<pos:position pos:line="557" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="557" pos:column="46"/></parameter_list> <block pos:line="557" pos:column="47">{
        <if pos:line="558" pos:column="9">if <condition pos:line="558" pos:column="12">(<expr><operator pos:line="558" pos:column="13">!<pos:position pos:line="558" pos:column="14"/></operator><operator pos:line="558" pos:column="14">(<pos:position pos:line="558" pos:column="15"/></operator><name pos:line="558" pos:column="15">cls<pos:position pos:line="558" pos:column="18"/></name> <operator pos:line="558" pos:column="19">instanceof<pos:position pos:line="558" pos:column="29"/></operator> <name pos:line="558" pos:column="30">MClassifier<pos:position pos:line="558" pos:column="41"/></name><operator pos:line="558" pos:column="41">)<pos:position pos:line="558" pos:column="42"/></operator></expr>)<pos:position pos:line="558" pos:column="43"/></condition><then pos:line="558" pos:column="43"> <block pos:line="558" pos:column="44">{
            <throw pos:line="559" pos:column="13">throw <expr><operator pos:line="559" pos:column="19">new<pos:position pos:line="559" pos:column="22"/></operator> <call><name pos:line="559" pos:column="23">IllegalArgumentException<pos:position pos:line="559" pos:column="47"/></name><argument_list pos:line="559" pos:column="47">()<pos:position pos:line="559" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="559" pos:column="50"/></throw>
        }<pos:position pos:line="560" pos:column="10"/></block></then></if>

        <decl_stmt><decl><type><name pos:line="562" pos:column="9">Collection<pos:position pos:line="562" pos:column="19"/></name></type> <name pos:line="562" pos:column="20">result<pos:position pos:line="562" pos:column="26"/></name> <init pos:line="562" pos:column="27">= <expr><operator pos:line="562" pos:column="29">new<pos:position pos:line="562" pos:column="32"/></operator> <call><name pos:line="562" pos:column="33">Vector<pos:position pos:line="562" pos:column="39"/></name><argument_list pos:line="562" pos:column="39">()<pos:position pos:line="562" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="562" pos:column="42"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="563" pos:column="9">Collection<pos:position pos:line="563" pos:column="19"/></name></type> <name pos:line="563" pos:column="20">gens<pos:position pos:line="563" pos:column="24"/></name> <init pos:line="563" pos:column="25">= <expr><operator pos:line="563" pos:column="27">(<pos:position pos:line="563" pos:column="28"/></operator><operator pos:line="563" pos:column="28">(<pos:position pos:line="563" pos:column="29"/></operator><name pos:line="563" pos:column="29">MClassifier<pos:position pos:line="563" pos:column="40"/></name><operator pos:line="563" pos:column="40">)<pos:position pos:line="563" pos:column="41"/></operator> <name pos:line="563" pos:column="42">cls<pos:position pos:line="563" pos:column="45"/></name><operator pos:line="563" pos:column="45">)<pos:position pos:line="563" pos:column="46"/></operator><operator pos:line="563" pos:column="46">.<pos:position pos:line="563" pos:column="47"/></operator><call><name pos:line="563" pos:column="47">getSpecializations<pos:position pos:line="563" pos:column="65"/></name><argument_list pos:line="563" pos:column="65">()<pos:position pos:line="563" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="563" pos:column="68"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="564" pos:column="9">Iterator<pos:position pos:line="564" pos:column="17"/></name></type> <name pos:line="564" pos:column="18">genIterator<pos:position pos:line="564" pos:column="29"/></name> <init pos:line="564" pos:column="30">= <expr><call><name><name pos:line="564" pos:column="32">gens<pos:position pos:line="564" pos:column="36"/></name><operator pos:line="564" pos:column="36">.<pos:position pos:line="564" pos:column="37"/></operator><name pos:line="564" pos:column="37">iterator<pos:position pos:line="564" pos:column="45"/></name></name><argument_list pos:line="564" pos:column="45">()<pos:position pos:line="564" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="564" pos:column="48"/></decl_stmt>
        <while pos:line="565" pos:column="9">while <condition pos:line="565" pos:column="15">(<expr><call><name><name pos:line="565" pos:column="16">genIterator<pos:position pos:line="565" pos:column="27"/></name><operator pos:line="565" pos:column="27">.<pos:position pos:line="565" pos:column="28"/></operator><name pos:line="565" pos:column="28">hasNext<pos:position pos:line="565" pos:column="35"/></name></name><argument_list pos:line="565" pos:column="35">()<pos:position pos:line="565" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="565" pos:column="38"/></condition> <block pos:line="565" pos:column="39">{
            <decl_stmt><decl><type><name pos:line="566" pos:column="13">MGeneralization<pos:position pos:line="566" pos:column="28"/></name></type> <name pos:line="566" pos:column="29">next<pos:position pos:line="566" pos:column="33"/></name> <init pos:line="566" pos:column="34">= <expr><operator pos:line="566" pos:column="36">(<pos:position pos:line="566" pos:column="37"/></operator><name pos:line="566" pos:column="37">MGeneralization<pos:position pos:line="566" pos:column="52"/></name><operator pos:line="566" pos:column="52">)<pos:position pos:line="566" pos:column="53"/></operator> <call><name><name pos:line="566" pos:column="54">genIterator<pos:position pos:line="566" pos:column="65"/></name><operator pos:line="566" pos:column="65">.<pos:position pos:line="566" pos:column="66"/></operator><name pos:line="566" pos:column="66">next<pos:position pos:line="566" pos:column="70"/></name></name><argument_list pos:line="566" pos:column="70">()<pos:position pos:line="566" pos:column="72"/></argument_list></call></expr></init></decl>;<pos:position pos:line="566" pos:column="73"/></decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="567" pos:column="13">result<pos:position pos:line="567" pos:column="19"/></name><operator pos:line="567" pos:column="19">.<pos:position pos:line="567" pos:column="20"/></operator><name pos:line="567" pos:column="20">add<pos:position pos:line="567" pos:column="23"/></name></name><argument_list pos:line="567" pos:column="23">(<argument><expr><call><name><name pos:line="567" pos:column="24">next<pos:position pos:line="567" pos:column="28"/></name><operator pos:line="567" pos:column="28">.<pos:position pos:line="567" pos:column="29"/></operator><name pos:line="567" pos:column="29">getChild<pos:position pos:line="567" pos:column="37"/></name></name><argument_list pos:line="567" pos:column="37">()<pos:position pos:line="567" pos:column="39"/></argument_list></call></expr></argument>)<pos:position pos:line="567" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="567" pos:column="41"/></expr_stmt>
        }<pos:position pos:line="568" pos:column="10"/></block></while>
        <return pos:line="569" pos:column="9">return <expr><name pos:line="569" pos:column="16">result<pos:position pos:line="569" pos:column="22"/></name></expr>;<pos:position pos:line="569" pos:column="23"/></return>
    }<pos:position pos:line="570" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="572" pos:column="5">/**
     * Returns all behavioralfeatures found in this element and its
     * children.&lt;p&gt;
     *
     * @param element is the element
     * @return Collection
     */</comment>
    <function><specifier pos:line="579" pos:column="5">public<pos:position pos:line="579" pos:column="11"/></specifier> <type><name pos:line="579" pos:column="12">Collection<pos:position pos:line="579" pos:column="22"/></name></type> <name pos:line="579" pos:column="23">getAllBehavioralFeatures<pos:position pos:line="579" pos:column="47"/></name><parameter_list pos:line="579" pos:column="47">(<parameter><decl><type><name pos:line="579" pos:column="48">Object<pos:position pos:line="579" pos:column="54"/></name></type> <name pos:line="579" pos:column="55">element<pos:position pos:line="579" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="579" pos:column="63"/></parameter_list> <block pos:line="579" pos:column="64">{
        <if pos:line="580" pos:column="9">if <condition pos:line="580" pos:column="12">(<expr><operator pos:line="580" pos:column="13">!<pos:position pos:line="580" pos:column="14"/></operator><operator pos:line="580" pos:column="14">(<pos:position pos:line="580" pos:column="15"/></operator><name pos:line="580" pos:column="15">element<pos:position pos:line="580" pos:column="22"/></name> <operator pos:line="580" pos:column="23">instanceof<pos:position pos:line="580" pos:column="33"/></operator> <name pos:line="580" pos:column="34">MModelElement<pos:position pos:line="580" pos:column="47"/></name><operator pos:line="580" pos:column="47">)<pos:position pos:line="580" pos:column="48"/></operator></expr>)<pos:position pos:line="580" pos:column="49"/></condition><then pos:line="580" pos:column="49"> <block pos:line="580" pos:column="50">{
            <throw pos:line="581" pos:column="13">throw <expr><operator pos:line="581" pos:column="19">new<pos:position pos:line="581" pos:column="22"/></operator> <call><name pos:line="581" pos:column="23">IllegalArgumentException<pos:position pos:line="581" pos:column="47"/></name><argument_list pos:line="581" pos:column="47">()<pos:position pos:line="581" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="581" pos:column="50"/></throw>
        }<pos:position pos:line="582" pos:column="10"/></block></then></if>

        <decl_stmt><decl><type><name pos:line="584" pos:column="9">Iterator<pos:position pos:line="584" pos:column="17"/></name></type> <name pos:line="584" pos:column="18">it<pos:position pos:line="584" pos:column="20"/></name> <init pos:line="584" pos:column="21">=
            <expr><operator pos:line="585" pos:column="13">(<pos:position pos:line="585" pos:column="14"/></operator><operator pos:line="585" pos:column="14">(<pos:position pos:line="585" pos:column="15"/></operator><name pos:line="585" pos:column="15">MModelElement<pos:position pos:line="585" pos:column="28"/></name><operator pos:line="585" pos:column="28">)<pos:position pos:line="585" pos:column="29"/></operator> <name pos:line="585" pos:column="30">element<pos:position pos:line="585" pos:column="37"/></name><operator pos:line="585" pos:column="37">)<pos:position pos:line="585" pos:column="38"/></operator><operator pos:line="585" pos:column="38">.<pos:position pos:line="585" pos:column="39"/></operator><call><name pos:line="585" pos:column="39">getModelElementContents<pos:position pos:line="585" pos:column="62"/></name><argument_list pos:line="585" pos:column="62">()<pos:position pos:line="585" pos:column="64"/></argument_list></call><operator pos:line="585" pos:column="64">.<pos:position pos:line="585" pos:column="65"/></operator><call><name pos:line="585" pos:column="65">iterator<pos:position pos:line="585" pos:column="73"/></name><argument_list pos:line="585" pos:column="73">()<pos:position pos:line="585" pos:column="75"/></argument_list></call></expr></init></decl>;<pos:position pos:line="585" pos:column="76"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="586" pos:column="9">List<pos:position pos:line="586" pos:column="13"/></name></type> <name pos:line="586" pos:column="14">list<pos:position pos:line="586" pos:column="18"/></name> <init pos:line="586" pos:column="19">= <expr><operator pos:line="586" pos:column="21">new<pos:position pos:line="586" pos:column="24"/></operator> <call><name pos:line="586" pos:column="25">ArrayList<pos:position pos:line="586" pos:column="34"/></name><argument_list pos:line="586" pos:column="34">()<pos:position pos:line="586" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="586" pos:column="37"/></decl_stmt>
        <while pos:line="587" pos:column="9">while <condition pos:line="587" pos:column="15">(<expr><call><name><name pos:line="587" pos:column="16">it<pos:position pos:line="587" pos:column="18"/></name><operator pos:line="587" pos:column="18">.<pos:position pos:line="587" pos:column="19"/></operator><name pos:line="587" pos:column="19">hasNext<pos:position pos:line="587" pos:column="26"/></name></name><argument_list pos:line="587" pos:column="26">()<pos:position pos:line="587" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="587" pos:column="29"/></condition> <block pos:line="587" pos:column="30">{
            <decl_stmt><decl><type><name pos:line="588" pos:column="13">Object<pos:position pos:line="588" pos:column="19"/></name></type> <name pos:line="588" pos:column="20">o<pos:position pos:line="588" pos:column="21"/></name> <init pos:line="588" pos:column="22">= <expr><call><name><name pos:line="588" pos:column="24">it<pos:position pos:line="588" pos:column="26"/></name><operator pos:line="588" pos:column="26">.<pos:position pos:line="588" pos:column="27"/></operator><name pos:line="588" pos:column="27">next<pos:position pos:line="588" pos:column="31"/></name></name><argument_list pos:line="588" pos:column="31">()<pos:position pos:line="588" pos:column="33"/></argument_list></call></expr></init></decl>;<pos:position pos:line="588" pos:column="34"/></decl_stmt>
            <if pos:line="589" pos:column="13">if <condition pos:line="589" pos:column="16">(<expr><name pos:line="589" pos:column="17">o<pos:position pos:line="589" pos:column="18"/></name> <operator pos:line="589" pos:column="19">instanceof<pos:position pos:line="589" pos:column="29"/></operator> <name pos:line="589" pos:column="30">MClassifier<pos:position pos:line="589" pos:column="41"/></name></expr>)<pos:position pos:line="589" pos:column="42"/></condition><then pos:line="589" pos:column="42"> <block pos:line="589" pos:column="43">{
                <decl_stmt><decl><type><name pos:line="590" pos:column="17">MClassifier<pos:position pos:line="590" pos:column="28"/></name></type> <name pos:line="590" pos:column="29">clazz<pos:position pos:line="590" pos:column="34"/></name> <init pos:line="590" pos:column="35">= <expr><operator pos:line="590" pos:column="37">(<pos:position pos:line="590" pos:column="38"/></operator><name pos:line="590" pos:column="38">MClassifier<pos:position pos:line="590" pos:column="49"/></name><operator pos:line="590" pos:column="49">)<pos:position pos:line="590" pos:column="50"/></operator> <name pos:line="590" pos:column="51">o<pos:position pos:line="590" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="590" pos:column="53"/></decl_stmt>
                <if pos:line="591" pos:column="17">if <condition pos:line="591" pos:column="20">(<expr><operator pos:line="591" pos:column="21">!<pos:position pos:line="591" pos:column="22"/></operator><operator pos:line="591" pos:column="22">(<pos:position pos:line="591" pos:column="23"/></operator><name pos:line="591" pos:column="23">clazz<pos:position pos:line="591" pos:column="28"/></name> <operator pos:line="591" pos:column="29">instanceof<pos:position pos:line="591" pos:column="39"/></operator> <name pos:line="591" pos:column="40">MDataType<pos:position pos:line="591" pos:column="49"/></name><operator pos:line="591" pos:column="49">)<pos:position pos:line="591" pos:column="50"/></operator></expr>)<pos:position pos:line="591" pos:column="51"/></condition><then pos:line="591" pos:column="51"> <block pos:line="591" pos:column="52">{
                    <decl_stmt><decl><type><name pos:line="592" pos:column="21">Iterator<pos:position pos:line="592" pos:column="29"/></name></type> <name pos:line="592" pos:column="30">it1<pos:position pos:line="592" pos:column="33"/></name> <init pos:line="592" pos:column="34">= <expr><call><name><name pos:line="592" pos:column="36">clazz<pos:position pos:line="592" pos:column="41"/></name><operator pos:line="592" pos:column="41">.<pos:position pos:line="592" pos:column="42"/></operator><name pos:line="592" pos:column="42">getFeatures<pos:position pos:line="592" pos:column="53"/></name></name><argument_list pos:line="592" pos:column="53">()<pos:position pos:line="592" pos:column="55"/></argument_list></call><operator pos:line="592" pos:column="55">.<pos:position pos:line="592" pos:column="56"/></operator><call><name pos:line="592" pos:column="56">iterator<pos:position pos:line="592" pos:column="64"/></name><argument_list pos:line="592" pos:column="64">()<pos:position pos:line="592" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="592" pos:column="67"/></decl_stmt>
                    <while pos:line="593" pos:column="21">while <condition pos:line="593" pos:column="27">(<expr><call><name><name pos:line="593" pos:column="28">it1<pos:position pos:line="593" pos:column="31"/></name><operator pos:line="593" pos:column="31">.<pos:position pos:line="593" pos:column="32"/></operator><name pos:line="593" pos:column="32">hasNext<pos:position pos:line="593" pos:column="39"/></name></name><argument_list pos:line="593" pos:column="39">()<pos:position pos:line="593" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="593" pos:column="42"/></condition> <block pos:line="593" pos:column="43">{
                        <decl_stmt><decl><type><name pos:line="594" pos:column="25">Object<pos:position pos:line="594" pos:column="31"/></name></type> <name pos:line="594" pos:column="32">o1<pos:position pos:line="594" pos:column="34"/></name> <init pos:line="594" pos:column="35">= <expr><call><name><name pos:line="594" pos:column="37">it1<pos:position pos:line="594" pos:column="40"/></name><operator pos:line="594" pos:column="40">.<pos:position pos:line="594" pos:column="41"/></operator><name pos:line="594" pos:column="41">next<pos:position pos:line="594" pos:column="45"/></name></name><argument_list pos:line="594" pos:column="45">()<pos:position pos:line="594" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="594" pos:column="48"/></decl_stmt>
                        <if pos:line="595" pos:column="25">if <condition pos:line="595" pos:column="28">(<expr><name pos:line="595" pos:column="29">o1<pos:position pos:line="595" pos:column="31"/></name> <operator pos:line="595" pos:column="32">instanceof<pos:position pos:line="595" pos:column="42"/></operator> <name pos:line="595" pos:column="43">MBehavioralFeature<pos:position pos:line="595" pos:column="61"/></name></expr>)<pos:position pos:line="595" pos:column="62"/></condition><then pos:line="595" pos:column="62"> <block pos:line="595" pos:column="63">{
                            <expr_stmt><expr><call><name><name pos:line="596" pos:column="29">list<pos:position pos:line="596" pos:column="33"/></name><operator pos:line="596" pos:column="33">.<pos:position pos:line="596" pos:column="34"/></operator><name pos:line="596" pos:column="34">add<pos:position pos:line="596" pos:column="37"/></name></name><argument_list pos:line="596" pos:column="37">(<argument><expr><name pos:line="596" pos:column="38">o1<pos:position pos:line="596" pos:column="40"/></name></expr></argument>)<pos:position pos:line="596" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="596" pos:column="42"/></expr_stmt>
                        }<pos:position pos:line="597" pos:column="26"/></block></then></if>
                    }<pos:position pos:line="598" pos:column="22"/></block></while>
                }<pos:position pos:line="599" pos:column="18"/></block></then></if>
            }<pos:position pos:line="600" pos:column="14"/></block></then> <else pos:line="600" pos:column="15">else <block pos:line="600" pos:column="20">{
                <expr_stmt><expr><call><name><name pos:line="601" pos:column="17">list<pos:position pos:line="601" pos:column="21"/></name><operator pos:line="601" pos:column="21">.<pos:position pos:line="601" pos:column="22"/></operator><name pos:line="601" pos:column="22">addAll<pos:position pos:line="601" pos:column="28"/></name></name><argument_list pos:line="601" pos:column="28">(<argument><expr><call><name pos:line="601" pos:column="29">getAllBehavioralFeatures<pos:position pos:line="601" pos:column="53"/></name><argument_list pos:line="601" pos:column="53">(<argument><expr><call><name><name pos:line="601" pos:column="54">it<pos:position pos:line="601" pos:column="56"/></name><operator pos:line="601" pos:column="56">.<pos:position pos:line="601" pos:column="57"/></operator><name pos:line="601" pos:column="57">next<pos:position pos:line="601" pos:column="61"/></name></name><argument_list pos:line="601" pos:column="61">()<pos:position pos:line="601" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="601" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="601" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="601" pos:column="66"/></expr_stmt>
            }<pos:position pos:line="602" pos:column="14"/></block></else></if>
        }<pos:position pos:line="603" pos:column="10"/></block></while>
        <return pos:line="604" pos:column="9">return <expr><name pos:line="604" pos:column="16">list<pos:position pos:line="604" pos:column="20"/></name></expr>;<pos:position pos:line="604" pos:column="21"/></return>
    }<pos:position pos:line="605" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="607" pos:column="5">/**
     * Returns all behavioral features of some classifier.
     * @param clazz The classifier
     * @return the collection with all behavioral features of some classifier
     */</comment>
    <function><specifier pos:line="612" pos:column="5">public<pos:position pos:line="612" pos:column="11"/></specifier> <type><name pos:line="612" pos:column="12">Collection<pos:position pos:line="612" pos:column="22"/></name></type> <name pos:line="612" pos:column="23">getBehavioralFeatures<pos:position pos:line="612" pos:column="44"/></name><parameter_list pos:line="612" pos:column="44">(<parameter><decl><type><name pos:line="612" pos:column="45">Object<pos:position pos:line="612" pos:column="51"/></name></type> <name pos:line="612" pos:column="52">clazz<pos:position pos:line="612" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="612" pos:column="58"/></parameter_list> <block pos:line="612" pos:column="59">{
        <if pos:line="613" pos:column="9">if <condition pos:line="613" pos:column="12">(<expr><name pos:line="613" pos:column="13">clazz<pos:position pos:line="613" pos:column="18"/></name> <operator pos:line="613" pos:column="19">instanceof<pos:position pos:line="613" pos:column="29"/></operator> <name pos:line="613" pos:column="30">MClassifier<pos:position pos:line="613" pos:column="41"/></name></expr>)<pos:position pos:line="613" pos:column="42"/></condition><then pos:line="613" pos:column="42"> <block pos:line="613" pos:column="43">{
            <decl_stmt><decl><type><name pos:line="614" pos:column="13">List<pos:position pos:line="614" pos:column="17"/></name></type> <name pos:line="614" pos:column="18">ret<pos:position pos:line="614" pos:column="21"/></name> <init pos:line="614" pos:column="22">= <expr><operator pos:line="614" pos:column="24">new<pos:position pos:line="614" pos:column="27"/></operator> <call><name pos:line="614" pos:column="28">ArrayList<pos:position pos:line="614" pos:column="37"/></name><argument_list pos:line="614" pos:column="37">()<pos:position pos:line="614" pos:column="39"/></argument_list></call></expr></init></decl>;<pos:position pos:line="614" pos:column="40"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="615" pos:column="13">Iterator<pos:position pos:line="615" pos:column="21"/></name></type> <name pos:line="615" pos:column="22">it<pos:position pos:line="615" pos:column="24"/></name> <init pos:line="615" pos:column="25">= <expr><call><name><name pos:line="615" pos:column="27">nsmodel<pos:position pos:line="615" pos:column="34"/></name><operator pos:line="615" pos:column="34">.<pos:position pos:line="615" pos:column="35"/></operator><name pos:line="615" pos:column="35">getFacade<pos:position pos:line="615" pos:column="44"/></name></name><argument_list pos:line="615" pos:column="44">()<pos:position pos:line="615" pos:column="46"/></argument_list></call><operator pos:line="615" pos:column="46">.<pos:position pos:line="615" pos:column="47"/></operator><call><name pos:line="615" pos:column="47">getFeatures<pos:position pos:line="615" pos:column="58"/></name><argument_list pos:line="615" pos:column="58">(<argument><expr><name pos:line="615" pos:column="59">clazz<pos:position pos:line="615" pos:column="64"/></name></expr></argument>)<pos:position pos:line="615" pos:column="65"/></argument_list></call><operator pos:line="615" pos:column="65">.<pos:position pos:line="615" pos:column="66"/></operator><call><name pos:line="615" pos:column="66">iterator<pos:position pos:line="615" pos:column="74"/></name><argument_list pos:line="615" pos:column="74">()<pos:position pos:line="615" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="615" pos:column="77"/></decl_stmt>
            <while pos:line="616" pos:column="13">while <condition pos:line="616" pos:column="19">(<expr><call><name><name pos:line="616" pos:column="20">it<pos:position pos:line="616" pos:column="22"/></name><operator pos:line="616" pos:column="22">.<pos:position pos:line="616" pos:column="23"/></operator><name pos:line="616" pos:column="23">hasNext<pos:position pos:line="616" pos:column="30"/></name></name><argument_list pos:line="616" pos:column="30">()<pos:position pos:line="616" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="616" pos:column="33"/></condition> <block pos:line="616" pos:column="34">{
                <decl_stmt><decl><type><name pos:line="617" pos:column="17">Object<pos:position pos:line="617" pos:column="23"/></name></type> <name pos:line="617" pos:column="24">o<pos:position pos:line="617" pos:column="25"/></name> <init pos:line="617" pos:column="26">= <expr><call><name><name pos:line="617" pos:column="28">it<pos:position pos:line="617" pos:column="30"/></name><operator pos:line="617" pos:column="30">.<pos:position pos:line="617" pos:column="31"/></operator><name pos:line="617" pos:column="31">next<pos:position pos:line="617" pos:column="35"/></name></name><argument_list pos:line="617" pos:column="35">()<pos:position pos:line="617" pos:column="37"/></argument_list></call></expr></init></decl>;<pos:position pos:line="617" pos:column="38"/></decl_stmt>
                <if pos:line="618" pos:column="17">if <condition pos:line="618" pos:column="20">(<expr><name pos:line="618" pos:column="21">o<pos:position pos:line="618" pos:column="22"/></name> <operator pos:line="618" pos:column="23">instanceof<pos:position pos:line="618" pos:column="33"/></operator> <name pos:line="618" pos:column="34">MBehavioralFeature<pos:position pos:line="618" pos:column="52"/></name></expr>)<pos:position pos:line="618" pos:column="53"/></condition><then pos:line="618" pos:column="53"> <block pos:line="618" pos:column="54">{
                    <expr_stmt><expr><call><name><name pos:line="619" pos:column="21">ret<pos:position pos:line="619" pos:column="24"/></name><operator pos:line="619" pos:column="24">.<pos:position pos:line="619" pos:column="25"/></operator><name pos:line="619" pos:column="25">add<pos:position pos:line="619" pos:column="28"/></name></name><argument_list pos:line="619" pos:column="28">(<argument><expr><name pos:line="619" pos:column="29">o<pos:position pos:line="619" pos:column="30"/></name></expr></argument>)<pos:position pos:line="619" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="619" pos:column="32"/></expr_stmt>
                }<pos:position pos:line="620" pos:column="18"/></block></then></if>
            }<pos:position pos:line="621" pos:column="14"/></block></while>
            <return pos:line="622" pos:column="13">return <expr><name pos:line="622" pos:column="20">ret<pos:position pos:line="622" pos:column="23"/></name></expr>;<pos:position pos:line="622" pos:column="24"/></return>
        }<pos:position pos:line="623" pos:column="10"/></block></then></if>
        <throw pos:line="624" pos:column="9">throw <expr><operator pos:line="624" pos:column="15">new<pos:position pos:line="624" pos:column="18"/></operator> <call><name pos:line="624" pos:column="19">IllegalArgumentException<pos:position pos:line="624" pos:column="43"/></name><argument_list pos:line="624" pos:column="43">(<argument><expr><literal type="string" pos:line="624" pos:column="44">"Argument is not a classifier"<pos:position pos:line="624" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="624" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="624" pos:column="76"/></throw>
    }<pos:position pos:line="625" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="627" pos:column="5">/**
     * Returns all interfaces found in this namespace and in its children.
     *
     * @param ns the given namespace
     * @return Collection with all interfaces found
     */</comment>
    <function><specifier pos:line="633" pos:column="5">public<pos:position pos:line="633" pos:column="11"/></specifier> <type><name pos:line="633" pos:column="12">Collection<pos:position pos:line="633" pos:column="22"/></name></type> <name pos:line="633" pos:column="23">getAllInterfaces<pos:position pos:line="633" pos:column="39"/></name><parameter_list pos:line="633" pos:column="39">(<parameter><decl><type><name pos:line="633" pos:column="40">Object<pos:position pos:line="633" pos:column="46"/></name></type> <name pos:line="633" pos:column="47">ns<pos:position pos:line="633" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="633" pos:column="50"/></parameter_list> <block pos:line="633" pos:column="51">{
        <if pos:line="634" pos:column="9">if <condition pos:line="634" pos:column="12">(<expr><name pos:line="634" pos:column="13">ns<pos:position pos:line="634" pos:column="15"/></name> <operator pos:line="634" pos:column="16">==<pos:position pos:line="634" pos:column="18"/></operator> <literal type="null" pos:line="634" pos:column="19">null<pos:position pos:line="634" pos:column="23"/></literal></expr>)<pos:position pos:line="634" pos:column="24"/></condition><then pos:line="634" pos:column="24"> <block pos:line="634" pos:column="25">{
            <return pos:line="635" pos:column="13">return <expr><operator pos:line="635" pos:column="20">new<pos:position pos:line="635" pos:column="23"/></operator> <call><name pos:line="635" pos:column="24">ArrayList<pos:position pos:line="635" pos:column="33"/></name><argument_list pos:line="635" pos:column="33">()<pos:position pos:line="635" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="635" pos:column="36"/></return>
        }<pos:position pos:line="636" pos:column="10"/></block></then></if>
        <if pos:line="637" pos:column="9">if <condition pos:line="637" pos:column="12">(<expr><operator pos:line="637" pos:column="13">!<pos:position pos:line="637" pos:column="14"/></operator><operator pos:line="637" pos:column="14">(<pos:position pos:line="637" pos:column="15"/></operator><name pos:line="637" pos:column="15">ns<pos:position pos:line="637" pos:column="17"/></name> <operator pos:line="637" pos:column="18">instanceof<pos:position pos:line="637" pos:column="28"/></operator> <name pos:line="637" pos:column="29">MNamespace<pos:position pos:line="637" pos:column="39"/></name><operator pos:line="637" pos:column="39">)<pos:position pos:line="637" pos:column="40"/></operator></expr>)<pos:position pos:line="637" pos:column="41"/></condition><then pos:line="637" pos:column="41"> <block pos:line="637" pos:column="42">{
            <throw pos:line="638" pos:column="13">throw <expr><operator pos:line="638" pos:column="19">new<pos:position pos:line="638" pos:column="22"/></operator> <call><name pos:line="638" pos:column="23">IllegalArgumentException<pos:position pos:line="638" pos:column="47"/></name><argument_list pos:line="638" pos:column="47">()<pos:position pos:line="638" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="638" pos:column="50"/></throw>
        }<pos:position pos:line="639" pos:column="10"/></block></then></if>

        <decl_stmt><decl><type><name pos:line="641" pos:column="9">Iterator<pos:position pos:line="641" pos:column="17"/></name></type> <name pos:line="641" pos:column="18">it<pos:position pos:line="641" pos:column="20"/></name> <init pos:line="641" pos:column="21">= <expr><operator pos:line="641" pos:column="23">(<pos:position pos:line="641" pos:column="24"/></operator><operator pos:line="641" pos:column="24">(<pos:position pos:line="641" pos:column="25"/></operator><name pos:line="641" pos:column="25">MNamespace<pos:position pos:line="641" pos:column="35"/></name><operator pos:line="641" pos:column="35">)<pos:position pos:line="641" pos:column="36"/></operator> <name pos:line="641" pos:column="37">ns<pos:position pos:line="641" pos:column="39"/></name><operator pos:line="641" pos:column="39">)<pos:position pos:line="641" pos:column="40"/></operator><operator pos:line="641" pos:column="40">.<pos:position pos:line="641" pos:column="41"/></operator><call><name pos:line="641" pos:column="41">getOwnedElements<pos:position pos:line="641" pos:column="57"/></name><argument_list pos:line="641" pos:column="57">()<pos:position pos:line="641" pos:column="59"/></argument_list></call><operator pos:line="641" pos:column="59">.<pos:position pos:line="641" pos:column="60"/></operator><call><name pos:line="641" pos:column="60">iterator<pos:position pos:line="641" pos:column="68"/></name><argument_list pos:line="641" pos:column="68">()<pos:position pos:line="641" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="641" pos:column="71"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="642" pos:column="9">List<pos:position pos:line="642" pos:column="13"/></name></type> <name pos:line="642" pos:column="14">list<pos:position pos:line="642" pos:column="18"/></name> <init pos:line="642" pos:column="19">= <expr><operator pos:line="642" pos:column="21">new<pos:position pos:line="642" pos:column="24"/></operator> <call><name pos:line="642" pos:column="25">ArrayList<pos:position pos:line="642" pos:column="34"/></name><argument_list pos:line="642" pos:column="34">()<pos:position pos:line="642" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="642" pos:column="37"/></decl_stmt>
        <while pos:line="643" pos:column="9">while <condition pos:line="643" pos:column="15">(<expr><call><name><name pos:line="643" pos:column="16">it<pos:position pos:line="643" pos:column="18"/></name><operator pos:line="643" pos:column="18">.<pos:position pos:line="643" pos:column="19"/></operator><name pos:line="643" pos:column="19">hasNext<pos:position pos:line="643" pos:column="26"/></name></name><argument_list pos:line="643" pos:column="26">()<pos:position pos:line="643" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="643" pos:column="29"/></condition> <block pos:line="643" pos:column="30">{
            <decl_stmt><decl><type><name pos:line="644" pos:column="13">Object<pos:position pos:line="644" pos:column="19"/></name></type> <name pos:line="644" pos:column="20">o<pos:position pos:line="644" pos:column="21"/></name> <init pos:line="644" pos:column="22">= <expr><call><name><name pos:line="644" pos:column="24">it<pos:position pos:line="644" pos:column="26"/></name><operator pos:line="644" pos:column="26">.<pos:position pos:line="644" pos:column="27"/></operator><name pos:line="644" pos:column="27">next<pos:position pos:line="644" pos:column="31"/></name></name><argument_list pos:line="644" pos:column="31">()<pos:position pos:line="644" pos:column="33"/></argument_list></call></expr></init></decl>;<pos:position pos:line="644" pos:column="34"/></decl_stmt>
            <if pos:line="645" pos:column="13">if <condition pos:line="645" pos:column="16">(<expr><name pos:line="645" pos:column="17">o<pos:position pos:line="645" pos:column="18"/></name> <operator pos:line="645" pos:column="19">instanceof<pos:position pos:line="645" pos:column="29"/></operator> <name pos:line="645" pos:column="30">MNamespace<pos:position pos:line="645" pos:column="40"/></name></expr>)<pos:position pos:line="645" pos:column="41"/></condition><then pos:line="645" pos:column="41"> <block pos:line="645" pos:column="42">{
                <expr_stmt><expr><call><name><name pos:line="646" pos:column="17">list<pos:position pos:line="646" pos:column="21"/></name><operator pos:line="646" pos:column="21">.<pos:position pos:line="646" pos:column="22"/></operator><name pos:line="646" pos:column="22">addAll<pos:position pos:line="646" pos:column="28"/></name></name><argument_list pos:line="646" pos:column="28">(<argument><expr><call><name pos:line="646" pos:column="29">getAllInterfaces<pos:position pos:line="646" pos:column="45"/></name><argument_list pos:line="646" pos:column="45">(<argument><expr><name pos:line="646" pos:column="46">o<pos:position pos:line="646" pos:column="47"/></name></expr></argument>)<pos:position pos:line="646" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="646" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="646" pos:column="50"/></expr_stmt>
            }<pos:position pos:line="647" pos:column="14"/></block></then></if>
            <if pos:line="648" pos:column="13">if <condition pos:line="648" pos:column="16">(<expr><name pos:line="648" pos:column="17">o<pos:position pos:line="648" pos:column="18"/></name> <operator pos:line="648" pos:column="19">instanceof<pos:position pos:line="648" pos:column="29"/></operator> <name pos:line="648" pos:column="30">MInterface<pos:position pos:line="648" pos:column="40"/></name></expr>)<pos:position pos:line="648" pos:column="41"/></condition><then pos:line="648" pos:column="41"> <block pos:line="648" pos:column="42">{
                <expr_stmt><expr><call><name><name pos:line="649" pos:column="17">list<pos:position pos:line="649" pos:column="21"/></name><operator pos:line="649" pos:column="21">.<pos:position pos:line="649" pos:column="22"/></operator><name pos:line="649" pos:column="22">add<pos:position pos:line="649" pos:column="25"/></name></name><argument_list pos:line="649" pos:column="25">(<argument><expr><name pos:line="649" pos:column="26">o<pos:position pos:line="649" pos:column="27"/></name></expr></argument>)<pos:position pos:line="649" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="649" pos:column="29"/></expr_stmt>
            }<pos:position pos:line="650" pos:column="14"/></block></then></if>
        }<pos:position pos:line="651" pos:column="10"/></block></while>
        <return pos:line="652" pos:column="9">return <expr><name pos:line="652" pos:column="16">list<pos:position pos:line="652" pos:column="20"/></name></expr>;<pos:position pos:line="652" pos:column="21"/></return>
    }<pos:position pos:line="653" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="655" pos:column="5">/**
     * Returns all classes found in this namespace and in its children.&lt;p&gt;
     *
     * @param ns is the namespace.
     * @return Collection
     */</comment>
    <function><specifier pos:line="661" pos:column="5">public<pos:position pos:line="661" pos:column="11"/></specifier> <type><name pos:line="661" pos:column="12">Collection<pos:position pos:line="661" pos:column="22"/></name></type> <name pos:line="661" pos:column="23">getAllClasses<pos:position pos:line="661" pos:column="36"/></name><parameter_list pos:line="661" pos:column="36">(<parameter><decl><type><name pos:line="661" pos:column="37">Object<pos:position pos:line="661" pos:column="43"/></name></type> <name pos:line="661" pos:column="44">ns<pos:position pos:line="661" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="661" pos:column="47"/></parameter_list> <block pos:line="661" pos:column="48">{
        <if pos:line="662" pos:column="9">if <condition pos:line="662" pos:column="12">(<expr><name pos:line="662" pos:column="13">ns<pos:position pos:line="662" pos:column="15"/></name> <operator pos:line="662" pos:column="16">==<pos:position pos:line="662" pos:column="18"/></operator> <literal type="null" pos:line="662" pos:column="19">null<pos:position pos:line="662" pos:column="23"/></literal></expr>)<pos:position pos:line="662" pos:column="24"/></condition><then pos:line="662" pos:column="24"> <block pos:line="662" pos:column="25">{
            <return pos:line="663" pos:column="13">return <expr><operator pos:line="663" pos:column="20">new<pos:position pos:line="663" pos:column="23"/></operator> <call><name pos:line="663" pos:column="24">ArrayList<pos:position pos:line="663" pos:column="33"/></name><argument_list pos:line="663" pos:column="33">()<pos:position pos:line="663" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="663" pos:column="36"/></return>
        }<pos:position pos:line="664" pos:column="10"/></block></then></if>
        <if pos:line="665" pos:column="9">if <condition pos:line="665" pos:column="12">(<expr><operator pos:line="665" pos:column="13">!<pos:position pos:line="665" pos:column="14"/></operator><operator pos:line="665" pos:column="14">(<pos:position pos:line="665" pos:column="15"/></operator><name pos:line="665" pos:column="15">ns<pos:position pos:line="665" pos:column="17"/></name> <operator pos:line="665" pos:column="18">instanceof<pos:position pos:line="665" pos:column="28"/></operator> <name pos:line="665" pos:column="29">MNamespace<pos:position pos:line="665" pos:column="39"/></name><operator pos:line="665" pos:column="39">)<pos:position pos:line="665" pos:column="40"/></operator></expr>)<pos:position pos:line="665" pos:column="41"/></condition><then pos:line="665" pos:column="41"> <block pos:line="665" pos:column="42">{
            <throw pos:line="666" pos:column="13">throw <expr><operator pos:line="666" pos:column="19">new<pos:position pos:line="666" pos:column="22"/></operator> <call><name pos:line="666" pos:column="23">IllegalArgumentException<pos:position pos:line="666" pos:column="47"/></name><argument_list pos:line="666" pos:column="47">()<pos:position pos:line="666" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="666" pos:column="50"/></throw>
        }<pos:position pos:line="667" pos:column="10"/></block></then></if>

        <decl_stmt><decl><type><name pos:line="669" pos:column="9">Iterator<pos:position pos:line="669" pos:column="17"/></name></type> <name pos:line="669" pos:column="18">it<pos:position pos:line="669" pos:column="20"/></name> <init pos:line="669" pos:column="21">= <expr><operator pos:line="669" pos:column="23">(<pos:position pos:line="669" pos:column="24"/></operator><operator pos:line="669" pos:column="24">(<pos:position pos:line="669" pos:column="25"/></operator><name pos:line="669" pos:column="25">MNamespace<pos:position pos:line="669" pos:column="35"/></name><operator pos:line="669" pos:column="35">)<pos:position pos:line="669" pos:column="36"/></operator> <name pos:line="669" pos:column="37">ns<pos:position pos:line="669" pos:column="39"/></name><operator pos:line="669" pos:column="39">)<pos:position pos:line="669" pos:column="40"/></operator><operator pos:line="669" pos:column="40">.<pos:position pos:line="669" pos:column="41"/></operator><call><name pos:line="669" pos:column="41">getOwnedElements<pos:position pos:line="669" pos:column="57"/></name><argument_list pos:line="669" pos:column="57">()<pos:position pos:line="669" pos:column="59"/></argument_list></call><operator pos:line="669" pos:column="59">.<pos:position pos:line="669" pos:column="60"/></operator><call><name pos:line="669" pos:column="60">iterator<pos:position pos:line="669" pos:column="68"/></name><argument_list pos:line="669" pos:column="68">()<pos:position pos:line="669" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="669" pos:column="71"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="670" pos:column="9">List<pos:position pos:line="670" pos:column="13"/></name></type> <name pos:line="670" pos:column="14">list<pos:position pos:line="670" pos:column="18"/></name> <init pos:line="670" pos:column="19">= <expr><operator pos:line="670" pos:column="21">new<pos:position pos:line="670" pos:column="24"/></operator> <call><name pos:line="670" pos:column="25">ArrayList<pos:position pos:line="670" pos:column="34"/></name><argument_list pos:line="670" pos:column="34">()<pos:position pos:line="670" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="670" pos:column="37"/></decl_stmt>
        <while pos:line="671" pos:column="9">while <condition pos:line="671" pos:column="15">(<expr><call><name><name pos:line="671" pos:column="16">it<pos:position pos:line="671" pos:column="18"/></name><operator pos:line="671" pos:column="18">.<pos:position pos:line="671" pos:column="19"/></operator><name pos:line="671" pos:column="19">hasNext<pos:position pos:line="671" pos:column="26"/></name></name><argument_list pos:line="671" pos:column="26">()<pos:position pos:line="671" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="671" pos:column="29"/></condition> <block pos:line="671" pos:column="30">{
            <decl_stmt><decl><type><name pos:line="672" pos:column="13">Object<pos:position pos:line="672" pos:column="19"/></name></type> <name pos:line="672" pos:column="20">o<pos:position pos:line="672" pos:column="21"/></name> <init pos:line="672" pos:column="22">= <expr><call><name><name pos:line="672" pos:column="24">it<pos:position pos:line="672" pos:column="26"/></name><operator pos:line="672" pos:column="26">.<pos:position pos:line="672" pos:column="27"/></operator><name pos:line="672" pos:column="27">next<pos:position pos:line="672" pos:column="31"/></name></name><argument_list pos:line="672" pos:column="31">()<pos:position pos:line="672" pos:column="33"/></argument_list></call></expr></init></decl>;<pos:position pos:line="672" pos:column="34"/></decl_stmt>
            <if pos:line="673" pos:column="13">if <condition pos:line="673" pos:column="16">(<expr><name pos:line="673" pos:column="17">o<pos:position pos:line="673" pos:column="18"/></name> <operator pos:line="673" pos:column="19">instanceof<pos:position pos:line="673" pos:column="29"/></operator> <name pos:line="673" pos:column="30">MNamespace<pos:position pos:line="673" pos:column="40"/></name></expr>)<pos:position pos:line="673" pos:column="41"/></condition><then pos:line="673" pos:column="41"> <block pos:line="673" pos:column="42">{
                <expr_stmt><expr><call><name><name pos:line="674" pos:column="17">list<pos:position pos:line="674" pos:column="21"/></name><operator pos:line="674" pos:column="21">.<pos:position pos:line="674" pos:column="22"/></operator><name pos:line="674" pos:column="22">addAll<pos:position pos:line="674" pos:column="28"/></name></name><argument_list pos:line="674" pos:column="28">(<argument><expr><call><name pos:line="674" pos:column="29">getAllClasses<pos:position pos:line="674" pos:column="42"/></name><argument_list pos:line="674" pos:column="42">(<argument><expr><name pos:line="674" pos:column="43">o<pos:position pos:line="674" pos:column="44"/></name></expr></argument>)<pos:position pos:line="674" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="674" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="674" pos:column="47"/></expr_stmt>
            }<pos:position pos:line="675" pos:column="14"/></block></then></if>
            <if pos:line="676" pos:column="13">if <condition pos:line="676" pos:column="16">(<expr><name pos:line="676" pos:column="17">o<pos:position pos:line="676" pos:column="18"/></name> <operator pos:line="676" pos:column="19">instanceof<pos:position pos:line="676" pos:column="29"/></operator> <name pos:line="676" pos:column="30">MClass<pos:position pos:line="676" pos:column="36"/></name></expr>)<pos:position pos:line="676" pos:column="37"/></condition><then pos:line="676" pos:column="37"> <block pos:line="676" pos:column="38">{
                <expr_stmt><expr><call><name><name pos:line="677" pos:column="17">list<pos:position pos:line="677" pos:column="21"/></name><operator pos:line="677" pos:column="21">.<pos:position pos:line="677" pos:column="22"/></operator><name pos:line="677" pos:column="22">add<pos:position pos:line="677" pos:column="25"/></name></name><argument_list pos:line="677" pos:column="25">(<argument><expr><name pos:line="677" pos:column="26">o<pos:position pos:line="677" pos:column="27"/></name></expr></argument>)<pos:position pos:line="677" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="677" pos:column="29"/></expr_stmt>
            }<pos:position pos:line="678" pos:column="14"/></block></then></if>
        }<pos:position pos:line="679" pos:column="10"/></block></while>
        <return pos:line="680" pos:column="9">return <expr><name pos:line="680" pos:column="16">list<pos:position pos:line="680" pos:column="20"/></name></expr>;<pos:position pos:line="680" pos:column="21"/></return>
    }<pos:position pos:line="681" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="683" pos:column="5">/**
     * Return all interfaces the given class realizes.&lt;p&gt;
     *
     * @param cls the classifier
     * @return Collection
     */</comment>
    <function><specifier pos:line="689" pos:column="5">public<pos:position pos:line="689" pos:column="11"/></specifier> <type><name pos:line="689" pos:column="12">Collection<pos:position pos:line="689" pos:column="22"/></name></type> <name pos:line="689" pos:column="23">getRealizedInterfaces<pos:position pos:line="689" pos:column="44"/></name><parameter_list pos:line="689" pos:column="44">(<parameter><decl><type><name pos:line="689" pos:column="45">Object<pos:position pos:line="689" pos:column="51"/></name></type> <name pos:line="689" pos:column="52">cls<pos:position pos:line="689" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="689" pos:column="56"/></parameter_list> <block pos:line="689" pos:column="57">{
        <decl_stmt><decl><type><name pos:line="690" pos:column="9">MClassifier<pos:position pos:line="690" pos:column="20"/></name></type> <name pos:line="690" pos:column="21">classifier<pos:position pos:line="690" pos:column="31"/></name> <init pos:line="690" pos:column="32">= <expr><operator pos:line="690" pos:column="34">(<pos:position pos:line="690" pos:column="35"/></operator><name pos:line="690" pos:column="35">MClassifier<pos:position pos:line="690" pos:column="46"/></name><operator pos:line="690" pos:column="46">)<pos:position pos:line="690" pos:column="47"/></operator> <name pos:line="690" pos:column="48">cls<pos:position pos:line="690" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="690" pos:column="52"/></decl_stmt>
        <if pos:line="691" pos:column="9">if <condition pos:line="691" pos:column="12">(<expr><name pos:line="691" pos:column="13">classifier<pos:position pos:line="691" pos:column="23"/></name> <operator pos:line="691" pos:column="24">==<pos:position pos:line="691" pos:column="26"/></operator> <literal type="null" pos:line="691" pos:column="27">null<pos:position pos:line="691" pos:column="31"/></literal></expr>)<pos:position pos:line="691" pos:column="32"/></condition><then pos:line="691" pos:column="32"> <block pos:line="691" pos:column="33">{
            <return pos:line="692" pos:column="13">return <expr><operator pos:line="692" pos:column="20">new<pos:position pos:line="692" pos:column="23"/></operator> <call><name pos:line="692" pos:column="24">ArrayList<pos:position pos:line="692" pos:column="33"/></name><argument_list pos:line="692" pos:column="33">()<pos:position pos:line="692" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="692" pos:column="36"/></return>
        }<pos:position pos:line="693" pos:column="10"/></block></then></if>
        <decl_stmt><decl><type><name pos:line="694" pos:column="9">Iterator<pos:position pos:line="694" pos:column="17"/></name></type> <name pos:line="694" pos:column="18">it<pos:position pos:line="694" pos:column="20"/></name> <init pos:line="694" pos:column="21">= <expr><call><name><name pos:line="694" pos:column="23">classifier<pos:position pos:line="694" pos:column="33"/></name><operator pos:line="694" pos:column="33">.<pos:position pos:line="694" pos:column="34"/></operator><name pos:line="694" pos:column="34">getClientDependencies<pos:position pos:line="694" pos:column="55"/></name></name><argument_list pos:line="694" pos:column="55">()<pos:position pos:line="694" pos:column="57"/></argument_list></call><operator pos:line="694" pos:column="57">.<pos:position pos:line="694" pos:column="58"/></operator><call><name pos:line="694" pos:column="58">iterator<pos:position pos:line="694" pos:column="66"/></name><argument_list pos:line="694" pos:column="66">()<pos:position pos:line="694" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="694" pos:column="69"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="695" pos:column="9">List<pos:position pos:line="695" pos:column="13"/></name></type> <name pos:line="695" pos:column="14">list<pos:position pos:line="695" pos:column="18"/></name> <init pos:line="695" pos:column="19">= <expr><operator pos:line="695" pos:column="21">new<pos:position pos:line="695" pos:column="24"/></operator> <call><name pos:line="695" pos:column="25">ArrayList<pos:position pos:line="695" pos:column="34"/></name><argument_list pos:line="695" pos:column="34">()<pos:position pos:line="695" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="695" pos:column="37"/></decl_stmt>
        <while pos:line="696" pos:column="9">while <condition pos:line="696" pos:column="15">(<expr><call><name><name pos:line="696" pos:column="16">it<pos:position pos:line="696" pos:column="18"/></name><operator pos:line="696" pos:column="18">.<pos:position pos:line="696" pos:column="19"/></operator><name pos:line="696" pos:column="19">hasNext<pos:position pos:line="696" pos:column="26"/></name></name><argument_list pos:line="696" pos:column="26">()<pos:position pos:line="696" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="696" pos:column="29"/></condition> <block pos:line="696" pos:column="30">{
            <decl_stmt><decl><type><name pos:line="697" pos:column="13">Object<pos:position pos:line="697" pos:column="19"/></name></type> <name pos:line="697" pos:column="20">clientDependency<pos:position pos:line="697" pos:column="36"/></name> <init pos:line="697" pos:column="37">= <expr><call><name><name pos:line="697" pos:column="39">it<pos:position pos:line="697" pos:column="41"/></name><operator pos:line="697" pos:column="41">.<pos:position pos:line="697" pos:column="42"/></operator><name pos:line="697" pos:column="42">next<pos:position pos:line="697" pos:column="46"/></name></name><argument_list pos:line="697" pos:column="46">()<pos:position pos:line="697" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="697" pos:column="49"/></decl_stmt>
            <if pos:line="698" pos:column="13">if <condition pos:line="698" pos:column="16">(<expr><name pos:line="698" pos:column="17">clientDependency<pos:position pos:line="698" pos:column="33"/></name> <operator pos:line="698" pos:column="34">instanceof<pos:position pos:line="698" pos:column="44"/></operator> <name pos:line="698" pos:column="45">MAbstraction<pos:position pos:line="698" pos:column="57"/></name></expr>)<pos:position pos:line="698" pos:column="58"/></condition><then pos:line="698" pos:column="58"> <block pos:line="698" pos:column="59">{
                <decl_stmt><decl><type><name pos:line="699" pos:column="17">Object<pos:position pos:line="699" pos:column="23"/></name></type> <name pos:line="699" pos:column="24">stereo<pos:position pos:line="699" pos:column="30"/></name> <init pos:line="699" pos:column="31">= <expr><call><name><name pos:line="699" pos:column="33">CollectionUtil<pos:position pos:line="699" pos:column="47"/></name><operator pos:line="699" pos:column="47">.<pos:position pos:line="699" pos:column="48"/></operator><name pos:line="699" pos:column="48">getFirstItemOrNull<pos:position pos:line="699" pos:column="66"/></name></name><argument_list pos:line="699" pos:column="66">(
                        <argument><expr><call><name><name pos:line="700" pos:column="25">Model<pos:position pos:line="700" pos:column="30"/></name><operator pos:line="700" pos:column="30">.<pos:position pos:line="700" pos:column="31"/></operator><name pos:line="700" pos:column="31">getFacade<pos:position pos:line="700" pos:column="40"/></name></name><argument_list pos:line="700" pos:column="40">()<pos:position pos:line="700" pos:column="42"/></argument_list></call><operator pos:line="700" pos:column="42">.<pos:position pos:line="700" pos:column="43"/></operator><call><name pos:line="700" pos:column="43">getStereotypes<pos:position pos:line="700" pos:column="57"/></name><argument_list pos:line="700" pos:column="57">(<argument><expr><name pos:line="700" pos:column="58">clientDependency<pos:position pos:line="700" pos:column="74"/></name></expr></argument>)<pos:position pos:line="700" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="700" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="700" pos:column="77"/></decl_stmt>
                <if pos:line="701" pos:column="17">if <condition pos:line="701" pos:column="20">(<expr><name pos:line="701" pos:column="21">stereo<pos:position pos:line="701" pos:column="27"/></name> <operator pos:line="701" pos:column="28">!=<pos:position pos:line="701" pos:column="30"/></operator> <literal type="null" pos:line="701" pos:column="31">null<pos:position pos:line="701" pos:column="35"/></literal>
                        <operator pos:line="702" pos:column="25">&amp;&amp;<pos:position pos:line="702" pos:column="35"/></operator> <call><name><name pos:line="702" pos:column="28">nsmodel<pos:position pos:line="702" pos:column="35"/></name><operator pos:line="702" pos:column="35">.<pos:position pos:line="702" pos:column="36"/></operator><name pos:line="702" pos:column="36">getFacade<pos:position pos:line="702" pos:column="45"/></name></name><argument_list pos:line="702" pos:column="45">()<pos:position pos:line="702" pos:column="47"/></argument_list></call><operator pos:line="702" pos:column="47">.<pos:position pos:line="702" pos:column="48"/></operator><call><name pos:line="702" pos:column="48">getBaseClass<pos:position pos:line="702" pos:column="60"/></name><argument_list pos:line="702" pos:column="60">(<argument><expr><name pos:line="702" pos:column="61">stereo<pos:position pos:line="702" pos:column="67"/></name></expr></argument>)<pos:position pos:line="702" pos:column="68"/></argument_list></call> <operator pos:line="702" pos:column="69">!=<pos:position pos:line="702" pos:column="71"/></operator> <literal type="null" pos:line="702" pos:column="72">null<pos:position pos:line="702" pos:column="76"/></literal>
                        <operator pos:line="703" pos:column="25">&amp;&amp;<pos:position pos:line="703" pos:column="35"/></operator> <call><name><name pos:line="703" pos:column="28">nsmodel<pos:position pos:line="703" pos:column="35"/></name><operator pos:line="703" pos:column="35">.<pos:position pos:line="703" pos:column="36"/></operator><name pos:line="703" pos:column="36">getFacade<pos:position pos:line="703" pos:column="45"/></name></name><argument_list pos:line="703" pos:column="45">()<pos:position pos:line="703" pos:column="47"/></argument_list></call><operator pos:line="703" pos:column="47">.<pos:position pos:line="703" pos:column="48"/></operator><call><name pos:line="703" pos:column="48">getName<pos:position pos:line="703" pos:column="55"/></name><argument_list pos:line="703" pos:column="55">(<argument><expr><name pos:line="703" pos:column="56">stereo<pos:position pos:line="703" pos:column="62"/></name></expr></argument>)<pos:position pos:line="703" pos:column="63"/></argument_list></call> <operator pos:line="703" pos:column="64">!=<pos:position pos:line="703" pos:column="66"/></operator> <literal type="null" pos:line="703" pos:column="67">null<pos:position pos:line="703" pos:column="71"/></literal>
                        <operator pos:line="704" pos:column="25">&amp;&amp;<pos:position pos:line="704" pos:column="35"/></operator> <call><name><name pos:line="704" pos:column="28">nsmodel<pos:position pos:line="704" pos:column="35"/></name><operator pos:line="704" pos:column="35">.<pos:position pos:line="704" pos:column="36"/></operator><name pos:line="704" pos:column="36">getFacade<pos:position pos:line="704" pos:column="45"/></name></name><argument_list pos:line="704" pos:column="45">()<pos:position pos:line="704" pos:column="47"/></argument_list></call><operator pos:line="704" pos:column="47">.<pos:position pos:line="704" pos:column="48"/></operator><call><name pos:line="704" pos:column="48">getBaseClass<pos:position pos:line="704" pos:column="60"/></name><argument_list pos:line="704" pos:column="60">(<argument><expr><name pos:line="704" pos:column="61">stereo<pos:position pos:line="704" pos:column="67"/></name></expr></argument>)<pos:position pos:line="704" pos:column="68"/></argument_list></call>
		                <operator pos:line="705" pos:column="33">.<pos:position pos:line="705" pos:column="34"/></operator><call><name pos:line="705" pos:column="34">equals<pos:position pos:line="705" pos:column="40"/></name><argument_list pos:line="705" pos:column="40">(<argument><expr><literal type="string" pos:line="705" pos:column="41">"Abstraction"<pos:position pos:line="705" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="705" pos:column="55"/></argument_list></call>
                        <operator pos:line="706" pos:column="25">&amp;&amp;<pos:position pos:line="706" pos:column="35"/></operator> <call><name><name pos:line="706" pos:column="28">nsmodel<pos:position pos:line="706" pos:column="35"/></name><operator pos:line="706" pos:column="35">.<pos:position pos:line="706" pos:column="36"/></operator><name pos:line="706" pos:column="36">getFacade<pos:position pos:line="706" pos:column="45"/></name></name><argument_list pos:line="706" pos:column="45">()<pos:position pos:line="706" pos:column="47"/></argument_list></call><operator pos:line="706" pos:column="47">.<pos:position pos:line="706" pos:column="48"/></operator><call><name pos:line="706" pos:column="48">getName<pos:position pos:line="706" pos:column="55"/></name><argument_list pos:line="706" pos:column="55">(<argument><expr><name pos:line="706" pos:column="56">stereo<pos:position pos:line="706" pos:column="62"/></name></expr></argument>)<pos:position pos:line="706" pos:column="63"/></argument_list></call>
                        	<operator pos:line="707" pos:column="33">.<pos:position pos:line="707" pos:column="34"/></operator><call><name pos:line="707" pos:column="34">equals<pos:position pos:line="707" pos:column="40"/></name><argument_list pos:line="707" pos:column="40">(<argument><expr><literal type="string" pos:line="707" pos:column="41">"realize"<pos:position pos:line="707" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="707" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="707" pos:column="52"/></condition><then pos:line="707" pos:column="52"> <block pos:line="707" pos:column="53">{
                    <decl_stmt><decl><type><name pos:line="708" pos:column="21">Iterator<pos:position pos:line="708" pos:column="29"/></name></type> <name pos:line="708" pos:column="30">it2<pos:position pos:line="708" pos:column="33"/></name> <init pos:line="708" pos:column="34">=
                        <expr><call><name><name pos:line="709" pos:column="25">nsmodel<pos:position pos:line="709" pos:column="32"/></name><operator pos:line="709" pos:column="32">.<pos:position pos:line="709" pos:column="33"/></operator><name pos:line="709" pos:column="33">getFacade<pos:position pos:line="709" pos:column="42"/></name></name><argument_list pos:line="709" pos:column="42">()<pos:position pos:line="709" pos:column="44"/></argument_list></call><operator pos:line="709" pos:column="44">.<pos:position pos:line="709" pos:column="45"/></operator><call><name pos:line="709" pos:column="45">getSuppliers<pos:position pos:line="709" pos:column="57"/></name><argument_list pos:line="709" pos:column="57">(<argument><expr><name pos:line="709" pos:column="58">clientDependency<pos:position pos:line="709" pos:column="74"/></name></expr></argument>)<pos:position pos:line="709" pos:column="75"/></argument_list></call>
				<operator pos:line="710" pos:column="33">.<pos:position pos:line="710" pos:column="34"/></operator><call><name pos:line="710" pos:column="34">iterator<pos:position pos:line="710" pos:column="42"/></name><argument_list pos:line="710" pos:column="42">()<pos:position pos:line="710" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="710" pos:column="45"/></decl_stmt>
                    <while pos:line="711" pos:column="21">while <condition pos:line="711" pos:column="27">(<expr><call><name><name pos:line="711" pos:column="28">it2<pos:position pos:line="711" pos:column="31"/></name><operator pos:line="711" pos:column="31">.<pos:position pos:line="711" pos:column="32"/></operator><name pos:line="711" pos:column="32">hasNext<pos:position pos:line="711" pos:column="39"/></name></name><argument_list pos:line="711" pos:column="39">()<pos:position pos:line="711" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="711" pos:column="42"/></condition> <block pos:line="711" pos:column="43">{
                        <decl_stmt><decl><type><name pos:line="712" pos:column="25">Object<pos:position pos:line="712" pos:column="31"/></name></type> <name pos:line="712" pos:column="32">supplier<pos:position pos:line="712" pos:column="40"/></name> <init pos:line="712" pos:column="41">= <expr><call><name><name pos:line="712" pos:column="43">it2<pos:position pos:line="712" pos:column="46"/></name><operator pos:line="712" pos:column="46">.<pos:position pos:line="712" pos:column="47"/></operator><name pos:line="712" pos:column="47">next<pos:position pos:line="712" pos:column="51"/></name></name><argument_list pos:line="712" pos:column="51">()<pos:position pos:line="712" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="712" pos:column="54"/></decl_stmt>
                        <if pos:line="713" pos:column="25">if <condition pos:line="713" pos:column="28">(<expr><name pos:line="713" pos:column="29">supplier<pos:position pos:line="713" pos:column="37"/></name> <operator pos:line="713" pos:column="38">instanceof<pos:position pos:line="713" pos:column="48"/></operator> <name pos:line="713" pos:column="49">MInterface<pos:position pos:line="713" pos:column="59"/></name></expr>)<pos:position pos:line="713" pos:column="60"/></condition><then pos:line="713" pos:column="60"> <block pos:line="713" pos:column="61">{
                            <expr_stmt><expr><call><name><name pos:line="714" pos:column="29">list<pos:position pos:line="714" pos:column="33"/></name><operator pos:line="714" pos:column="33">.<pos:position pos:line="714" pos:column="34"/></operator><name pos:line="714" pos:column="34">add<pos:position pos:line="714" pos:column="37"/></name></name><argument_list pos:line="714" pos:column="37">(<argument><expr><name pos:line="714" pos:column="38">supplier<pos:position pos:line="714" pos:column="46"/></name></expr></argument>)<pos:position pos:line="714" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="714" pos:column="48"/></expr_stmt>
                        }<pos:position pos:line="715" pos:column="26"/></block></then></if>
                    }<pos:position pos:line="716" pos:column="22"/></block></while>
                }<pos:position pos:line="717" pos:column="18"/></block></then></if>
            }<pos:position pos:line="718" pos:column="14"/></block></then></if>
        }<pos:position pos:line="719" pos:column="10"/></block></while>
        <return pos:line="720" pos:column="9">return <expr><name pos:line="720" pos:column="16">list<pos:position pos:line="720" pos:column="20"/></name></expr>;<pos:position pos:line="720" pos:column="21"/></return>
    }<pos:position pos:line="721" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="723" pos:column="5">/**
     * Returns all classes some generalizable element extends.
     *
     * @param clazz is the generalizable element
     * @return Collection
     */</comment>
    <function><specifier pos:line="729" pos:column="5">public<pos:position pos:line="729" pos:column="11"/></specifier> <type><name pos:line="729" pos:column="12">Collection<pos:position pos:line="729" pos:column="22"/></name></type> <name pos:line="729" pos:column="23">getExtendedClassifiers<pos:position pos:line="729" pos:column="45"/></name><parameter_list pos:line="729" pos:column="45">(<parameter><decl><type><name pos:line="729" pos:column="46">Object<pos:position pos:line="729" pos:column="52"/></name></type> <name pos:line="729" pos:column="53">clazz<pos:position pos:line="729" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="729" pos:column="59"/></parameter_list> <block pos:line="729" pos:column="60">{
        <if pos:line="730" pos:column="9">if <condition pos:line="730" pos:column="12">(<expr><name pos:line="730" pos:column="13">clazz<pos:position pos:line="730" pos:column="18"/></name> <operator pos:line="730" pos:column="19">==<pos:position pos:line="730" pos:column="21"/></operator> <literal type="null" pos:line="730" pos:column="22">null<pos:position pos:line="730" pos:column="26"/></literal></expr>)<pos:position pos:line="730" pos:column="27"/></condition><then pos:line="730" pos:column="27"> <block pos:line="730" pos:column="28">{
            <return pos:line="731" pos:column="13">return <expr><operator pos:line="731" pos:column="20">new<pos:position pos:line="731" pos:column="23"/></operator> <call><name pos:line="731" pos:column="24">ArrayList<pos:position pos:line="731" pos:column="33"/></name><argument_list pos:line="731" pos:column="33">()<pos:position pos:line="731" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="731" pos:column="36"/></return>
        }<pos:position pos:line="732" pos:column="10"/></block></then></if>
        <decl_stmt><decl><type><name pos:line="733" pos:column="9">Iterator<pos:position pos:line="733" pos:column="17"/></name></type> <name pos:line="733" pos:column="18">it<pos:position pos:line="733" pos:column="20"/></name> <init pos:line="733" pos:column="21">= <expr><call><name><name pos:line="733" pos:column="23">nsmodel<pos:position pos:line="733" pos:column="30"/></name><operator pos:line="733" pos:column="30">.<pos:position pos:line="733" pos:column="31"/></operator><name pos:line="733" pos:column="31">getFacade<pos:position pos:line="733" pos:column="40"/></name></name><argument_list pos:line="733" pos:column="40">()<pos:position pos:line="733" pos:column="42"/></argument_list></call><operator pos:line="733" pos:column="42">.<pos:position pos:line="733" pos:column="43"/></operator><call><name pos:line="733" pos:column="43">getGeneralizations<pos:position pos:line="733" pos:column="61"/></name><argument_list pos:line="733" pos:column="61">(<argument><expr><name pos:line="733" pos:column="62">clazz<pos:position pos:line="733" pos:column="67"/></name></expr></argument>)<pos:position pos:line="733" pos:column="68"/></argument_list></call><operator pos:line="733" pos:column="68">.<pos:position pos:line="733" pos:column="69"/></operator><call><name pos:line="733" pos:column="69">iterator<pos:position pos:line="733" pos:column="77"/></name><argument_list pos:line="733" pos:column="77">()<pos:position pos:line="733" pos:column="79"/></argument_list></call></expr></init></decl>;<pos:position pos:line="733" pos:column="80"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="734" pos:column="9">List<pos:position pos:line="734" pos:column="13"/></name></type> <name pos:line="734" pos:column="14">list<pos:position pos:line="734" pos:column="18"/></name> <init pos:line="734" pos:column="19">= <expr><operator pos:line="734" pos:column="21">new<pos:position pos:line="734" pos:column="24"/></operator> <call><name pos:line="734" pos:column="25">ArrayList<pos:position pos:line="734" pos:column="34"/></name><argument_list pos:line="734" pos:column="34">()<pos:position pos:line="734" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="734" pos:column="37"/></decl_stmt>
        <while pos:line="735" pos:column="9">while <condition pos:line="735" pos:column="15">(<expr><call><name><name pos:line="735" pos:column="16">it<pos:position pos:line="735" pos:column="18"/></name><operator pos:line="735" pos:column="18">.<pos:position pos:line="735" pos:column="19"/></operator><name pos:line="735" pos:column="19">hasNext<pos:position pos:line="735" pos:column="26"/></name></name><argument_list pos:line="735" pos:column="26">()<pos:position pos:line="735" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="735" pos:column="29"/></condition> <block pos:line="735" pos:column="30">{
            <decl_stmt><decl><type><name pos:line="736" pos:column="13">MGeneralization<pos:position pos:line="736" pos:column="28"/></name></type> <name pos:line="736" pos:column="29">gen<pos:position pos:line="736" pos:column="32"/></name> <init pos:line="736" pos:column="33">= <expr><operator pos:line="736" pos:column="35">(<pos:position pos:line="736" pos:column="36"/></operator><name pos:line="736" pos:column="36">MGeneralization<pos:position pos:line="736" pos:column="51"/></name><operator pos:line="736" pos:column="51">)<pos:position pos:line="736" pos:column="52"/></operator> <call><name><name pos:line="736" pos:column="53">it<pos:position pos:line="736" pos:column="55"/></name><operator pos:line="736" pos:column="55">.<pos:position pos:line="736" pos:column="56"/></operator><name pos:line="736" pos:column="56">next<pos:position pos:line="736" pos:column="60"/></name></name><argument_list pos:line="736" pos:column="60">()<pos:position pos:line="736" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="736" pos:column="63"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="737" pos:column="13">MGeneralizableElement<pos:position pos:line="737" pos:column="34"/></name></type> <name pos:line="737" pos:column="35">parent<pos:position pos:line="737" pos:column="41"/></name> <init pos:line="737" pos:column="42">= <expr><call><name><name pos:line="737" pos:column="44">gen<pos:position pos:line="737" pos:column="47"/></name><operator pos:line="737" pos:column="47">.<pos:position pos:line="737" pos:column="48"/></operator><name pos:line="737" pos:column="48">getParent<pos:position pos:line="737" pos:column="57"/></name></name><argument_list pos:line="737" pos:column="57">()<pos:position pos:line="737" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="737" pos:column="60"/></decl_stmt>
            <if pos:line="738" pos:column="13">if <condition pos:line="738" pos:column="16">(<expr><name pos:line="738" pos:column="17">parent<pos:position pos:line="738" pos:column="23"/></name> <operator pos:line="738" pos:column="24">!=<pos:position pos:line="738" pos:column="26"/></operator> <literal type="null" pos:line="738" pos:column="27">null<pos:position pos:line="738" pos:column="31"/></literal></expr>)<pos:position pos:line="738" pos:column="32"/></condition><then pos:line="738" pos:column="32"> <block pos:line="738" pos:column="33">{
                <expr_stmt><expr><call><name><name pos:line="739" pos:column="17">list<pos:position pos:line="739" pos:column="21"/></name><operator pos:line="739" pos:column="21">.<pos:position pos:line="739" pos:column="22"/></operator><name pos:line="739" pos:column="22">add<pos:position pos:line="739" pos:column="25"/></name></name><argument_list pos:line="739" pos:column="25">(<argument><expr><name pos:line="739" pos:column="26">parent<pos:position pos:line="739" pos:column="32"/></name></expr></argument>)<pos:position pos:line="739" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="739" pos:column="34"/></expr_stmt>
            }<pos:position pos:line="740" pos:column="14"/></block></then></if>
        }<pos:position pos:line="741" pos:column="10"/></block></while>
        <return pos:line="742" pos:column="9">return <expr><name pos:line="742" pos:column="16">list<pos:position pos:line="742" pos:column="20"/></name></expr>;<pos:position pos:line="742" pos:column="21"/></return>
    }<pos:position pos:line="743" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="745" pos:column="5">/**
     * Gets the generalization between two generalizable elements.
     * Returns null if there is none.&lt;p&gt;
     *
     * @param achild is the child generalizable element.
     * @param aparent is the parent generalizable element.
     * @return MGeneralization
     */</comment>
    <function><specifier pos:line="753" pos:column="5">public<pos:position pos:line="753" pos:column="11"/></specifier> <type><name pos:line="753" pos:column="12">Object<pos:position pos:line="753" pos:column="18"/></name></type> <name pos:line="753" pos:column="19">getGeneralization<pos:position pos:line="753" pos:column="36"/></name><parameter_list pos:line="753" pos:column="36">(<parameter><decl><type><name pos:line="753" pos:column="37">Object<pos:position pos:line="753" pos:column="43"/></name></type> <name pos:line="753" pos:column="44">achild<pos:position pos:line="753" pos:column="50"/></name></decl></parameter>,
					     <parameter><decl><type><name pos:line="754" pos:column="46">Object<pos:position pos:line="754" pos:column="52"/></name></type> <name pos:line="754" pos:column="53">aparent<pos:position pos:line="754" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="754" pos:column="61"/></parameter_list> <block pos:line="754" pos:column="62">{
        <decl_stmt><decl><type><name pos:line="755" pos:column="9">MGeneralizableElement<pos:position pos:line="755" pos:column="30"/></name></type> <name pos:line="755" pos:column="31">child<pos:position pos:line="755" pos:column="36"/></name> <init pos:line="755" pos:column="37">= <expr><operator pos:line="755" pos:column="39">(<pos:position pos:line="755" pos:column="40"/></operator><name pos:line="755" pos:column="40">MGeneralizableElement<pos:position pos:line="755" pos:column="61"/></name><operator pos:line="755" pos:column="61">)<pos:position pos:line="755" pos:column="62"/></operator> <name pos:line="755" pos:column="63">achild<pos:position pos:line="755" pos:column="69"/></name></expr></init></decl>;<pos:position pos:line="755" pos:column="70"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="756" pos:column="9">MGeneralizableElement<pos:position pos:line="756" pos:column="30"/></name></type> <name pos:line="756" pos:column="31">parent<pos:position pos:line="756" pos:column="37"/></name> <init pos:line="756" pos:column="38">= <expr><operator pos:line="756" pos:column="40">(<pos:position pos:line="756" pos:column="41"/></operator><name pos:line="756" pos:column="41">MGeneralizableElement<pos:position pos:line="756" pos:column="62"/></name><operator pos:line="756" pos:column="62">)<pos:position pos:line="756" pos:column="63"/></operator> <name pos:line="756" pos:column="64">aparent<pos:position pos:line="756" pos:column="71"/></name></expr></init></decl>;<pos:position pos:line="756" pos:column="72"/></decl_stmt>
        <if pos:line="757" pos:column="9">if <condition pos:line="757" pos:column="12">(<expr><name pos:line="757" pos:column="13">child<pos:position pos:line="757" pos:column="18"/></name> <operator pos:line="757" pos:column="19">==<pos:position pos:line="757" pos:column="21"/></operator> <literal type="null" pos:line="757" pos:column="22">null<pos:position pos:line="757" pos:column="26"/></literal> <operator pos:line="757" pos:column="27">||<pos:position pos:line="757" pos:column="29"/></operator> <name pos:line="757" pos:column="30">parent<pos:position pos:line="757" pos:column="36"/></name> <operator pos:line="757" pos:column="37">==<pos:position pos:line="757" pos:column="39"/></operator> <literal type="null" pos:line="757" pos:column="40">null<pos:position pos:line="757" pos:column="44"/></literal></expr>)<pos:position pos:line="757" pos:column="45"/></condition><then pos:line="757" pos:column="45"> <block pos:line="757" pos:column="46">{
            <return pos:line="758" pos:column="13">return <expr><literal type="null" pos:line="758" pos:column="20">null<pos:position pos:line="758" pos:column="24"/></literal></expr>;<pos:position pos:line="758" pos:column="25"/></return>
        }<pos:position pos:line="759" pos:column="10"/></block></then></if>
        <decl_stmt><decl><type><name pos:line="760" pos:column="9">Iterator<pos:position pos:line="760" pos:column="17"/></name></type> <name pos:line="760" pos:column="18">it<pos:position pos:line="760" pos:column="20"/></name> <init pos:line="760" pos:column="21">= <expr><call><name><name pos:line="760" pos:column="23">child<pos:position pos:line="760" pos:column="28"/></name><operator pos:line="760" pos:column="28">.<pos:position pos:line="760" pos:column="29"/></operator><name pos:line="760" pos:column="29">getGeneralizations<pos:position pos:line="760" pos:column="47"/></name></name><argument_list pos:line="760" pos:column="47">()<pos:position pos:line="760" pos:column="49"/></argument_list></call><operator pos:line="760" pos:column="49">.<pos:position pos:line="760" pos:column="50"/></operator><call><name pos:line="760" pos:column="50">iterator<pos:position pos:line="760" pos:column="58"/></name><argument_list pos:line="760" pos:column="58">()<pos:position pos:line="760" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="760" pos:column="61"/></decl_stmt>
        <while pos:line="761" pos:column="9">while <condition pos:line="761" pos:column="15">(<expr><call><name><name pos:line="761" pos:column="16">it<pos:position pos:line="761" pos:column="18"/></name><operator pos:line="761" pos:column="18">.<pos:position pos:line="761" pos:column="19"/></operator><name pos:line="761" pos:column="19">hasNext<pos:position pos:line="761" pos:column="26"/></name></name><argument_list pos:line="761" pos:column="26">()<pos:position pos:line="761" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="761" pos:column="29"/></condition> <block pos:line="761" pos:column="30">{
            <decl_stmt><decl><type><name pos:line="762" pos:column="13">MGeneralization<pos:position pos:line="762" pos:column="28"/></name></type> <name pos:line="762" pos:column="29">gen<pos:position pos:line="762" pos:column="32"/></name> <init pos:line="762" pos:column="33">= <expr><operator pos:line="762" pos:column="35">(<pos:position pos:line="762" pos:column="36"/></operator><name pos:line="762" pos:column="36">MGeneralization<pos:position pos:line="762" pos:column="51"/></name><operator pos:line="762" pos:column="51">)<pos:position pos:line="762" pos:column="52"/></operator> <call><name><name pos:line="762" pos:column="53">it<pos:position pos:line="762" pos:column="55"/></name><operator pos:line="762" pos:column="55">.<pos:position pos:line="762" pos:column="56"/></operator><name pos:line="762" pos:column="56">next<pos:position pos:line="762" pos:column="60"/></name></name><argument_list pos:line="762" pos:column="60">()<pos:position pos:line="762" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="762" pos:column="63"/></decl_stmt>
            <if pos:line="763" pos:column="13">if <condition pos:line="763" pos:column="16">(<expr><call><name><name pos:line="763" pos:column="17">gen<pos:position pos:line="763" pos:column="20"/></name><operator pos:line="763" pos:column="20">.<pos:position pos:line="763" pos:column="21"/></operator><name pos:line="763" pos:column="21">getParent<pos:position pos:line="763" pos:column="30"/></name></name><argument_list pos:line="763" pos:column="30">()<pos:position pos:line="763" pos:column="32"/></argument_list></call> <operator pos:line="763" pos:column="33">==<pos:position pos:line="763" pos:column="35"/></operator> <name pos:line="763" pos:column="36">parent<pos:position pos:line="763" pos:column="42"/></name></expr>)<pos:position pos:line="763" pos:column="43"/></condition><then pos:line="763" pos:column="43"> <block pos:line="763" pos:column="44">{
                <return pos:line="764" pos:column="17">return <expr><name pos:line="764" pos:column="24">gen<pos:position pos:line="764" pos:column="27"/></name></expr>;<pos:position pos:line="764" pos:column="28"/></return>
            }<pos:position pos:line="765" pos:column="14"/></block></then></if>
        }<pos:position pos:line="766" pos:column="10"/></block></while>
        <return pos:line="767" pos:column="9">return <expr><literal type="null" pos:line="767" pos:column="16">null<pos:position pos:line="767" pos:column="20"/></literal></expr>;<pos:position pos:line="767" pos:column="21"/></return>
    }<pos:position pos:line="768" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="770" pos:column="5">/**
     * @see org.argouml.model.CoreHelper#getBody(java.lang.Object)
     */</comment>
    <function><specifier pos:line="773" pos:column="5">public<pos:position pos:line="773" pos:column="11"/></specifier> <type><name pos:line="773" pos:column="12">String<pos:position pos:line="773" pos:column="18"/></name></type> <name pos:line="773" pos:column="19">getBody<pos:position pos:line="773" pos:column="26"/></name><parameter_list pos:line="773" pos:column="26">(<parameter><decl><type><name pos:line="773" pos:column="27">Object<pos:position pos:line="773" pos:column="33"/></name></type> <name pos:line="773" pos:column="34">comment<pos:position pos:line="773" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="773" pos:column="42"/></parameter_list> <block pos:line="773" pos:column="43">{
        <if pos:line="774" pos:column="9">if <condition pos:line="774" pos:column="12">(<expr><name pos:line="774" pos:column="13">comment<pos:position pos:line="774" pos:column="20"/></name> <operator pos:line="774" pos:column="21">instanceof<pos:position pos:line="774" pos:column="31"/></operator> <name pos:line="774" pos:column="32">MComment<pos:position pos:line="774" pos:column="40"/></name></expr>)<pos:position pos:line="774" pos:column="41"/></condition><then pos:line="774" pos:column="41"> <block pos:line="774" pos:column="42">{
            <comment type="block" pos:line="775" pos:column="13">/* In UML 1.3, get it from the name.
             * From UML 1.4, get it from the body.
             */</comment>
            <return pos:line="778" pos:column="13">return <expr><operator pos:line="778" pos:column="20">(<pos:position pos:line="778" pos:column="21"/></operator><operator pos:line="778" pos:column="21">(<pos:position pos:line="778" pos:column="22"/></operator><name pos:line="778" pos:column="22">MComment<pos:position pos:line="778" pos:column="30"/></name><operator pos:line="778" pos:column="30">)<pos:position pos:line="778" pos:column="31"/></operator> <name pos:line="778" pos:column="32">comment<pos:position pos:line="778" pos:column="39"/></name><operator pos:line="778" pos:column="39">)<pos:position pos:line="778" pos:column="40"/></operator><operator pos:line="778" pos:column="40">.<pos:position pos:line="778" pos:column="41"/></operator><call><name pos:line="778" pos:column="41">getName<pos:position pos:line="778" pos:column="48"/></name><argument_list pos:line="778" pos:column="48">()<pos:position pos:line="778" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="778" pos:column="51"/></return>
        }<pos:position pos:line="779" pos:column="10"/></block></then></if>
        <throw pos:line="780" pos:column="9">throw <expr><operator pos:line="780" pos:column="15">new<pos:position pos:line="780" pos:column="18"/></operator> <call><name pos:line="780" pos:column="19">IllegalArgumentException<pos:position pos:line="780" pos:column="43"/></name><argument_list pos:line="780" pos:column="43">()<pos:position pos:line="780" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="780" pos:column="46"/></throw>
    }<pos:position pos:line="781" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="783" pos:column="5">/**
     * Returns all flows from some source modelelement to a target
     * modelelement.&lt;p&gt;
     *
     * @param source is the source model element.
     * @param target is the target model element.
     * @return Collection
     */</comment>
    <function><specifier pos:line="791" pos:column="5">public<pos:position pos:line="791" pos:column="11"/></specifier> <type><name pos:line="791" pos:column="12">Collection<pos:position pos:line="791" pos:column="22"/></name></type> <name pos:line="791" pos:column="23">getFlows<pos:position pos:line="791" pos:column="31"/></name><parameter_list pos:line="791" pos:column="31">(<parameter><decl><type><name pos:line="791" pos:column="32">Object<pos:position pos:line="791" pos:column="38"/></name></type> <name pos:line="791" pos:column="39">source<pos:position pos:line="791" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="791" pos:column="47">Object<pos:position pos:line="791" pos:column="53"/></name></type> <name pos:line="791" pos:column="54">target<pos:position pos:line="791" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="791" pos:column="61"/></parameter_list> <block pos:line="791" pos:column="62">{
        <if pos:line="792" pos:column="9">if <condition pos:line="792" pos:column="12">(<expr><name pos:line="792" pos:column="13">source<pos:position pos:line="792" pos:column="19"/></name> <operator pos:line="792" pos:column="20">==<pos:position pos:line="792" pos:column="22"/></operator> <literal type="null" pos:line="792" pos:column="23">null<pos:position pos:line="792" pos:column="27"/></literal> <operator pos:line="792" pos:column="28">||<pos:position pos:line="792" pos:column="30"/></operator> <name pos:line="792" pos:column="31">target<pos:position pos:line="792" pos:column="37"/></name> <operator pos:line="792" pos:column="38">==<pos:position pos:line="792" pos:column="40"/></operator> <literal type="null" pos:line="792" pos:column="41">null<pos:position pos:line="792" pos:column="45"/></literal></expr>)<pos:position pos:line="792" pos:column="46"/></condition><then pos:line="792" pos:column="46"> <block pos:line="792" pos:column="47">{
            <return pos:line="793" pos:column="13">return <expr><literal type="null" pos:line="793" pos:column="20">null<pos:position pos:line="793" pos:column="24"/></literal></expr>;<pos:position pos:line="793" pos:column="25"/></return>
        }<pos:position pos:line="794" pos:column="10"/></block></then></if>
        <if pos:line="795" pos:column="9">if <condition pos:line="795" pos:column="12">(<expr><operator pos:line="795" pos:column="13">!<pos:position pos:line="795" pos:column="14"/></operator><operator pos:line="795" pos:column="14">(<pos:position pos:line="795" pos:column="15"/></operator><name pos:line="795" pos:column="15">source<pos:position pos:line="795" pos:column="21"/></name> <operator pos:line="795" pos:column="22">instanceof<pos:position pos:line="795" pos:column="32"/></operator> <name pos:line="795" pos:column="33">MModelElement<pos:position pos:line="795" pos:column="46"/></name><operator pos:line="795" pos:column="46">)<pos:position pos:line="795" pos:column="47"/></operator></expr>)<pos:position pos:line="795" pos:column="48"/></condition><then pos:line="795" pos:column="48"> <block pos:line="795" pos:column="49">{
            <throw pos:line="796" pos:column="13">throw <expr><operator pos:line="796" pos:column="19">new<pos:position pos:line="796" pos:column="22"/></operator> <call><name pos:line="796" pos:column="23">IllegalArgumentException<pos:position pos:line="796" pos:column="47"/></name><argument_list pos:line="796" pos:column="47">(<argument><expr><literal type="string" pos:line="796" pos:column="48">"source"<pos:position pos:line="796" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="796" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="796" pos:column="58"/></throw>
        }<pos:position pos:line="797" pos:column="10"/></block></then></if>
        <if pos:line="798" pos:column="9">if <condition pos:line="798" pos:column="12">(<expr><operator pos:line="798" pos:column="13">!<pos:position pos:line="798" pos:column="14"/></operator><operator pos:line="798" pos:column="14">(<pos:position pos:line="798" pos:column="15"/></operator><name pos:line="798" pos:column="15">target<pos:position pos:line="798" pos:column="21"/></name> <operator pos:line="798" pos:column="22">instanceof<pos:position pos:line="798" pos:column="32"/></operator> <name pos:line="798" pos:column="33">MModelElement<pos:position pos:line="798" pos:column="46"/></name><operator pos:line="798" pos:column="46">)<pos:position pos:line="798" pos:column="47"/></operator></expr>)<pos:position pos:line="798" pos:column="48"/></condition><then pos:line="798" pos:column="48"> <block pos:line="798" pos:column="49">{
            <throw pos:line="799" pos:column="13">throw <expr><operator pos:line="799" pos:column="19">new<pos:position pos:line="799" pos:column="22"/></operator> <call><name pos:line="799" pos:column="23">IllegalArgumentException<pos:position pos:line="799" pos:column="47"/></name><argument_list pos:line="799" pos:column="47">(<argument><expr><literal type="string" pos:line="799" pos:column="48">"target"<pos:position pos:line="799" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="799" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="799" pos:column="58"/></throw>
        }<pos:position pos:line="800" pos:column="10"/></block></then></if>

        <decl_stmt><decl><type><name pos:line="802" pos:column="9">List<pos:position pos:line="802" pos:column="13"/></name></type> <name pos:line="802" pos:column="14">ret<pos:position pos:line="802" pos:column="17"/></name> <init pos:line="802" pos:column="18">= <expr><operator pos:line="802" pos:column="20">new<pos:position pos:line="802" pos:column="23"/></operator> <call><name pos:line="802" pos:column="24">ArrayList<pos:position pos:line="802" pos:column="33"/></name><argument_list pos:line="802" pos:column="33">()<pos:position pos:line="802" pos:column="35"/></argument_list></call></expr></init></decl>;<pos:position pos:line="802" pos:column="36"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="803" pos:column="9">Collection<pos:position pos:line="803" pos:column="19"/></name></type> <name pos:line="803" pos:column="20">targetFlows<pos:position pos:line="803" pos:column="31"/></name> <init pos:line="803" pos:column="32">= <expr><operator pos:line="803" pos:column="34">(<pos:position pos:line="803" pos:column="35"/></operator><operator pos:line="803" pos:column="35">(<pos:position pos:line="803" pos:column="36"/></operator><name pos:line="803" pos:column="36">MModelElement<pos:position pos:line="803" pos:column="49"/></name><operator pos:line="803" pos:column="49">)<pos:position pos:line="803" pos:column="50"/></operator> <name pos:line="803" pos:column="51">target<pos:position pos:line="803" pos:column="57"/></name><operator pos:line="803" pos:column="57">)<pos:position pos:line="803" pos:column="58"/></operator><operator pos:line="803" pos:column="58">.<pos:position pos:line="803" pos:column="59"/></operator><call><name pos:line="803" pos:column="59">getTargetFlows<pos:position pos:line="803" pos:column="73"/></name><argument_list pos:line="803" pos:column="73">()<pos:position pos:line="803" pos:column="75"/></argument_list></call></expr></init></decl>;<pos:position pos:line="803" pos:column="76"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="804" pos:column="9">Iterator<pos:position pos:line="804" pos:column="17"/></name></type> <name pos:line="804" pos:column="18">it<pos:position pos:line="804" pos:column="20"/></name> <init pos:line="804" pos:column="21">= <expr><operator pos:line="804" pos:column="23">(<pos:position pos:line="804" pos:column="24"/></operator><operator pos:line="804" pos:column="24">(<pos:position pos:line="804" pos:column="25"/></operator><name pos:line="804" pos:column="25">MModelElement<pos:position pos:line="804" pos:column="38"/></name><operator pos:line="804" pos:column="38">)<pos:position pos:line="804" pos:column="39"/></operator> <name pos:line="804" pos:column="40">source<pos:position pos:line="804" pos:column="46"/></name><operator pos:line="804" pos:column="46">)<pos:position pos:line="804" pos:column="47"/></operator><operator pos:line="804" pos:column="47">.<pos:position pos:line="804" pos:column="48"/></operator><call><name pos:line="804" pos:column="48">getSourceFlows<pos:position pos:line="804" pos:column="62"/></name><argument_list pos:line="804" pos:column="62">()<pos:position pos:line="804" pos:column="64"/></argument_list></call><operator pos:line="804" pos:column="64">.<pos:position pos:line="804" pos:column="65"/></operator><call><name pos:line="804" pos:column="65">iterator<pos:position pos:line="804" pos:column="73"/></name><argument_list pos:line="804" pos:column="73">()<pos:position pos:line="804" pos:column="75"/></argument_list></call></expr></init></decl>;<pos:position pos:line="804" pos:column="76"/></decl_stmt>
        <while pos:line="805" pos:column="9">while <condition pos:line="805" pos:column="15">(<expr><call><name><name pos:line="805" pos:column="16">it<pos:position pos:line="805" pos:column="18"/></name><operator pos:line="805" pos:column="18">.<pos:position pos:line="805" pos:column="19"/></operator><name pos:line="805" pos:column="19">hasNext<pos:position pos:line="805" pos:column="26"/></name></name><argument_list pos:line="805" pos:column="26">()<pos:position pos:line="805" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="805" pos:column="29"/></condition> <block pos:line="805" pos:column="30">{
            <decl_stmt><decl><type><name pos:line="806" pos:column="13">MFlow<pos:position pos:line="806" pos:column="18"/></name></type> <name pos:line="806" pos:column="19">flow<pos:position pos:line="806" pos:column="23"/></name> <init pos:line="806" pos:column="24">= <expr><operator pos:line="806" pos:column="26">(<pos:position pos:line="806" pos:column="27"/></operator><name pos:line="806" pos:column="27">MFlow<pos:position pos:line="806" pos:column="32"/></name><operator pos:line="806" pos:column="32">)<pos:position pos:line="806" pos:column="33"/></operator> <call><name><name pos:line="806" pos:column="34">it<pos:position pos:line="806" pos:column="36"/></name><operator pos:line="806" pos:column="36">.<pos:position pos:line="806" pos:column="37"/></operator><name pos:line="806" pos:column="37">next<pos:position pos:line="806" pos:column="41"/></name></name><argument_list pos:line="806" pos:column="41">()<pos:position pos:line="806" pos:column="43"/></argument_list></call></expr></init></decl>;<pos:position pos:line="806" pos:column="44"/></decl_stmt>
            <if pos:line="807" pos:column="13">if <condition pos:line="807" pos:column="16">(<expr><call><name><name pos:line="807" pos:column="17">targetFlows<pos:position pos:line="807" pos:column="28"/></name><operator pos:line="807" pos:column="28">.<pos:position pos:line="807" pos:column="29"/></operator><name pos:line="807" pos:column="29">contains<pos:position pos:line="807" pos:column="37"/></name></name><argument_list pos:line="807" pos:column="37">(<argument><expr><name pos:line="807" pos:column="38">flow<pos:position pos:line="807" pos:column="42"/></name></expr></argument>)<pos:position pos:line="807" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="807" pos:column="44"/></condition><then pos:line="807" pos:column="44"> <block pos:line="807" pos:column="45">{
                <expr_stmt><expr><call><name><name pos:line="808" pos:column="17">ret<pos:position pos:line="808" pos:column="20"/></name><operator pos:line="808" pos:column="20">.<pos:position pos:line="808" pos:column="21"/></operator><name pos:line="808" pos:column="21">add<pos:position pos:line="808" pos:column="24"/></name></name><argument_list pos:line="808" pos:column="24">(<argument><expr><name pos:line="808" pos:column="25">flow<pos:position pos:line="808" pos:column="29"/></name></expr></argument>)<pos:position pos:line="808" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="808" pos:column="31"/></expr_stmt>
            }<pos:position pos:line="809" pos:column="14"/></block></then></if>
        }<pos:position pos:line="810" pos:column="10"/></block></while>
        <return pos:line="811" pos:column="9">return <expr><name pos:line="811" pos:column="16">ret<pos:position pos:line="811" pos:column="19"/></name></expr>;<pos:position pos:line="811" pos:column="20"/></return>
    }<pos:position pos:line="812" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="814" pos:column="5">/**
     * Returns all elements that extend some class.
     *
     * @param clazz is the class (a generalizable element)
     * @return Collection
     */</comment>
    <function><specifier pos:line="820" pos:column="5">public<pos:position pos:line="820" pos:column="11"/></specifier> <type><name pos:line="820" pos:column="12">Collection<pos:position pos:line="820" pos:column="22"/></name></type> <name pos:line="820" pos:column="23">getExtendingElements<pos:position pos:line="820" pos:column="43"/></name><parameter_list pos:line="820" pos:column="43">(<parameter><decl><type><name pos:line="820" pos:column="44">Object<pos:position pos:line="820" pos:column="50"/></name></type> <name pos:line="820" pos:column="51">clazz<pos:position pos:line="820" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="820" pos:column="57"/></parameter_list> <block pos:line="820" pos:column="58">{
        <if pos:line="821" pos:column="9">if <condition pos:line="821" pos:column="12">(<expr><name pos:line="821" pos:column="13">clazz<pos:position pos:line="821" pos:column="18"/></name> <operator pos:line="821" pos:column="19">==<pos:position pos:line="821" pos:column="21"/></operator> <literal type="null" pos:line="821" pos:column="22">null<pos:position pos:line="821" pos:column="26"/></literal></expr>)<pos:position pos:line="821" pos:column="27"/></condition><then pos:line="821" pos:column="27"> <block pos:line="821" pos:column="28">{
            <return pos:line="822" pos:column="13">return <expr><operator pos:line="822" pos:column="20">new<pos:position pos:line="822" pos:column="23"/></operator> <call><name pos:line="822" pos:column="24">ArrayList<pos:position pos:line="822" pos:column="33"/></name><argument_list pos:line="822" pos:column="33">()<pos:position pos:line="822" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="822" pos:column="36"/></return>
        }<pos:position pos:line="823" pos:column="10"/></block></then></if>
        <decl_stmt><decl><type><name pos:line="824" pos:column="9">Iterator<pos:position pos:line="824" pos:column="17"/></name></type> <name pos:line="824" pos:column="18">it<pos:position pos:line="824" pos:column="20"/></name> <init pos:line="824" pos:column="21">= <expr><call><name><name pos:line="824" pos:column="23">nsmodel<pos:position pos:line="824" pos:column="30"/></name><operator pos:line="824" pos:column="30">.<pos:position pos:line="824" pos:column="31"/></operator><name pos:line="824" pos:column="31">getFacade<pos:position pos:line="824" pos:column="40"/></name></name><argument_list pos:line="824" pos:column="40">()<pos:position pos:line="824" pos:column="42"/></argument_list></call><operator pos:line="824" pos:column="42">.<pos:position pos:line="824" pos:column="43"/></operator><call><name pos:line="824" pos:column="43">getSpecializations<pos:position pos:line="824" pos:column="61"/></name><argument_list pos:line="824" pos:column="61">(<argument><expr><name pos:line="824" pos:column="62">clazz<pos:position pos:line="824" pos:column="67"/></name></expr></argument>)<pos:position pos:line="824" pos:column="68"/></argument_list></call><operator pos:line="824" pos:column="68">.<pos:position pos:line="824" pos:column="69"/></operator><call><name pos:line="824" pos:column="69">iterator<pos:position pos:line="824" pos:column="77"/></name><argument_list pos:line="824" pos:column="77">()<pos:position pos:line="824" pos:column="79"/></argument_list></call></expr></init></decl>;<pos:position pos:line="824" pos:column="80"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="825" pos:column="9">List<pos:position pos:line="825" pos:column="13"/></name></type> <name pos:line="825" pos:column="14">list<pos:position pos:line="825" pos:column="18"/></name> <init pos:line="825" pos:column="19">= <expr><operator pos:line="825" pos:column="21">new<pos:position pos:line="825" pos:column="24"/></operator> <call><name pos:line="825" pos:column="25">ArrayList<pos:position pos:line="825" pos:column="34"/></name><argument_list pos:line="825" pos:column="34">()<pos:position pos:line="825" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="825" pos:column="37"/></decl_stmt>
        <while pos:line="826" pos:column="9">while <condition pos:line="826" pos:column="15">(<expr><call><name><name pos:line="826" pos:column="16">it<pos:position pos:line="826" pos:column="18"/></name><operator pos:line="826" pos:column="18">.<pos:position pos:line="826" pos:column="19"/></operator><name pos:line="826" pos:column="19">hasNext<pos:position pos:line="826" pos:column="26"/></name></name><argument_list pos:line="826" pos:column="26">()<pos:position pos:line="826" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="826" pos:column="29"/></condition> <block pos:line="826" pos:column="30">{
            <decl_stmt><decl><type><name pos:line="827" pos:column="13">MGeneralization<pos:position pos:line="827" pos:column="28"/></name></type> <name pos:line="827" pos:column="29">gen<pos:position pos:line="827" pos:column="32"/></name> <init pos:line="827" pos:column="33">= <expr><operator pos:line="827" pos:column="35">(<pos:position pos:line="827" pos:column="36"/></operator><name pos:line="827" pos:column="36">MGeneralization<pos:position pos:line="827" pos:column="51"/></name><operator pos:line="827" pos:column="51">)<pos:position pos:line="827" pos:column="52"/></operator> <call><name><name pos:line="827" pos:column="53">it<pos:position pos:line="827" pos:column="55"/></name><operator pos:line="827" pos:column="55">.<pos:position pos:line="827" pos:column="56"/></operator><name pos:line="827" pos:column="56">next<pos:position pos:line="827" pos:column="60"/></name></name><argument_list pos:line="827" pos:column="60">()<pos:position pos:line="827" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="827" pos:column="63"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="828" pos:column="13">MGeneralizableElement<pos:position pos:line="828" pos:column="34"/></name></type> <name pos:line="828" pos:column="35">client<pos:position pos:line="828" pos:column="41"/></name> <init pos:line="828" pos:column="42">=
                <expr><operator pos:line="829" pos:column="17">(<pos:position pos:line="829" pos:column="18"/></operator><name pos:line="829" pos:column="18">MGeneralizableElement<pos:position pos:line="829" pos:column="39"/></name><operator pos:line="829" pos:column="39">)<pos:position pos:line="829" pos:column="40"/></operator> <call><name><name pos:line="829" pos:column="41">nsmodel<pos:position pos:line="829" pos:column="48"/></name><operator pos:line="829" pos:column="48">.<pos:position pos:line="829" pos:column="49"/></operator><name pos:line="829" pos:column="49">getFacade<pos:position pos:line="829" pos:column="58"/></name></name><argument_list pos:line="829" pos:column="58">()<pos:position pos:line="829" pos:column="60"/></argument_list></call><operator pos:line="829" pos:column="60">.<pos:position pos:line="829" pos:column="61"/></operator><call><name pos:line="829" pos:column="61">getChild<pos:position pos:line="829" pos:column="69"/></name><argument_list pos:line="829" pos:column="69">(<argument><expr><name pos:line="829" pos:column="70">gen<pos:position pos:line="829" pos:column="73"/></name></expr></argument>)<pos:position pos:line="829" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="829" pos:column="75"/></decl_stmt>
            <if pos:line="830" pos:column="13">if <condition pos:line="830" pos:column="16">(<expr><name pos:line="830" pos:column="17">client<pos:position pos:line="830" pos:column="23"/></name> <operator pos:line="830" pos:column="24">!=<pos:position pos:line="830" pos:column="26"/></operator> <literal type="null" pos:line="830" pos:column="27">null<pos:position pos:line="830" pos:column="31"/></literal></expr>)<pos:position pos:line="830" pos:column="32"/></condition><then pos:line="830" pos:column="32"> <block pos:line="830" pos:column="33">{
                <expr_stmt><expr><call><name><name pos:line="831" pos:column="17">list<pos:position pos:line="831" pos:column="21"/></name><operator pos:line="831" pos:column="21">.<pos:position pos:line="831" pos:column="22"/></operator><name pos:line="831" pos:column="22">add<pos:position pos:line="831" pos:column="25"/></name></name><argument_list pos:line="831" pos:column="25">(<argument><expr><name pos:line="831" pos:column="26">client<pos:position pos:line="831" pos:column="32"/></name></expr></argument>)<pos:position pos:line="831" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="831" pos:column="34"/></expr_stmt>
            }<pos:position pos:line="832" pos:column="14"/></block></then></if>
        }<pos:position pos:line="833" pos:column="10"/></block></while>
        <return pos:line="834" pos:column="9">return <expr><name pos:line="834" pos:column="16">list<pos:position pos:line="834" pos:column="20"/></name></expr>;<pos:position pos:line="834" pos:column="21"/></return>
    }<pos:position pos:line="835" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="837" pos:column="5">/**
     * Returns all classifiers that extend some classifier.
     *
     * @param clazz is the classifier.
     * @return Collection
     */</comment>
    <function><specifier pos:line="843" pos:column="5">public<pos:position pos:line="843" pos:column="11"/></specifier> <type><name pos:line="843" pos:column="12">Collection<pos:position pos:line="843" pos:column="22"/></name></type> <name pos:line="843" pos:column="23">getExtendingClassifiers<pos:position pos:line="843" pos:column="46"/></name><parameter_list pos:line="843" pos:column="46">(<parameter><decl><type><name pos:line="843" pos:column="47">Object<pos:position pos:line="843" pos:column="53"/></name></type> <name pos:line="843" pos:column="54">clazz<pos:position pos:line="843" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="843" pos:column="60"/></parameter_list> <block pos:line="843" pos:column="61">{
        <if pos:line="844" pos:column="9">if <condition pos:line="844" pos:column="12">(<expr><name pos:line="844" pos:column="13">clazz<pos:position pos:line="844" pos:column="18"/></name> <operator pos:line="844" pos:column="19">==<pos:position pos:line="844" pos:column="21"/></operator> <literal type="null" pos:line="844" pos:column="22">null<pos:position pos:line="844" pos:column="26"/></literal></expr>)<pos:position pos:line="844" pos:column="27"/></condition><then pos:line="844" pos:column="27"> <block pos:line="844" pos:column="28">{
            <return pos:line="845" pos:column="13">return <expr><operator pos:line="845" pos:column="20">new<pos:position pos:line="845" pos:column="23"/></operator> <call><name pos:line="845" pos:column="24">ArrayList<pos:position pos:line="845" pos:column="33"/></name><argument_list pos:line="845" pos:column="33">()<pos:position pos:line="845" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="845" pos:column="36"/></return>
        }<pos:position pos:line="846" pos:column="10"/></block></then></if>
        <if pos:line="847" pos:column="9">if <condition pos:line="847" pos:column="12">(<expr><operator pos:line="847" pos:column="13">!<pos:position pos:line="847" pos:column="14"/></operator><operator pos:line="847" pos:column="14">(<pos:position pos:line="847" pos:column="15"/></operator><name pos:line="847" pos:column="15">clazz<pos:position pos:line="847" pos:column="20"/></name> <operator pos:line="847" pos:column="21">instanceof<pos:position pos:line="847" pos:column="31"/></operator> <name pos:line="847" pos:column="32">MClassifier<pos:position pos:line="847" pos:column="43"/></name><operator pos:line="847" pos:column="43">)<pos:position pos:line="847" pos:column="44"/></operator></expr>)<pos:position pos:line="847" pos:column="45"/></condition><then pos:line="847" pos:column="45"> <block pos:line="847" pos:column="46">{
            <throw pos:line="848" pos:column="13">throw <expr><operator pos:line="848" pos:column="19">new<pos:position pos:line="848" pos:column="22"/></operator> <call><name pos:line="848" pos:column="23">IllegalArgumentException<pos:position pos:line="848" pos:column="47"/></name><argument_list pos:line="848" pos:column="47">()<pos:position pos:line="848" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="848" pos:column="50"/></throw>
        }<pos:position pos:line="849" pos:column="10"/></block></then></if>

        <decl_stmt><decl><type><name pos:line="851" pos:column="9">Iterator<pos:position pos:line="851" pos:column="17"/></name></type> <name pos:line="851" pos:column="18">it<pos:position pos:line="851" pos:column="20"/></name> <init pos:line="851" pos:column="21">=
            <expr><operator pos:line="852" pos:column="13">(<pos:position pos:line="852" pos:column="14"/></operator><operator pos:line="852" pos:column="14">(<pos:position pos:line="852" pos:column="15"/></operator><name pos:line="852" pos:column="15">MGeneralizableElement<pos:position pos:line="852" pos:column="36"/></name><operator pos:line="852" pos:column="36">)<pos:position pos:line="852" pos:column="37"/></operator> <name pos:line="852" pos:column="38">clazz<pos:position pos:line="852" pos:column="43"/></name><operator pos:line="852" pos:column="43">)<pos:position pos:line="852" pos:column="44"/></operator><operator pos:line="852" pos:column="44">.<pos:position pos:line="852" pos:column="45"/></operator><call><name pos:line="852" pos:column="45">getSpecializations<pos:position pos:line="852" pos:column="63"/></name><argument_list pos:line="852" pos:column="63">()<pos:position pos:line="852" pos:column="65"/></argument_list></call><operator pos:line="852" pos:column="65">.<pos:position pos:line="852" pos:column="66"/></operator><call><name pos:line="852" pos:column="66">iterator<pos:position pos:line="852" pos:column="74"/></name><argument_list pos:line="852" pos:column="74">()<pos:position pos:line="852" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="852" pos:column="77"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="853" pos:column="9">List<pos:position pos:line="853" pos:column="13"/></name></type> <name pos:line="853" pos:column="14">list<pos:position pos:line="853" pos:column="18"/></name> <init pos:line="853" pos:column="19">= <expr><operator pos:line="853" pos:column="21">new<pos:position pos:line="853" pos:column="24"/></operator> <call><name pos:line="853" pos:column="25">ArrayList<pos:position pos:line="853" pos:column="34"/></name><argument_list pos:line="853" pos:column="34">()<pos:position pos:line="853" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="853" pos:column="37"/></decl_stmt>
        <while pos:line="854" pos:column="9">while <condition pos:line="854" pos:column="15">(<expr><call><name><name pos:line="854" pos:column="16">it<pos:position pos:line="854" pos:column="18"/></name><operator pos:line="854" pos:column="18">.<pos:position pos:line="854" pos:column="19"/></operator><name pos:line="854" pos:column="19">hasNext<pos:position pos:line="854" pos:column="26"/></name></name><argument_list pos:line="854" pos:column="26">()<pos:position pos:line="854" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="854" pos:column="29"/></condition> <block pos:line="854" pos:column="30">{
            <decl_stmt><decl><type><name pos:line="855" pos:column="13">MGeneralization<pos:position pos:line="855" pos:column="28"/></name></type> <name pos:line="855" pos:column="29">gen<pos:position pos:line="855" pos:column="32"/></name> <init pos:line="855" pos:column="33">= <expr><operator pos:line="855" pos:column="35">(<pos:position pos:line="855" pos:column="36"/></operator><name pos:line="855" pos:column="36">MGeneralization<pos:position pos:line="855" pos:column="51"/></name><operator pos:line="855" pos:column="51">)<pos:position pos:line="855" pos:column="52"/></operator> <call><name><name pos:line="855" pos:column="53">it<pos:position pos:line="855" pos:column="55"/></name><operator pos:line="855" pos:column="55">.<pos:position pos:line="855" pos:column="56"/></operator><name pos:line="855" pos:column="56">next<pos:position pos:line="855" pos:column="60"/></name></name><argument_list pos:line="855" pos:column="60">()<pos:position pos:line="855" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="855" pos:column="63"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="856" pos:column="13">MGeneralizableElement<pos:position pos:line="856" pos:column="34"/></name></type> <name pos:line="856" pos:column="35">client<pos:position pos:line="856" pos:column="41"/></name> <init pos:line="856" pos:column="42">= <expr><call><name><name pos:line="856" pos:column="44">gen<pos:position pos:line="856" pos:column="47"/></name><operator pos:line="856" pos:column="47">.<pos:position pos:line="856" pos:column="48"/></operator><name pos:line="856" pos:column="48">getChild<pos:position pos:line="856" pos:column="56"/></name></name><argument_list pos:line="856" pos:column="56">()<pos:position pos:line="856" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="856" pos:column="59"/></decl_stmt>
            <if pos:line="857" pos:column="13">if <condition pos:line="857" pos:column="16">(<expr><name pos:line="857" pos:column="17">client<pos:position pos:line="857" pos:column="23"/></name> <operator pos:line="857" pos:column="24">instanceof<pos:position pos:line="857" pos:column="34"/></operator> <name pos:line="857" pos:column="35">MClassifier<pos:position pos:line="857" pos:column="46"/></name></expr>)<pos:position pos:line="857" pos:column="47"/></condition><then pos:line="857" pos:column="47"> <block pos:line="857" pos:column="48">{
                <expr_stmt><expr><call><name><name pos:line="858" pos:column="17">list<pos:position pos:line="858" pos:column="21"/></name><operator pos:line="858" pos:column="21">.<pos:position pos:line="858" pos:column="22"/></operator><name pos:line="858" pos:column="22">add<pos:position pos:line="858" pos:column="25"/></name></name><argument_list pos:line="858" pos:column="25">(<argument><expr><name pos:line="858" pos:column="26">client<pos:position pos:line="858" pos:column="32"/></name></expr></argument>)<pos:position pos:line="858" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="858" pos:column="34"/></expr_stmt>
            }<pos:position pos:line="859" pos:column="14"/></block></then></if>
        }<pos:position pos:line="860" pos:column="10"/></block></while>
        <return pos:line="861" pos:column="9">return <expr><name pos:line="861" pos:column="16">list<pos:position pos:line="861" pos:column="20"/></name></expr>;<pos:position pos:line="861" pos:column="21"/></return>
    }<pos:position pos:line="862" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="864" pos:column="5">/**
     * Returns all components found in this namespace and in its children.
     *
     * @param ns is the namespace.
     * @return Collection
     */</comment>
    <function><specifier pos:line="870" pos:column="5">public<pos:position pos:line="870" pos:column="11"/></specifier> <type><name pos:line="870" pos:column="12">Collection<pos:position pos:line="870" pos:column="22"/></name></type> <name pos:line="870" pos:column="23">getAllComponents<pos:position pos:line="870" pos:column="39"/></name><parameter_list pos:line="870" pos:column="39">(<parameter><decl><type><name pos:line="870" pos:column="40">Object<pos:position pos:line="870" pos:column="46"/></name></type> <name pos:line="870" pos:column="47">ns<pos:position pos:line="870" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="870" pos:column="50"/></parameter_list> <block pos:line="870" pos:column="51">{
        <if pos:line="871" pos:column="9">if <condition pos:line="871" pos:column="12">(<expr><name pos:line="871" pos:column="13">ns<pos:position pos:line="871" pos:column="15"/></name> <operator pos:line="871" pos:column="16">==<pos:position pos:line="871" pos:column="18"/></operator> <literal type="null" pos:line="871" pos:column="19">null<pos:position pos:line="871" pos:column="23"/></literal></expr>)<pos:position pos:line="871" pos:column="24"/></condition><then pos:line="871" pos:column="24"> <block pos:line="871" pos:column="25">{
            <return pos:line="872" pos:column="13">return <expr><operator pos:line="872" pos:column="20">new<pos:position pos:line="872" pos:column="23"/></operator> <call><name pos:line="872" pos:column="24">ArrayList<pos:position pos:line="872" pos:column="33"/></name><argument_list pos:line="872" pos:column="33">()<pos:position pos:line="872" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="872" pos:column="36"/></return>
        }<pos:position pos:line="873" pos:column="10"/></block></then></if>
        <if pos:line="874" pos:column="9">if <condition pos:line="874" pos:column="12">(<expr><operator pos:line="874" pos:column="13">!<pos:position pos:line="874" pos:column="14"/></operator><operator pos:line="874" pos:column="14">(<pos:position pos:line="874" pos:column="15"/></operator><name pos:line="874" pos:column="15">ns<pos:position pos:line="874" pos:column="17"/></name> <operator pos:line="874" pos:column="18">instanceof<pos:position pos:line="874" pos:column="28"/></operator> <name pos:line="874" pos:column="29">MNamespace<pos:position pos:line="874" pos:column="39"/></name><operator pos:line="874" pos:column="39">)<pos:position pos:line="874" pos:column="40"/></operator></expr>)<pos:position pos:line="874" pos:column="41"/></condition><then pos:line="874" pos:column="41"> <block pos:line="874" pos:column="42">{
            <throw pos:line="875" pos:column="13">throw <expr><operator pos:line="875" pos:column="19">new<pos:position pos:line="875" pos:column="22"/></operator> <call><name pos:line="875" pos:column="23">IllegalArgumentException<pos:position pos:line="875" pos:column="47"/></name><argument_list pos:line="875" pos:column="47">()<pos:position pos:line="875" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="875" pos:column="50"/></throw>
        }<pos:position pos:line="876" pos:column="10"/></block></then></if>

        <decl_stmt><decl><type><name pos:line="878" pos:column="9">Iterator<pos:position pos:line="878" pos:column="17"/></name></type> <name pos:line="878" pos:column="18">it<pos:position pos:line="878" pos:column="20"/></name> <init pos:line="878" pos:column="21">= <expr><operator pos:line="878" pos:column="23">(<pos:position pos:line="878" pos:column="24"/></operator><operator pos:line="878" pos:column="24">(<pos:position pos:line="878" pos:column="25"/></operator><name pos:line="878" pos:column="25">MNamespace<pos:position pos:line="878" pos:column="35"/></name><operator pos:line="878" pos:column="35">)<pos:position pos:line="878" pos:column="36"/></operator> <name pos:line="878" pos:column="37">ns<pos:position pos:line="878" pos:column="39"/></name><operator pos:line="878" pos:column="39">)<pos:position pos:line="878" pos:column="40"/></operator><operator pos:line="878" pos:column="40">.<pos:position pos:line="878" pos:column="41"/></operator><call><name pos:line="878" pos:column="41">getOwnedElements<pos:position pos:line="878" pos:column="57"/></name><argument_list pos:line="878" pos:column="57">()<pos:position pos:line="878" pos:column="59"/></argument_list></call><operator pos:line="878" pos:column="59">.<pos:position pos:line="878" pos:column="60"/></operator><call><name pos:line="878" pos:column="60">iterator<pos:position pos:line="878" pos:column="68"/></name><argument_list pos:line="878" pos:column="68">()<pos:position pos:line="878" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="878" pos:column="71"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="879" pos:column="9">List<pos:position pos:line="879" pos:column="13"/></name></type> <name pos:line="879" pos:column="14">list<pos:position pos:line="879" pos:column="18"/></name> <init pos:line="879" pos:column="19">= <expr><operator pos:line="879" pos:column="21">new<pos:position pos:line="879" pos:column="24"/></operator> <call><name pos:line="879" pos:column="25">ArrayList<pos:position pos:line="879" pos:column="34"/></name><argument_list pos:line="879" pos:column="34">()<pos:position pos:line="879" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="879" pos:column="37"/></decl_stmt>
        <while pos:line="880" pos:column="9">while <condition pos:line="880" pos:column="15">(<expr><call><name><name pos:line="880" pos:column="16">it<pos:position pos:line="880" pos:column="18"/></name><operator pos:line="880" pos:column="18">.<pos:position pos:line="880" pos:column="19"/></operator><name pos:line="880" pos:column="19">hasNext<pos:position pos:line="880" pos:column="26"/></name></name><argument_list pos:line="880" pos:column="26">()<pos:position pos:line="880" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="880" pos:column="29"/></condition> <block pos:line="880" pos:column="30">{
            <decl_stmt><decl><type><name pos:line="881" pos:column="13">Object<pos:position pos:line="881" pos:column="19"/></name></type> <name pos:line="881" pos:column="20">o<pos:position pos:line="881" pos:column="21"/></name> <init pos:line="881" pos:column="22">= <expr><call><name><name pos:line="881" pos:column="24">it<pos:position pos:line="881" pos:column="26"/></name><operator pos:line="881" pos:column="26">.<pos:position pos:line="881" pos:column="27"/></operator><name pos:line="881" pos:column="27">next<pos:position pos:line="881" pos:column="31"/></name></name><argument_list pos:line="881" pos:column="31">()<pos:position pos:line="881" pos:column="33"/></argument_list></call></expr></init></decl>;<pos:position pos:line="881" pos:column="34"/></decl_stmt>
            <if pos:line="882" pos:column="13">if <condition pos:line="882" pos:column="16">(<expr><name pos:line="882" pos:column="17">o<pos:position pos:line="882" pos:column="18"/></name> <operator pos:line="882" pos:column="19">instanceof<pos:position pos:line="882" pos:column="29"/></operator> <name pos:line="882" pos:column="30">MNamespace<pos:position pos:line="882" pos:column="40"/></name></expr>)<pos:position pos:line="882" pos:column="41"/></condition><then pos:line="882" pos:column="41"> <block pos:line="882" pos:column="42">{
                <expr_stmt><expr><call><name><name pos:line="883" pos:column="17">list<pos:position pos:line="883" pos:column="21"/></name><operator pos:line="883" pos:column="21">.<pos:position pos:line="883" pos:column="22"/></operator><name pos:line="883" pos:column="22">addAll<pos:position pos:line="883" pos:column="28"/></name></name><argument_list pos:line="883" pos:column="28">(<argument><expr><call><name pos:line="883" pos:column="29">getAllComponents<pos:position pos:line="883" pos:column="45"/></name><argument_list pos:line="883" pos:column="45">(<argument><expr><name pos:line="883" pos:column="46">o<pos:position pos:line="883" pos:column="47"/></name></expr></argument>)<pos:position pos:line="883" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="883" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="883" pos:column="50"/></expr_stmt>
            }<pos:position pos:line="884" pos:column="14"/></block></then></if>
            <if pos:line="885" pos:column="13">if <condition pos:line="885" pos:column="16">(<expr><name pos:line="885" pos:column="17">o<pos:position pos:line="885" pos:column="18"/></name> <operator pos:line="885" pos:column="19">instanceof<pos:position pos:line="885" pos:column="29"/></operator> <name pos:line="885" pos:column="30">MComponent<pos:position pos:line="885" pos:column="40"/></name></expr>)<pos:position pos:line="885" pos:column="41"/></condition><then pos:line="885" pos:column="41"> <block pos:line="885" pos:column="42">{
                <expr_stmt><expr><call><name><name pos:line="886" pos:column="17">list<pos:position pos:line="886" pos:column="21"/></name><operator pos:line="886" pos:column="21">.<pos:position pos:line="886" pos:column="22"/></operator><name pos:line="886" pos:column="22">add<pos:position pos:line="886" pos:column="25"/></name></name><argument_list pos:line="886" pos:column="25">(<argument><expr><name pos:line="886" pos:column="26">o<pos:position pos:line="886" pos:column="27"/></name></expr></argument>)<pos:position pos:line="886" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="886" pos:column="29"/></expr_stmt>
            }<pos:position pos:line="887" pos:column="14"/></block></then></if>
        }<pos:position pos:line="888" pos:column="10"/></block></while>
        <return pos:line="889" pos:column="9">return <expr><name pos:line="889" pos:column="16">list<pos:position pos:line="889" pos:column="20"/></name></expr>;<pos:position pos:line="889" pos:column="21"/></return>
    }<pos:position pos:line="890" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="892" pos:column="5">/**
     * Returns all components found in this namespace and in its children.
     *
     * @param ns is the namespace
     * @return Collection
     */</comment>
    <function><specifier pos:line="898" pos:column="5">public<pos:position pos:line="898" pos:column="11"/></specifier> <type><name pos:line="898" pos:column="12">Collection<pos:position pos:line="898" pos:column="22"/></name></type> <name pos:line="898" pos:column="23">getAllDataTypes<pos:position pos:line="898" pos:column="38"/></name><parameter_list pos:line="898" pos:column="38">(<parameter><decl><type><name pos:line="898" pos:column="39">Object<pos:position pos:line="898" pos:column="45"/></name></type> <name pos:line="898" pos:column="46">ns<pos:position pos:line="898" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="898" pos:column="49"/></parameter_list> <block pos:line="898" pos:column="50">{
        <if pos:line="899" pos:column="9">if <condition pos:line="899" pos:column="12">(<expr><name pos:line="899" pos:column="13">ns<pos:position pos:line="899" pos:column="15"/></name> <operator pos:line="899" pos:column="16">==<pos:position pos:line="899" pos:column="18"/></operator> <literal type="null" pos:line="899" pos:column="19">null<pos:position pos:line="899" pos:column="23"/></literal></expr>)<pos:position pos:line="899" pos:column="24"/></condition><then pos:line="899" pos:column="24"> <block pos:line="899" pos:column="25">{
            <return pos:line="900" pos:column="13">return <expr><operator pos:line="900" pos:column="20">new<pos:position pos:line="900" pos:column="23"/></operator> <call><name pos:line="900" pos:column="24">ArrayList<pos:position pos:line="900" pos:column="33"/></name><argument_list pos:line="900" pos:column="33">()<pos:position pos:line="900" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="900" pos:column="36"/></return>
        }<pos:position pos:line="901" pos:column="10"/></block></then></if>
        <if pos:line="902" pos:column="9">if <condition pos:line="902" pos:column="12">(<expr><operator pos:line="902" pos:column="13">!<pos:position pos:line="902" pos:column="14"/></operator><operator pos:line="902" pos:column="14">(<pos:position pos:line="902" pos:column="15"/></operator><name pos:line="902" pos:column="15">ns<pos:position pos:line="902" pos:column="17"/></name> <operator pos:line="902" pos:column="18">instanceof<pos:position pos:line="902" pos:column="28"/></operator> <name pos:line="902" pos:column="29">MNamespace<pos:position pos:line="902" pos:column="39"/></name><operator pos:line="902" pos:column="39">)<pos:position pos:line="902" pos:column="40"/></operator></expr>)<pos:position pos:line="902" pos:column="41"/></condition><then pos:line="902" pos:column="41"> <block pos:line="902" pos:column="42">{
            <throw pos:line="903" pos:column="13">throw <expr><operator pos:line="903" pos:column="19">new<pos:position pos:line="903" pos:column="22"/></operator> <call><name pos:line="903" pos:column="23">IllegalArgumentException<pos:position pos:line="903" pos:column="47"/></name><argument_list pos:line="903" pos:column="47">()<pos:position pos:line="903" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="903" pos:column="50"/></throw>
        }<pos:position pos:line="904" pos:column="10"/></block></then></if>

        <decl_stmt><decl><type><name pos:line="906" pos:column="9">Iterator<pos:position pos:line="906" pos:column="17"/></name></type> <name pos:line="906" pos:column="18">it<pos:position pos:line="906" pos:column="20"/></name> <init pos:line="906" pos:column="21">= <expr><operator pos:line="906" pos:column="23">(<pos:position pos:line="906" pos:column="24"/></operator><operator pos:line="906" pos:column="24">(<pos:position pos:line="906" pos:column="25"/></operator><name pos:line="906" pos:column="25">MNamespace<pos:position pos:line="906" pos:column="35"/></name><operator pos:line="906" pos:column="35">)<pos:position pos:line="906" pos:column="36"/></operator> <name pos:line="906" pos:column="37">ns<pos:position pos:line="906" pos:column="39"/></name><operator pos:line="906" pos:column="39">)<pos:position pos:line="906" pos:column="40"/></operator><operator pos:line="906" pos:column="40">.<pos:position pos:line="906" pos:column="41"/></operator><call><name pos:line="906" pos:column="41">getOwnedElements<pos:position pos:line="906" pos:column="57"/></name><argument_list pos:line="906" pos:column="57">()<pos:position pos:line="906" pos:column="59"/></argument_list></call><operator pos:line="906" pos:column="59">.<pos:position pos:line="906" pos:column="60"/></operator><call><name pos:line="906" pos:column="60">iterator<pos:position pos:line="906" pos:column="68"/></name><argument_list pos:line="906" pos:column="68">()<pos:position pos:line="906" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="906" pos:column="71"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="907" pos:column="9">List<pos:position pos:line="907" pos:column="13"/></name></type> <name pos:line="907" pos:column="14">list<pos:position pos:line="907" pos:column="18"/></name> <init pos:line="907" pos:column="19">= <expr><operator pos:line="907" pos:column="21">new<pos:position pos:line="907" pos:column="24"/></operator> <call><name pos:line="907" pos:column="25">ArrayList<pos:position pos:line="907" pos:column="34"/></name><argument_list pos:line="907" pos:column="34">()<pos:position pos:line="907" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="907" pos:column="37"/></decl_stmt>
        <while pos:line="908" pos:column="9">while <condition pos:line="908" pos:column="15">(<expr><call><name><name pos:line="908" pos:column="16">it<pos:position pos:line="908" pos:column="18"/></name><operator pos:line="908" pos:column="18">.<pos:position pos:line="908" pos:column="19"/></operator><name pos:line="908" pos:column="19">hasNext<pos:position pos:line="908" pos:column="26"/></name></name><argument_list pos:line="908" pos:column="26">()<pos:position pos:line="908" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="908" pos:column="29"/></condition> <block pos:line="908" pos:column="30">{
            <decl_stmt><decl><type><name pos:line="909" pos:column="13">Object<pos:position pos:line="909" pos:column="19"/></name></type> <name pos:line="909" pos:column="20">o<pos:position pos:line="909" pos:column="21"/></name> <init pos:line="909" pos:column="22">= <expr><call><name><name pos:line="909" pos:column="24">it<pos:position pos:line="909" pos:column="26"/></name><operator pos:line="909" pos:column="26">.<pos:position pos:line="909" pos:column="27"/></operator><name pos:line="909" pos:column="27">next<pos:position pos:line="909" pos:column="31"/></name></name><argument_list pos:line="909" pos:column="31">()<pos:position pos:line="909" pos:column="33"/></argument_list></call></expr></init></decl>;<pos:position pos:line="909" pos:column="34"/></decl_stmt>
            <if pos:line="910" pos:column="13">if <condition pos:line="910" pos:column="16">(<expr><name pos:line="910" pos:column="17">o<pos:position pos:line="910" pos:column="18"/></name> <operator pos:line="910" pos:column="19">instanceof<pos:position pos:line="910" pos:column="29"/></operator> <name pos:line="910" pos:column="30">MNamespace<pos:position pos:line="910" pos:column="40"/></name></expr>)<pos:position pos:line="910" pos:column="41"/></condition><then pos:line="910" pos:column="41"> <block pos:line="910" pos:column="42">{
                <expr_stmt><expr><call><name><name pos:line="911" pos:column="17">list<pos:position pos:line="911" pos:column="21"/></name><operator pos:line="911" pos:column="21">.<pos:position pos:line="911" pos:column="22"/></operator><name pos:line="911" pos:column="22">addAll<pos:position pos:line="911" pos:column="28"/></name></name><argument_list pos:line="911" pos:column="28">(<argument><expr><call><name pos:line="911" pos:column="29">getAllDataTypes<pos:position pos:line="911" pos:column="44"/></name><argument_list pos:line="911" pos:column="44">(<argument><expr><name pos:line="911" pos:column="45">o<pos:position pos:line="911" pos:column="46"/></name></expr></argument>)<pos:position pos:line="911" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="911" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="911" pos:column="49"/></expr_stmt>
            }<pos:position pos:line="912" pos:column="14"/></block></then></if>
            <if pos:line="913" pos:column="13">if <condition pos:line="913" pos:column="16">(<expr><name pos:line="913" pos:column="17">o<pos:position pos:line="913" pos:column="18"/></name> <operator pos:line="913" pos:column="19">instanceof<pos:position pos:line="913" pos:column="29"/></operator> <name pos:line="913" pos:column="30">MDataType<pos:position pos:line="913" pos:column="39"/></name></expr>)<pos:position pos:line="913" pos:column="40"/></condition><then pos:line="913" pos:column="40"> <block pos:line="913" pos:column="41">{
                <expr_stmt><expr><call><name><name pos:line="914" pos:column="17">list<pos:position pos:line="914" pos:column="21"/></name><operator pos:line="914" pos:column="21">.<pos:position pos:line="914" pos:column="22"/></operator><name pos:line="914" pos:column="22">add<pos:position pos:line="914" pos:column="25"/></name></name><argument_list pos:line="914" pos:column="25">(<argument><expr><name pos:line="914" pos:column="26">o<pos:position pos:line="914" pos:column="27"/></name></expr></argument>)<pos:position pos:line="914" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="914" pos:column="29"/></expr_stmt>
            }<pos:position pos:line="915" pos:column="14"/></block></then></if>
        }<pos:position pos:line="916" pos:column="10"/></block></while>
        <return pos:line="917" pos:column="9">return <expr><name pos:line="917" pos:column="16">list<pos:position pos:line="917" pos:column="20"/></name></expr>;<pos:position pos:line="917" pos:column="21"/></return>
    }<pos:position pos:line="918" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="920" pos:column="5">/**
     * Returns all components found in this namespace and in its children.&lt;p&gt;
     *
     * @param ns is the namespace
     * @return Collection
     */</comment>
    <function><specifier pos:line="926" pos:column="5">public<pos:position pos:line="926" pos:column="11"/></specifier> <type><name pos:line="926" pos:column="12">Collection<pos:position pos:line="926" pos:column="22"/></name></type> <name pos:line="926" pos:column="23">getAllNodes<pos:position pos:line="926" pos:column="34"/></name><parameter_list pos:line="926" pos:column="34">(<parameter><decl><type><name pos:line="926" pos:column="35">Object<pos:position pos:line="926" pos:column="41"/></name></type> <name pos:line="926" pos:column="42">ns<pos:position pos:line="926" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="926" pos:column="45"/></parameter_list> <block pos:line="926" pos:column="46">{
        <if pos:line="927" pos:column="9">if <condition pos:line="927" pos:column="12">(<expr><name pos:line="927" pos:column="13">ns<pos:position pos:line="927" pos:column="15"/></name> <operator pos:line="927" pos:column="16">==<pos:position pos:line="927" pos:column="18"/></operator> <literal type="null" pos:line="927" pos:column="19">null<pos:position pos:line="927" pos:column="23"/></literal></expr>)<pos:position pos:line="927" pos:column="24"/></condition><then pos:line="927" pos:column="24"> <block pos:line="927" pos:column="25">{
            <return pos:line="928" pos:column="13">return <expr><operator pos:line="928" pos:column="20">new<pos:position pos:line="928" pos:column="23"/></operator> <call><name pos:line="928" pos:column="24">ArrayList<pos:position pos:line="928" pos:column="33"/></name><argument_list pos:line="928" pos:column="33">()<pos:position pos:line="928" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="928" pos:column="36"/></return>
        }<pos:position pos:line="929" pos:column="10"/></block></then></if>
        <if pos:line="930" pos:column="9">if <condition pos:line="930" pos:column="12">(<expr><operator pos:line="930" pos:column="13">!<pos:position pos:line="930" pos:column="14"/></operator><operator pos:line="930" pos:column="14">(<pos:position pos:line="930" pos:column="15"/></operator><name pos:line="930" pos:column="15">ns<pos:position pos:line="930" pos:column="17"/></name> <operator pos:line="930" pos:column="18">instanceof<pos:position pos:line="930" pos:column="28"/></operator> <name pos:line="930" pos:column="29">MNamespace<pos:position pos:line="930" pos:column="39"/></name><operator pos:line="930" pos:column="39">)<pos:position pos:line="930" pos:column="40"/></operator></expr>)<pos:position pos:line="930" pos:column="41"/></condition><then pos:line="930" pos:column="41"> <block pos:line="930" pos:column="42">{
            <throw pos:line="931" pos:column="13">throw <expr><operator pos:line="931" pos:column="19">new<pos:position pos:line="931" pos:column="22"/></operator> <call><name pos:line="931" pos:column="23">IllegalArgumentException<pos:position pos:line="931" pos:column="47"/></name><argument_list pos:line="931" pos:column="47">()<pos:position pos:line="931" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="931" pos:column="50"/></throw>
        }<pos:position pos:line="932" pos:column="10"/></block></then></if>

        <decl_stmt><decl><type><name pos:line="934" pos:column="9">Iterator<pos:position pos:line="934" pos:column="17"/></name></type> <name pos:line="934" pos:column="18">it<pos:position pos:line="934" pos:column="20"/></name> <init pos:line="934" pos:column="21">= <expr><operator pos:line="934" pos:column="23">(<pos:position pos:line="934" pos:column="24"/></operator><operator pos:line="934" pos:column="24">(<pos:position pos:line="934" pos:column="25"/></operator><name pos:line="934" pos:column="25">MNamespace<pos:position pos:line="934" pos:column="35"/></name><operator pos:line="934" pos:column="35">)<pos:position pos:line="934" pos:column="36"/></operator> <name pos:line="934" pos:column="37">ns<pos:position pos:line="934" pos:column="39"/></name><operator pos:line="934" pos:column="39">)<pos:position pos:line="934" pos:column="40"/></operator><operator pos:line="934" pos:column="40">.<pos:position pos:line="934" pos:column="41"/></operator><call><name pos:line="934" pos:column="41">getOwnedElements<pos:position pos:line="934" pos:column="57"/></name><argument_list pos:line="934" pos:column="57">()<pos:position pos:line="934" pos:column="59"/></argument_list></call><operator pos:line="934" pos:column="59">.<pos:position pos:line="934" pos:column="60"/></operator><call><name pos:line="934" pos:column="60">iterator<pos:position pos:line="934" pos:column="68"/></name><argument_list pos:line="934" pos:column="68">()<pos:position pos:line="934" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="934" pos:column="71"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="935" pos:column="9">List<pos:position pos:line="935" pos:column="13"/></name></type> <name pos:line="935" pos:column="14">list<pos:position pos:line="935" pos:column="18"/></name> <init pos:line="935" pos:column="19">= <expr><operator pos:line="935" pos:column="21">new<pos:position pos:line="935" pos:column="24"/></operator> <call><name pos:line="935" pos:column="25">ArrayList<pos:position pos:line="935" pos:column="34"/></name><argument_list pos:line="935" pos:column="34">()<pos:position pos:line="935" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="935" pos:column="37"/></decl_stmt>
        <while pos:line="936" pos:column="9">while <condition pos:line="936" pos:column="15">(<expr><call><name><name pos:line="936" pos:column="16">it<pos:position pos:line="936" pos:column="18"/></name><operator pos:line="936" pos:column="18">.<pos:position pos:line="936" pos:column="19"/></operator><name pos:line="936" pos:column="19">hasNext<pos:position pos:line="936" pos:column="26"/></name></name><argument_list pos:line="936" pos:column="26">()<pos:position pos:line="936" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="936" pos:column="29"/></condition> <block pos:line="936" pos:column="30">{
            <decl_stmt><decl><type><name pos:line="937" pos:column="13">Object<pos:position pos:line="937" pos:column="19"/></name></type> <name pos:line="937" pos:column="20">o<pos:position pos:line="937" pos:column="21"/></name> <init pos:line="937" pos:column="22">= <expr><call><name><name pos:line="937" pos:column="24">it<pos:position pos:line="937" pos:column="26"/></name><operator pos:line="937" pos:column="26">.<pos:position pos:line="937" pos:column="27"/></operator><name pos:line="937" pos:column="27">next<pos:position pos:line="937" pos:column="31"/></name></name><argument_list pos:line="937" pos:column="31">()<pos:position pos:line="937" pos:column="33"/></argument_list></call></expr></init></decl>;<pos:position pos:line="937" pos:column="34"/></decl_stmt>
            <if pos:line="938" pos:column="13">if <condition pos:line="938" pos:column="16">(<expr><name pos:line="938" pos:column="17">o<pos:position pos:line="938" pos:column="18"/></name> <operator pos:line="938" pos:column="19">instanceof<pos:position pos:line="938" pos:column="29"/></operator> <name pos:line="938" pos:column="30">MNamespace<pos:position pos:line="938" pos:column="40"/></name></expr>)<pos:position pos:line="938" pos:column="41"/></condition><then pos:line="938" pos:column="41"> <block pos:line="938" pos:column="42">{
                <expr_stmt><expr><call><name><name pos:line="939" pos:column="17">list<pos:position pos:line="939" pos:column="21"/></name><operator pos:line="939" pos:column="21">.<pos:position pos:line="939" pos:column="22"/></operator><name pos:line="939" pos:column="22">addAll<pos:position pos:line="939" pos:column="28"/></name></name><argument_list pos:line="939" pos:column="28">(<argument><expr><call><name pos:line="939" pos:column="29">getAllNodes<pos:position pos:line="939" pos:column="40"/></name><argument_list pos:line="939" pos:column="40">(<argument><expr><name pos:line="939" pos:column="41">o<pos:position pos:line="939" pos:column="42"/></name></expr></argument>)<pos:position pos:line="939" pos:column="43"/></argument_list></call></expr></argument>)<pos:position pos:line="939" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="939" pos:column="45"/></expr_stmt>
            }<pos:position pos:line="940" pos:column="14"/></block></then></if>
            <if pos:line="941" pos:column="13">if <condition pos:line="941" pos:column="16">(<expr><name pos:line="941" pos:column="17">o<pos:position pos:line="941" pos:column="18"/></name> <operator pos:line="941" pos:column="19">instanceof<pos:position pos:line="941" pos:column="29"/></operator> <name pos:line="941" pos:column="30">MNode<pos:position pos:line="941" pos:column="35"/></name></expr>)<pos:position pos:line="941" pos:column="36"/></condition><then pos:line="941" pos:column="36"> <block pos:line="941" pos:column="37">{
                <expr_stmt><expr><call><name><name pos:line="942" pos:column="17">list<pos:position pos:line="942" pos:column="21"/></name><operator pos:line="942" pos:column="21">.<pos:position pos:line="942" pos:column="22"/></operator><name pos:line="942" pos:column="22">add<pos:position pos:line="942" pos:column="25"/></name></name><argument_list pos:line="942" pos:column="25">(<argument><expr><name pos:line="942" pos:column="26">o<pos:position pos:line="942" pos:column="27"/></name></expr></argument>)<pos:position pos:line="942" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="942" pos:column="29"/></expr_stmt>
            }<pos:position pos:line="943" pos:column="14"/></block></then></if>
        }<pos:position pos:line="944" pos:column="10"/></block></while>
        <return pos:line="945" pos:column="9">return <expr><name pos:line="945" pos:column="16">list<pos:position pos:line="945" pos:column="20"/></name></expr>;<pos:position pos:line="945" pos:column="21"/></return>
    }<pos:position pos:line="946" pos:column="6"/></block></function>
    <comment type="block" format="javadoc" pos:line="947" pos:column="5">/**
     * Gets all classifiers that are associated to the given
     * classifier (have an association relationship with the
     * classifier).&lt;p&gt;
     *
     * @param aclassifier an MClassifier
     * @return Collection
     */</comment>
    <function><specifier pos:line="955" pos:column="5">public<pos:position pos:line="955" pos:column="11"/></specifier> <type><name pos:line="955" pos:column="12">Collection<pos:position pos:line="955" pos:column="22"/></name></type> <name pos:line="955" pos:column="23">getAssociatedClassifiers<pos:position pos:line="955" pos:column="47"/></name><parameter_list pos:line="955" pos:column="47">(<parameter><decl><type><name pos:line="955" pos:column="48">Object<pos:position pos:line="955" pos:column="54"/></name></type> <name pos:line="955" pos:column="55">aclassifier<pos:position pos:line="955" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="955" pos:column="67"/></parameter_list> <block pos:line="955" pos:column="68">{
        <decl_stmt><decl><type><name pos:line="956" pos:column="9">MClassifier<pos:position pos:line="956" pos:column="20"/></name></type> <name pos:line="956" pos:column="21">classifier<pos:position pos:line="956" pos:column="31"/></name> <init pos:line="956" pos:column="32">= <expr><operator pos:line="956" pos:column="34">(<pos:position pos:line="956" pos:column="35"/></operator><name pos:line="956" pos:column="35">MClassifier<pos:position pos:line="956" pos:column="46"/></name><operator pos:line="956" pos:column="46">)<pos:position pos:line="956" pos:column="47"/></operator> <name pos:line="956" pos:column="48">aclassifier<pos:position pos:line="956" pos:column="59"/></name></expr></init></decl>;<pos:position pos:line="956" pos:column="60"/></decl_stmt>
        <if pos:line="957" pos:column="9">if <condition pos:line="957" pos:column="12">(<expr><name pos:line="957" pos:column="13">classifier<pos:position pos:line="957" pos:column="23"/></name> <operator pos:line="957" pos:column="24">==<pos:position pos:line="957" pos:column="26"/></operator> <literal type="null" pos:line="957" pos:column="27">null<pos:position pos:line="957" pos:column="31"/></literal></expr>)<pos:position pos:line="957" pos:column="32"/></condition><then pos:line="957" pos:column="32"> <block pos:line="957" pos:column="33">{
            <return pos:line="958" pos:column="13">return <expr><operator pos:line="958" pos:column="20">new<pos:position pos:line="958" pos:column="23"/></operator> <call><name pos:line="958" pos:column="24">ArrayList<pos:position pos:line="958" pos:column="33"/></name><argument_list pos:line="958" pos:column="33">()<pos:position pos:line="958" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="958" pos:column="36"/></return>
        }<pos:position pos:line="959" pos:column="10"/></block></then></if>
        <decl_stmt><decl><type><name pos:line="960" pos:column="9">List<pos:position pos:line="960" pos:column="13"/></name></type> <name pos:line="960" pos:column="14">list<pos:position pos:line="960" pos:column="18"/></name> <init pos:line="960" pos:column="19">= <expr><operator pos:line="960" pos:column="21">new<pos:position pos:line="960" pos:column="24"/></operator> <call><name pos:line="960" pos:column="25">ArrayList<pos:position pos:line="960" pos:column="34"/></name><argument_list pos:line="960" pos:column="34">()<pos:position pos:line="960" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="960" pos:column="37"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="961" pos:column="9">Iterator<pos:position pos:line="961" pos:column="17"/></name></type> <name pos:line="961" pos:column="18">it<pos:position pos:line="961" pos:column="20"/></name> <init pos:line="961" pos:column="21">= <expr><call><name><name pos:line="961" pos:column="23">classifier<pos:position pos:line="961" pos:column="33"/></name><operator pos:line="961" pos:column="33">.<pos:position pos:line="961" pos:column="34"/></operator><name pos:line="961" pos:column="34">getAssociationEnds<pos:position pos:line="961" pos:column="52"/></name></name><argument_list pos:line="961" pos:column="52">()<pos:position pos:line="961" pos:column="54"/></argument_list></call><operator pos:line="961" pos:column="54">.<pos:position pos:line="961" pos:column="55"/></operator><call><name pos:line="961" pos:column="55">iterator<pos:position pos:line="961" pos:column="63"/></name><argument_list pos:line="961" pos:column="63">()<pos:position pos:line="961" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="961" pos:column="66"/></decl_stmt>
        <while pos:line="962" pos:column="9">while <condition pos:line="962" pos:column="15">(<expr><call><name><name pos:line="962" pos:column="16">it<pos:position pos:line="962" pos:column="18"/></name><operator pos:line="962" pos:column="18">.<pos:position pos:line="962" pos:column="19"/></operator><name pos:line="962" pos:column="19">hasNext<pos:position pos:line="962" pos:column="26"/></name></name><argument_list pos:line="962" pos:column="26">()<pos:position pos:line="962" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="962" pos:column="29"/></condition> <block pos:line="962" pos:column="30">{
            <decl_stmt><decl><type><name pos:line="963" pos:column="13">MAssociationEnd<pos:position pos:line="963" pos:column="28"/></name></type> <name pos:line="963" pos:column="29">end<pos:position pos:line="963" pos:column="32"/></name> <init pos:line="963" pos:column="33">= <expr><operator pos:line="963" pos:column="35">(<pos:position pos:line="963" pos:column="36"/></operator><name pos:line="963" pos:column="36">MAssociationEnd<pos:position pos:line="963" pos:column="51"/></name><operator pos:line="963" pos:column="51">)<pos:position pos:line="963" pos:column="52"/></operator> <call><name><name pos:line="963" pos:column="53">it<pos:position pos:line="963" pos:column="55"/></name><operator pos:line="963" pos:column="55">.<pos:position pos:line="963" pos:column="56"/></operator><name pos:line="963" pos:column="56">next<pos:position pos:line="963" pos:column="60"/></name></name><argument_list pos:line="963" pos:column="60">()<pos:position pos:line="963" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="963" pos:column="63"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="964" pos:column="13">MAssociation<pos:position pos:line="964" pos:column="25"/></name></type> <name pos:line="964" pos:column="26">assoc<pos:position pos:line="964" pos:column="31"/></name> <init pos:line="964" pos:column="32">= <expr><call><name><name pos:line="964" pos:column="34">end<pos:position pos:line="964" pos:column="37"/></name><operator pos:line="964" pos:column="37">.<pos:position pos:line="964" pos:column="38"/></operator><name pos:line="964" pos:column="38">getAssociation<pos:position pos:line="964" pos:column="52"/></name></name><argument_list pos:line="964" pos:column="52">()<pos:position pos:line="964" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="964" pos:column="55"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="965" pos:column="13">Iterator<pos:position pos:line="965" pos:column="21"/></name></type> <name pos:line="965" pos:column="22">it2<pos:position pos:line="965" pos:column="25"/></name> <init pos:line="965" pos:column="26">= <expr><call><name><name pos:line="965" pos:column="28">assoc<pos:position pos:line="965" pos:column="33"/></name><operator pos:line="965" pos:column="33">.<pos:position pos:line="965" pos:column="34"/></operator><name pos:line="965" pos:column="34">getConnections<pos:position pos:line="965" pos:column="48"/></name></name><argument_list pos:line="965" pos:column="48">()<pos:position pos:line="965" pos:column="50"/></argument_list></call><operator pos:line="965" pos:column="50">.<pos:position pos:line="965" pos:column="51"/></operator><call><name pos:line="965" pos:column="51">iterator<pos:position pos:line="965" pos:column="59"/></name><argument_list pos:line="965" pos:column="59">()<pos:position pos:line="965" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="965" pos:column="62"/></decl_stmt>
            <while pos:line="966" pos:column="13">while <condition pos:line="966" pos:column="19">(<expr><call><name><name pos:line="966" pos:column="20">it2<pos:position pos:line="966" pos:column="23"/></name><operator pos:line="966" pos:column="23">.<pos:position pos:line="966" pos:column="24"/></operator><name pos:line="966" pos:column="24">hasNext<pos:position pos:line="966" pos:column="31"/></name></name><argument_list pos:line="966" pos:column="31">()<pos:position pos:line="966" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="966" pos:column="34"/></condition> <block pos:line="966" pos:column="35">{
                <decl_stmt><decl><type><name pos:line="967" pos:column="17">MAssociationEnd<pos:position pos:line="967" pos:column="32"/></name></type> <name pos:line="967" pos:column="33">end2<pos:position pos:line="967" pos:column="37"/></name> <init pos:line="967" pos:column="38">= <expr><operator pos:line="967" pos:column="40">(<pos:position pos:line="967" pos:column="41"/></operator><name pos:line="967" pos:column="41">MAssociationEnd<pos:position pos:line="967" pos:column="56"/></name><operator pos:line="967" pos:column="56">)<pos:position pos:line="967" pos:column="57"/></operator> <call><name><name pos:line="967" pos:column="58">it2<pos:position pos:line="967" pos:column="61"/></name><operator pos:line="967" pos:column="61">.<pos:position pos:line="967" pos:column="62"/></operator><name pos:line="967" pos:column="62">next<pos:position pos:line="967" pos:column="66"/></name></name><argument_list pos:line="967" pos:column="66">()<pos:position pos:line="967" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="967" pos:column="69"/></decl_stmt>
                <if pos:line="968" pos:column="17">if <condition pos:line="968" pos:column="20">(<expr><name pos:line="968" pos:column="21">end2<pos:position pos:line="968" pos:column="25"/></name> <operator pos:line="968" pos:column="26">!=<pos:position pos:line="968" pos:column="28"/></operator> <name pos:line="968" pos:column="29">end<pos:position pos:line="968" pos:column="32"/></name></expr>)<pos:position pos:line="968" pos:column="33"/></condition><then pos:line="968" pos:column="33"> <block pos:line="968" pos:column="34">{
                    <expr_stmt><expr><call><name><name pos:line="969" pos:column="21">list<pos:position pos:line="969" pos:column="25"/></name><operator pos:line="969" pos:column="25">.<pos:position pos:line="969" pos:column="26"/></operator><name pos:line="969" pos:column="26">add<pos:position pos:line="969" pos:column="29"/></name></name><argument_list pos:line="969" pos:column="29">(<argument><expr><call><name><name pos:line="969" pos:column="30">end2<pos:position pos:line="969" pos:column="34"/></name><operator pos:line="969" pos:column="34">.<pos:position pos:line="969" pos:column="35"/></operator><name pos:line="969" pos:column="35">getType<pos:position pos:line="969" pos:column="42"/></name></name><argument_list pos:line="969" pos:column="42">()<pos:position pos:line="969" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="969" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="969" pos:column="46"/></expr_stmt>
                }<pos:position pos:line="970" pos:column="18"/></block></then></if>
            }<pos:position pos:line="971" pos:column="14"/></block></while>
        }<pos:position pos:line="972" pos:column="10"/></block></while>
        <return pos:line="973" pos:column="9">return <expr><name pos:line="973" pos:column="16">list<pos:position pos:line="973" pos:column="20"/></name></expr>;<pos:position pos:line="973" pos:column="21"/></return>
    }<pos:position pos:line="974" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="976" pos:column="5">/**
     * Gets the associations between the classifiers from and to. Returns null
     * if from or to is null or if there is no association between them.
     *
     * @param from a classifier
     * @param to a classifier
     * @return MAssociation
     */</comment>
    <function><specifier pos:line="984" pos:column="5">public<pos:position pos:line="984" pos:column="11"/></specifier> <type><name pos:line="984" pos:column="12">Collection<pos:position pos:line="984" pos:column="22"/></name></type> <name pos:line="984" pos:column="23">getAssociations<pos:position pos:line="984" pos:column="38"/></name><parameter_list pos:line="984" pos:column="38">(<parameter><decl><type><name pos:line="984" pos:column="39">Object<pos:position pos:line="984" pos:column="45"/></name></type><comment type="block" pos:line="984" pos:column="45">/*MClassifier*/</comment> <name pos:line="984" pos:column="61">from<pos:position pos:line="984" pos:column="65"/></name></decl></parameter>,
				      <parameter><decl><type><name pos:line="985" pos:column="39">Object<pos:position pos:line="985" pos:column="45"/></name></type><comment type="block" pos:line="985" pos:column="45">/*MClassifier*/</comment> <name pos:line="985" pos:column="61">to<pos:position pos:line="985" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="985" pos:column="64"/></parameter_list> <block pos:line="985" pos:column="65">{
        <decl_stmt><decl><type><name pos:line="986" pos:column="9">Set<pos:position pos:line="986" pos:column="12"/></name></type> <name pos:line="986" pos:column="13">ret<pos:position pos:line="986" pos:column="16"/></name> <init pos:line="986" pos:column="17">= <expr><operator pos:line="986" pos:column="19">new<pos:position pos:line="986" pos:column="22"/></operator> <call><name pos:line="986" pos:column="23">HashSet<pos:position pos:line="986" pos:column="30"/></name><argument_list pos:line="986" pos:column="30">()<pos:position pos:line="986" pos:column="32"/></argument_list></call></expr></init></decl>;<pos:position pos:line="986" pos:column="33"/></decl_stmt>
        <if pos:line="987" pos:column="9">if <condition pos:line="987" pos:column="12">(<expr><name pos:line="987" pos:column="13">from<pos:position pos:line="987" pos:column="17"/></name> <operator pos:line="987" pos:column="18">==<pos:position pos:line="987" pos:column="20"/></operator> <literal type="null" pos:line="987" pos:column="21">null<pos:position pos:line="987" pos:column="25"/></literal> <operator pos:line="987" pos:column="26">||<pos:position pos:line="987" pos:column="28"/></operator> <name pos:line="987" pos:column="29">to<pos:position pos:line="987" pos:column="31"/></name> <operator pos:line="987" pos:column="32">==<pos:position pos:line="987" pos:column="34"/></operator> <literal type="null" pos:line="987" pos:column="35">null<pos:position pos:line="987" pos:column="39"/></literal></expr>)<pos:position pos:line="987" pos:column="40"/></condition><then pos:line="987" pos:column="40"> <block pos:line="987" pos:column="41">{
            <return pos:line="988" pos:column="13">return <expr><name pos:line="988" pos:column="20">ret<pos:position pos:line="988" pos:column="23"/></name></expr>;<pos:position pos:line="988" pos:column="24"/></return>
        }<pos:position pos:line="989" pos:column="10"/></block></then></if>
        <decl_stmt><decl><type><name pos:line="990" pos:column="9">Iterator<pos:position pos:line="990" pos:column="17"/></name></type> <name pos:line="990" pos:column="18">it<pos:position pos:line="990" pos:column="20"/></name> <init pos:line="990" pos:column="21">= <expr><call><name><name pos:line="990" pos:column="23">nsmodel<pos:position pos:line="990" pos:column="30"/></name><operator pos:line="990" pos:column="30">.<pos:position pos:line="990" pos:column="31"/></operator><name pos:line="990" pos:column="31">getFacade<pos:position pos:line="990" pos:column="40"/></name></name><argument_list pos:line="990" pos:column="40">()<pos:position pos:line="990" pos:column="42"/></argument_list></call><operator pos:line="990" pos:column="42">.<pos:position pos:line="990" pos:column="43"/></operator><call><name pos:line="990" pos:column="43">getAssociationEnds<pos:position pos:line="990" pos:column="61"/></name><argument_list pos:line="990" pos:column="61">(<argument><expr><name pos:line="990" pos:column="62">from<pos:position pos:line="990" pos:column="66"/></name></expr></argument>)<pos:position pos:line="990" pos:column="67"/></argument_list></call><operator pos:line="990" pos:column="67">.<pos:position pos:line="990" pos:column="68"/></operator><call><name pos:line="990" pos:column="68">iterator<pos:position pos:line="990" pos:column="76"/></name><argument_list pos:line="990" pos:column="76">()<pos:position pos:line="990" pos:column="78"/></argument_list></call></expr></init></decl>;<pos:position pos:line="990" pos:column="79"/></decl_stmt>
        <while pos:line="991" pos:column="9">while <condition pos:line="991" pos:column="15">(<expr><call><name><name pos:line="991" pos:column="16">it<pos:position pos:line="991" pos:column="18"/></name><operator pos:line="991" pos:column="18">.<pos:position pos:line="991" pos:column="19"/></operator><name pos:line="991" pos:column="19">hasNext<pos:position pos:line="991" pos:column="26"/></name></name><argument_list pos:line="991" pos:column="26">()<pos:position pos:line="991" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="991" pos:column="29"/></condition> <block pos:line="991" pos:column="30">{
            <decl_stmt><decl><type><name pos:line="992" pos:column="13">MAssociationEnd<pos:position pos:line="992" pos:column="28"/></name></type> <name pos:line="992" pos:column="29">end<pos:position pos:line="992" pos:column="32"/></name> <init pos:line="992" pos:column="33">= <expr><operator pos:line="992" pos:column="35">(<pos:position pos:line="992" pos:column="36"/></operator><name pos:line="992" pos:column="36">MAssociationEnd<pos:position pos:line="992" pos:column="51"/></name><operator pos:line="992" pos:column="51">)<pos:position pos:line="992" pos:column="52"/></operator> <call><name><name pos:line="992" pos:column="53">it<pos:position pos:line="992" pos:column="55"/></name><operator pos:line="992" pos:column="55">.<pos:position pos:line="992" pos:column="56"/></operator><name pos:line="992" pos:column="56">next<pos:position pos:line="992" pos:column="60"/></name></name><argument_list pos:line="992" pos:column="60">()<pos:position pos:line="992" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="992" pos:column="63"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="993" pos:column="13">MAssociation<pos:position pos:line="993" pos:column="25"/></name></type> <name pos:line="993" pos:column="26">assoc<pos:position pos:line="993" pos:column="31"/></name> <init pos:line="993" pos:column="32">= <expr><call><name><name pos:line="993" pos:column="34">end<pos:position pos:line="993" pos:column="37"/></name><operator pos:line="993" pos:column="37">.<pos:position pos:line="993" pos:column="38"/></operator><name pos:line="993" pos:column="38">getAssociation<pos:position pos:line="993" pos:column="52"/></name></name><argument_list pos:line="993" pos:column="52">()<pos:position pos:line="993" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="993" pos:column="55"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="994" pos:column="13">Iterator<pos:position pos:line="994" pos:column="21"/></name></type> <name pos:line="994" pos:column="22">it2<pos:position pos:line="994" pos:column="25"/></name> <init pos:line="994" pos:column="26">= <expr><call><name><name pos:line="994" pos:column="28">assoc<pos:position pos:line="994" pos:column="33"/></name><operator pos:line="994" pos:column="33">.<pos:position pos:line="994" pos:column="34"/></operator><name pos:line="994" pos:column="34">getConnections<pos:position pos:line="994" pos:column="48"/></name></name><argument_list pos:line="994" pos:column="48">()<pos:position pos:line="994" pos:column="50"/></argument_list></call><operator pos:line="994" pos:column="50">.<pos:position pos:line="994" pos:column="51"/></operator><call><name pos:line="994" pos:column="51">iterator<pos:position pos:line="994" pos:column="59"/></name><argument_list pos:line="994" pos:column="59">()<pos:position pos:line="994" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="994" pos:column="62"/></decl_stmt>
            <while pos:line="995" pos:column="13">while <condition pos:line="995" pos:column="19">(<expr><call><name><name pos:line="995" pos:column="20">it2<pos:position pos:line="995" pos:column="23"/></name><operator pos:line="995" pos:column="23">.<pos:position pos:line="995" pos:column="24"/></operator><name pos:line="995" pos:column="24">hasNext<pos:position pos:line="995" pos:column="31"/></name></name><argument_list pos:line="995" pos:column="31">()<pos:position pos:line="995" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="995" pos:column="34"/></condition> <block pos:line="995" pos:column="35">{
                <decl_stmt><decl><type><name pos:line="996" pos:column="17">MAssociationEnd<pos:position pos:line="996" pos:column="32"/></name></type> <name pos:line="996" pos:column="33">end2<pos:position pos:line="996" pos:column="37"/></name> <init pos:line="996" pos:column="38">= <expr><operator pos:line="996" pos:column="40">(<pos:position pos:line="996" pos:column="41"/></operator><name pos:line="996" pos:column="41">MAssociationEnd<pos:position pos:line="996" pos:column="56"/></name><operator pos:line="996" pos:column="56">)<pos:position pos:line="996" pos:column="57"/></operator> <call><name><name pos:line="996" pos:column="58">it2<pos:position pos:line="996" pos:column="61"/></name><operator pos:line="996" pos:column="61">.<pos:position pos:line="996" pos:column="62"/></operator><name pos:line="996" pos:column="62">next<pos:position pos:line="996" pos:column="66"/></name></name><argument_list pos:line="996" pos:column="66">()<pos:position pos:line="996" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="996" pos:column="69"/></decl_stmt>
                <if pos:line="997" pos:column="17">if <condition pos:line="997" pos:column="20">(<expr><call><name><name pos:line="997" pos:column="21">end2<pos:position pos:line="997" pos:column="25"/></name><operator pos:line="997" pos:column="25">.<pos:position pos:line="997" pos:column="26"/></operator><name pos:line="997" pos:column="26">getType<pos:position pos:line="997" pos:column="33"/></name></name><argument_list pos:line="997" pos:column="33">()<pos:position pos:line="997" pos:column="35"/></argument_list></call> <operator pos:line="997" pos:column="36">==<pos:position pos:line="997" pos:column="38"/></operator> <name pos:line="997" pos:column="39">to<pos:position pos:line="997" pos:column="41"/></name></expr>)<pos:position pos:line="997" pos:column="42"/></condition><then pos:line="997" pos:column="42"> <block pos:line="997" pos:column="43">{
                    <expr_stmt><expr><call><name><name pos:line="998" pos:column="21">ret<pos:position pos:line="998" pos:column="24"/></name><operator pos:line="998" pos:column="24">.<pos:position pos:line="998" pos:column="25"/></operator><name pos:line="998" pos:column="25">add<pos:position pos:line="998" pos:column="28"/></name></name><argument_list pos:line="998" pos:column="28">(<argument><expr><name pos:line="998" pos:column="29">assoc<pos:position pos:line="998" pos:column="34"/></name></expr></argument>)<pos:position pos:line="998" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="998" pos:column="36"/></expr_stmt>
                }<pos:position pos:line="999" pos:column="18"/></block></then></if>
            }<pos:position pos:line="1000" pos:column="14"/></block></while>
        }<pos:position pos:line="1001" pos:column="10"/></block></while>
        <return pos:line="1002" pos:column="9">return <expr><name pos:line="1002" pos:column="16">ret<pos:position pos:line="1002" pos:column="19"/></name></expr>;<pos:position pos:line="1002" pos:column="20"/></return>
    }<pos:position pos:line="1003" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="1005" pos:column="5">/**
     * Returns all classifiers found in this namespace and in its children.
     *
     * @param namespace the given namespace
     * @return Collection the collection of all classifiers
     *                    found in the namespace
     */</comment>
    <function><specifier pos:line="1012" pos:column="5">public<pos:position pos:line="1012" pos:column="11"/></specifier> <type><name pos:line="1012" pos:column="12">Collection<pos:position pos:line="1012" pos:column="22"/></name></type> <name pos:line="1012" pos:column="23">getAllClassifiers<pos:position pos:line="1012" pos:column="40"/></name><parameter_list pos:line="1012" pos:column="40">(<parameter><decl><type><name pos:line="1012" pos:column="41">Object<pos:position pos:line="1012" pos:column="47"/></name></type> <name pos:line="1012" pos:column="48">namespace<pos:position pos:line="1012" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="1012" pos:column="58"/></parameter_list> <block pos:line="1012" pos:column="59">{
        <if pos:line="1013" pos:column="9">if <condition pos:line="1013" pos:column="12">(<expr><name pos:line="1013" pos:column="13">namespace<pos:position pos:line="1013" pos:column="22"/></name> <operator pos:line="1013" pos:column="23">==<pos:position pos:line="1013" pos:column="25"/></operator> <literal type="null" pos:line="1013" pos:column="26">null<pos:position pos:line="1013" pos:column="30"/></literal></expr>)<pos:position pos:line="1013" pos:column="31"/></condition><then pos:line="1013" pos:column="31"> <block pos:line="1013" pos:column="32">{
            <return pos:line="1014" pos:column="13">return <expr><operator pos:line="1014" pos:column="20">new<pos:position pos:line="1014" pos:column="23"/></operator> <call><name pos:line="1014" pos:column="24">ArrayList<pos:position pos:line="1014" pos:column="33"/></name><argument_list pos:line="1014" pos:column="33">()<pos:position pos:line="1014" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="1014" pos:column="36"/></return>
        }<pos:position pos:line="1015" pos:column="10"/></block></then></if>
        <decl_stmt><decl><type><name pos:line="1016" pos:column="9">MNamespace<pos:position pos:line="1016" pos:column="19"/></name></type> <name pos:line="1016" pos:column="20">ns<pos:position pos:line="1016" pos:column="22"/></name> <init pos:line="1016" pos:column="23">= <expr><operator pos:line="1016" pos:column="25">(<pos:position pos:line="1016" pos:column="26"/></operator><name pos:line="1016" pos:column="26">MNamespace<pos:position pos:line="1016" pos:column="36"/></name><operator pos:line="1016" pos:column="36">)<pos:position pos:line="1016" pos:column="37"/></operator> <name pos:line="1016" pos:column="38">namespace<pos:position pos:line="1016" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="1016" pos:column="48"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="1017" pos:column="9">Iterator<pos:position pos:line="1017" pos:column="17"/></name></type> <name pos:line="1017" pos:column="18">it<pos:position pos:line="1017" pos:column="20"/></name> <init pos:line="1017" pos:column="21">= <expr><call><name><name pos:line="1017" pos:column="23">ns<pos:position pos:line="1017" pos:column="25"/></name><operator pos:line="1017" pos:column="25">.<pos:position pos:line="1017" pos:column="26"/></operator><name pos:line="1017" pos:column="26">getOwnedElements<pos:position pos:line="1017" pos:column="42"/></name></name><argument_list pos:line="1017" pos:column="42">()<pos:position pos:line="1017" pos:column="44"/></argument_list></call><operator pos:line="1017" pos:column="44">.<pos:position pos:line="1017" pos:column="45"/></operator><call><name pos:line="1017" pos:column="45">iterator<pos:position pos:line="1017" pos:column="53"/></name><argument_list pos:line="1017" pos:column="53">()<pos:position pos:line="1017" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1017" pos:column="56"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="1018" pos:column="9">List<pos:position pos:line="1018" pos:column="13"/></name></type> <name pos:line="1018" pos:column="14">list<pos:position pos:line="1018" pos:column="18"/></name> <init pos:line="1018" pos:column="19">= <expr><operator pos:line="1018" pos:column="21">new<pos:position pos:line="1018" pos:column="24"/></operator> <call><name pos:line="1018" pos:column="25">ArrayList<pos:position pos:line="1018" pos:column="34"/></name><argument_list pos:line="1018" pos:column="34">()<pos:position pos:line="1018" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1018" pos:column="37"/></decl_stmt>
        <while pos:line="1019" pos:column="9">while <condition pos:line="1019" pos:column="15">(<expr><call><name><name pos:line="1019" pos:column="16">it<pos:position pos:line="1019" pos:column="18"/></name><operator pos:line="1019" pos:column="18">.<pos:position pos:line="1019" pos:column="19"/></operator><name pos:line="1019" pos:column="19">hasNext<pos:position pos:line="1019" pos:column="26"/></name></name><argument_list pos:line="1019" pos:column="26">()<pos:position pos:line="1019" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="1019" pos:column="29"/></condition> <block pos:line="1019" pos:column="30">{
            <decl_stmt><decl><type><name pos:line="1020" pos:column="13">Object<pos:position pos:line="1020" pos:column="19"/></name></type> <name pos:line="1020" pos:column="20">o<pos:position pos:line="1020" pos:column="21"/></name> <init pos:line="1020" pos:column="22">= <expr><call><name><name pos:line="1020" pos:column="24">it<pos:position pos:line="1020" pos:column="26"/></name><operator pos:line="1020" pos:column="26">.<pos:position pos:line="1020" pos:column="27"/></operator><name pos:line="1020" pos:column="27">next<pos:position pos:line="1020" pos:column="31"/></name></name><argument_list pos:line="1020" pos:column="31">()<pos:position pos:line="1020" pos:column="33"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1020" pos:column="34"/></decl_stmt>
            <if pos:line="1021" pos:column="13">if <condition pos:line="1021" pos:column="16">(<expr><name pos:line="1021" pos:column="17">o<pos:position pos:line="1021" pos:column="18"/></name> <operator pos:line="1021" pos:column="19">instanceof<pos:position pos:line="1021" pos:column="29"/></operator> <name pos:line="1021" pos:column="30">MNamespace<pos:position pos:line="1021" pos:column="40"/></name></expr>)<pos:position pos:line="1021" pos:column="41"/></condition><then pos:line="1021" pos:column="41"> <block pos:line="1021" pos:column="42">{
                <expr_stmt><expr><call><name><name pos:line="1022" pos:column="17">list<pos:position pos:line="1022" pos:column="21"/></name><operator pos:line="1022" pos:column="21">.<pos:position pos:line="1022" pos:column="22"/></operator><name pos:line="1022" pos:column="22">addAll<pos:position pos:line="1022" pos:column="28"/></name></name><argument_list pos:line="1022" pos:column="28">(<argument><expr><call><name pos:line="1022" pos:column="29">getAllClassifiers<pos:position pos:line="1022" pos:column="46"/></name><argument_list pos:line="1022" pos:column="46">(<argument><expr><name pos:line="1022" pos:column="47">o<pos:position pos:line="1022" pos:column="48"/></name></expr></argument>)<pos:position pos:line="1022" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="1022" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="1022" pos:column="51"/></expr_stmt>
            }<pos:position pos:line="1023" pos:column="14"/></block></then></if>
            <if pos:line="1024" pos:column="13">if <condition pos:line="1024" pos:column="16">(<expr><name pos:line="1024" pos:column="17">o<pos:position pos:line="1024" pos:column="18"/></name> <operator pos:line="1024" pos:column="19">instanceof<pos:position pos:line="1024" pos:column="29"/></operator> <name pos:line="1024" pos:column="30">MClassifier<pos:position pos:line="1024" pos:column="41"/></name></expr>)<pos:position pos:line="1024" pos:column="42"/></condition><then pos:line="1024" pos:column="42"> <block pos:line="1024" pos:column="43">{
                <expr_stmt><expr><call><name><name pos:line="1025" pos:column="17">list<pos:position pos:line="1025" pos:column="21"/></name><operator pos:line="1025" pos:column="21">.<pos:position pos:line="1025" pos:column="22"/></operator><name pos:line="1025" pos:column="22">add<pos:position pos:line="1025" pos:column="25"/></name></name><argument_list pos:line="1025" pos:column="25">(<argument><expr><name pos:line="1025" pos:column="26">o<pos:position pos:line="1025" pos:column="27"/></name></expr></argument>)<pos:position pos:line="1025" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="1025" pos:column="29"/></expr_stmt>
            }<pos:position pos:line="1026" pos:column="14"/></block></then></if>
        }<pos:position pos:line="1027" pos:column="10"/></block></while>
        <return pos:line="1028" pos:column="9">return <expr><name pos:line="1028" pos:column="16">list<pos:position pos:line="1028" pos:column="20"/></name></expr>;<pos:position pos:line="1028" pos:column="21"/></return>
    }<pos:position pos:line="1029" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="1031" pos:column="5">/**
     * Returns all associations for some classifier.&lt;p&gt;
     *
     * @param oclassifier the given classifier
     * @return Collection all associations for the given classifier
     */</comment>
    <function><specifier pos:line="1037" pos:column="5">public<pos:position pos:line="1037" pos:column="11"/></specifier> <type><name pos:line="1037" pos:column="12">Collection<pos:position pos:line="1037" pos:column="22"/></name></type> <name pos:line="1037" pos:column="23">getAssociations<pos:position pos:line="1037" pos:column="38"/></name><parameter_list pos:line="1037" pos:column="38">(<parameter><decl><type><name pos:line="1037" pos:column="39">Object<pos:position pos:line="1037" pos:column="45"/></name></type> <name pos:line="1037" pos:column="46">oclassifier<pos:position pos:line="1037" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="1037" pos:column="58"/></parameter_list> <block pos:line="1037" pos:column="59">{
        <decl_stmt><decl><type><name pos:line="1038" pos:column="9">Collection<pos:position pos:line="1038" pos:column="19"/></name></type> <name pos:line="1038" pos:column="20">col<pos:position pos:line="1038" pos:column="23"/></name> <init pos:line="1038" pos:column="24">= <expr><operator pos:line="1038" pos:column="26">new<pos:position pos:line="1038" pos:column="29"/></operator> <call><name pos:line="1038" pos:column="30">ArrayList<pos:position pos:line="1038" pos:column="39"/></name><argument_list pos:line="1038" pos:column="39">()<pos:position pos:line="1038" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1038" pos:column="42"/></decl_stmt>
        <if pos:line="1039" pos:column="9">if <condition pos:line="1039" pos:column="12">(<expr><name pos:line="1039" pos:column="13">oclassifier<pos:position pos:line="1039" pos:column="24"/></name> <operator pos:line="1039" pos:column="25">instanceof<pos:position pos:line="1039" pos:column="35"/></operator> <name pos:line="1039" pos:column="36">MClassifier<pos:position pos:line="1039" pos:column="47"/></name></expr>)<pos:position pos:line="1039" pos:column="48"/></condition><then pos:line="1039" pos:column="48"> <block pos:line="1039" pos:column="49">{
            <decl_stmt><decl><type><name pos:line="1040" pos:column="13">MClassifier<pos:position pos:line="1040" pos:column="24"/></name></type> <name pos:line="1040" pos:column="25">classifier<pos:position pos:line="1040" pos:column="35"/></name> <init pos:line="1040" pos:column="36">= <expr><operator pos:line="1040" pos:column="38">(<pos:position pos:line="1040" pos:column="39"/></operator><name pos:line="1040" pos:column="39">MClassifier<pos:position pos:line="1040" pos:column="50"/></name><operator pos:line="1040" pos:column="50">)<pos:position pos:line="1040" pos:column="51"/></operator> <name pos:line="1040" pos:column="52">oclassifier<pos:position pos:line="1040" pos:column="63"/></name></expr></init></decl>;<pos:position pos:line="1040" pos:column="64"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="1041" pos:column="13">Iterator<pos:position pos:line="1041" pos:column="21"/></name></type> <name pos:line="1041" pos:column="22">it<pos:position pos:line="1041" pos:column="24"/></name> <init pos:line="1041" pos:column="25">= <expr><call><name><name pos:line="1041" pos:column="27">classifier<pos:position pos:line="1041" pos:column="37"/></name><operator pos:line="1041" pos:column="37">.<pos:position pos:line="1041" pos:column="38"/></operator><name pos:line="1041" pos:column="38">getAssociationEnds<pos:position pos:line="1041" pos:column="56"/></name></name><argument_list pos:line="1041" pos:column="56">()<pos:position pos:line="1041" pos:column="58"/></argument_list></call><operator pos:line="1041" pos:column="58">.<pos:position pos:line="1041" pos:column="59"/></operator><call><name pos:line="1041" pos:column="59">iterator<pos:position pos:line="1041" pos:column="67"/></name><argument_list pos:line="1041" pos:column="67">()<pos:position pos:line="1041" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1041" pos:column="70"/></decl_stmt>
            <while pos:line="1042" pos:column="13">while <condition pos:line="1042" pos:column="19">(<expr><call><name><name pos:line="1042" pos:column="20">it<pos:position pos:line="1042" pos:column="22"/></name><operator pos:line="1042" pos:column="22">.<pos:position pos:line="1042" pos:column="23"/></operator><name pos:line="1042" pos:column="23">hasNext<pos:position pos:line="1042" pos:column="30"/></name></name><argument_list pos:line="1042" pos:column="30">()<pos:position pos:line="1042" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="1042" pos:column="33"/></condition> <block pos:line="1042" pos:column="34">{
                <expr_stmt><expr><call><name><name pos:line="1043" pos:column="17">col<pos:position pos:line="1043" pos:column="20"/></name><operator pos:line="1043" pos:column="20">.<pos:position pos:line="1043" pos:column="21"/></operator><name pos:line="1043" pos:column="21">add<pos:position pos:line="1043" pos:column="24"/></name></name><argument_list pos:line="1043" pos:column="24">(<argument><expr><operator pos:line="1043" pos:column="25">(<pos:position pos:line="1043" pos:column="26"/></operator><operator pos:line="1043" pos:column="26">(<pos:position pos:line="1043" pos:column="27"/></operator><name pos:line="1043" pos:column="27">MAssociationEnd<pos:position pos:line="1043" pos:column="42"/></name><operator pos:line="1043" pos:column="42">)<pos:position pos:line="1043" pos:column="43"/></operator> <call><name><name pos:line="1043" pos:column="44">it<pos:position pos:line="1043" pos:column="46"/></name><operator pos:line="1043" pos:column="46">.<pos:position pos:line="1043" pos:column="47"/></operator><name pos:line="1043" pos:column="47">next<pos:position pos:line="1043" pos:column="51"/></name></name><argument_list pos:line="1043" pos:column="51">()<pos:position pos:line="1043" pos:column="53"/></argument_list></call><operator pos:line="1043" pos:column="53">)<pos:position pos:line="1043" pos:column="54"/></operator><operator pos:line="1043" pos:column="54">.<pos:position pos:line="1043" pos:column="55"/></operator><call><name pos:line="1043" pos:column="55">getAssociation<pos:position pos:line="1043" pos:column="69"/></name><argument_list pos:line="1043" pos:column="69">()<pos:position pos:line="1043" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="1043" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="1043" pos:column="73"/></expr_stmt>
            }<pos:position pos:line="1044" pos:column="14"/></block></while>
        }<pos:position pos:line="1045" pos:column="10"/></block></then></if>
        <return pos:line="1046" pos:column="9">return <expr><name pos:line="1046" pos:column="16">col<pos:position pos:line="1046" pos:column="19"/></name></expr>;<pos:position pos:line="1046" pos:column="20"/></return>
    }<pos:position pos:line="1047" pos:column="6"/></block></function>
    <comment type="block" format="javadoc" pos:line="1048" pos:column="5">/**
     * Returns the associationend between a classifier and
     * an associaton.&lt;p&gt;
     *
     * @param type is the classifier
     * @param assoc is the association
     * @return MAssociationEnd
     */</comment>
    <function><specifier pos:line="1056" pos:column="5">public<pos:position pos:line="1056" pos:column="11"/></specifier> <type><name pos:line="1056" pos:column="12">Object<pos:position pos:line="1056" pos:column="18"/></name></type> <name pos:line="1056" pos:column="19">getAssociationEnd<pos:position pos:line="1056" pos:column="36"/></name><parameter_list pos:line="1056" pos:column="36">(<parameter><decl><type><name pos:line="1056" pos:column="37">Object<pos:position pos:line="1056" pos:column="43"/></name></type> <name pos:line="1056" pos:column="44">type<pos:position pos:line="1056" pos:column="48"/></name></decl></parameter>,
            <parameter><decl><type><name pos:line="1057" pos:column="13">Object<pos:position pos:line="1057" pos:column="19"/></name></type> <name pos:line="1057" pos:column="20">assoc<pos:position pos:line="1057" pos:column="25"/></name></decl></parameter>)<pos:position pos:line="1057" pos:column="26"/></parameter_list> <block pos:line="1057" pos:column="27">{
        <if pos:line="1058" pos:column="9">if <condition pos:line="1058" pos:column="12">(<expr><name pos:line="1058" pos:column="13">type<pos:position pos:line="1058" pos:column="17"/></name> <operator pos:line="1058" pos:column="18">==<pos:position pos:line="1058" pos:column="20"/></operator> <literal type="null" pos:line="1058" pos:column="21">null<pos:position pos:line="1058" pos:column="25"/></literal> <operator pos:line="1058" pos:column="26">||<pos:position pos:line="1058" pos:column="28"/></operator> <name pos:line="1058" pos:column="29">assoc<pos:position pos:line="1058" pos:column="34"/></name> <operator pos:line="1058" pos:column="35">==<pos:position pos:line="1058" pos:column="37"/></operator> <literal type="null" pos:line="1058" pos:column="38">null<pos:position pos:line="1058" pos:column="42"/></literal></expr>)<pos:position pos:line="1058" pos:column="43"/></condition><then pos:line="1058" pos:column="43"> <block pos:line="1058" pos:column="44">{
            <return pos:line="1059" pos:column="13">return <expr><literal type="null" pos:line="1059" pos:column="20">null<pos:position pos:line="1059" pos:column="24"/></literal></expr>;<pos:position pos:line="1059" pos:column="25"/></return>
        }<pos:position pos:line="1060" pos:column="10"/></block></then></if>
        <if pos:line="1061" pos:column="9">if <condition pos:line="1061" pos:column="12">(<expr><operator pos:line="1061" pos:column="13">!<pos:position pos:line="1061" pos:column="14"/></operator><operator pos:line="1061" pos:column="14">(<pos:position pos:line="1061" pos:column="15"/></operator><name pos:line="1061" pos:column="15">type<pos:position pos:line="1061" pos:column="19"/></name> <operator pos:line="1061" pos:column="20">instanceof<pos:position pos:line="1061" pos:column="30"/></operator> <name pos:line="1061" pos:column="31">MClassifier<pos:position pos:line="1061" pos:column="42"/></name><operator pos:line="1061" pos:column="42">)<pos:position pos:line="1061" pos:column="43"/></operator></expr>)<pos:position pos:line="1061" pos:column="44"/></condition><then pos:line="1061" pos:column="44"> <block pos:line="1061" pos:column="45">{
            <throw pos:line="1062" pos:column="13">throw <expr><operator pos:line="1062" pos:column="19">new<pos:position pos:line="1062" pos:column="22"/></operator> <call><name pos:line="1062" pos:column="23">IllegalArgumentException<pos:position pos:line="1062" pos:column="47"/></name><argument_list pos:line="1062" pos:column="47">()<pos:position pos:line="1062" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="1062" pos:column="50"/></throw>
        }<pos:position pos:line="1063" pos:column="10"/></block></then></if>
        <if pos:line="1064" pos:column="9">if <condition pos:line="1064" pos:column="12">(<expr><operator pos:line="1064" pos:column="13">!<pos:position pos:line="1064" pos:column="14"/></operator><operator pos:line="1064" pos:column="14">(<pos:position pos:line="1064" pos:column="15"/></operator><name pos:line="1064" pos:column="15">assoc<pos:position pos:line="1064" pos:column="20"/></name> <operator pos:line="1064" pos:column="21">instanceof<pos:position pos:line="1064" pos:column="31"/></operator> <name pos:line="1064" pos:column="32">MAssociation<pos:position pos:line="1064" pos:column="44"/></name><operator pos:line="1064" pos:column="44">)<pos:position pos:line="1064" pos:column="45"/></operator></expr>)<pos:position pos:line="1064" pos:column="46"/></condition><then pos:line="1064" pos:column="46"> <block pos:line="1064" pos:column="47">{
            <throw pos:line="1065" pos:column="13">throw <expr><operator pos:line="1065" pos:column="19">new<pos:position pos:line="1065" pos:column="22"/></operator> <call><name pos:line="1065" pos:column="23">IllegalArgumentException<pos:position pos:line="1065" pos:column="47"/></name><argument_list pos:line="1065" pos:column="47">()<pos:position pos:line="1065" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="1065" pos:column="50"/></throw>
        }<pos:position pos:line="1066" pos:column="10"/></block></then></if>

        <decl_stmt><decl><type><name pos:line="1068" pos:column="9">Iterator<pos:position pos:line="1068" pos:column="17"/></name></type> <name pos:line="1068" pos:column="18">it<pos:position pos:line="1068" pos:column="20"/></name> <init pos:line="1068" pos:column="21">= <expr><operator pos:line="1068" pos:column="23">(<pos:position pos:line="1068" pos:column="24"/></operator><operator pos:line="1068" pos:column="24">(<pos:position pos:line="1068" pos:column="25"/></operator><name pos:line="1068" pos:column="25">MClassifier<pos:position pos:line="1068" pos:column="36"/></name><operator pos:line="1068" pos:column="36">)<pos:position pos:line="1068" pos:column="37"/></operator> <name pos:line="1068" pos:column="38">type<pos:position pos:line="1068" pos:column="42"/></name><operator pos:line="1068" pos:column="42">)<pos:position pos:line="1068" pos:column="43"/></operator><operator pos:line="1068" pos:column="43">.<pos:position pos:line="1068" pos:column="44"/></operator><call><name pos:line="1068" pos:column="44">getAssociationEnds<pos:position pos:line="1068" pos:column="62"/></name><argument_list pos:line="1068" pos:column="62">()<pos:position pos:line="1068" pos:column="64"/></argument_list></call><operator pos:line="1068" pos:column="64">.<pos:position pos:line="1068" pos:column="65"/></operator><call><name pos:line="1068" pos:column="65">iterator<pos:position pos:line="1068" pos:column="73"/></name><argument_list pos:line="1068" pos:column="73">()<pos:position pos:line="1068" pos:column="75"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1068" pos:column="76"/></decl_stmt>
        <while pos:line="1069" pos:column="9">while <condition pos:line="1069" pos:column="15">(<expr><call><name><name pos:line="1069" pos:column="16">it<pos:position pos:line="1069" pos:column="18"/></name><operator pos:line="1069" pos:column="18">.<pos:position pos:line="1069" pos:column="19"/></operator><name pos:line="1069" pos:column="19">hasNext<pos:position pos:line="1069" pos:column="26"/></name></name><argument_list pos:line="1069" pos:column="26">()<pos:position pos:line="1069" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="1069" pos:column="29"/></condition> <block pos:line="1069" pos:column="30">{
            <decl_stmt><decl><type><name pos:line="1070" pos:column="13">MAssociationEnd<pos:position pos:line="1070" pos:column="28"/></name></type> <name pos:line="1070" pos:column="29">end<pos:position pos:line="1070" pos:column="32"/></name> <init pos:line="1070" pos:column="33">= <expr><operator pos:line="1070" pos:column="35">(<pos:position pos:line="1070" pos:column="36"/></operator><name pos:line="1070" pos:column="36">MAssociationEnd<pos:position pos:line="1070" pos:column="51"/></name><operator pos:line="1070" pos:column="51">)<pos:position pos:line="1070" pos:column="52"/></operator> <call><name><name pos:line="1070" pos:column="53">it<pos:position pos:line="1070" pos:column="55"/></name><operator pos:line="1070" pos:column="55">.<pos:position pos:line="1070" pos:column="56"/></operator><name pos:line="1070" pos:column="56">next<pos:position pos:line="1070" pos:column="60"/></name></name><argument_list pos:line="1070" pos:column="60">()<pos:position pos:line="1070" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1070" pos:column="63"/></decl_stmt>
            <if pos:line="1071" pos:column="13">if <condition pos:line="1071" pos:column="16">(<expr><operator pos:line="1071" pos:column="17">(<pos:position pos:line="1071" pos:column="18"/></operator><operator pos:line="1071" pos:column="18">(<pos:position pos:line="1071" pos:column="19"/></operator><name pos:line="1071" pos:column="19">MAssociation<pos:position pos:line="1071" pos:column="31"/></name><operator pos:line="1071" pos:column="31">)<pos:position pos:line="1071" pos:column="32"/></operator> <name pos:line="1071" pos:column="33">assoc<pos:position pos:line="1071" pos:column="38"/></name><operator pos:line="1071" pos:column="38">)<pos:position pos:line="1071" pos:column="39"/></operator><operator pos:line="1071" pos:column="39">.<pos:position pos:line="1071" pos:column="40"/></operator><call><name pos:line="1071" pos:column="40">getConnections<pos:position pos:line="1071" pos:column="54"/></name><argument_list pos:line="1071" pos:column="54">()<pos:position pos:line="1071" pos:column="56"/></argument_list></call><operator pos:line="1071" pos:column="56">.<pos:position pos:line="1071" pos:column="57"/></operator><call><name pos:line="1071" pos:column="57">contains<pos:position pos:line="1071" pos:column="65"/></name><argument_list pos:line="1071" pos:column="65">(<argument><expr><name pos:line="1071" pos:column="66">end<pos:position pos:line="1071" pos:column="69"/></name></expr></argument>)<pos:position pos:line="1071" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="1071" pos:column="71"/></condition><then pos:line="1071" pos:column="71"> <block pos:line="1071" pos:column="72">{
                <return pos:line="1072" pos:column="17">return <expr><name pos:line="1072" pos:column="24">end<pos:position pos:line="1072" pos:column="27"/></name></expr>;<pos:position pos:line="1072" pos:column="28"/></return>
            }<pos:position pos:line="1073" pos:column="14"/></block></then></if>
        }<pos:position pos:line="1074" pos:column="10"/></block></while>
        <return pos:line="1075" pos:column="9">return <expr><literal type="null" pos:line="1075" pos:column="16">null<pos:position pos:line="1075" pos:column="20"/></literal></expr>;<pos:position pos:line="1075" pos:column="21"/></return>
    }<pos:position pos:line="1076" pos:column="6"/></block></function>
    <comment type="block" format="javadoc" pos:line="1077" pos:column="5">/**
     * Returns the contents (owned elements) of this classifier and
     * all its parents as specified in section 2.5.3.8 of the UML 1.3
     * spec.&lt;p&gt;
     *
     * @param clazz is the classifier
     * @return Collection
     */</comment>
    <function><specifier pos:line="1085" pos:column="5">public<pos:position pos:line="1085" pos:column="11"/></specifier> <type><name pos:line="1085" pos:column="12">Collection<pos:position pos:line="1085" pos:column="22"/></name></type> <name pos:line="1085" pos:column="23">getAllContents<pos:position pos:line="1085" pos:column="37"/></name><parameter_list pos:line="1085" pos:column="37">(<parameter><decl><type><name pos:line="1085" pos:column="38">Object<pos:position pos:line="1085" pos:column="44"/></name></type> <name pos:line="1085" pos:column="45">clazz<pos:position pos:line="1085" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1085" pos:column="51"/></parameter_list> <block pos:line="1085" pos:column="52">{
        <if pos:line="1086" pos:column="9">if <condition pos:line="1086" pos:column="12">(<expr><name pos:line="1086" pos:column="13">clazz<pos:position pos:line="1086" pos:column="18"/></name> <operator pos:line="1086" pos:column="19">==<pos:position pos:line="1086" pos:column="21"/></operator> <literal type="null" pos:line="1086" pos:column="22">null<pos:position pos:line="1086" pos:column="26"/></literal></expr>)<pos:position pos:line="1086" pos:column="27"/></condition><then pos:line="1086" pos:column="27"> <block pos:line="1086" pos:column="28">{
            <return pos:line="1087" pos:column="13">return <expr><operator pos:line="1087" pos:column="20">new<pos:position pos:line="1087" pos:column="23"/></operator> <call><name pos:line="1087" pos:column="24">ArrayList<pos:position pos:line="1087" pos:column="33"/></name><argument_list pos:line="1087" pos:column="33">()<pos:position pos:line="1087" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="1087" pos:column="36"/></return>
        }<pos:position pos:line="1088" pos:column="10"/></block></then></if>
        <if pos:line="1089" pos:column="9">if <condition pos:line="1089" pos:column="12">(<expr><operator pos:line="1089" pos:column="13">!<pos:position pos:line="1089" pos:column="14"/></operator><operator pos:line="1089" pos:column="14">(<pos:position pos:line="1089" pos:column="15"/></operator><name pos:line="1089" pos:column="15">clazz<pos:position pos:line="1089" pos:column="20"/></name> <operator pos:line="1089" pos:column="21">instanceof<pos:position pos:line="1089" pos:column="31"/></operator> <name pos:line="1089" pos:column="32">MClassifier<pos:position pos:line="1089" pos:column="43"/></name><operator pos:line="1089" pos:column="43">)<pos:position pos:line="1089" pos:column="44"/></operator></expr>)<pos:position pos:line="1089" pos:column="45"/></condition><then pos:line="1089" pos:column="45"> <block pos:line="1089" pos:column="46">{
            <throw pos:line="1090" pos:column="13">throw <expr><operator pos:line="1090" pos:column="19">new<pos:position pos:line="1090" pos:column="22"/></operator> <call><name pos:line="1090" pos:column="23">IllegalArgumentException<pos:position pos:line="1090" pos:column="47"/></name><argument_list pos:line="1090" pos:column="47">()<pos:position pos:line="1090" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="1090" pos:column="50"/></throw>
        }<pos:position pos:line="1091" pos:column="10"/></block></then></if>

        <decl_stmt><decl><type><name pos:line="1093" pos:column="9">List<pos:position pos:line="1093" pos:column="13"/></name></type> <name pos:line="1093" pos:column="14">list<pos:position pos:line="1093" pos:column="18"/></name> <init pos:line="1093" pos:column="19">= <expr><operator pos:line="1093" pos:column="21">new<pos:position pos:line="1093" pos:column="24"/></operator> <call><name pos:line="1093" pos:column="25">ArrayList<pos:position pos:line="1093" pos:column="34"/></name><argument_list pos:line="1093" pos:column="34">()<pos:position pos:line="1093" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1093" pos:column="37"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="1094" pos:column="9">Iterator<pos:position pos:line="1094" pos:column="17"/></name></type> <name pos:line="1094" pos:column="18">it<pos:position pos:line="1094" pos:column="20"/></name> <init pos:line="1094" pos:column="21">= <expr><operator pos:line="1094" pos:column="23">(<pos:position pos:line="1094" pos:column="24"/></operator><operator pos:line="1094" pos:column="24">(<pos:position pos:line="1094" pos:column="25"/></operator><name pos:line="1094" pos:column="25">MNamespace<pos:position pos:line="1094" pos:column="35"/></name><operator pos:line="1094" pos:column="35">)<pos:position pos:line="1094" pos:column="36"/></operator> <name pos:line="1094" pos:column="37">clazz<pos:position pos:line="1094" pos:column="42"/></name><operator pos:line="1094" pos:column="42">)<pos:position pos:line="1094" pos:column="43"/></operator><operator pos:line="1094" pos:column="43">.<pos:position pos:line="1094" pos:column="44"/></operator><call><name pos:line="1094" pos:column="44">getOwnedElements<pos:position pos:line="1094" pos:column="60"/></name><argument_list pos:line="1094" pos:column="60">()<pos:position pos:line="1094" pos:column="62"/></argument_list></call><operator pos:line="1094" pos:column="62">.<pos:position pos:line="1094" pos:column="63"/></operator><call><name pos:line="1094" pos:column="63">iterator<pos:position pos:line="1094" pos:column="71"/></name><argument_list pos:line="1094" pos:column="71">()<pos:position pos:line="1094" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1094" pos:column="74"/></decl_stmt>
        <while pos:line="1095" pos:column="9">while <condition pos:line="1095" pos:column="15">(<expr><call><name><name pos:line="1095" pos:column="16">it<pos:position pos:line="1095" pos:column="18"/></name><operator pos:line="1095" pos:column="18">.<pos:position pos:line="1095" pos:column="19"/></operator><name pos:line="1095" pos:column="19">hasNext<pos:position pos:line="1095" pos:column="26"/></name></name><argument_list pos:line="1095" pos:column="26">()<pos:position pos:line="1095" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="1095" pos:column="29"/></condition> <block pos:line="1095" pos:column="30">{
            <decl_stmt><decl><type><name pos:line="1096" pos:column="13">MModelElement<pos:position pos:line="1096" pos:column="26"/></name></type> <name pos:line="1096" pos:column="27">element<pos:position pos:line="1096" pos:column="34"/></name> <init pos:line="1096" pos:column="35">= <expr><operator pos:line="1096" pos:column="37">(<pos:position pos:line="1096" pos:column="38"/></operator><name pos:line="1096" pos:column="38">MModelElement<pos:position pos:line="1096" pos:column="51"/></name><operator pos:line="1096" pos:column="51">)<pos:position pos:line="1096" pos:column="52"/></operator> <call><name><name pos:line="1096" pos:column="53">it<pos:position pos:line="1096" pos:column="55"/></name><operator pos:line="1096" pos:column="55">.<pos:position pos:line="1096" pos:column="56"/></operator><name pos:line="1096" pos:column="56">next<pos:position pos:line="1096" pos:column="60"/></name></name><argument_list pos:line="1096" pos:column="60">()<pos:position pos:line="1096" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1096" pos:column="63"/></decl_stmt>
            <if pos:line="1097" pos:column="13">if <condition pos:line="1097" pos:column="16">(<expr><call><name><name pos:line="1097" pos:column="17">element<pos:position pos:line="1097" pos:column="24"/></name><operator pos:line="1097" pos:column="24">.<pos:position pos:line="1097" pos:column="25"/></operator><name pos:line="1097" pos:column="25">getVisibility<pos:position pos:line="1097" pos:column="38"/></name></name><argument_list pos:line="1097" pos:column="38">()<pos:position pos:line="1097" pos:column="40"/></argument_list></call><operator pos:line="1097" pos:column="40">.<pos:position pos:line="1097" pos:column="41"/></operator><call><name pos:line="1097" pos:column="41">equals<pos:position pos:line="1097" pos:column="47"/></name><argument_list pos:line="1097" pos:column="47">(<argument><expr><name><name pos:line="1097" pos:column="48">MVisibilityKind<pos:position pos:line="1097" pos:column="63"/></name><operator pos:line="1097" pos:column="63">.<pos:position pos:line="1097" pos:column="64"/></operator><name pos:line="1097" pos:column="64">PUBLIC<pos:position pos:line="1097" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="1097" pos:column="71"/></argument_list></call>
                <operator pos:line="1098" pos:column="17">||<pos:position pos:line="1098" pos:column="19"/></operator> <call><name><name pos:line="1098" pos:column="20">element<pos:position pos:line="1098" pos:column="27"/></name><operator pos:line="1098" pos:column="27">.<pos:position pos:line="1098" pos:column="28"/></operator><name pos:line="1098" pos:column="28">getVisibility<pos:position pos:line="1098" pos:column="41"/></name></name><argument_list pos:line="1098" pos:column="41">()<pos:position pos:line="1098" pos:column="43"/></argument_list></call><operator pos:line="1098" pos:column="43">.<pos:position pos:line="1098" pos:column="44"/></operator><call><name pos:line="1098" pos:column="44">equals<pos:position pos:line="1098" pos:column="50"/></name><argument_list pos:line="1098" pos:column="50">(<argument><expr><name><name pos:line="1098" pos:column="51">MVisibilityKind<pos:position pos:line="1098" pos:column="66"/></name><operator pos:line="1098" pos:column="66">.<pos:position pos:line="1098" pos:column="67"/></operator><name pos:line="1098" pos:column="67">PROTECTED<pos:position pos:line="1098" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="1098" pos:column="77"/></argument_list></call></expr>)<pos:position pos:line="1098" pos:column="78"/></condition><then pos:line="1098" pos:column="78"> <block pos:line="1098" pos:column="79">{
                <expr_stmt><expr><call><name><name pos:line="1099" pos:column="17">list<pos:position pos:line="1099" pos:column="21"/></name><operator pos:line="1099" pos:column="21">.<pos:position pos:line="1099" pos:column="22"/></operator><name pos:line="1099" pos:column="22">add<pos:position pos:line="1099" pos:column="25"/></name></name><argument_list pos:line="1099" pos:column="25">(<argument><expr><name pos:line="1099" pos:column="26">element<pos:position pos:line="1099" pos:column="33"/></name></expr></argument>)<pos:position pos:line="1099" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="1099" pos:column="35"/></expr_stmt>
            }<pos:position pos:line="1100" pos:column="14"/></block></then></if>
        }<pos:position pos:line="1101" pos:column="10"/></block></while>
        <expr_stmt><expr><name pos:line="1102" pos:column="9">it<pos:position pos:line="1102" pos:column="11"/></name> <operator pos:line="1102" pos:column="12">=<pos:position pos:line="1102" pos:column="13"/></operator> <operator pos:line="1102" pos:column="14">(<pos:position pos:line="1102" pos:column="15"/></operator><operator pos:line="1102" pos:column="15">(<pos:position pos:line="1102" pos:column="16"/></operator><name pos:line="1102" pos:column="16">MGeneralizableElement<pos:position pos:line="1102" pos:column="37"/></name><operator pos:line="1102" pos:column="37">)<pos:position pos:line="1102" pos:column="38"/></operator> <name pos:line="1102" pos:column="39">clazz<pos:position pos:line="1102" pos:column="44"/></name><operator pos:line="1102" pos:column="44">)<pos:position pos:line="1102" pos:column="45"/></operator><operator pos:line="1102" pos:column="45">.<pos:position pos:line="1102" pos:column="46"/></operator><call><name pos:line="1102" pos:column="46">getGeneralizations<pos:position pos:line="1102" pos:column="64"/></name><argument_list pos:line="1102" pos:column="64">()<pos:position pos:line="1102" pos:column="66"/></argument_list></call><operator pos:line="1102" pos:column="66">.<pos:position pos:line="1102" pos:column="67"/></operator><call><name pos:line="1102" pos:column="67">iterator<pos:position pos:line="1102" pos:column="75"/></name><argument_list pos:line="1102" pos:column="75">()<pos:position pos:line="1102" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="1102" pos:column="78"/></expr_stmt>
        <while pos:line="1103" pos:column="9">while <condition pos:line="1103" pos:column="15">(<expr><call><name><name pos:line="1103" pos:column="16">it<pos:position pos:line="1103" pos:column="18"/></name><operator pos:line="1103" pos:column="18">.<pos:position pos:line="1103" pos:column="19"/></operator><name pos:line="1103" pos:column="19">hasNext<pos:position pos:line="1103" pos:column="26"/></name></name><argument_list pos:line="1103" pos:column="26">()<pos:position pos:line="1103" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="1103" pos:column="29"/></condition> <block pos:line="1103" pos:column="30">{
            <expr_stmt><expr><call><name><name pos:line="1104" pos:column="13">list<pos:position pos:line="1104" pos:column="17"/></name><operator pos:line="1104" pos:column="17">.<pos:position pos:line="1104" pos:column="18"/></operator><name pos:line="1104" pos:column="18">addAll<pos:position pos:line="1104" pos:column="24"/></name></name><argument_list pos:line="1104" pos:column="24">(<argument><expr><call><name pos:line="1104" pos:column="25">getAllContents<pos:position pos:line="1104" pos:column="39"/></name><argument_list pos:line="1104" pos:column="39">(<argument><expr><call><name><name pos:line="1104" pos:column="40">it<pos:position pos:line="1104" pos:column="42"/></name><operator pos:line="1104" pos:column="42">.<pos:position pos:line="1104" pos:column="43"/></operator><name pos:line="1104" pos:column="43">next<pos:position pos:line="1104" pos:column="47"/></name></name><argument_list pos:line="1104" pos:column="47">()<pos:position pos:line="1104" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="1104" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="1104" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="1104" pos:column="52"/></expr_stmt>
        }<pos:position pos:line="1105" pos:column="10"/></block></while>
        <return pos:line="1106" pos:column="9">return <expr><name pos:line="1106" pos:column="16">list<pos:position pos:line="1106" pos:column="20"/></name></expr>;<pos:position pos:line="1106" pos:column="21"/></return>
    }<pos:position pos:line="1107" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="1109" pos:column="5">/**
     * Returns all attributes of some classifier and of its parents.
     *
     * @param clazz is the classifier
     * @return Collection
     */</comment>
    <function><specifier pos:line="1115" pos:column="5">public<pos:position pos:line="1115" pos:column="11"/></specifier> <type><name pos:line="1115" pos:column="12">Collection<pos:position pos:line="1115" pos:column="22"/></name></type> <name pos:line="1115" pos:column="23">getAllAttributes<pos:position pos:line="1115" pos:column="39"/></name><parameter_list pos:line="1115" pos:column="39">(<parameter><decl><type><name pos:line="1115" pos:column="40">Object<pos:position pos:line="1115" pos:column="46"/></name></type> <name pos:line="1115" pos:column="47">clazz<pos:position pos:line="1115" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="1115" pos:column="53"/></parameter_list> <block pos:line="1115" pos:column="54">{
        <if pos:line="1116" pos:column="9">if <condition pos:line="1116" pos:column="12">(<expr><name pos:line="1116" pos:column="13">clazz<pos:position pos:line="1116" pos:column="18"/></name> <operator pos:line="1116" pos:column="19">==<pos:position pos:line="1116" pos:column="21"/></operator> <literal type="null" pos:line="1116" pos:column="22">null<pos:position pos:line="1116" pos:column="26"/></literal></expr>)<pos:position pos:line="1116" pos:column="27"/></condition><then pos:line="1116" pos:column="27"> <block pos:line="1116" pos:column="28">{
            <return pos:line="1117" pos:column="13">return <expr><operator pos:line="1117" pos:column="20">new<pos:position pos:line="1117" pos:column="23"/></operator> <call><name pos:line="1117" pos:column="24">ArrayList<pos:position pos:line="1117" pos:column="33"/></name><argument_list pos:line="1117" pos:column="33">()<pos:position pos:line="1117" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="1117" pos:column="36"/></return>
        }<pos:position pos:line="1118" pos:column="10"/></block></then></if>
        <if pos:line="1119" pos:column="9">if <condition pos:line="1119" pos:column="12">(<expr><operator pos:line="1119" pos:column="13">!<pos:position pos:line="1119" pos:column="14"/></operator><operator pos:line="1119" pos:column="14">(<pos:position pos:line="1119" pos:column="15"/></operator><name pos:line="1119" pos:column="15">clazz<pos:position pos:line="1119" pos:column="20"/></name> <operator pos:line="1119" pos:column="21">instanceof<pos:position pos:line="1119" pos:column="31"/></operator> <name pos:line="1119" pos:column="32">MClassifier<pos:position pos:line="1119" pos:column="43"/></name><operator pos:line="1119" pos:column="43">)<pos:position pos:line="1119" pos:column="44"/></operator></expr>)<pos:position pos:line="1119" pos:column="45"/></condition><then pos:line="1119" pos:column="45"> <block pos:line="1119" pos:column="46">{
            <throw pos:line="1120" pos:column="13">throw <expr><operator pos:line="1120" pos:column="19">new<pos:position pos:line="1120" pos:column="22"/></operator> <call><name pos:line="1120" pos:column="23">IllegalArgumentException<pos:position pos:line="1120" pos:column="47"/></name><argument_list pos:line="1120" pos:column="47">()<pos:position pos:line="1120" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="1120" pos:column="50"/></throw>
        }<pos:position pos:line="1121" pos:column="10"/></block></then></if>

        <decl_stmt><decl><type><name pos:line="1123" pos:column="9">List<pos:position pos:line="1123" pos:column="13"/></name></type> <name pos:line="1123" pos:column="14">list<pos:position pos:line="1123" pos:column="18"/></name> <init pos:line="1123" pos:column="19">= <expr><operator pos:line="1123" pos:column="21">new<pos:position pos:line="1123" pos:column="24"/></operator> <call><name pos:line="1123" pos:column="25">ArrayList<pos:position pos:line="1123" pos:column="34"/></name><argument_list pos:line="1123" pos:column="34">()<pos:position pos:line="1123" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1123" pos:column="37"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="1124" pos:column="9">Iterator<pos:position pos:line="1124" pos:column="17"/></name></type> <name pos:line="1124" pos:column="18">it<pos:position pos:line="1124" pos:column="20"/></name> <init pos:line="1124" pos:column="21">= <expr><operator pos:line="1124" pos:column="23">(<pos:position pos:line="1124" pos:column="24"/></operator><operator pos:line="1124" pos:column="24">(<pos:position pos:line="1124" pos:column="25"/></operator><name pos:line="1124" pos:column="25">MClassifier<pos:position pos:line="1124" pos:column="36"/></name><operator pos:line="1124" pos:column="36">)<pos:position pos:line="1124" pos:column="37"/></operator> <name pos:line="1124" pos:column="38">clazz<pos:position pos:line="1124" pos:column="43"/></name><operator pos:line="1124" pos:column="43">)<pos:position pos:line="1124" pos:column="44"/></operator><operator pos:line="1124" pos:column="44">.<pos:position pos:line="1124" pos:column="45"/></operator><call><name pos:line="1124" pos:column="45">getFeatures<pos:position pos:line="1124" pos:column="56"/></name><argument_list pos:line="1124" pos:column="56">()<pos:position pos:line="1124" pos:column="58"/></argument_list></call><operator pos:line="1124" pos:column="58">.<pos:position pos:line="1124" pos:column="59"/></operator><call><name pos:line="1124" pos:column="59">iterator<pos:position pos:line="1124" pos:column="67"/></name><argument_list pos:line="1124" pos:column="67">()<pos:position pos:line="1124" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1124" pos:column="70"/></decl_stmt>
        <while pos:line="1125" pos:column="9">while <condition pos:line="1125" pos:column="15">(<expr><call><name><name pos:line="1125" pos:column="16">it<pos:position pos:line="1125" pos:column="18"/></name><operator pos:line="1125" pos:column="18">.<pos:position pos:line="1125" pos:column="19"/></operator><name pos:line="1125" pos:column="19">hasNext<pos:position pos:line="1125" pos:column="26"/></name></name><argument_list pos:line="1125" pos:column="26">()<pos:position pos:line="1125" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="1125" pos:column="29"/></condition> <block pos:line="1125" pos:column="30">{
            <decl_stmt><decl><type><name pos:line="1126" pos:column="13">MFeature<pos:position pos:line="1126" pos:column="21"/></name></type> <name pos:line="1126" pos:column="22">element<pos:position pos:line="1126" pos:column="29"/></name> <init pos:line="1126" pos:column="30">= <expr><operator pos:line="1126" pos:column="32">(<pos:position pos:line="1126" pos:column="33"/></operator><name pos:line="1126" pos:column="33">MFeature<pos:position pos:line="1126" pos:column="41"/></name><operator pos:line="1126" pos:column="41">)<pos:position pos:line="1126" pos:column="42"/></operator> <call><name><name pos:line="1126" pos:column="43">it<pos:position pos:line="1126" pos:column="45"/></name><operator pos:line="1126" pos:column="45">.<pos:position pos:line="1126" pos:column="46"/></operator><name pos:line="1126" pos:column="46">next<pos:position pos:line="1126" pos:column="50"/></name></name><argument_list pos:line="1126" pos:column="50">()<pos:position pos:line="1126" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1126" pos:column="53"/></decl_stmt>
            <if pos:line="1127" pos:column="13">if <condition pos:line="1127" pos:column="16">(<expr><name pos:line="1127" pos:column="17">element<pos:position pos:line="1127" pos:column="24"/></name> <operator pos:line="1127" pos:column="25">instanceof<pos:position pos:line="1127" pos:column="35"/></operator> <name pos:line="1127" pos:column="36">MAttribute<pos:position pos:line="1127" pos:column="46"/></name></expr>)<pos:position pos:line="1127" pos:column="47"/></condition><then pos:line="1127" pos:column="47"> <block pos:line="1127" pos:column="48">{
                <expr_stmt><expr><call><name><name pos:line="1128" pos:column="17">list<pos:position pos:line="1128" pos:column="21"/></name><operator pos:line="1128" pos:column="21">.<pos:position pos:line="1128" pos:column="22"/></operator><name pos:line="1128" pos:column="22">add<pos:position pos:line="1128" pos:column="25"/></name></name><argument_list pos:line="1128" pos:column="25">(<argument><expr><name pos:line="1128" pos:column="26">element<pos:position pos:line="1128" pos:column="33"/></name></expr></argument>)<pos:position pos:line="1128" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="1128" pos:column="35"/></expr_stmt>
            }<pos:position pos:line="1129" pos:column="14"/></block></then></if>
        }<pos:position pos:line="1130" pos:column="10"/></block></while>
        <expr_stmt><expr><name pos:line="1131" pos:column="9">it<pos:position pos:line="1131" pos:column="11"/></name> <operator pos:line="1131" pos:column="12">=<pos:position pos:line="1131" pos:column="13"/></operator> <operator pos:line="1131" pos:column="14">(<pos:position pos:line="1131" pos:column="15"/></operator><operator pos:line="1131" pos:column="15">(<pos:position pos:line="1131" pos:column="16"/></operator><name pos:line="1131" pos:column="16">MClassifier<pos:position pos:line="1131" pos:column="27"/></name><operator pos:line="1131" pos:column="27">)<pos:position pos:line="1131" pos:column="28"/></operator> <name pos:line="1131" pos:column="29">clazz<pos:position pos:line="1131" pos:column="34"/></name><operator pos:line="1131" pos:column="34">)<pos:position pos:line="1131" pos:column="35"/></operator><operator pos:line="1131" pos:column="35">.<pos:position pos:line="1131" pos:column="36"/></operator><call><name pos:line="1131" pos:column="36">getGeneralizations<pos:position pos:line="1131" pos:column="54"/></name><argument_list pos:line="1131" pos:column="54">()<pos:position pos:line="1131" pos:column="56"/></argument_list></call><operator pos:line="1131" pos:column="56">.<pos:position pos:line="1131" pos:column="57"/></operator><call><name pos:line="1131" pos:column="57">iterator<pos:position pos:line="1131" pos:column="65"/></name><argument_list pos:line="1131" pos:column="65">()<pos:position pos:line="1131" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="1131" pos:column="68"/></expr_stmt>
        <while pos:line="1132" pos:column="9">while <condition pos:line="1132" pos:column="15">(<expr><call><name><name pos:line="1132" pos:column="16">it<pos:position pos:line="1132" pos:column="18"/></name><operator pos:line="1132" pos:column="18">.<pos:position pos:line="1132" pos:column="19"/></operator><name pos:line="1132" pos:column="19">hasNext<pos:position pos:line="1132" pos:column="26"/></name></name><argument_list pos:line="1132" pos:column="26">()<pos:position pos:line="1132" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="1132" pos:column="29"/></condition> <block pos:line="1132" pos:column="30">{
            <expr_stmt><expr><call><name><name pos:line="1133" pos:column="13">list<pos:position pos:line="1133" pos:column="17"/></name><operator pos:line="1133" pos:column="17">.<pos:position pos:line="1133" pos:column="18"/></operator><name pos:line="1133" pos:column="18">addAll<pos:position pos:line="1133" pos:column="24"/></name></name><argument_list pos:line="1133" pos:column="24">(<argument><expr><call><name pos:line="1133" pos:column="25">getAllAttributes<pos:position pos:line="1133" pos:column="41"/></name><argument_list pos:line="1133" pos:column="41">(<argument><expr><call><name><name pos:line="1133" pos:column="42">it<pos:position pos:line="1133" pos:column="44"/></name><operator pos:line="1133" pos:column="44">.<pos:position pos:line="1133" pos:column="45"/></operator><name pos:line="1133" pos:column="45">next<pos:position pos:line="1133" pos:column="49"/></name></name><argument_list pos:line="1133" pos:column="49">()<pos:position pos:line="1133" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="1133" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="1133" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="1133" pos:column="54"/></expr_stmt>
        }<pos:position pos:line="1134" pos:column="10"/></block></while>
        <return pos:line="1135" pos:column="9">return <expr><name pos:line="1135" pos:column="16">list<pos:position pos:line="1135" pos:column="20"/></name></expr>;<pos:position pos:line="1135" pos:column="21"/></return>
    }<pos:position pos:line="1136" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="1138" pos:column="5">/**
     * Returns the source of a relation. The source of a relation is
     * defined as the modelelement that propagates this relation. If
     * there are more then 1 sources, only the first is returned. If
     * there is no source, null is returned. Examples of sources
     * include classifiers that are types to associationends, usecases
     * that are bases to extend and include relations and so on. A
     * source is allways the start from the arrow in the fig, the
     * destination the end.&lt;p&gt;
     *
     * This method also works to get the source of a Link.&lt;p&gt;
     *
     * TODO: move this method to a generic ModelHelper
     *
     * @param relationship is the relation
     * @return Object
     */</comment>
    <function><specifier pos:line="1155" pos:column="5">public<pos:position pos:line="1155" pos:column="11"/></specifier> <type><name pos:line="1155" pos:column="12">Object<pos:position pos:line="1155" pos:column="18"/></name></type> <name pos:line="1155" pos:column="19">getSource<pos:position pos:line="1155" pos:column="28"/></name><parameter_list pos:line="1155" pos:column="28">(<parameter><decl><type><name pos:line="1155" pos:column="29">Object<pos:position pos:line="1155" pos:column="35"/></name></type> <name pos:line="1155" pos:column="36">relationship<pos:position pos:line="1155" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1155" pos:column="49"/></parameter_list> <block pos:line="1155" pos:column="50">{
        <if pos:line="1156" pos:column="9">if <condition pos:line="1156" pos:column="12">(<expr><operator pos:line="1156" pos:column="13">!<pos:position pos:line="1156" pos:column="14"/></operator><operator pos:line="1156" pos:column="14">(<pos:position pos:line="1156" pos:column="15"/></operator><name pos:line="1156" pos:column="15">relationship<pos:position pos:line="1156" pos:column="27"/></name> <operator pos:line="1156" pos:column="28">instanceof<pos:position pos:line="1156" pos:column="38"/></operator> <name pos:line="1156" pos:column="39">MRelationship<pos:position pos:line="1156" pos:column="52"/></name><operator pos:line="1156" pos:column="52">)<pos:position pos:line="1156" pos:column="53"/></operator>
	    <operator pos:line="1157" pos:column="13">&amp;&amp;<pos:position pos:line="1157" pos:column="23"/></operator> <operator pos:line="1157" pos:column="16">!<pos:position pos:line="1157" pos:column="17"/></operator><operator pos:line="1157" pos:column="17">(<pos:position pos:line="1157" pos:column="18"/></operator><name pos:line="1157" pos:column="18">relationship<pos:position pos:line="1157" pos:column="30"/></name> <operator pos:line="1157" pos:column="31">instanceof<pos:position pos:line="1157" pos:column="41"/></operator> <name pos:line="1157" pos:column="42">MLink<pos:position pos:line="1157" pos:column="47"/></name><operator pos:line="1157" pos:column="47">)<pos:position pos:line="1157" pos:column="48"/></operator>
	    <operator pos:line="1158" pos:column="13">&amp;&amp;<pos:position pos:line="1158" pos:column="23"/></operator> <operator pos:line="1158" pos:column="16">!<pos:position pos:line="1158" pos:column="17"/></operator><operator pos:line="1158" pos:column="17">(<pos:position pos:line="1158" pos:column="18"/></operator><name pos:line="1158" pos:column="18">relationship<pos:position pos:line="1158" pos:column="30"/></name> <operator pos:line="1158" pos:column="31">instanceof<pos:position pos:line="1158" pos:column="41"/></operator> <name pos:line="1158" pos:column="42">MAssociationEnd<pos:position pos:line="1158" pos:column="57"/></name><operator pos:line="1158" pos:column="57">)<pos:position pos:line="1158" pos:column="58"/></operator></expr>)<pos:position pos:line="1158" pos:column="59"/></condition><then pos:line="1158" pos:column="59"> <block pos:line="1158" pos:column="60">{


            <throw pos:line="1161" pos:column="13">throw <expr><operator pos:line="1161" pos:column="19">new<pos:position pos:line="1161" pos:column="22"/></operator> <call><name pos:line="1161" pos:column="23">IllegalArgumentException<pos:position pos:line="1161" pos:column="47"/></name><argument_list pos:line="1161" pos:column="47">(<argument><expr><literal type="string" pos:line="1161" pos:column="48">"Argument "<pos:position pos:line="1161" pos:column="59"/></literal>
                    			       <operator pos:line="1162" pos:column="48">+<pos:position pos:line="1162" pos:column="49"/></operator> <call><name><name pos:line="1162" pos:column="50">relationship<pos:position pos:line="1162" pos:column="62"/></name><operator pos:line="1162" pos:column="62">.<pos:position pos:line="1162" pos:column="63"/></operator><name pos:line="1162" pos:column="63">toString<pos:position pos:line="1162" pos:column="71"/></name></name><argument_list pos:line="1162" pos:column="71">()<pos:position pos:line="1162" pos:column="73"/></argument_list></call>
                    			       <operator pos:line="1163" pos:column="48">+<pos:position pos:line="1163" pos:column="49"/></operator> <literal type="string" pos:line="1163" pos:column="50">" is not "<pos:position pos:line="1163" pos:column="60"/></literal>
					       <operator pos:line="1164" pos:column="48">+<pos:position pos:line="1164" pos:column="49"/></operator> <literal type="string" pos:line="1164" pos:column="50">"a relationship"<pos:position pos:line="1164" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="1164" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="1164" pos:column="68"/></throw>

	}<pos:position pos:line="1166" pos:column="10"/></block></then></if>
        <if pos:line="1167" pos:column="9">if <condition pos:line="1167" pos:column="12">(<expr><name pos:line="1167" pos:column="13">relationship<pos:position pos:line="1167" pos:column="25"/></name> <operator pos:line="1167" pos:column="26">instanceof<pos:position pos:line="1167" pos:column="36"/></operator> <name pos:line="1167" pos:column="37">MLink<pos:position pos:line="1167" pos:column="42"/></name></expr>)<pos:position pos:line="1167" pos:column="43"/></condition><then pos:line="1167" pos:column="43"> <block pos:line="1167" pos:column="44">{
	    <decl_stmt><decl><type><name pos:line="1168" pos:column="13">Iterator<pos:position pos:line="1168" pos:column="21"/></name></type> <name pos:line="1168" pos:column="22">it<pos:position pos:line="1168" pos:column="24"/></name> <init pos:line="1168" pos:column="25">=
	        <expr><call><name><name pos:line="1169" pos:column="17">nsmodel<pos:position pos:line="1169" pos:column="24"/></name><operator pos:line="1169" pos:column="24">.<pos:position pos:line="1169" pos:column="25"/></operator><name pos:line="1169" pos:column="25">getFacade<pos:position pos:line="1169" pos:column="34"/></name></name><argument_list pos:line="1169" pos:column="34">()<pos:position pos:line="1169" pos:column="36"/></argument_list></call><operator pos:line="1169" pos:column="36">.<pos:position pos:line="1169" pos:column="37"/></operator><call><name pos:line="1169" pos:column="37">getConnections<pos:position pos:line="1169" pos:column="51"/></name><argument_list pos:line="1169" pos:column="51">(<argument><expr><name pos:line="1169" pos:column="52">relationship<pos:position pos:line="1169" pos:column="64"/></name></expr></argument>)<pos:position pos:line="1169" pos:column="65"/></argument_list></call><operator pos:line="1169" pos:column="65">.<pos:position pos:line="1169" pos:column="66"/></operator><call><name pos:line="1169" pos:column="66">iterator<pos:position pos:line="1169" pos:column="74"/></name><argument_list pos:line="1169" pos:column="74">()<pos:position pos:line="1169" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1169" pos:column="77"/></decl_stmt>
	    <if pos:line="1170" pos:column="13">if <condition pos:line="1170" pos:column="16">(<expr><call><name><name pos:line="1170" pos:column="17">it<pos:position pos:line="1170" pos:column="19"/></name><operator pos:line="1170" pos:column="19">.<pos:position pos:line="1170" pos:column="20"/></operator><name pos:line="1170" pos:column="20">hasNext<pos:position pos:line="1170" pos:column="27"/></name></name><argument_list pos:line="1170" pos:column="27">()<pos:position pos:line="1170" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="1170" pos:column="30"/></condition><then pos:line="1170" pos:column="30"> <block pos:line="1170" pos:column="31">{
		<return pos:line="1171" pos:column="17">return <expr><call><name><name pos:line="1171" pos:column="24">nsmodel<pos:position pos:line="1171" pos:column="31"/></name><operator pos:line="1171" pos:column="31">.<pos:position pos:line="1171" pos:column="32"/></operator><name pos:line="1171" pos:column="32">getFacade<pos:position pos:line="1171" pos:column="41"/></name></name><argument_list pos:line="1171" pos:column="41">()<pos:position pos:line="1171" pos:column="43"/></argument_list></call><operator pos:line="1171" pos:column="43">.<pos:position pos:line="1171" pos:column="44"/></operator><call><name pos:line="1171" pos:column="44">getInstance<pos:position pos:line="1171" pos:column="55"/></name><argument_list pos:line="1171" pos:column="55">(<argument><expr><call><name><name pos:line="1171" pos:column="56">it<pos:position pos:line="1171" pos:column="58"/></name><operator pos:line="1171" pos:column="58">.<pos:position pos:line="1171" pos:column="59"/></operator><name pos:line="1171" pos:column="59">next<pos:position pos:line="1171" pos:column="63"/></name></name><argument_list pos:line="1171" pos:column="63">()<pos:position pos:line="1171" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="1171" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="1171" pos:column="67"/></return>
	    }<pos:position pos:line="1172" pos:column="14"/></block></then></if> 
            <return pos:line="1173" pos:column="13">return <expr><literal type="null" pos:line="1173" pos:column="20">null<pos:position pos:line="1173" pos:column="24"/></literal></expr>;<pos:position pos:line="1173" pos:column="25"/></return>
        }<pos:position pos:line="1174" pos:column="10"/></block></then></if>
        <if pos:line="1175" pos:column="9">if <condition pos:line="1175" pos:column="12">(<expr><name pos:line="1175" pos:column="13">relationship<pos:position pos:line="1175" pos:column="25"/></name> <operator pos:line="1175" pos:column="26">instanceof<pos:position pos:line="1175" pos:column="36"/></operator> <name pos:line="1175" pos:column="37">MAssociation<pos:position pos:line="1175" pos:column="49"/></name></expr>)<pos:position pos:line="1175" pos:column="50"/></condition><then pos:line="1175" pos:column="50"> <block pos:line="1175" pos:column="51">{
            <decl_stmt><decl><type><name pos:line="1176" pos:column="13">MAssociation<pos:position pos:line="1176" pos:column="25"/></name></type> <name pos:line="1176" pos:column="26">assoc<pos:position pos:line="1176" pos:column="31"/></name> <init pos:line="1176" pos:column="32">= <expr><operator pos:line="1176" pos:column="34">(<pos:position pos:line="1176" pos:column="35"/></operator><name pos:line="1176" pos:column="35">MAssociation<pos:position pos:line="1176" pos:column="47"/></name><operator pos:line="1176" pos:column="47">)<pos:position pos:line="1176" pos:column="48"/></operator> <name pos:line="1176" pos:column="49">relationship<pos:position pos:line="1176" pos:column="61"/></name></expr></init></decl>;<pos:position pos:line="1176" pos:column="62"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="1177" pos:column="13">List<pos:position pos:line="1177" pos:column="17"/></name></type> <name pos:line="1177" pos:column="18">conns<pos:position pos:line="1177" pos:column="23"/></name> <init pos:line="1177" pos:column="24">= <expr><call><name><name pos:line="1177" pos:column="26">assoc<pos:position pos:line="1177" pos:column="31"/></name><operator pos:line="1177" pos:column="31">.<pos:position pos:line="1177" pos:column="32"/></operator><name pos:line="1177" pos:column="32">getConnections<pos:position pos:line="1177" pos:column="46"/></name></name><argument_list pos:line="1177" pos:column="46">()<pos:position pos:line="1177" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1177" pos:column="49"/></decl_stmt>
            <if pos:line="1178" pos:column="13">if <condition pos:line="1178" pos:column="16">(<expr><name pos:line="1178" pos:column="17">conns<pos:position pos:line="1178" pos:column="22"/></name> <operator pos:line="1178" pos:column="23">==<pos:position pos:line="1178" pos:column="25"/></operator> <literal type="null" pos:line="1178" pos:column="26">null<pos:position pos:line="1178" pos:column="30"/></literal> <operator pos:line="1178" pos:column="31">||<pos:position pos:line="1178" pos:column="33"/></operator> <call><name><name pos:line="1178" pos:column="34">conns<pos:position pos:line="1178" pos:column="39"/></name><operator pos:line="1178" pos:column="39">.<pos:position pos:line="1178" pos:column="40"/></operator><name pos:line="1178" pos:column="40">isEmpty<pos:position pos:line="1178" pos:column="47"/></name></name><argument_list pos:line="1178" pos:column="47">()<pos:position pos:line="1178" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="1178" pos:column="50"/></condition><then pos:line="1178" pos:column="50"> <block pos:line="1178" pos:column="51">{
                <return pos:line="1179" pos:column="17">return <expr><literal type="null" pos:line="1179" pos:column="24">null<pos:position pos:line="1179" pos:column="28"/></literal></expr>;<pos:position pos:line="1179" pos:column="29"/></return>
            }<pos:position pos:line="1180" pos:column="14"/></block></then></if>
            <return pos:line="1181" pos:column="13">return <expr><operator pos:line="1181" pos:column="20">(<pos:position pos:line="1181" pos:column="21"/></operator><operator pos:line="1181" pos:column="21">(<pos:position pos:line="1181" pos:column="22"/></operator><name pos:line="1181" pos:column="22">MAssociationEnd<pos:position pos:line="1181" pos:column="37"/></name><operator pos:line="1181" pos:column="37">)<pos:position pos:line="1181" pos:column="38"/></operator> <call><name><name pos:line="1181" pos:column="39">conns<pos:position pos:line="1181" pos:column="44"/></name><operator pos:line="1181" pos:column="44">.<pos:position pos:line="1181" pos:column="45"/></operator><name pos:line="1181" pos:column="45">get<pos:position pos:line="1181" pos:column="48"/></name></name><argument_list pos:line="1181" pos:column="48">(<argument><expr><literal type="number" pos:line="1181" pos:column="49">0<pos:position pos:line="1181" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="1181" pos:column="51"/></argument_list></call><operator pos:line="1181" pos:column="51">)<pos:position pos:line="1181" pos:column="52"/></operator><operator pos:line="1181" pos:column="52">.<pos:position pos:line="1181" pos:column="53"/></operator><call><name pos:line="1181" pos:column="53">getType<pos:position pos:line="1181" pos:column="60"/></name><argument_list pos:line="1181" pos:column="60">()<pos:position pos:line="1181" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="1181" pos:column="63"/></return>
        }<pos:position pos:line="1182" pos:column="10"/></block></then></if>
        <if pos:line="1183" pos:column="9">if <condition pos:line="1183" pos:column="12">(<expr><name pos:line="1183" pos:column="13">relationship<pos:position pos:line="1183" pos:column="25"/></name> <operator pos:line="1183" pos:column="26">instanceof<pos:position pos:line="1183" pos:column="36"/></operator> <name pos:line="1183" pos:column="37">MGeneralization<pos:position pos:line="1183" pos:column="52"/></name></expr>)<pos:position pos:line="1183" pos:column="53"/></condition><then pos:line="1183" pos:column="53"> <block pos:line="1183" pos:column="54">{
            <decl_stmt><decl><type><name pos:line="1184" pos:column="13">MGeneralization<pos:position pos:line="1184" pos:column="28"/></name></type> <name pos:line="1184" pos:column="29">gen<pos:position pos:line="1184" pos:column="32"/></name> <init pos:line="1184" pos:column="33">= <expr><operator pos:line="1184" pos:column="35">(<pos:position pos:line="1184" pos:column="36"/></operator><name pos:line="1184" pos:column="36">MGeneralization<pos:position pos:line="1184" pos:column="51"/></name><operator pos:line="1184" pos:column="51">)<pos:position pos:line="1184" pos:column="52"/></operator> <name pos:line="1184" pos:column="53">relationship<pos:position pos:line="1184" pos:column="65"/></name></expr></init></decl>;<pos:position pos:line="1184" pos:column="66"/></decl_stmt>
            <return pos:line="1185" pos:column="13">return <expr><call><name><name pos:line="1185" pos:column="20">gen<pos:position pos:line="1185" pos:column="23"/></name><operator pos:line="1185" pos:column="23">.<pos:position pos:line="1185" pos:column="24"/></operator><name pos:line="1185" pos:column="24">getChild<pos:position pos:line="1185" pos:column="32"/></name></name><argument_list pos:line="1185" pos:column="32">()<pos:position pos:line="1185" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="1185" pos:column="35"/></return>
        }<pos:position pos:line="1186" pos:column="10"/></block></then></if>
        <if pos:line="1187" pos:column="9">if <condition pos:line="1187" pos:column="12">(<expr><name pos:line="1187" pos:column="13">relationship<pos:position pos:line="1187" pos:column="25"/></name> <operator pos:line="1187" pos:column="26">instanceof<pos:position pos:line="1187" pos:column="36"/></operator> <name pos:line="1187" pos:column="37">MDependency<pos:position pos:line="1187" pos:column="48"/></name></expr>)<pos:position pos:line="1187" pos:column="49"/></condition><then pos:line="1187" pos:column="49"> <block pos:line="1187" pos:column="50">{
            <decl_stmt><decl><type><name pos:line="1188" pos:column="13">MDependency<pos:position pos:line="1188" pos:column="24"/></name></type> <name pos:line="1188" pos:column="25">dep<pos:position pos:line="1188" pos:column="28"/></name> <init pos:line="1188" pos:column="29">= <expr><operator pos:line="1188" pos:column="31">(<pos:position pos:line="1188" pos:column="32"/></operator><name pos:line="1188" pos:column="32">MDependency<pos:position pos:line="1188" pos:column="43"/></name><operator pos:line="1188" pos:column="43">)<pos:position pos:line="1188" pos:column="44"/></operator> <name pos:line="1188" pos:column="45">relationship<pos:position pos:line="1188" pos:column="57"/></name></expr></init></decl>;<pos:position pos:line="1188" pos:column="58"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="1189" pos:column="13">Collection<pos:position pos:line="1189" pos:column="23"/></name></type> <name pos:line="1189" pos:column="24">col<pos:position pos:line="1189" pos:column="27"/></name> <init pos:line="1189" pos:column="28">= <expr><call><name><name pos:line="1189" pos:column="30">dep<pos:position pos:line="1189" pos:column="33"/></name><operator pos:line="1189" pos:column="33">.<pos:position pos:line="1189" pos:column="34"/></operator><name pos:line="1189" pos:column="34">getClients<pos:position pos:line="1189" pos:column="44"/></name></name><argument_list pos:line="1189" pos:column="44">()<pos:position pos:line="1189" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1189" pos:column="47"/></decl_stmt>
            <if pos:line="1190" pos:column="13">if <condition pos:line="1190" pos:column="16">(<expr><call><name><name pos:line="1190" pos:column="17">col<pos:position pos:line="1190" pos:column="20"/></name><operator pos:line="1190" pos:column="20">.<pos:position pos:line="1190" pos:column="21"/></operator><name pos:line="1190" pos:column="21">isEmpty<pos:position pos:line="1190" pos:column="28"/></name></name><argument_list pos:line="1190" pos:column="28">()<pos:position pos:line="1190" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="1190" pos:column="31"/></condition><then pos:line="1190" pos:column="31"> <block pos:line="1190" pos:column="32">{
                <return pos:line="1191" pos:column="17">return <expr><literal type="null" pos:line="1191" pos:column="24">null<pos:position pos:line="1191" pos:column="28"/></literal></expr>;<pos:position pos:line="1191" pos:column="29"/></return>
            }<pos:position pos:line="1192" pos:column="14"/></block></then></if>
            <return pos:line="1193" pos:column="13">return <expr><call pos:line="1193" pos:column="20">(<name pos:line="1193" pos:column="21">MModelElement<pos:position pos:line="1193" pos:column="34"/></name>) <argument_list pos:line="1193" pos:column="36">(<argument><expr><call><name><name pos:line="1193" pos:column="37">col<pos:position pos:line="1193" pos:column="40"/></name><operator pos:line="1193" pos:column="40">.<pos:position pos:line="1193" pos:column="41"/></operator><name pos:line="1193" pos:column="41">toArray<pos:position pos:line="1193" pos:column="48"/></name></name><argument_list pos:line="1193" pos:column="48">()<pos:position pos:line="1193" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="1193" pos:column="51"/></argument_list></call><index pos:line="1193" pos:column="51">[<expr><literal type="number" pos:line="1193" pos:column="52">0<pos:position pos:line="1193" pos:column="53"/></literal></expr>]<pos:position pos:line="1193" pos:column="54"/></index></expr>;<pos:position pos:line="1193" pos:column="55"/></return>
        }<pos:position pos:line="1194" pos:column="10"/></block></then></if>
        <if pos:line="1195" pos:column="9">if <condition pos:line="1195" pos:column="12">(<expr><name pos:line="1195" pos:column="13">relationship<pos:position pos:line="1195" pos:column="25"/></name> <operator pos:line="1195" pos:column="26">instanceof<pos:position pos:line="1195" pos:column="36"/></operator> <name pos:line="1195" pos:column="37">MFlow<pos:position pos:line="1195" pos:column="42"/></name></expr>)<pos:position pos:line="1195" pos:column="43"/></condition><then pos:line="1195" pos:column="43"> <block pos:line="1195" pos:column="44">{
            <decl_stmt><decl><type><name pos:line="1196" pos:column="13">MFlow<pos:position pos:line="1196" pos:column="18"/></name></type> <name pos:line="1196" pos:column="19">flow<pos:position pos:line="1196" pos:column="23"/></name> <init pos:line="1196" pos:column="24">= <expr><operator pos:line="1196" pos:column="26">(<pos:position pos:line="1196" pos:column="27"/></operator><name pos:line="1196" pos:column="27">MFlow<pos:position pos:line="1196" pos:column="32"/></name><operator pos:line="1196" pos:column="32">)<pos:position pos:line="1196" pos:column="33"/></operator> <name pos:line="1196" pos:column="34">relationship<pos:position pos:line="1196" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="1196" pos:column="47"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="1197" pos:column="13">Collection<pos:position pos:line="1197" pos:column="23"/></name></type> <name pos:line="1197" pos:column="24">col<pos:position pos:line="1197" pos:column="27"/></name> <init pos:line="1197" pos:column="28">= <expr><call><name><name pos:line="1197" pos:column="30">flow<pos:position pos:line="1197" pos:column="34"/></name><operator pos:line="1197" pos:column="34">.<pos:position pos:line="1197" pos:column="35"/></operator><name pos:line="1197" pos:column="35">getSources<pos:position pos:line="1197" pos:column="45"/></name></name><argument_list pos:line="1197" pos:column="45">()<pos:position pos:line="1197" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1197" pos:column="48"/></decl_stmt>
            <if pos:line="1198" pos:column="13">if <condition pos:line="1198" pos:column="16">(<expr><call><name><name pos:line="1198" pos:column="17">col<pos:position pos:line="1198" pos:column="20"/></name><operator pos:line="1198" pos:column="20">.<pos:position pos:line="1198" pos:column="21"/></operator><name pos:line="1198" pos:column="21">isEmpty<pos:position pos:line="1198" pos:column="28"/></name></name><argument_list pos:line="1198" pos:column="28">()<pos:position pos:line="1198" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="1198" pos:column="31"/></condition><then pos:line="1198" pos:column="31"> <block pos:line="1198" pos:column="32">{
                <return pos:line="1199" pos:column="17">return <expr><literal type="null" pos:line="1199" pos:column="24">null<pos:position pos:line="1199" pos:column="28"/></literal></expr>;<pos:position pos:line="1199" pos:column="29"/></return>
            }<pos:position pos:line="1200" pos:column="14"/></block></then></if>
            <return pos:line="1201" pos:column="13">return <expr><call pos:line="1201" pos:column="20">(<name pos:line="1201" pos:column="21">MModelElement<pos:position pos:line="1201" pos:column="34"/></name>) <argument_list pos:line="1201" pos:column="36">(<argument><expr><call><name><name pos:line="1201" pos:column="37">col<pos:position pos:line="1201" pos:column="40"/></name><operator pos:line="1201" pos:column="40">.<pos:position pos:line="1201" pos:column="41"/></operator><name pos:line="1201" pos:column="41">toArray<pos:position pos:line="1201" pos:column="48"/></name></name><argument_list pos:line="1201" pos:column="48">()<pos:position pos:line="1201" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="1201" pos:column="51"/></argument_list></call><index pos:line="1201" pos:column="51">[<expr><literal type="number" pos:line="1201" pos:column="52">0<pos:position pos:line="1201" pos:column="53"/></literal></expr>]<pos:position pos:line="1201" pos:column="54"/></index></expr>;<pos:position pos:line="1201" pos:column="55"/></return>
        }<pos:position pos:line="1202" pos:column="10"/></block></then></if>
        <if pos:line="1203" pos:column="9">if <condition pos:line="1203" pos:column="12">(<expr><name pos:line="1203" pos:column="13">relationship<pos:position pos:line="1203" pos:column="25"/></name> <operator pos:line="1203" pos:column="26">instanceof<pos:position pos:line="1203" pos:column="36"/></operator> <name pos:line="1203" pos:column="37">MExtend<pos:position pos:line="1203" pos:column="44"/></name></expr>)<pos:position pos:line="1203" pos:column="45"/></condition><then pos:line="1203" pos:column="45"> <block pos:line="1203" pos:column="46">{
            <decl_stmt><decl><type><name pos:line="1204" pos:column="13">MExtend<pos:position pos:line="1204" pos:column="20"/></name></type> <name pos:line="1204" pos:column="21">extend<pos:position pos:line="1204" pos:column="27"/></name> <init pos:line="1204" pos:column="28">= <expr><operator pos:line="1204" pos:column="30">(<pos:position pos:line="1204" pos:column="31"/></operator><name pos:line="1204" pos:column="31">MExtend<pos:position pos:line="1204" pos:column="38"/></name><operator pos:line="1204" pos:column="38">)<pos:position pos:line="1204" pos:column="39"/></operator> <name pos:line="1204" pos:column="40">relationship<pos:position pos:line="1204" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="1204" pos:column="53"/></decl_stmt>
            <return pos:line="1205" pos:column="13">return <expr><call><name><name pos:line="1205" pos:column="20">extend<pos:position pos:line="1205" pos:column="26"/></name><operator pos:line="1205" pos:column="26">.<pos:position pos:line="1205" pos:column="27"/></operator><name pos:line="1205" pos:column="27">getExtension<pos:position pos:line="1205" pos:column="39"/></name></name><argument_list pos:line="1205" pos:column="39">()<pos:position pos:line="1205" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="1205" pos:column="42"/></return> <comment type="line" pos:line="1205" pos:column="43">// we have to follow the arrows..</comment>
        }<pos:position pos:line="1206" pos:column="10"/></block></then></if>
        <if pos:line="1207" pos:column="9">if <condition pos:line="1207" pos:column="12">(<expr><name pos:line="1207" pos:column="13">relationship<pos:position pos:line="1207" pos:column="25"/></name> <operator pos:line="1207" pos:column="26">instanceof<pos:position pos:line="1207" pos:column="36"/></operator> <name pos:line="1207" pos:column="37">MInclude<pos:position pos:line="1207" pos:column="45"/></name></expr>)<pos:position pos:line="1207" pos:column="46"/></condition><then pos:line="1207" pos:column="46"> <block pos:line="1207" pos:column="47">{
            <decl_stmt><decl><type><name pos:line="1208" pos:column="13">MInclude<pos:position pos:line="1208" pos:column="21"/></name></type> <name pos:line="1208" pos:column="22">include<pos:position pos:line="1208" pos:column="29"/></name> <init pos:line="1208" pos:column="30">= <expr><operator pos:line="1208" pos:column="32">(<pos:position pos:line="1208" pos:column="33"/></operator><name pos:line="1208" pos:column="33">MInclude<pos:position pos:line="1208" pos:column="41"/></name><operator pos:line="1208" pos:column="41">)<pos:position pos:line="1208" pos:column="42"/></operator> <name pos:line="1208" pos:column="43">relationship<pos:position pos:line="1208" pos:column="55"/></name></expr></init></decl>;<pos:position pos:line="1208" pos:column="56"/></decl_stmt>
            <comment type="line" pos:line="1209" pos:column="13">// we use modelfacade here to cover up for a messup in NSUML</comment>
            <return pos:line="1210" pos:column="13">return <expr><call><name><name pos:line="1210" pos:column="20">nsmodel<pos:position pos:line="1210" pos:column="27"/></name><operator pos:line="1210" pos:column="27">.<pos:position pos:line="1210" pos:column="28"/></operator><name pos:line="1210" pos:column="28">getFacade<pos:position pos:line="1210" pos:column="37"/></name></name><argument_list pos:line="1210" pos:column="37">()<pos:position pos:line="1210" pos:column="39"/></argument_list></call><operator pos:line="1210" pos:column="39">.<pos:position pos:line="1210" pos:column="40"/></operator><call><name pos:line="1210" pos:column="40">getBase<pos:position pos:line="1210" pos:column="47"/></name><argument_list pos:line="1210" pos:column="47">(<argument><expr><name pos:line="1210" pos:column="48">include<pos:position pos:line="1210" pos:column="55"/></name></expr></argument>)<pos:position pos:line="1210" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="1210" pos:column="57"/></return>
        }<pos:position pos:line="1211" pos:column="10"/></block></then></if>
        <if pos:line="1212" pos:column="9">if <condition pos:line="1212" pos:column="12">(<expr><name pos:line="1212" pos:column="13">relationship<pos:position pos:line="1212" pos:column="25"/></name> <operator pos:line="1212" pos:column="26">instanceof<pos:position pos:line="1212" pos:column="36"/></operator> <name pos:line="1212" pos:column="37">MAssociationEnd<pos:position pos:line="1212" pos:column="52"/></name></expr>)<pos:position pos:line="1212" pos:column="53"/></condition><then pos:line="1212" pos:column="53"> <block pos:line="1212" pos:column="54">{
            <return pos:line="1213" pos:column="13">return <expr><operator pos:line="1213" pos:column="20">(<pos:position pos:line="1213" pos:column="21"/></operator><operator pos:line="1213" pos:column="21">(<pos:position pos:line="1213" pos:column="22"/></operator><name pos:line="1213" pos:column="22">MAssociationEnd<pos:position pos:line="1213" pos:column="37"/></name><operator pos:line="1213" pos:column="37">)<pos:position pos:line="1213" pos:column="38"/></operator> <name pos:line="1213" pos:column="39">relationship<pos:position pos:line="1213" pos:column="51"/></name><operator pos:line="1213" pos:column="51">)<pos:position pos:line="1213" pos:column="52"/></operator><operator pos:line="1213" pos:column="52">.<pos:position pos:line="1213" pos:column="53"/></operator><call><name pos:line="1213" pos:column="53">getAssociation<pos:position pos:line="1213" pos:column="67"/></name><argument_list pos:line="1213" pos:column="67">()<pos:position pos:line="1213" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="1213" pos:column="70"/></return>
        }<pos:position pos:line="1214" pos:column="10"/></block></then></if>
        <return pos:line="1215" pos:column="9">return <expr><literal type="null" pos:line="1215" pos:column="16">null<pos:position pos:line="1215" pos:column="20"/></literal></expr>;<pos:position pos:line="1215" pos:column="21"/></return>
    }<pos:position pos:line="1216" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="1218" pos:column="5">/**
     * Returns the destination of a relation. The destination of a
     * relation is defined as the modelelement that receives this
     * relation.  If there are more then 1 destinations, only the
     * first is returned.  If there is no destination, null is
     * returned.  Examples of sources include classifiers that are
     * types to associationends, usecases that are bases to extend and
     * include relations and so on.  In the case of an association,
     * the destination is defined as the type of the second element in
     * the connections list.&lt;p&gt;
     *
     * This method also works for links.&lt;p&gt;
     *
     * TODO: move this method to a generic ModelHelper
     *
     * @param relationship is the relation
     * @return object
     */</comment>
    <function><specifier pos:line="1236" pos:column="5">public<pos:position pos:line="1236" pos:column="11"/></specifier> <type><name pos:line="1236" pos:column="12">Object<pos:position pos:line="1236" pos:column="18"/></name></type> <name pos:line="1236" pos:column="19">getDestination<pos:position pos:line="1236" pos:column="33"/></name><parameter_list pos:line="1236" pos:column="33">(<parameter><decl><type><name pos:line="1236" pos:column="34">Object<pos:position pos:line="1236" pos:column="40"/></name></type> <name pos:line="1236" pos:column="41">relationship<pos:position pos:line="1236" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1236" pos:column="54"/></parameter_list> <block pos:line="1236" pos:column="55">{

	<if pos:line="1238" pos:column="9">if <condition pos:line="1238" pos:column="12">(<expr><operator pos:line="1238" pos:column="13">!<pos:position pos:line="1238" pos:column="14"/></operator><operator pos:line="1238" pos:column="14">(<pos:position pos:line="1238" pos:column="15"/></operator><name pos:line="1238" pos:column="15">relationship<pos:position pos:line="1238" pos:column="27"/></name> <operator pos:line="1238" pos:column="28">instanceof<pos:position pos:line="1238" pos:column="38"/></operator> <name pos:line="1238" pos:column="39">MRelationship<pos:position pos:line="1238" pos:column="52"/></name><operator pos:line="1238" pos:column="52">)<pos:position pos:line="1238" pos:column="53"/></operator>
	    <operator pos:line="1239" pos:column="13">&amp;&amp;<pos:position pos:line="1239" pos:column="23"/></operator> <operator pos:line="1239" pos:column="16">!<pos:position pos:line="1239" pos:column="17"/></operator><operator pos:line="1239" pos:column="17">(<pos:position pos:line="1239" pos:column="18"/></operator><name pos:line="1239" pos:column="18">relationship<pos:position pos:line="1239" pos:column="30"/></name> <operator pos:line="1239" pos:column="31">instanceof<pos:position pos:line="1239" pos:column="41"/></operator> <name pos:line="1239" pos:column="42">MLink<pos:position pos:line="1239" pos:column="47"/></name><operator pos:line="1239" pos:column="47">)<pos:position pos:line="1239" pos:column="48"/></operator>
	    <operator pos:line="1240" pos:column="13">&amp;&amp;<pos:position pos:line="1240" pos:column="23"/></operator> <operator pos:line="1240" pos:column="16">!<pos:position pos:line="1240" pos:column="17"/></operator><operator pos:line="1240" pos:column="17">(<pos:position pos:line="1240" pos:column="18"/></operator><name pos:line="1240" pos:column="18">relationship<pos:position pos:line="1240" pos:column="30"/></name> <operator pos:line="1240" pos:column="31">instanceof<pos:position pos:line="1240" pos:column="41"/></operator> <name pos:line="1240" pos:column="42">MAssociationEnd<pos:position pos:line="1240" pos:column="57"/></name><operator pos:line="1240" pos:column="57">)<pos:position pos:line="1240" pos:column="58"/></operator></expr>)<pos:position pos:line="1240" pos:column="59"/></condition><then pos:line="1240" pos:column="59"> <block pos:line="1240" pos:column="60">{

	    <throw pos:line="1242" pos:column="13">throw <expr><operator pos:line="1242" pos:column="19">new<pos:position pos:line="1242" pos:column="22"/></operator> <call><name pos:line="1242" pos:column="23">IllegalArgumentException<pos:position pos:line="1242" pos:column="47"/></name><argument_list pos:line="1242" pos:column="47">(<argument><expr><literal type="string" pos:line="1242" pos:column="48">"Argument is not "<pos:position pos:line="1242" pos:column="66"/></literal>
					       <operator pos:line="1243" pos:column="48">+<pos:position pos:line="1243" pos:column="49"/></operator> <literal type="string" pos:line="1243" pos:column="50">"a relationship"<pos:position pos:line="1243" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="1243" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="1243" pos:column="68"/></throw>
	}<pos:position pos:line="1244" pos:column="10"/></block></then></if>
	<if pos:line="1245" pos:column="9">if <condition pos:line="1245" pos:column="12">(<expr><name pos:line="1245" pos:column="13">relationship<pos:position pos:line="1245" pos:column="25"/></name> <operator pos:line="1245" pos:column="26">instanceof<pos:position pos:line="1245" pos:column="36"/></operator> <name pos:line="1245" pos:column="37">MLink<pos:position pos:line="1245" pos:column="42"/></name></expr>)<pos:position pos:line="1245" pos:column="43"/></condition><then pos:line="1245" pos:column="43"> <block pos:line="1245" pos:column="44">{
	    <decl_stmt><decl><type><name pos:line="1246" pos:column="13">Iterator<pos:position pos:line="1246" pos:column="21"/></name></type> <name pos:line="1246" pos:column="22">it<pos:position pos:line="1246" pos:column="24"/></name> <init pos:line="1246" pos:column="25">=
	        <expr><call><name><name pos:line="1247" pos:column="17">nsmodel<pos:position pos:line="1247" pos:column="24"/></name><operator pos:line="1247" pos:column="24">.<pos:position pos:line="1247" pos:column="25"/></operator><name pos:line="1247" pos:column="25">getFacade<pos:position pos:line="1247" pos:column="34"/></name></name><argument_list pos:line="1247" pos:column="34">()<pos:position pos:line="1247" pos:column="36"/></argument_list></call><operator pos:line="1247" pos:column="36">.<pos:position pos:line="1247" pos:column="37"/></operator><call><name pos:line="1247" pos:column="37">getConnections<pos:position pos:line="1247" pos:column="51"/></name><argument_list pos:line="1247" pos:column="51">(<argument><expr><name pos:line="1247" pos:column="52">relationship<pos:position pos:line="1247" pos:column="64"/></name></expr></argument>)<pos:position pos:line="1247" pos:column="65"/></argument_list></call><operator pos:line="1247" pos:column="65">.<pos:position pos:line="1247" pos:column="66"/></operator><call><name pos:line="1247" pos:column="66">iterator<pos:position pos:line="1247" pos:column="74"/></name><argument_list pos:line="1247" pos:column="74">()<pos:position pos:line="1247" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1247" pos:column="77"/></decl_stmt>
	    <if pos:line="1248" pos:column="13">if <condition pos:line="1248" pos:column="16">(<expr><call><name><name pos:line="1248" pos:column="17">it<pos:position pos:line="1248" pos:column="19"/></name><operator pos:line="1248" pos:column="19">.<pos:position pos:line="1248" pos:column="20"/></operator><name pos:line="1248" pos:column="20">hasNext<pos:position pos:line="1248" pos:column="27"/></name></name><argument_list pos:line="1248" pos:column="27">()<pos:position pos:line="1248" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="1248" pos:column="30"/></condition><then pos:line="1248" pos:column="30"> <block pos:line="1248" pos:column="31">{
		<expr_stmt><expr><call><name><name pos:line="1249" pos:column="17">it<pos:position pos:line="1249" pos:column="19"/></name><operator pos:line="1249" pos:column="19">.<pos:position pos:line="1249" pos:column="20"/></operator><name pos:line="1249" pos:column="20">next<pos:position pos:line="1249" pos:column="24"/></name></name><argument_list pos:line="1249" pos:column="24">()<pos:position pos:line="1249" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="1249" pos:column="27"/></expr_stmt>
		<if pos:line="1250" pos:column="17">if <condition pos:line="1250" pos:column="20">(<expr><call><name><name pos:line="1250" pos:column="21">it<pos:position pos:line="1250" pos:column="23"/></name><operator pos:line="1250" pos:column="23">.<pos:position pos:line="1250" pos:column="24"/></operator><name pos:line="1250" pos:column="24">hasNext<pos:position pos:line="1250" pos:column="31"/></name></name><argument_list pos:line="1250" pos:column="31">()<pos:position pos:line="1250" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="1250" pos:column="34"/></condition><then pos:line="1250" pos:column="34"> <block pos:line="1250" pos:column="35">{
		    <return pos:line="1251" pos:column="21">return <expr><call><name><name pos:line="1251" pos:column="28">nsmodel<pos:position pos:line="1251" pos:column="35"/></name><operator pos:line="1251" pos:column="35">.<pos:position pos:line="1251" pos:column="36"/></operator><name pos:line="1251" pos:column="36">getFacade<pos:position pos:line="1251" pos:column="45"/></name></name><argument_list pos:line="1251" pos:column="45">()<pos:position pos:line="1251" pos:column="47"/></argument_list></call><operator pos:line="1251" pos:column="47">.<pos:position pos:line="1251" pos:column="48"/></operator><call><name pos:line="1251" pos:column="48">getInstance<pos:position pos:line="1251" pos:column="59"/></name><argument_list pos:line="1251" pos:column="59">(<argument><expr><call><name><name pos:line="1251" pos:column="60">it<pos:position pos:line="1251" pos:column="62"/></name><operator pos:line="1251" pos:column="62">.<pos:position pos:line="1251" pos:column="63"/></operator><name pos:line="1251" pos:column="63">next<pos:position pos:line="1251" pos:column="67"/></name></name><argument_list pos:line="1251" pos:column="67">()<pos:position pos:line="1251" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="1251" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="1251" pos:column="71"/></return>
		}<pos:position pos:line="1252" pos:column="18"/></block></then></if> 
		<return pos:line="1253" pos:column="17">return <expr><literal type="null" pos:line="1253" pos:column="24">null<pos:position pos:line="1253" pos:column="28"/></literal></expr>;<pos:position pos:line="1253" pos:column="29"/></return>
	    }<pos:position pos:line="1254" pos:column="14"/></block></then></if>
            <return pos:line="1255" pos:column="13">return <expr><literal type="null" pos:line="1255" pos:column="20">null<pos:position pos:line="1255" pos:column="24"/></literal></expr>;<pos:position pos:line="1255" pos:column="25"/></return>
	}<pos:position pos:line="1256" pos:column="10"/></block></then></if>


        <if pos:line="1259" pos:column="9">if <condition pos:line="1259" pos:column="12">(<expr><name pos:line="1259" pos:column="13">relationship<pos:position pos:line="1259" pos:column="25"/></name> <operator pos:line="1259" pos:column="26">instanceof<pos:position pos:line="1259" pos:column="36"/></operator> <name pos:line="1259" pos:column="37">MAssociation<pos:position pos:line="1259" pos:column="49"/></name></expr>)<pos:position pos:line="1259" pos:column="50"/></condition><then pos:line="1259" pos:column="50"> <block pos:line="1259" pos:column="51">{
            <decl_stmt><decl><type><name pos:line="1260" pos:column="13">MAssociation<pos:position pos:line="1260" pos:column="25"/></name></type> <name pos:line="1260" pos:column="26">assoc<pos:position pos:line="1260" pos:column="31"/></name> <init pos:line="1260" pos:column="32">= <expr><operator pos:line="1260" pos:column="34">(<pos:position pos:line="1260" pos:column="35"/></operator><name pos:line="1260" pos:column="35">MAssociation<pos:position pos:line="1260" pos:column="47"/></name><operator pos:line="1260" pos:column="47">)<pos:position pos:line="1260" pos:column="48"/></operator> <name pos:line="1260" pos:column="49">relationship<pos:position pos:line="1260" pos:column="61"/></name></expr></init></decl>;<pos:position pos:line="1260" pos:column="62"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="1261" pos:column="13">List<pos:position pos:line="1261" pos:column="17"/></name></type> <name pos:line="1261" pos:column="18">conns<pos:position pos:line="1261" pos:column="23"/></name> <init pos:line="1261" pos:column="24">= <expr><call><name><name pos:line="1261" pos:column="26">assoc<pos:position pos:line="1261" pos:column="31"/></name><operator pos:line="1261" pos:column="31">.<pos:position pos:line="1261" pos:column="32"/></operator><name pos:line="1261" pos:column="32">getConnections<pos:position pos:line="1261" pos:column="46"/></name></name><argument_list pos:line="1261" pos:column="46">()<pos:position pos:line="1261" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1261" pos:column="49"/></decl_stmt>
            <if pos:line="1262" pos:column="13">if <condition pos:line="1262" pos:column="16">(<expr><call><name><name pos:line="1262" pos:column="17">conns<pos:position pos:line="1262" pos:column="22"/></name><operator pos:line="1262" pos:column="22">.<pos:position pos:line="1262" pos:column="23"/></operator><name pos:line="1262" pos:column="23">size<pos:position pos:line="1262" pos:column="27"/></name></name><argument_list pos:line="1262" pos:column="27">()<pos:position pos:line="1262" pos:column="29"/></argument_list></call> <operator pos:line="1262" pos:column="30">&lt;=<pos:position pos:line="1262" pos:column="35"/></operator> <literal type="number" pos:line="1262" pos:column="33">1<pos:position pos:line="1262" pos:column="34"/></literal></expr>)<pos:position pos:line="1262" pos:column="35"/></condition><then pos:line="1262" pos:column="35"> <block pos:line="1262" pos:column="36">{
                <return pos:line="1263" pos:column="17">return <expr><literal type="null" pos:line="1263" pos:column="24">null<pos:position pos:line="1263" pos:column="28"/></literal></expr>;<pos:position pos:line="1263" pos:column="29"/></return>
            }<pos:position pos:line="1264" pos:column="14"/></block></then></if>
            <return pos:line="1265" pos:column="13">return <expr><operator pos:line="1265" pos:column="20">(<pos:position pos:line="1265" pos:column="21"/></operator><operator pos:line="1265" pos:column="21">(<pos:position pos:line="1265" pos:column="22"/></operator><name pos:line="1265" pos:column="22">MAssociationEnd<pos:position pos:line="1265" pos:column="37"/></name><operator pos:line="1265" pos:column="37">)<pos:position pos:line="1265" pos:column="38"/></operator> <call><name><name pos:line="1265" pos:column="39">conns<pos:position pos:line="1265" pos:column="44"/></name><operator pos:line="1265" pos:column="44">.<pos:position pos:line="1265" pos:column="45"/></operator><name pos:line="1265" pos:column="45">get<pos:position pos:line="1265" pos:column="48"/></name></name><argument_list pos:line="1265" pos:column="48">(<argument><expr><literal type="number" pos:line="1265" pos:column="49">1<pos:position pos:line="1265" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="1265" pos:column="51"/></argument_list></call><operator pos:line="1265" pos:column="51">)<pos:position pos:line="1265" pos:column="52"/></operator><operator pos:line="1265" pos:column="52">.<pos:position pos:line="1265" pos:column="53"/></operator><call><name pos:line="1265" pos:column="53">getType<pos:position pos:line="1265" pos:column="60"/></name><argument_list pos:line="1265" pos:column="60">()<pos:position pos:line="1265" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="1265" pos:column="63"/></return>
        }<pos:position pos:line="1266" pos:column="10"/></block></then></if>
        <if pos:line="1267" pos:column="9">if <condition pos:line="1267" pos:column="12">(<expr><name pos:line="1267" pos:column="13">relationship<pos:position pos:line="1267" pos:column="25"/></name> <operator pos:line="1267" pos:column="26">instanceof<pos:position pos:line="1267" pos:column="36"/></operator> <name pos:line="1267" pos:column="37">MGeneralization<pos:position pos:line="1267" pos:column="52"/></name></expr>)<pos:position pos:line="1267" pos:column="53"/></condition><then pos:line="1267" pos:column="53"> <block pos:line="1267" pos:column="54">{
            <decl_stmt><decl><type><name pos:line="1268" pos:column="13">MGeneralization<pos:position pos:line="1268" pos:column="28"/></name></type> <name pos:line="1268" pos:column="29">gen<pos:position pos:line="1268" pos:column="32"/></name> <init pos:line="1268" pos:column="33">= <expr><operator pos:line="1268" pos:column="35">(<pos:position pos:line="1268" pos:column="36"/></operator><name pos:line="1268" pos:column="36">MGeneralization<pos:position pos:line="1268" pos:column="51"/></name><operator pos:line="1268" pos:column="51">)<pos:position pos:line="1268" pos:column="52"/></operator> <name pos:line="1268" pos:column="53">relationship<pos:position pos:line="1268" pos:column="65"/></name></expr></init></decl>;<pos:position pos:line="1268" pos:column="66"/></decl_stmt>
            <return pos:line="1269" pos:column="13">return <expr><call><name><name pos:line="1269" pos:column="20">gen<pos:position pos:line="1269" pos:column="23"/></name><operator pos:line="1269" pos:column="23">.<pos:position pos:line="1269" pos:column="24"/></operator><name pos:line="1269" pos:column="24">getParent<pos:position pos:line="1269" pos:column="33"/></name></name><argument_list pos:line="1269" pos:column="33">()<pos:position pos:line="1269" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="1269" pos:column="36"/></return>
        }<pos:position pos:line="1270" pos:column="10"/></block></then></if>
        <if pos:line="1271" pos:column="9">if <condition pos:line="1271" pos:column="12">(<expr><name pos:line="1271" pos:column="13">relationship<pos:position pos:line="1271" pos:column="25"/></name> <operator pos:line="1271" pos:column="26">instanceof<pos:position pos:line="1271" pos:column="36"/></operator> <name pos:line="1271" pos:column="37">MDependency<pos:position pos:line="1271" pos:column="48"/></name></expr>)<pos:position pos:line="1271" pos:column="49"/></condition><then pos:line="1271" pos:column="49"> <block pos:line="1271" pos:column="50">{
            <decl_stmt><decl><type><name pos:line="1272" pos:column="13">MDependency<pos:position pos:line="1272" pos:column="24"/></name></type> <name pos:line="1272" pos:column="25">dep<pos:position pos:line="1272" pos:column="28"/></name> <init pos:line="1272" pos:column="29">= <expr><operator pos:line="1272" pos:column="31">(<pos:position pos:line="1272" pos:column="32"/></operator><name pos:line="1272" pos:column="32">MDependency<pos:position pos:line="1272" pos:column="43"/></name><operator pos:line="1272" pos:column="43">)<pos:position pos:line="1272" pos:column="44"/></operator> <name pos:line="1272" pos:column="45">relationship<pos:position pos:line="1272" pos:column="57"/></name></expr></init></decl>;<pos:position pos:line="1272" pos:column="58"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="1273" pos:column="13">Collection<pos:position pos:line="1273" pos:column="23"/></name></type> <name pos:line="1273" pos:column="24">col<pos:position pos:line="1273" pos:column="27"/></name> <init pos:line="1273" pos:column="28">= <expr><call><name><name pos:line="1273" pos:column="30">dep<pos:position pos:line="1273" pos:column="33"/></name><operator pos:line="1273" pos:column="33">.<pos:position pos:line="1273" pos:column="34"/></operator><name pos:line="1273" pos:column="34">getSuppliers<pos:position pos:line="1273" pos:column="46"/></name></name><argument_list pos:line="1273" pos:column="46">()<pos:position pos:line="1273" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1273" pos:column="49"/></decl_stmt>
            <if pos:line="1274" pos:column="13">if <condition pos:line="1274" pos:column="16">(<expr><call><name><name pos:line="1274" pos:column="17">col<pos:position pos:line="1274" pos:column="20"/></name><operator pos:line="1274" pos:column="20">.<pos:position pos:line="1274" pos:column="21"/></operator><name pos:line="1274" pos:column="21">isEmpty<pos:position pos:line="1274" pos:column="28"/></name></name><argument_list pos:line="1274" pos:column="28">()<pos:position pos:line="1274" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="1274" pos:column="31"/></condition><then pos:line="1274" pos:column="31"> <block pos:line="1274" pos:column="32">{
                <return pos:line="1275" pos:column="17">return <expr><literal type="null" pos:line="1275" pos:column="24">null<pos:position pos:line="1275" pos:column="28"/></literal></expr>;<pos:position pos:line="1275" pos:column="29"/></return>
            }<pos:position pos:line="1276" pos:column="14"/></block></then></if>
            <return pos:line="1277" pos:column="13">return <expr><call pos:line="1277" pos:column="20">(<name pos:line="1277" pos:column="21">MModelElement<pos:position pos:line="1277" pos:column="34"/></name>) <argument_list pos:line="1277" pos:column="36">(<argument><expr><call><name><name pos:line="1277" pos:column="37">col<pos:position pos:line="1277" pos:column="40"/></name><operator pos:line="1277" pos:column="40">.<pos:position pos:line="1277" pos:column="41"/></operator><name pos:line="1277" pos:column="41">toArray<pos:position pos:line="1277" pos:column="48"/></name></name><argument_list pos:line="1277" pos:column="48">()<pos:position pos:line="1277" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="1277" pos:column="51"/></argument_list></call><index pos:line="1277" pos:column="51">[<expr><literal type="number" pos:line="1277" pos:column="52">0<pos:position pos:line="1277" pos:column="53"/></literal></expr>]<pos:position pos:line="1277" pos:column="54"/></index></expr>;<pos:position pos:line="1277" pos:column="55"/></return>
        }<pos:position pos:line="1278" pos:column="10"/></block></then></if>
        <if pos:line="1279" pos:column="9">if <condition pos:line="1279" pos:column="12">(<expr><name pos:line="1279" pos:column="13">relationship<pos:position pos:line="1279" pos:column="25"/></name> <operator pos:line="1279" pos:column="26">instanceof<pos:position pos:line="1279" pos:column="36"/></operator> <name pos:line="1279" pos:column="37">MFlow<pos:position pos:line="1279" pos:column="42"/></name></expr>)<pos:position pos:line="1279" pos:column="43"/></condition><then pos:line="1279" pos:column="43"> <block pos:line="1279" pos:column="44">{
            <decl_stmt><decl><type><name pos:line="1280" pos:column="13">MFlow<pos:position pos:line="1280" pos:column="18"/></name></type> <name pos:line="1280" pos:column="19">flow<pos:position pos:line="1280" pos:column="23"/></name> <init pos:line="1280" pos:column="24">= <expr><operator pos:line="1280" pos:column="26">(<pos:position pos:line="1280" pos:column="27"/></operator><name pos:line="1280" pos:column="27">MFlow<pos:position pos:line="1280" pos:column="32"/></name><operator pos:line="1280" pos:column="32">)<pos:position pos:line="1280" pos:column="33"/></operator> <name pos:line="1280" pos:column="34">relationship<pos:position pos:line="1280" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="1280" pos:column="47"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="1281" pos:column="13">Collection<pos:position pos:line="1281" pos:column="23"/></name></type> <name pos:line="1281" pos:column="24">col<pos:position pos:line="1281" pos:column="27"/></name> <init pos:line="1281" pos:column="28">= <expr><call><name><name pos:line="1281" pos:column="30">flow<pos:position pos:line="1281" pos:column="34"/></name><operator pos:line="1281" pos:column="34">.<pos:position pos:line="1281" pos:column="35"/></operator><name pos:line="1281" pos:column="35">getTargets<pos:position pos:line="1281" pos:column="45"/></name></name><argument_list pos:line="1281" pos:column="45">()<pos:position pos:line="1281" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1281" pos:column="48"/></decl_stmt>
            <if pos:line="1282" pos:column="13">if <condition pos:line="1282" pos:column="16">(<expr><call><name><name pos:line="1282" pos:column="17">col<pos:position pos:line="1282" pos:column="20"/></name><operator pos:line="1282" pos:column="20">.<pos:position pos:line="1282" pos:column="21"/></operator><name pos:line="1282" pos:column="21">isEmpty<pos:position pos:line="1282" pos:column="28"/></name></name><argument_list pos:line="1282" pos:column="28">()<pos:position pos:line="1282" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="1282" pos:column="31"/></condition><then pos:line="1282" pos:column="31"> <block pos:line="1282" pos:column="32">{
                <return pos:line="1283" pos:column="17">return <expr><literal type="null" pos:line="1283" pos:column="24">null<pos:position pos:line="1283" pos:column="28"/></literal></expr>;<pos:position pos:line="1283" pos:column="29"/></return>
            }<pos:position pos:line="1284" pos:column="14"/></block></then></if>
            <return pos:line="1285" pos:column="13">return <expr><call pos:line="1285" pos:column="20">(<name pos:line="1285" pos:column="21">MModelElement<pos:position pos:line="1285" pos:column="34"/></name>) <argument_list pos:line="1285" pos:column="36">(<argument><expr><call><name><name pos:line="1285" pos:column="37">col<pos:position pos:line="1285" pos:column="40"/></name><operator pos:line="1285" pos:column="40">.<pos:position pos:line="1285" pos:column="41"/></operator><name pos:line="1285" pos:column="41">toArray<pos:position pos:line="1285" pos:column="48"/></name></name><argument_list pos:line="1285" pos:column="48">()<pos:position pos:line="1285" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="1285" pos:column="51"/></argument_list></call><index pos:line="1285" pos:column="51">[<expr><literal type="number" pos:line="1285" pos:column="52">0<pos:position pos:line="1285" pos:column="53"/></literal></expr>]<pos:position pos:line="1285" pos:column="54"/></index></expr>;<pos:position pos:line="1285" pos:column="55"/></return>
        }<pos:position pos:line="1286" pos:column="10"/></block></then></if>
        <if pos:line="1287" pos:column="9">if <condition pos:line="1287" pos:column="12">(<expr><name pos:line="1287" pos:column="13">relationship<pos:position pos:line="1287" pos:column="25"/></name> <operator pos:line="1287" pos:column="26">instanceof<pos:position pos:line="1287" pos:column="36"/></operator> <name pos:line="1287" pos:column="37">MExtend<pos:position pos:line="1287" pos:column="44"/></name></expr>)<pos:position pos:line="1287" pos:column="45"/></condition><then pos:line="1287" pos:column="45"> <block pos:line="1287" pos:column="46">{
            <decl_stmt><decl><type><name pos:line="1288" pos:column="13">MExtend<pos:position pos:line="1288" pos:column="20"/></name></type> <name pos:line="1288" pos:column="21">extend<pos:position pos:line="1288" pos:column="27"/></name> <init pos:line="1288" pos:column="28">= <expr><operator pos:line="1288" pos:column="30">(<pos:position pos:line="1288" pos:column="31"/></operator><name pos:line="1288" pos:column="31">MExtend<pos:position pos:line="1288" pos:column="38"/></name><operator pos:line="1288" pos:column="38">)<pos:position pos:line="1288" pos:column="39"/></operator> <name pos:line="1288" pos:column="40">relationship<pos:position pos:line="1288" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="1288" pos:column="53"/></decl_stmt>
            <return pos:line="1289" pos:column="13">return <expr><call><name><name pos:line="1289" pos:column="20">extend<pos:position pos:line="1289" pos:column="26"/></name><operator pos:line="1289" pos:column="26">.<pos:position pos:line="1289" pos:column="27"/></operator><name pos:line="1289" pos:column="27">getBase<pos:position pos:line="1289" pos:column="34"/></name></name><argument_list pos:line="1289" pos:column="34">()<pos:position pos:line="1289" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="1289" pos:column="37"/></return>
        }<pos:position pos:line="1290" pos:column="10"/></block></then></if>
        <if pos:line="1291" pos:column="9">if <condition pos:line="1291" pos:column="12">(<expr><name pos:line="1291" pos:column="13">relationship<pos:position pos:line="1291" pos:column="25"/></name> <operator pos:line="1291" pos:column="26">instanceof<pos:position pos:line="1291" pos:column="36"/></operator> <name pos:line="1291" pos:column="37">MInclude<pos:position pos:line="1291" pos:column="45"/></name></expr>)<pos:position pos:line="1291" pos:column="46"/></condition><then pos:line="1291" pos:column="46"> <block pos:line="1291" pos:column="47">{
            <decl_stmt><decl><type><name pos:line="1292" pos:column="13">MInclude<pos:position pos:line="1292" pos:column="21"/></name></type> <name pos:line="1292" pos:column="22">include<pos:position pos:line="1292" pos:column="29"/></name> <init pos:line="1292" pos:column="30">= <expr><operator pos:line="1292" pos:column="32">(<pos:position pos:line="1292" pos:column="33"/></operator><name pos:line="1292" pos:column="33">MInclude<pos:position pos:line="1292" pos:column="41"/></name><operator pos:line="1292" pos:column="41">)<pos:position pos:line="1292" pos:column="42"/></operator> <name pos:line="1292" pos:column="43">relationship<pos:position pos:line="1292" pos:column="55"/></name></expr></init></decl>;<pos:position pos:line="1292" pos:column="56"/></decl_stmt>
            <return pos:line="1293" pos:column="13">return <expr><call><name><name pos:line="1293" pos:column="20">nsmodel<pos:position pos:line="1293" pos:column="27"/></name><operator pos:line="1293" pos:column="27">.<pos:position pos:line="1293" pos:column="28"/></operator><name pos:line="1293" pos:column="28">getFacade<pos:position pos:line="1293" pos:column="37"/></name></name><argument_list pos:line="1293" pos:column="37">()<pos:position pos:line="1293" pos:column="39"/></argument_list></call><operator pos:line="1293" pos:column="39">.<pos:position pos:line="1293" pos:column="40"/></operator><call><name pos:line="1293" pos:column="40">getAddition<pos:position pos:line="1293" pos:column="51"/></name><argument_list pos:line="1293" pos:column="51">(<argument><expr><name pos:line="1293" pos:column="52">include<pos:position pos:line="1293" pos:column="59"/></name></expr></argument>)<pos:position pos:line="1293" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="1293" pos:column="61"/></return>
        }<pos:position pos:line="1294" pos:column="10"/></block></then></if>
        <if pos:line="1295" pos:column="9">if <condition pos:line="1295" pos:column="12">(<expr><name pos:line="1295" pos:column="13">relationship<pos:position pos:line="1295" pos:column="25"/></name> <operator pos:line="1295" pos:column="26">instanceof<pos:position pos:line="1295" pos:column="36"/></operator> <name pos:line="1295" pos:column="37">MAssociationEnd<pos:position pos:line="1295" pos:column="52"/></name></expr>)<pos:position pos:line="1295" pos:column="53"/></condition><then pos:line="1295" pos:column="53"> <block pos:line="1295" pos:column="54">{
            <return pos:line="1296" pos:column="13">return <expr><operator pos:line="1296" pos:column="20">(<pos:position pos:line="1296" pos:column="21"/></operator><operator pos:line="1296" pos:column="21">(<pos:position pos:line="1296" pos:column="22"/></operator><name pos:line="1296" pos:column="22">MAssociationEnd<pos:position pos:line="1296" pos:column="37"/></name><operator pos:line="1296" pos:column="37">)<pos:position pos:line="1296" pos:column="38"/></operator> <name pos:line="1296" pos:column="39">relationship<pos:position pos:line="1296" pos:column="51"/></name><operator pos:line="1296" pos:column="51">)<pos:position pos:line="1296" pos:column="52"/></operator><operator pos:line="1296" pos:column="52">.<pos:position pos:line="1296" pos:column="53"/></operator><call><name pos:line="1296" pos:column="53">getType<pos:position pos:line="1296" pos:column="60"/></name><argument_list pos:line="1296" pos:column="60">()<pos:position pos:line="1296" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="1296" pos:column="63"/></return>
        }<pos:position pos:line="1297" pos:column="10"/></block></then></if>
        <return pos:line="1298" pos:column="9">return <expr><literal type="null" pos:line="1298" pos:column="16">null<pos:position pos:line="1298" pos:column="20"/></literal></expr>;<pos:position pos:line="1298" pos:column="21"/></return>
    }<pos:position pos:line="1299" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="1301" pos:column="5">/**
     * Returns the dependencies between some supplier modelelement and
     * some client modelelement.  Does not return the vica versa
     * relationship (dependency 'from client to supplier').&lt;p&gt;
     *
     * @param supplierObj a MModelElement
     * @param clientObj a MModelElement
     * @return Collection
     */</comment>
    <function><specifier pos:line="1310" pos:column="5">public<pos:position pos:line="1310" pos:column="11"/></specifier> <type><name pos:line="1310" pos:column="12">Collection<pos:position pos:line="1310" pos:column="22"/></name></type> <name pos:line="1310" pos:column="23">getDependencies<pos:position pos:line="1310" pos:column="38"/></name><parameter_list pos:line="1310" pos:column="38">(
				      <parameter><decl><type><name pos:line="1311" pos:column="39">Object<pos:position pos:line="1311" pos:column="45"/></name></type> <name pos:line="1311" pos:column="46">supplierObj<pos:position pos:line="1311" pos:column="57"/></name></decl></parameter>,
				      <parameter><decl><type><name pos:line="1312" pos:column="39">Object<pos:position pos:line="1312" pos:column="45"/></name></type> <name pos:line="1312" pos:column="46">clientObj<pos:position pos:line="1312" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1312" pos:column="56"/></parameter_list> <block pos:line="1312" pos:column="57">{

        <if pos:line="1314" pos:column="9">if <condition pos:line="1314" pos:column="12">(<expr><operator pos:line="1314" pos:column="13">!<pos:position pos:line="1314" pos:column="14"/></operator><operator pos:line="1314" pos:column="14">(<pos:position pos:line="1314" pos:column="15"/></operator><name pos:line="1314" pos:column="15">supplierObj<pos:position pos:line="1314" pos:column="26"/></name> <operator pos:line="1314" pos:column="27">instanceof<pos:position pos:line="1314" pos:column="37"/></operator> <name pos:line="1314" pos:column="38">MModelElement<pos:position pos:line="1314" pos:column="51"/></name><operator pos:line="1314" pos:column="51">)<pos:position pos:line="1314" pos:column="52"/></operator>
	    <operator pos:line="1315" pos:column="13">||<pos:position pos:line="1315" pos:column="15"/></operator> <operator pos:line="1315" pos:column="16">!<pos:position pos:line="1315" pos:column="17"/></operator><operator pos:line="1315" pos:column="17">(<pos:position pos:line="1315" pos:column="18"/></operator><name pos:line="1315" pos:column="18">clientObj<pos:position pos:line="1315" pos:column="27"/></name> <operator pos:line="1315" pos:column="28">instanceof<pos:position pos:line="1315" pos:column="38"/></operator> <name pos:line="1315" pos:column="39">MModelElement<pos:position pos:line="1315" pos:column="52"/></name><operator pos:line="1315" pos:column="52">)<pos:position pos:line="1315" pos:column="53"/></operator></expr>)<pos:position pos:line="1315" pos:column="54"/></condition><then pos:line="1315" pos:column="54"> <block pos:line="1315" pos:column="55">{

            <return pos:line="1317" pos:column="13">return <expr><literal type="null" pos:line="1317" pos:column="20">null<pos:position pos:line="1317" pos:column="24"/></literal></expr>;<pos:position pos:line="1317" pos:column="25"/></return>

	}<pos:position pos:line="1319" pos:column="10"/></block></then></if>

        <decl_stmt><decl><type><name pos:line="1321" pos:column="9">MModelElement<pos:position pos:line="1321" pos:column="22"/></name></type> <name pos:line="1321" pos:column="23">supplier<pos:position pos:line="1321" pos:column="31"/></name> <init pos:line="1321" pos:column="32">= <expr><operator pos:line="1321" pos:column="34">(<pos:position pos:line="1321" pos:column="35"/></operator><name pos:line="1321" pos:column="35">MModelElement<pos:position pos:line="1321" pos:column="48"/></name><operator pos:line="1321" pos:column="48">)<pos:position pos:line="1321" pos:column="49"/></operator> <name pos:line="1321" pos:column="50">supplierObj<pos:position pos:line="1321" pos:column="61"/></name></expr></init></decl>;<pos:position pos:line="1321" pos:column="62"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="1322" pos:column="9">MModelElement<pos:position pos:line="1322" pos:column="22"/></name></type> <name pos:line="1322" pos:column="23">client<pos:position pos:line="1322" pos:column="29"/></name> <init pos:line="1322" pos:column="30">= <expr><operator pos:line="1322" pos:column="32">(<pos:position pos:line="1322" pos:column="33"/></operator><name pos:line="1322" pos:column="33">MModelElement<pos:position pos:line="1322" pos:column="46"/></name><operator pos:line="1322" pos:column="46">)<pos:position pos:line="1322" pos:column="47"/></operator> <name pos:line="1322" pos:column="48">clientObj<pos:position pos:line="1322" pos:column="57"/></name></expr></init></decl>;<pos:position pos:line="1322" pos:column="58"/></decl_stmt>

        <decl_stmt><decl><type><name pos:line="1324" pos:column="9">List<pos:position pos:line="1324" pos:column="13"/></name></type> <name pos:line="1324" pos:column="14">ret<pos:position pos:line="1324" pos:column="17"/></name> <init pos:line="1324" pos:column="18">= <expr><operator pos:line="1324" pos:column="20">new<pos:position pos:line="1324" pos:column="23"/></operator> <call><name pos:line="1324" pos:column="24">ArrayList<pos:position pos:line="1324" pos:column="33"/></name><argument_list pos:line="1324" pos:column="33">()<pos:position pos:line="1324" pos:column="35"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1324" pos:column="36"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="1325" pos:column="9">Collection<pos:position pos:line="1325" pos:column="19"/></name></type> <name pos:line="1325" pos:column="20">clientDependencies<pos:position pos:line="1325" pos:column="38"/></name> <init pos:line="1325" pos:column="39">= <expr><call><name><name pos:line="1325" pos:column="41">client<pos:position pos:line="1325" pos:column="47"/></name><operator pos:line="1325" pos:column="47">.<pos:position pos:line="1325" pos:column="48"/></operator><name pos:line="1325" pos:column="48">getClientDependencies<pos:position pos:line="1325" pos:column="69"/></name></name><argument_list pos:line="1325" pos:column="69">()<pos:position pos:line="1325" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1325" pos:column="72"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="1326" pos:column="9">Iterator<pos:position pos:line="1326" pos:column="17"/></name></type> <name pos:line="1326" pos:column="18">it<pos:position pos:line="1326" pos:column="20"/></name> <init pos:line="1326" pos:column="21">= <expr><call><name><name pos:line="1326" pos:column="23">supplier<pos:position pos:line="1326" pos:column="31"/></name><operator pos:line="1326" pos:column="31">.<pos:position pos:line="1326" pos:column="32"/></operator><name pos:line="1326" pos:column="32">getSupplierDependencies<pos:position pos:line="1326" pos:column="55"/></name></name><argument_list pos:line="1326" pos:column="55">()<pos:position pos:line="1326" pos:column="57"/></argument_list></call><operator pos:line="1326" pos:column="57">.<pos:position pos:line="1326" pos:column="58"/></operator><call><name pos:line="1326" pos:column="58">iterator<pos:position pos:line="1326" pos:column="66"/></name><argument_list pos:line="1326" pos:column="66">()<pos:position pos:line="1326" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1326" pos:column="69"/></decl_stmt>
        <while pos:line="1327" pos:column="9">while <condition pos:line="1327" pos:column="15">(<expr><call><name><name pos:line="1327" pos:column="16">it<pos:position pos:line="1327" pos:column="18"/></name><operator pos:line="1327" pos:column="18">.<pos:position pos:line="1327" pos:column="19"/></operator><name pos:line="1327" pos:column="19">hasNext<pos:position pos:line="1327" pos:column="26"/></name></name><argument_list pos:line="1327" pos:column="26">()<pos:position pos:line="1327" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="1327" pos:column="29"/></condition> <block pos:line="1327" pos:column="30">{
            <decl_stmt><decl><type><name pos:line="1328" pos:column="13">MDependency<pos:position pos:line="1328" pos:column="24"/></name></type> <name pos:line="1328" pos:column="25">dep<pos:position pos:line="1328" pos:column="28"/></name> <init pos:line="1328" pos:column="29">= <expr><operator pos:line="1328" pos:column="31">(<pos:position pos:line="1328" pos:column="32"/></operator><name pos:line="1328" pos:column="32">MDependency<pos:position pos:line="1328" pos:column="43"/></name><operator pos:line="1328" pos:column="43">)<pos:position pos:line="1328" pos:column="44"/></operator> <call><name><name pos:line="1328" pos:column="45">it<pos:position pos:line="1328" pos:column="47"/></name><operator pos:line="1328" pos:column="47">.<pos:position pos:line="1328" pos:column="48"/></operator><name pos:line="1328" pos:column="48">next<pos:position pos:line="1328" pos:column="52"/></name></name><argument_list pos:line="1328" pos:column="52">()<pos:position pos:line="1328" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1328" pos:column="55"/></decl_stmt>
            <if pos:line="1329" pos:column="13">if <condition pos:line="1329" pos:column="16">(<expr><call><name><name pos:line="1329" pos:column="17">clientDependencies<pos:position pos:line="1329" pos:column="35"/></name><operator pos:line="1329" pos:column="35">.<pos:position pos:line="1329" pos:column="36"/></operator><name pos:line="1329" pos:column="36">contains<pos:position pos:line="1329" pos:column="44"/></name></name><argument_list pos:line="1329" pos:column="44">(<argument><expr><name pos:line="1329" pos:column="45">dep<pos:position pos:line="1329" pos:column="48"/></name></expr></argument>)<pos:position pos:line="1329" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="1329" pos:column="50"/></condition><then pos:line="1329" pos:column="50"> <block pos:line="1329" pos:column="51">{
                <expr_stmt><expr><call><name><name pos:line="1330" pos:column="17">ret<pos:position pos:line="1330" pos:column="20"/></name><operator pos:line="1330" pos:column="20">.<pos:position pos:line="1330" pos:column="21"/></operator><name pos:line="1330" pos:column="21">add<pos:position pos:line="1330" pos:column="24"/></name></name><argument_list pos:line="1330" pos:column="24">(<argument><expr><name pos:line="1330" pos:column="25">dep<pos:position pos:line="1330" pos:column="28"/></name></expr></argument>)<pos:position pos:line="1330" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="1330" pos:column="30"/></expr_stmt>
            }<pos:position pos:line="1331" pos:column="14"/></block></then></if>
        }<pos:position pos:line="1332" pos:column="10"/></block></while>
        <return pos:line="1333" pos:column="9">return <expr><name pos:line="1333" pos:column="16">ret<pos:position pos:line="1333" pos:column="19"/></name></expr>;<pos:position pos:line="1333" pos:column="20"/></return>
    }<pos:position pos:line="1334" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="1336" pos:column="5">/**
     * Returns all relationships between the source and dest
     * modelelement and vica versa.&lt;p&gt;
     *
     * @param source is the source model element
     * @param dest is the destination model element
     * @return Collection
     */</comment>
    <function><specifier pos:line="1344" pos:column="5">public<pos:position pos:line="1344" pos:column="11"/></specifier> <type><name pos:line="1344" pos:column="12">Collection<pos:position pos:line="1344" pos:column="22"/></name></type> <name pos:line="1344" pos:column="23">getRelationships<pos:position pos:line="1344" pos:column="39"/></name><parameter_list pos:line="1344" pos:column="39">(<parameter><decl><type><name pos:line="1344" pos:column="40">Object<pos:position pos:line="1344" pos:column="46"/></name></type> <name pos:line="1344" pos:column="47">source<pos:position pos:line="1344" pos:column="53"/></name></decl></parameter>,
				       <parameter><decl><type><name pos:line="1345" pos:column="40">Object<pos:position pos:line="1345" pos:column="46"/></name></type> <name pos:line="1345" pos:column="47">dest<pos:position pos:line="1345" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1345" pos:column="52"/></parameter_list> <block pos:line="1345" pos:column="53">{
        <decl_stmt><decl><type><name pos:line="1346" pos:column="9">Set<pos:position pos:line="1346" pos:column="12"/></name></type> <name pos:line="1346" pos:column="13">ret<pos:position pos:line="1346" pos:column="16"/></name> <init pos:line="1346" pos:column="17">= <expr><operator pos:line="1346" pos:column="19">new<pos:position pos:line="1346" pos:column="22"/></operator> <call><name pos:line="1346" pos:column="23">HashSet<pos:position pos:line="1346" pos:column="30"/></name><argument_list pos:line="1346" pos:column="30">()<pos:position pos:line="1346" pos:column="32"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1346" pos:column="33"/></decl_stmt>
        <if pos:line="1347" pos:column="9">if <condition pos:line="1347" pos:column="12">(<expr><name pos:line="1347" pos:column="13">source<pos:position pos:line="1347" pos:column="19"/></name> <operator pos:line="1347" pos:column="20">==<pos:position pos:line="1347" pos:column="22"/></operator> <literal type="null" pos:line="1347" pos:column="23">null<pos:position pos:line="1347" pos:column="27"/></literal> <operator pos:line="1347" pos:column="28">||<pos:position pos:line="1347" pos:column="30"/></operator> <name pos:line="1347" pos:column="31">dest<pos:position pos:line="1347" pos:column="35"/></name> <operator pos:line="1347" pos:column="36">==<pos:position pos:line="1347" pos:column="38"/></operator> <literal type="null" pos:line="1347" pos:column="39">null<pos:position pos:line="1347" pos:column="43"/></literal></expr>)<pos:position pos:line="1347" pos:column="44"/></condition><then pos:line="1347" pos:column="44"> <block pos:line="1347" pos:column="45">{
            <return pos:line="1348" pos:column="13">return <expr><name pos:line="1348" pos:column="20">ret<pos:position pos:line="1348" pos:column="23"/></name></expr>;<pos:position pos:line="1348" pos:column="24"/></return>
        }<pos:position pos:line="1349" pos:column="10"/></block></then></if>
        <if pos:line="1350" pos:column="9">if <condition pos:line="1350" pos:column="12">(<expr><operator pos:line="1350" pos:column="13">!<pos:position pos:line="1350" pos:column="14"/></operator><operator pos:line="1350" pos:column="14">(<pos:position pos:line="1350" pos:column="15"/></operator><name pos:line="1350" pos:column="15">source<pos:position pos:line="1350" pos:column="21"/></name> <operator pos:line="1350" pos:column="22">instanceof<pos:position pos:line="1350" pos:column="32"/></operator> <name pos:line="1350" pos:column="33">MModelElement<pos:position pos:line="1350" pos:column="46"/></name><operator pos:line="1350" pos:column="46">)<pos:position pos:line="1350" pos:column="47"/></operator></expr>)<pos:position pos:line="1350" pos:column="48"/></condition><then pos:line="1350" pos:column="48"> <block pos:line="1350" pos:column="49">{
            <throw pos:line="1351" pos:column="13">throw <expr><operator pos:line="1351" pos:column="19">new<pos:position pos:line="1351" pos:column="22"/></operator> <call><name pos:line="1351" pos:column="23">IllegalArgumentException<pos:position pos:line="1351" pos:column="47"/></name><argument_list pos:line="1351" pos:column="47">(<argument><expr><literal type="string" pos:line="1351" pos:column="48">"source"<pos:position pos:line="1351" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="1351" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="1351" pos:column="58"/></throw>
        }<pos:position pos:line="1352" pos:column="10"/></block></then></if>
        <if pos:line="1353" pos:column="9">if <condition pos:line="1353" pos:column="12">(<expr><operator pos:line="1353" pos:column="13">!<pos:position pos:line="1353" pos:column="14"/></operator><operator pos:line="1353" pos:column="14">(<pos:position pos:line="1353" pos:column="15"/></operator><name pos:line="1353" pos:column="15">dest<pos:position pos:line="1353" pos:column="19"/></name> <operator pos:line="1353" pos:column="20">instanceof<pos:position pos:line="1353" pos:column="30"/></operator> <name pos:line="1353" pos:column="31">MModelElement<pos:position pos:line="1353" pos:column="44"/></name><operator pos:line="1353" pos:column="44">)<pos:position pos:line="1353" pos:column="45"/></operator></expr>)<pos:position pos:line="1353" pos:column="46"/></condition><then pos:line="1353" pos:column="46"> <block pos:line="1353" pos:column="47">{
            <throw pos:line="1354" pos:column="13">throw <expr><operator pos:line="1354" pos:column="19">new<pos:position pos:line="1354" pos:column="22"/></operator> <call><name pos:line="1354" pos:column="23">IllegalArgumentException<pos:position pos:line="1354" pos:column="47"/></name><argument_list pos:line="1354" pos:column="47">(<argument><expr><literal type="string" pos:line="1354" pos:column="48">"dest"<pos:position pos:line="1354" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="1354" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="1354" pos:column="56"/></throw>
        }<pos:position pos:line="1355" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name><name pos:line="1357" pos:column="9">ret<pos:position pos:line="1357" pos:column="12"/></name><operator pos:line="1357" pos:column="12">.<pos:position pos:line="1357" pos:column="13"/></operator><name pos:line="1357" pos:column="13">addAll<pos:position pos:line="1357" pos:column="19"/></name></name><argument_list pos:line="1357" pos:column="19">(<argument><expr><call><name pos:line="1357" pos:column="20">getFlows<pos:position pos:line="1357" pos:column="28"/></name><argument_list pos:line="1357" pos:column="28">(<argument><expr><name pos:line="1357" pos:column="29">source<pos:position pos:line="1357" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="1357" pos:column="37">dest<pos:position pos:line="1357" pos:column="41"/></name></expr></argument>)<pos:position pos:line="1357" pos:column="42"/></argument_list></call></expr></argument>)<pos:position pos:line="1357" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="1357" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="1358" pos:column="9">ret<pos:position pos:line="1358" pos:column="12"/></name><operator pos:line="1358" pos:column="12">.<pos:position pos:line="1358" pos:column="13"/></operator><name pos:line="1358" pos:column="13">addAll<pos:position pos:line="1358" pos:column="19"/></name></name><argument_list pos:line="1358" pos:column="19">(<argument><expr><call><name pos:line="1358" pos:column="20">getFlows<pos:position pos:line="1358" pos:column="28"/></name><argument_list pos:line="1358" pos:column="28">(<argument><expr><name pos:line="1358" pos:column="29">dest<pos:position pos:line="1358" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="1358" pos:column="35">source<pos:position pos:line="1358" pos:column="41"/></name></expr></argument>)<pos:position pos:line="1358" pos:column="42"/></argument_list></call></expr></argument>)<pos:position pos:line="1358" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="1358" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="1359" pos:column="9">ret<pos:position pos:line="1359" pos:column="12"/></name><operator pos:line="1359" pos:column="12">.<pos:position pos:line="1359" pos:column="13"/></operator><name pos:line="1359" pos:column="13">addAll<pos:position pos:line="1359" pos:column="19"/></name></name><argument_list pos:line="1359" pos:column="19">(<argument><expr><call><name pos:line="1359" pos:column="20">getDependencies<pos:position pos:line="1359" pos:column="35"/></name><argument_list pos:line="1359" pos:column="35">(<argument><expr><name pos:line="1359" pos:column="36">source<pos:position pos:line="1359" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="1359" pos:column="44">dest<pos:position pos:line="1359" pos:column="48"/></name></expr></argument>)<pos:position pos:line="1359" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="1359" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="1359" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="1360" pos:column="9">ret<pos:position pos:line="1360" pos:column="12"/></name><operator pos:line="1360" pos:column="12">.<pos:position pos:line="1360" pos:column="13"/></operator><name pos:line="1360" pos:column="13">addAll<pos:position pos:line="1360" pos:column="19"/></name></name><argument_list pos:line="1360" pos:column="19">(<argument><expr><call><name pos:line="1360" pos:column="20">getDependencies<pos:position pos:line="1360" pos:column="35"/></name><argument_list pos:line="1360" pos:column="35">(<argument><expr><name pos:line="1360" pos:column="36">dest<pos:position pos:line="1360" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="1360" pos:column="42">source<pos:position pos:line="1360" pos:column="48"/></name></expr></argument>)<pos:position pos:line="1360" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="1360" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="1360" pos:column="51"/></expr_stmt>
        <if pos:line="1361" pos:column="9">if <condition pos:line="1361" pos:column="12">(<expr><name pos:line="1361" pos:column="13">source<pos:position pos:line="1361" pos:column="19"/></name> <operator pos:line="1361" pos:column="20">instanceof<pos:position pos:line="1361" pos:column="30"/></operator> <name pos:line="1361" pos:column="31">MGeneralizableElement<pos:position pos:line="1361" pos:column="52"/></name>
            <operator pos:line="1362" pos:column="13">&amp;&amp;<pos:position pos:line="1362" pos:column="23"/></operator> <name pos:line="1362" pos:column="16">dest<pos:position pos:line="1362" pos:column="20"/></name> <operator pos:line="1362" pos:column="21">instanceof<pos:position pos:line="1362" pos:column="31"/></operator> <name pos:line="1362" pos:column="32">MGeneralizableElement<pos:position pos:line="1362" pos:column="53"/></name></expr>)<pos:position pos:line="1362" pos:column="54"/></condition><then pos:line="1362" pos:column="54"> <block pos:line="1362" pos:column="55">{
            <expr_stmt><expr><call><name><name pos:line="1363" pos:column="13">ret<pos:position pos:line="1363" pos:column="16"/></name><operator pos:line="1363" pos:column="16">.<pos:position pos:line="1363" pos:column="17"/></operator><name pos:line="1363" pos:column="17">add<pos:position pos:line="1363" pos:column="20"/></name></name><argument_list pos:line="1363" pos:column="20">(<argument><expr><call><name pos:line="1363" pos:column="21">getGeneralization<pos:position pos:line="1363" pos:column="38"/></name><argument_list pos:line="1363" pos:column="38">(<argument><expr><name pos:line="1363" pos:column="39">source<pos:position pos:line="1363" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="1363" pos:column="47">dest<pos:position pos:line="1363" pos:column="51"/></name></expr></argument>)<pos:position pos:line="1363" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="1363" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="1363" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="1364" pos:column="13">ret<pos:position pos:line="1364" pos:column="16"/></name><operator pos:line="1364" pos:column="16">.<pos:position pos:line="1364" pos:column="17"/></operator><name pos:line="1364" pos:column="17">add<pos:position pos:line="1364" pos:column="20"/></name></name><argument_list pos:line="1364" pos:column="20">(<argument><expr><call><name pos:line="1364" pos:column="21">getGeneralization<pos:position pos:line="1364" pos:column="38"/></name><argument_list pos:line="1364" pos:column="38">(<argument><expr><name pos:line="1364" pos:column="39">dest<pos:position pos:line="1364" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="1364" pos:column="45">source<pos:position pos:line="1364" pos:column="51"/></name></expr></argument>)<pos:position pos:line="1364" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="1364" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="1364" pos:column="54"/></expr_stmt>
            <if pos:line="1365" pos:column="13">if <condition pos:line="1365" pos:column="16">(<expr><name pos:line="1365" pos:column="17">source<pos:position pos:line="1365" pos:column="23"/></name> <operator pos:line="1365" pos:column="24">instanceof<pos:position pos:line="1365" pos:column="34"/></operator> <name pos:line="1365" pos:column="35">MClassifier<pos:position pos:line="1365" pos:column="46"/></name> <operator pos:line="1365" pos:column="47">&amp;&amp;<pos:position pos:line="1365" pos:column="57"/></operator> <name pos:line="1365" pos:column="50">dest<pos:position pos:line="1365" pos:column="54"/></name> <operator pos:line="1365" pos:column="55">instanceof<pos:position pos:line="1365" pos:column="65"/></operator> <name pos:line="1365" pos:column="66">MClassifier<pos:position pos:line="1365" pos:column="77"/></name></expr>)<pos:position pos:line="1365" pos:column="78"/></condition><then pos:line="1365" pos:column="78"> <block pos:line="1365" pos:column="79">{
                <expr_stmt><expr><call><name><name pos:line="1366" pos:column="17">ret<pos:position pos:line="1366" pos:column="20"/></name><operator pos:line="1366" pos:column="20">.<pos:position pos:line="1366" pos:column="21"/></operator><name pos:line="1366" pos:column="21">addAll<pos:position pos:line="1366" pos:column="27"/></name></name><argument_list pos:line="1366" pos:column="27">(<argument><expr><call><name pos:line="1366" pos:column="28">getAssociations<pos:position pos:line="1366" pos:column="43"/></name><argument_list pos:line="1366" pos:column="43">(<argument><expr><name pos:line="1366" pos:column="44">source<pos:position pos:line="1366" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="1366" pos:column="52">dest<pos:position pos:line="1366" pos:column="56"/></name></expr></argument>)<pos:position pos:line="1366" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="1366" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="1366" pos:column="59"/></expr_stmt>
            }<pos:position pos:line="1367" pos:column="14"/></block></then></if>
        }<pos:position pos:line="1368" pos:column="10"/></block></then></if>
        <return pos:line="1369" pos:column="9">return <expr><name pos:line="1369" pos:column="16">ret<pos:position pos:line="1369" pos:column="19"/></name></expr>;<pos:position pos:line="1369" pos:column="20"/></return>
    }<pos:position pos:line="1370" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="1372" pos:column="5">/**
     * Returns true if some modelelement may be owned by the given
     * namespace.&lt;p&gt;
     *
     * @param mObj a MModelElement
     * @param nsObj a MNamespace
     * @return boolean
     */</comment>
    <function><specifier pos:line="1380" pos:column="5">public<pos:position pos:line="1380" pos:column="11"/></specifier> <type><name pos:line="1380" pos:column="12">boolean<pos:position pos:line="1380" pos:column="19"/></name></type> <name pos:line="1380" pos:column="20">isValidNamespace<pos:position pos:line="1380" pos:column="36"/></name><parameter_list pos:line="1380" pos:column="36">(<parameter><decl><type><name pos:line="1380" pos:column="37">Object<pos:position pos:line="1380" pos:column="43"/></name></type> <name pos:line="1380" pos:column="44">mObj<pos:position pos:line="1380" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1380" pos:column="50">Object<pos:position pos:line="1380" pos:column="56"/></name></type> <name pos:line="1380" pos:column="57">nsObj<pos:position pos:line="1380" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="1380" pos:column="63"/></parameter_list> <block pos:line="1380" pos:column="64">{

        <if pos:line="1382" pos:column="9">if <condition pos:line="1382" pos:column="12">(<expr><operator pos:line="1382" pos:column="13">!<pos:position pos:line="1382" pos:column="14"/></operator><operator pos:line="1382" pos:column="14">(<pos:position pos:line="1382" pos:column="15"/></operator><name pos:line="1382" pos:column="15">mObj<pos:position pos:line="1382" pos:column="19"/></name> <operator pos:line="1382" pos:column="20">instanceof<pos:position pos:line="1382" pos:column="30"/></operator> <name pos:line="1382" pos:column="31">MModelElement<pos:position pos:line="1382" pos:column="44"/></name><operator pos:line="1382" pos:column="44">)<pos:position pos:line="1382" pos:column="45"/></operator>
	    <operator pos:line="1383" pos:column="13">||<pos:position pos:line="1383" pos:column="15"/></operator> <operator pos:line="1383" pos:column="16">!<pos:position pos:line="1383" pos:column="17"/></operator><operator pos:line="1383" pos:column="17">(<pos:position pos:line="1383" pos:column="18"/></operator><name pos:line="1383" pos:column="18">nsObj<pos:position pos:line="1383" pos:column="23"/></name> <operator pos:line="1383" pos:column="24">instanceof<pos:position pos:line="1383" pos:column="34"/></operator> <name pos:line="1383" pos:column="35">MNamespace<pos:position pos:line="1383" pos:column="45"/></name><operator pos:line="1383" pos:column="45">)<pos:position pos:line="1383" pos:column="46"/></operator></expr>)<pos:position pos:line="1383" pos:column="47"/></condition><then pos:line="1383" pos:column="47"> <block pos:line="1383" pos:column="48">{

            <return pos:line="1385" pos:column="13">return <expr><literal type="boolean" pos:line="1385" pos:column="20">false<pos:position pos:line="1385" pos:column="25"/></literal></expr>;<pos:position pos:line="1385" pos:column="26"/></return>

	}<pos:position pos:line="1387" pos:column="10"/></block></then></if>

        <decl_stmt><decl><type><name pos:line="1389" pos:column="9">MModelElement<pos:position pos:line="1389" pos:column="22"/></name></type> <name pos:line="1389" pos:column="23">modelElement<pos:position pos:line="1389" pos:column="35"/></name> <init pos:line="1389" pos:column="36">= <expr><operator pos:line="1389" pos:column="38">(<pos:position pos:line="1389" pos:column="39"/></operator><name pos:line="1389" pos:column="39">MModelElement<pos:position pos:line="1389" pos:column="52"/></name><operator pos:line="1389" pos:column="52">)<pos:position pos:line="1389" pos:column="53"/></operator> <name pos:line="1389" pos:column="54">mObj<pos:position pos:line="1389" pos:column="58"/></name></expr></init></decl>;<pos:position pos:line="1389" pos:column="59"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="1390" pos:column="9">MNamespace<pos:position pos:line="1390" pos:column="19"/></name></type> <name pos:line="1390" pos:column="20">ns<pos:position pos:line="1390" pos:column="22"/></name> <init pos:line="1390" pos:column="23">= <expr><operator pos:line="1390" pos:column="25">(<pos:position pos:line="1390" pos:column="26"/></operator><name pos:line="1390" pos:column="26">MNamespace<pos:position pos:line="1390" pos:column="36"/></name><operator pos:line="1390" pos:column="36">)<pos:position pos:line="1390" pos:column="37"/></operator> <name pos:line="1390" pos:column="38">nsObj<pos:position pos:line="1390" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="1390" pos:column="44"/></decl_stmt>

        <if pos:line="1392" pos:column="9">if <condition pos:line="1392" pos:column="12">(<expr><name pos:line="1392" pos:column="13">modelElement<pos:position pos:line="1392" pos:column="25"/></name> <operator pos:line="1392" pos:column="26">==<pos:position pos:line="1392" pos:column="28"/></operator> <literal type="null" pos:line="1392" pos:column="29">null<pos:position pos:line="1392" pos:column="33"/></literal> <operator pos:line="1392" pos:column="34">||<pos:position pos:line="1392" pos:column="36"/></operator> <name pos:line="1392" pos:column="37">ns<pos:position pos:line="1392" pos:column="39"/></name> <operator pos:line="1392" pos:column="40">==<pos:position pos:line="1392" pos:column="42"/></operator> <literal type="null" pos:line="1392" pos:column="43">null<pos:position pos:line="1392" pos:column="47"/></literal></expr>)<pos:position pos:line="1392" pos:column="48"/></condition><then pos:line="1392" pos:column="48"> <block pos:line="1392" pos:column="49">{
            <return pos:line="1393" pos:column="13">return <expr><literal type="boolean" pos:line="1393" pos:column="20">false<pos:position pos:line="1393" pos:column="25"/></literal></expr>;<pos:position pos:line="1393" pos:column="26"/></return>
        }<pos:position pos:line="1394" pos:column="10"/></block></then></if>
        <if pos:line="1395" pos:column="9">if <condition pos:line="1395" pos:column="12">(<expr><call><name><name pos:line="1395" pos:column="13">ns<pos:position pos:line="1395" pos:column="15"/></name><operator pos:line="1395" pos:column="15">.<pos:position pos:line="1395" pos:column="16"/></operator><name pos:line="1395" pos:column="16">getModel<pos:position pos:line="1395" pos:column="24"/></name></name><argument_list pos:line="1395" pos:column="24">()<pos:position pos:line="1395" pos:column="26"/></argument_list></call> <operator pos:line="1395" pos:column="27">!=<pos:position pos:line="1395" pos:column="29"/></operator> <call><name><name pos:line="1395" pos:column="30">modelElement<pos:position pos:line="1395" pos:column="42"/></name><operator pos:line="1395" pos:column="42">.<pos:position pos:line="1395" pos:column="43"/></operator><name pos:line="1395" pos:column="43">getModel<pos:position pos:line="1395" pos:column="51"/></name></name><argument_list pos:line="1395" pos:column="51">()<pos:position pos:line="1395" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="1395" pos:column="54"/></condition><then pos:line="1395" pos:column="54"> <block pos:line="1395" pos:column="55">{
            <return pos:line="1396" pos:column="13">return <expr><literal type="boolean" pos:line="1396" pos:column="20">false<pos:position pos:line="1396" pos:column="25"/></literal></expr>;<pos:position pos:line="1396" pos:column="26"/></return>
        }<pos:position pos:line="1397" pos:column="10"/></block></then></if>
        <if pos:line="1398" pos:column="9">if <condition pos:line="1398" pos:column="12">(<expr><name pos:line="1398" pos:column="13">modelElement<pos:position pos:line="1398" pos:column="25"/></name> <operator pos:line="1398" pos:column="26">==<pos:position pos:line="1398" pos:column="28"/></operator> <name pos:line="1398" pos:column="29">ns<pos:position pos:line="1398" pos:column="31"/></name></expr>)<pos:position pos:line="1398" pos:column="32"/></condition><then pos:line="1398" pos:column="32"> <block pos:line="1398" pos:column="33">{
            <return pos:line="1399" pos:column="13">return <expr><literal type="boolean" pos:line="1399" pos:column="20">false<pos:position pos:line="1399" pos:column="25"/></literal></expr>;<pos:position pos:line="1399" pos:column="26"/></return>
        }<pos:position pos:line="1400" pos:column="10"/></block></then></if>
        <if pos:line="1401" pos:column="9">if <condition pos:line="1401" pos:column="12">(<expr><name pos:line="1401" pos:column="13">modelElement<pos:position pos:line="1401" pos:column="25"/></name> <operator pos:line="1401" pos:column="26">instanceof<pos:position pos:line="1401" pos:column="36"/></operator> <name pos:line="1401" pos:column="37">MNamespace<pos:position pos:line="1401" pos:column="47"/></name>
                <operator pos:line="1402" pos:column="17">&amp;&amp;<pos:position pos:line="1402" pos:column="27"/></operator> <name pos:line="1402" pos:column="20">modelElement<pos:position pos:line="1402" pos:column="32"/></name> <operator pos:line="1402" pos:column="33">==<pos:position pos:line="1402" pos:column="35"/></operator> <call><name pos:line="1402" pos:column="36">getFirstSharedNamespace<pos:position pos:line="1402" pos:column="59"/></name><argument_list pos:line="1402" pos:column="59">(<argument><expr><name pos:line="1402" pos:column="60">modelElement<pos:position pos:line="1402" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="1402" pos:column="74">ns<pos:position pos:line="1402" pos:column="76"/></name></expr></argument>)<pos:position pos:line="1402" pos:column="77"/></argument_list></call></expr>)<pos:position pos:line="1402" pos:column="78"/></condition><then pos:line="1402" pos:column="78"> <block pos:line="1402" pos:column="79">{
            <return pos:line="1403" pos:column="13">return <expr><literal type="boolean" pos:line="1403" pos:column="20">false<pos:position pos:line="1403" pos:column="25"/></literal></expr>;<pos:position pos:line="1403" pos:column="26"/></return>
        }<pos:position pos:line="1404" pos:column="10"/></block></then></if>
        <if pos:line="1405" pos:column="9">if <condition pos:line="1405" pos:column="12">(<expr><name pos:line="1405" pos:column="13">ns<pos:position pos:line="1405" pos:column="15"/></name> <operator pos:line="1405" pos:column="16">instanceof<pos:position pos:line="1405" pos:column="26"/></operator> <name pos:line="1405" pos:column="27">MInterface<pos:position pos:line="1405" pos:column="37"/></name>
            <operator pos:line="1406" pos:column="13">||<pos:position pos:line="1406" pos:column="15"/></operator> <name pos:line="1406" pos:column="16">ns<pos:position pos:line="1406" pos:column="18"/></name> <operator pos:line="1406" pos:column="19">instanceof<pos:position pos:line="1406" pos:column="29"/></operator> <name pos:line="1406" pos:column="30">MActor<pos:position pos:line="1406" pos:column="36"/></name>
            <operator pos:line="1407" pos:column="13">||<pos:position pos:line="1407" pos:column="15"/></operator> <name pos:line="1407" pos:column="16">ns<pos:position pos:line="1407" pos:column="18"/></name> <operator pos:line="1407" pos:column="19">instanceof<pos:position pos:line="1407" pos:column="29"/></operator> <name pos:line="1407" pos:column="30">MUseCase<pos:position pos:line="1407" pos:column="38"/></name></expr>)<pos:position pos:line="1407" pos:column="39"/></condition><then pos:line="1407" pos:column="39"> <block pos:line="1407" pos:column="40">{
            <return pos:line="1408" pos:column="13">return <expr><literal type="boolean" pos:line="1408" pos:column="20">false<pos:position pos:line="1408" pos:column="25"/></literal></expr>;<pos:position pos:line="1408" pos:column="26"/></return>
        }<pos:position pos:line="1409" pos:column="10"/></block></then> <elseif pos:line="1409" pos:column="11">else <if pos:line="1409" pos:column="16">if <condition pos:line="1409" pos:column="19">(<expr><name pos:line="1409" pos:column="20">ns<pos:position pos:line="1409" pos:column="22"/></name> <operator pos:line="1409" pos:column="23">instanceof<pos:position pos:line="1409" pos:column="33"/></operator> <name pos:line="1409" pos:column="34">MComponent<pos:position pos:line="1409" pos:column="44"/></name></expr>)<pos:position pos:line="1409" pos:column="45"/></condition><then pos:line="1409" pos:column="45"> <block pos:line="1409" pos:column="46">{
            <return pos:line="1410" pos:column="13">return <expr><operator pos:line="1410" pos:column="20">(<pos:position pos:line="1410" pos:column="21"/></operator><name pos:line="1410" pos:column="21">modelElement<pos:position pos:line="1410" pos:column="33"/></name> <operator pos:line="1410" pos:column="34">instanceof<pos:position pos:line="1410" pos:column="44"/></operator> <name pos:line="1410" pos:column="45">MComponent<pos:position pos:line="1410" pos:column="55"/></name> <operator pos:line="1410" pos:column="56">&amp;&amp;<pos:position pos:line="1410" pos:column="66"/></operator> <name pos:line="1410" pos:column="59">modelElement<pos:position pos:line="1410" pos:column="71"/></name> <operator pos:line="1410" pos:column="72">!=<pos:position pos:line="1410" pos:column="74"/></operator> <name pos:line="1410" pos:column="75">ns<pos:position pos:line="1410" pos:column="77"/></name><operator pos:line="1410" pos:column="77">)<pos:position pos:line="1410" pos:column="78"/></operator></expr>;<pos:position pos:line="1410" pos:column="79"/></return>
        }<pos:position pos:line="1411" pos:column="10"/></block></then></if></elseif> <elseif pos:line="1411" pos:column="11">else <if pos:line="1411" pos:column="16">if <condition pos:line="1411" pos:column="19">(<expr><name pos:line="1411" pos:column="20">ns<pos:position pos:line="1411" pos:column="22"/></name> <operator pos:line="1411" pos:column="23">instanceof<pos:position pos:line="1411" pos:column="33"/></operator> <name pos:line="1411" pos:column="34">MCollaboration<pos:position pos:line="1411" pos:column="48"/></name></expr>)<pos:position pos:line="1411" pos:column="49"/></condition><then pos:line="1411" pos:column="49"> <block pos:line="1411" pos:column="50">{
            <if pos:line="1412" pos:column="13">if <condition pos:line="1412" pos:column="16">(<expr><operator pos:line="1412" pos:column="17">!<pos:position pos:line="1412" pos:column="18"/></operator><operator pos:line="1412" pos:column="18">(<pos:position pos:line="1412" pos:column="19"/></operator><name pos:line="1412" pos:column="19">modelElement<pos:position pos:line="1412" pos:column="31"/></name> <operator pos:line="1412" pos:column="32">instanceof<pos:position pos:line="1412" pos:column="42"/></operator> <name pos:line="1412" pos:column="43">MClassifierRole<pos:position pos:line="1412" pos:column="58"/></name>
		  <operator pos:line="1413" pos:column="19">||<pos:position pos:line="1413" pos:column="21"/></operator> <name pos:line="1413" pos:column="22">modelElement<pos:position pos:line="1413" pos:column="34"/></name> <operator pos:line="1413" pos:column="35">instanceof<pos:position pos:line="1413" pos:column="45"/></operator> <name pos:line="1413" pos:column="46">MAssociationRole<pos:position pos:line="1413" pos:column="62"/></name>
		  <operator pos:line="1414" pos:column="19">||<pos:position pos:line="1414" pos:column="21"/></operator> <name pos:line="1414" pos:column="22">modelElement<pos:position pos:line="1414" pos:column="34"/></name> <operator pos:line="1414" pos:column="35">instanceof<pos:position pos:line="1414" pos:column="45"/></operator> <name pos:line="1414" pos:column="46">MGeneralization<pos:position pos:line="1414" pos:column="61"/></name>
		  <operator pos:line="1415" pos:column="19">||<pos:position pos:line="1415" pos:column="21"/></operator> <name pos:line="1415" pos:column="22">modelElement<pos:position pos:line="1415" pos:column="34"/></name> <operator pos:line="1415" pos:column="35">instanceof<pos:position pos:line="1415" pos:column="45"/></operator> <name pos:line="1415" pos:column="46">MConstraint<pos:position pos:line="1415" pos:column="57"/></name><operator pos:line="1415" pos:column="57">)<pos:position pos:line="1415" pos:column="58"/></operator></expr>)<pos:position pos:line="1415" pos:column="59"/></condition><then pos:line="1415" pos:column="59"> <block pos:line="1415" pos:column="60">{
                <return pos:line="1416" pos:column="17">return <expr><literal type="boolean" pos:line="1416" pos:column="24">false<pos:position pos:line="1416" pos:column="29"/></literal></expr>;<pos:position pos:line="1416" pos:column="30"/></return>
            }<pos:position pos:line="1417" pos:column="14"/></block></then></if>
        }<pos:position pos:line="1418" pos:column="10"/></block></then></if></elseif> <elseif pos:line="1418" pos:column="11">else <if pos:line="1418" pos:column="16">if <condition pos:line="1418" pos:column="19">(<expr><name pos:line="1418" pos:column="20">ns<pos:position pos:line="1418" pos:column="22"/></name> <operator pos:line="1418" pos:column="23">instanceof<pos:position pos:line="1418" pos:column="33"/></operator> <name pos:line="1418" pos:column="34">MPackage<pos:position pos:line="1418" pos:column="42"/></name></expr>)<pos:position pos:line="1418" pos:column="43"/></condition><then pos:line="1418" pos:column="43"> <block pos:line="1418" pos:column="44">{
            <if pos:line="1419" pos:column="13">if <condition pos:line="1419" pos:column="16">(<expr><operator pos:line="1419" pos:column="17">!<pos:position pos:line="1419" pos:column="18"/></operator><operator pos:line="1419" pos:column="18">(<pos:position pos:line="1419" pos:column="19"/></operator><name pos:line="1419" pos:column="19">modelElement<pos:position pos:line="1419" pos:column="31"/></name> <operator pos:line="1419" pos:column="32">instanceof<pos:position pos:line="1419" pos:column="42"/></operator> <name pos:line="1419" pos:column="43">MPackage<pos:position pos:line="1419" pos:column="51"/></name>
		  <operator pos:line="1420" pos:column="19">||<pos:position pos:line="1420" pos:column="21"/></operator> <name pos:line="1420" pos:column="22">modelElement<pos:position pos:line="1420" pos:column="34"/></name> <operator pos:line="1420" pos:column="35">instanceof<pos:position pos:line="1420" pos:column="45"/></operator> <name pos:line="1420" pos:column="46">MClassifier<pos:position pos:line="1420" pos:column="57"/></name>
		  <operator pos:line="1421" pos:column="19">||<pos:position pos:line="1421" pos:column="21"/></operator> <name pos:line="1421" pos:column="22">modelElement<pos:position pos:line="1421" pos:column="34"/></name> <operator pos:line="1421" pos:column="35">instanceof<pos:position pos:line="1421" pos:column="45"/></operator> <name pos:line="1421" pos:column="46">MAssociation<pos:position pos:line="1421" pos:column="58"/></name>
		  <operator pos:line="1422" pos:column="19">||<pos:position pos:line="1422" pos:column="21"/></operator> <name pos:line="1422" pos:column="22">modelElement<pos:position pos:line="1422" pos:column="34"/></name> <operator pos:line="1422" pos:column="35">instanceof<pos:position pos:line="1422" pos:column="45"/></operator> <name pos:line="1422" pos:column="46">MGeneralization<pos:position pos:line="1422" pos:column="61"/></name>
		  <operator pos:line="1423" pos:column="19">||<pos:position pos:line="1423" pos:column="21"/></operator> <name pos:line="1423" pos:column="22">modelElement<pos:position pos:line="1423" pos:column="34"/></name> <operator pos:line="1423" pos:column="35">instanceof<pos:position pos:line="1423" pos:column="45"/></operator> <name pos:line="1423" pos:column="46">MDependency<pos:position pos:line="1423" pos:column="57"/></name>
		  <operator pos:line="1424" pos:column="19">||<pos:position pos:line="1424" pos:column="21"/></operator> <name pos:line="1424" pos:column="22">modelElement<pos:position pos:line="1424" pos:column="34"/></name> <operator pos:line="1424" pos:column="35">instanceof<pos:position pos:line="1424" pos:column="45"/></operator> <name pos:line="1424" pos:column="46">MConstraint<pos:position pos:line="1424" pos:column="57"/></name>
		  <operator pos:line="1425" pos:column="19">||<pos:position pos:line="1425" pos:column="21"/></operator> <name pos:line="1425" pos:column="22">modelElement<pos:position pos:line="1425" pos:column="34"/></name> <operator pos:line="1425" pos:column="35">instanceof<pos:position pos:line="1425" pos:column="45"/></operator> <name pos:line="1425" pos:column="46">MCollaboration<pos:position pos:line="1425" pos:column="60"/></name>
		  <operator pos:line="1426" pos:column="19">||<pos:position pos:line="1426" pos:column="21"/></operator> <name pos:line="1426" pos:column="22">modelElement<pos:position pos:line="1426" pos:column="34"/></name> <operator pos:line="1426" pos:column="35">instanceof<pos:position pos:line="1426" pos:column="45"/></operator> <name pos:line="1426" pos:column="46">MStateMachine<pos:position pos:line="1426" pos:column="59"/></name>
		  <operator pos:line="1427" pos:column="19">||<pos:position pos:line="1427" pos:column="21"/></operator> <name pos:line="1427" pos:column="22">modelElement<pos:position pos:line="1427" pos:column="34"/></name> <operator pos:line="1427" pos:column="35">instanceof<pos:position pos:line="1427" pos:column="45"/></operator> <name pos:line="1427" pos:column="46">MStereotype<pos:position pos:line="1427" pos:column="57"/></name><operator pos:line="1427" pos:column="57">)<pos:position pos:line="1427" pos:column="58"/></operator></expr>)<pos:position pos:line="1427" pos:column="59"/></condition><then pos:line="1427" pos:column="59"> <block pos:line="1427" pos:column="60">{
                <return pos:line="1428" pos:column="17">return <expr><literal type="boolean" pos:line="1428" pos:column="24">false<pos:position pos:line="1428" pos:column="29"/></literal></expr>;<pos:position pos:line="1428" pos:column="30"/></return>
            }<pos:position pos:line="1429" pos:column="14"/></block></then></if>
        }<pos:position pos:line="1430" pos:column="10"/></block></then></if></elseif> <elseif pos:line="1430" pos:column="11">else <if pos:line="1430" pos:column="16">if <condition pos:line="1430" pos:column="19">(<expr><name pos:line="1430" pos:column="20">ns<pos:position pos:line="1430" pos:column="22"/></name> <operator pos:line="1430" pos:column="23">instanceof<pos:position pos:line="1430" pos:column="33"/></operator> <name pos:line="1430" pos:column="34">MClass<pos:position pos:line="1430" pos:column="40"/></name></expr>)<pos:position pos:line="1430" pos:column="41"/></condition><then pos:line="1430" pos:column="41"> <block pos:line="1430" pos:column="42">{
            <if pos:line="1431" pos:column="13">if <condition pos:line="1431" pos:column="16">(<expr><operator pos:line="1431" pos:column="17">!<pos:position pos:line="1431" pos:column="18"/></operator><operator pos:line="1431" pos:column="18">(<pos:position pos:line="1431" pos:column="19"/></operator><name pos:line="1431" pos:column="19">modelElement<pos:position pos:line="1431" pos:column="31"/></name> <operator pos:line="1431" pos:column="32">instanceof<pos:position pos:line="1431" pos:column="42"/></operator> <name pos:line="1431" pos:column="43">MClass<pos:position pos:line="1431" pos:column="49"/></name>
		  <operator pos:line="1432" pos:column="19">||<pos:position pos:line="1432" pos:column="21"/></operator> <name pos:line="1432" pos:column="22">modelElement<pos:position pos:line="1432" pos:column="34"/></name> <operator pos:line="1432" pos:column="35">instanceof<pos:position pos:line="1432" pos:column="45"/></operator> <name pos:line="1432" pos:column="46">MAssociation<pos:position pos:line="1432" pos:column="58"/></name>
		  <operator pos:line="1433" pos:column="19">||<pos:position pos:line="1433" pos:column="21"/></operator> <name pos:line="1433" pos:column="22">modelElement<pos:position pos:line="1433" pos:column="34"/></name> <operator pos:line="1433" pos:column="35">instanceof<pos:position pos:line="1433" pos:column="45"/></operator> <name pos:line="1433" pos:column="46">MGeneralization<pos:position pos:line="1433" pos:column="61"/></name>
		  <operator pos:line="1434" pos:column="19">||<pos:position pos:line="1434" pos:column="21"/></operator> <name pos:line="1434" pos:column="22">modelElement<pos:position pos:line="1434" pos:column="34"/></name> <operator pos:line="1434" pos:column="35">instanceof<pos:position pos:line="1434" pos:column="45"/></operator> <name pos:line="1434" pos:column="46">MUseCase<pos:position pos:line="1434" pos:column="54"/></name>
		  <operator pos:line="1435" pos:column="19">||<pos:position pos:line="1435" pos:column="21"/></operator> <name pos:line="1435" pos:column="22">modelElement<pos:position pos:line="1435" pos:column="34"/></name> <operator pos:line="1435" pos:column="35">instanceof<pos:position pos:line="1435" pos:column="45"/></operator> <name pos:line="1435" pos:column="46">MConstraint<pos:position pos:line="1435" pos:column="57"/></name>
		  <operator pos:line="1436" pos:column="19">||<pos:position pos:line="1436" pos:column="21"/></operator> <name pos:line="1436" pos:column="22">modelElement<pos:position pos:line="1436" pos:column="34"/></name> <operator pos:line="1436" pos:column="35">instanceof<pos:position pos:line="1436" pos:column="45"/></operator> <name pos:line="1436" pos:column="46">MDependency<pos:position pos:line="1436" pos:column="57"/></name>
		  <operator pos:line="1437" pos:column="19">||<pos:position pos:line="1437" pos:column="21"/></operator> <name pos:line="1437" pos:column="22">modelElement<pos:position pos:line="1437" pos:column="34"/></name> <operator pos:line="1437" pos:column="35">instanceof<pos:position pos:line="1437" pos:column="45"/></operator> <name pos:line="1437" pos:column="46">MCollaboration<pos:position pos:line="1437" pos:column="60"/></name>
		  <operator pos:line="1438" pos:column="19">||<pos:position pos:line="1438" pos:column="21"/></operator> <name pos:line="1438" pos:column="22">modelElement<pos:position pos:line="1438" pos:column="34"/></name> <operator pos:line="1438" pos:column="35">instanceof<pos:position pos:line="1438" pos:column="45"/></operator> <name pos:line="1438" pos:column="46">MDataType<pos:position pos:line="1438" pos:column="55"/></name>
		  <operator pos:line="1439" pos:column="19">||<pos:position pos:line="1439" pos:column="21"/></operator> <name pos:line="1439" pos:column="22">modelElement<pos:position pos:line="1439" pos:column="34"/></name> <operator pos:line="1439" pos:column="35">instanceof<pos:position pos:line="1439" pos:column="45"/></operator> <name pos:line="1439" pos:column="46">MInterface<pos:position pos:line="1439" pos:column="56"/></name><operator pos:line="1439" pos:column="56">)<pos:position pos:line="1439" pos:column="57"/></operator></expr>)<pos:position pos:line="1439" pos:column="58"/></condition><then pos:line="1439" pos:column="58"> <block pos:line="1439" pos:column="59">{
                <return pos:line="1440" pos:column="17">return <expr><literal type="boolean" pos:line="1440" pos:column="24">false<pos:position pos:line="1440" pos:column="29"/></literal></expr>;<pos:position pos:line="1440" pos:column="30"/></return>
            }<pos:position pos:line="1441" pos:column="14"/></block></then></if>
        }<pos:position pos:line="1442" pos:column="10"/></block></then></if></elseif> <elseif pos:line="1442" pos:column="11">else <if pos:line="1442" pos:column="16">if <condition pos:line="1442" pos:column="19">(<expr><name pos:line="1442" pos:column="20">ns<pos:position pos:line="1442" pos:column="22"/></name> <operator pos:line="1442" pos:column="23">instanceof<pos:position pos:line="1442" pos:column="33"/></operator> <name pos:line="1442" pos:column="34">MClassifierRole<pos:position pos:line="1442" pos:column="49"/></name></expr>)<pos:position pos:line="1442" pos:column="50"/></condition><then pos:line="1442" pos:column="50"> <block pos:line="1442" pos:column="51">{
            <decl_stmt><decl><type><name pos:line="1443" pos:column="13">MClassifierRole<pos:position pos:line="1443" pos:column="28"/></name></type> <name pos:line="1443" pos:column="29">cr<pos:position pos:line="1443" pos:column="31"/></name> <init pos:line="1443" pos:column="32">= <expr><operator pos:line="1443" pos:column="34">(<pos:position pos:line="1443" pos:column="35"/></operator><name pos:line="1443" pos:column="35">MClassifierRole<pos:position pos:line="1443" pos:column="50"/></name><operator pos:line="1443" pos:column="50">)<pos:position pos:line="1443" pos:column="51"/></operator> <name pos:line="1443" pos:column="52">ns<pos:position pos:line="1443" pos:column="54"/></name></expr></init></decl>;<pos:position pos:line="1443" pos:column="55"/></decl_stmt>
            <if pos:line="1444" pos:column="13">if <condition pos:line="1444" pos:column="16">(<expr><operator pos:line="1444" pos:column="17">!<pos:position pos:line="1444" pos:column="18"/></operator><operator pos:line="1444" pos:column="18">(<pos:position pos:line="1444" pos:column="19"/></operator><call><name><name pos:line="1444" pos:column="19">cr<pos:position pos:line="1444" pos:column="21"/></name><operator pos:line="1444" pos:column="21">.<pos:position pos:line="1444" pos:column="22"/></operator><name pos:line="1444" pos:column="22">getAvailableContentses<pos:position pos:line="1444" pos:column="44"/></name></name><argument_list pos:line="1444" pos:column="44">()<pos:position pos:line="1444" pos:column="46"/></argument_list></call><operator pos:line="1444" pos:column="46">.<pos:position pos:line="1444" pos:column="47"/></operator><call><name pos:line="1444" pos:column="47">contains<pos:position pos:line="1444" pos:column="55"/></name><argument_list pos:line="1444" pos:column="55">(<argument><expr><name pos:line="1444" pos:column="56">modelElement<pos:position pos:line="1444" pos:column="68"/></name></expr></argument>)<pos:position pos:line="1444" pos:column="69"/></argument_list></call>
		  <operator pos:line="1445" pos:column="19">||<pos:position pos:line="1445" pos:column="21"/></operator> <call><name><name pos:line="1445" pos:column="22">cr<pos:position pos:line="1445" pos:column="24"/></name><operator pos:line="1445" pos:column="24">.<pos:position pos:line="1445" pos:column="25"/></operator><name pos:line="1445" pos:column="25">getAvailableFeatures<pos:position pos:line="1445" pos:column="45"/></name></name><argument_list pos:line="1445" pos:column="45">()<pos:position pos:line="1445" pos:column="47"/></argument_list></call><operator pos:line="1445" pos:column="47">.<pos:position pos:line="1445" pos:column="48"/></operator><call><name pos:line="1445" pos:column="48">contains<pos:position pos:line="1445" pos:column="56"/></name><argument_list pos:line="1445" pos:column="56">(<argument><expr><name pos:line="1445" pos:column="57">modelElement<pos:position pos:line="1445" pos:column="69"/></name></expr></argument>)<pos:position pos:line="1445" pos:column="70"/></argument_list></call><operator pos:line="1445" pos:column="70">)<pos:position pos:line="1445" pos:column="71"/></operator></expr>)<pos:position pos:line="1445" pos:column="72"/></condition><then pos:line="1445" pos:column="72"> <block pos:line="1445" pos:column="73">{
                <return pos:line="1446" pos:column="17">return <expr><literal type="boolean" pos:line="1446" pos:column="24">false<pos:position pos:line="1446" pos:column="29"/></literal></expr>;<pos:position pos:line="1446" pos:column="30"/></return>
            }<pos:position pos:line="1447" pos:column="14"/></block></then></if>
        }<pos:position pos:line="1448" pos:column="10"/></block></then></if></elseif></if>
        <if pos:line="1449" pos:column="9">if <condition pos:line="1449" pos:column="12">(<expr><name pos:line="1449" pos:column="13">modelElement<pos:position pos:line="1449" pos:column="25"/></name> <operator pos:line="1449" pos:column="26">instanceof<pos:position pos:line="1449" pos:column="36"/></operator> <name pos:line="1449" pos:column="37">MStructuralFeature<pos:position pos:line="1449" pos:column="55"/></name></expr>)<pos:position pos:line="1449" pos:column="56"/></condition><then pos:line="1449" pos:column="56"> <block pos:line="1449" pos:column="57">{
            <if pos:line="1450" pos:column="13">if <condition pos:line="1450" pos:column="16">(<expr><operator pos:line="1450" pos:column="17">!<pos:position pos:line="1450" pos:column="18"/></operator><call><name pos:line="1450" pos:column="18">isValidNamespace<pos:position pos:line="1450" pos:column="34"/></name><argument_list pos:line="1450" pos:column="34">(<argument><expr><operator pos:line="1450" pos:column="35">(<pos:position pos:line="1450" pos:column="36"/></operator><name pos:line="1450" pos:column="36">MStructuralFeature<pos:position pos:line="1450" pos:column="54"/></name><operator pos:line="1450" pos:column="54">)<pos:position pos:line="1450" pos:column="55"/></operator> <name pos:line="1450" pos:column="56">modelElement<pos:position pos:line="1450" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="1450" pos:column="70">ns<pos:position pos:line="1450" pos:column="72"/></name></expr></argument>)<pos:position pos:line="1450" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="1450" pos:column="74"/></condition><then pos:line="1450" pos:column="74"> <block pos:line="1450" pos:column="75">{
                <return pos:line="1451" pos:column="17">return <expr><literal type="boolean" pos:line="1451" pos:column="24">false<pos:position pos:line="1451" pos:column="29"/></literal></expr>;<pos:position pos:line="1451" pos:column="30"/></return>
            }<pos:position pos:line="1452" pos:column="14"/></block></then></if>
        }<pos:position pos:line="1453" pos:column="10"/></block></then> <elseif pos:line="1453" pos:column="11">else <if pos:line="1453" pos:column="16">if <condition pos:line="1453" pos:column="19">(<expr><name pos:line="1453" pos:column="20">modelElement<pos:position pos:line="1453" pos:column="32"/></name> <operator pos:line="1453" pos:column="33">instanceof<pos:position pos:line="1453" pos:column="43"/></operator> <name pos:line="1453" pos:column="44">MGeneralizableElement<pos:position pos:line="1453" pos:column="65"/></name></expr>)<pos:position pos:line="1453" pos:column="66"/></condition><then pos:line="1453" pos:column="66"> <block pos:line="1453" pos:column="67">{
            <if pos:line="1454" pos:column="13">if <condition pos:line="1454" pos:column="16">(<expr><operator pos:line="1454" pos:column="17">!<pos:position pos:line="1454" pos:column="18"/></operator><call><name pos:line="1454" pos:column="18">isValidNamespace<pos:position pos:line="1454" pos:column="34"/></name><argument_list pos:line="1454" pos:column="34">(<argument><expr><operator pos:line="1454" pos:column="35">(<pos:position pos:line="1454" pos:column="36"/></operator><name pos:line="1454" pos:column="36">MGeneralizableElement<pos:position pos:line="1454" pos:column="57"/></name><operator pos:line="1454" pos:column="57">)<pos:position pos:line="1454" pos:column="58"/></operator> <name pos:line="1454" pos:column="59">modelElement<pos:position pos:line="1454" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="1454" pos:column="73">ns<pos:position pos:line="1454" pos:column="75"/></name></expr></argument>)<pos:position pos:line="1454" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="1454" pos:column="77"/></condition><then pos:line="1454" pos:column="77"> <block pos:line="1454" pos:column="78">{
                <return pos:line="1455" pos:column="17">return <expr><literal type="boolean" pos:line="1455" pos:column="24">false<pos:position pos:line="1455" pos:column="29"/></literal></expr>;<pos:position pos:line="1455" pos:column="30"/></return>
            }<pos:position pos:line="1456" pos:column="14"/></block></then></if>
        }<pos:position pos:line="1457" pos:column="10"/></block></then></if></elseif> <elseif pos:line="1457" pos:column="11">else <if pos:line="1457" pos:column="16">if <condition pos:line="1457" pos:column="19">(<expr><name pos:line="1457" pos:column="20">modelElement<pos:position pos:line="1457" pos:column="32"/></name> <operator pos:line="1457" pos:column="33">instanceof<pos:position pos:line="1457" pos:column="43"/></operator> <name pos:line="1457" pos:column="44">MGeneralization<pos:position pos:line="1457" pos:column="59"/></name></expr>)<pos:position pos:line="1457" pos:column="60"/></condition><then pos:line="1457" pos:column="60"> <block pos:line="1457" pos:column="61">{
            <if pos:line="1458" pos:column="13">if <condition pos:line="1458" pos:column="16">(<expr><operator pos:line="1458" pos:column="17">!<pos:position pos:line="1458" pos:column="18"/></operator><call><name pos:line="1458" pos:column="18">isValidNamespace<pos:position pos:line="1458" pos:column="34"/></name><argument_list pos:line="1458" pos:column="34">(<argument><expr><operator pos:line="1458" pos:column="35">(<pos:position pos:line="1458" pos:column="36"/></operator><name pos:line="1458" pos:column="36">MGeneralization<pos:position pos:line="1458" pos:column="51"/></name><operator pos:line="1458" pos:column="51">)<pos:position pos:line="1458" pos:column="52"/></operator> <name pos:line="1458" pos:column="53">modelElement<pos:position pos:line="1458" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="1458" pos:column="67">ns<pos:position pos:line="1458" pos:column="69"/></name></expr></argument>)<pos:position pos:line="1458" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="1458" pos:column="71"/></condition><then pos:line="1458" pos:column="71"> <block pos:line="1458" pos:column="72">{
                <return pos:line="1459" pos:column="17">return <expr><literal type="boolean" pos:line="1459" pos:column="24">false<pos:position pos:line="1459" pos:column="29"/></literal></expr>;<pos:position pos:line="1459" pos:column="30"/></return>
            }<pos:position pos:line="1460" pos:column="14"/></block></then></if>
        }<pos:position pos:line="1461" pos:column="10"/></block></then></if></elseif></if>
        <if pos:line="1462" pos:column="9">if <condition pos:line="1462" pos:column="12">(<expr><name pos:line="1462" pos:column="13">modelElement<pos:position pos:line="1462" pos:column="25"/></name> <operator pos:line="1462" pos:column="26">instanceof<pos:position pos:line="1462" pos:column="36"/></operator> <name pos:line="1462" pos:column="37">MAssociation<pos:position pos:line="1462" pos:column="49"/></name></expr>)<pos:position pos:line="1462" pos:column="50"/></condition><then pos:line="1462" pos:column="50"> <block pos:line="1462" pos:column="51">{
            <if pos:line="1463" pos:column="13">if <condition pos:line="1463" pos:column="16">(<expr><operator pos:line="1463" pos:column="17">!<pos:position pos:line="1463" pos:column="18"/></operator><call><name pos:line="1463" pos:column="18">isValidNamespace<pos:position pos:line="1463" pos:column="34"/></name><argument_list pos:line="1463" pos:column="34">(<argument><expr><operator pos:line="1463" pos:column="35">(<pos:position pos:line="1463" pos:column="36"/></operator><name pos:line="1463" pos:column="36">MAssociation<pos:position pos:line="1463" pos:column="48"/></name><operator pos:line="1463" pos:column="48">)<pos:position pos:line="1463" pos:column="49"/></operator> <name pos:line="1463" pos:column="50">modelElement<pos:position pos:line="1463" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="1463" pos:column="64">ns<pos:position pos:line="1463" pos:column="66"/></name></expr></argument>)<pos:position pos:line="1463" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="1463" pos:column="68"/></condition><then pos:line="1463" pos:column="68"> <block pos:line="1463" pos:column="69">{
                <return pos:line="1464" pos:column="17">return <expr><literal type="boolean" pos:line="1464" pos:column="24">false<pos:position pos:line="1464" pos:column="29"/></literal></expr>;<pos:position pos:line="1464" pos:column="30"/></return>
            }<pos:position pos:line="1465" pos:column="14"/></block></then></if>
        }<pos:position pos:line="1466" pos:column="10"/></block></then> <elseif pos:line="1466" pos:column="11">else <if pos:line="1466" pos:column="16">if <condition pos:line="1466" pos:column="19">(<expr><name pos:line="1466" pos:column="20">modelElement<pos:position pos:line="1466" pos:column="32"/></name> <operator pos:line="1466" pos:column="33">instanceof<pos:position pos:line="1466" pos:column="43"/></operator> <name pos:line="1466" pos:column="44">MCollaboration<pos:position pos:line="1466" pos:column="58"/></name></expr>)<pos:position pos:line="1466" pos:column="59"/></condition><then pos:line="1466" pos:column="59"> <block pos:line="1466" pos:column="60">{
            <if pos:line="1467" pos:column="13">if <condition pos:line="1467" pos:column="16">(<expr><operator pos:line="1467" pos:column="17">!<pos:position pos:line="1467" pos:column="18"/></operator><call><name pos:line="1467" pos:column="18">isValidNamespace<pos:position pos:line="1467" pos:column="34"/></name><argument_list pos:line="1467" pos:column="34">(<argument><expr><operator pos:line="1467" pos:column="35">(<pos:position pos:line="1467" pos:column="36"/></operator><name pos:line="1467" pos:column="36">MCollaboration<pos:position pos:line="1467" pos:column="50"/></name><operator pos:line="1467" pos:column="50">)<pos:position pos:line="1467" pos:column="51"/></operator> <name pos:line="1467" pos:column="52">modelElement<pos:position pos:line="1467" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="1467" pos:column="66">ns<pos:position pos:line="1467" pos:column="68"/></name></expr></argument>)<pos:position pos:line="1467" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="1467" pos:column="70"/></condition><then pos:line="1467" pos:column="70"> <block pos:line="1467" pos:column="71">{
                <return pos:line="1468" pos:column="17">return <expr><literal type="boolean" pos:line="1468" pos:column="24">false<pos:position pos:line="1468" pos:column="29"/></literal></expr>;<pos:position pos:line="1468" pos:column="30"/></return>
            }<pos:position pos:line="1469" pos:column="14"/></block></then></if>
        }<pos:position pos:line="1470" pos:column="10"/></block></then></if></elseif></if>
        <return pos:line="1471" pos:column="9">return <expr><literal type="boolean" pos:line="1471" pos:column="16">true<pos:position pos:line="1471" pos:column="20"/></literal></expr>;<pos:position pos:line="1471" pos:column="21"/></return>
    }<pos:position pos:line="1472" pos:column="6"/></block></function>
    <function><specifier pos:line="1473" pos:column="5">private<pos:position pos:line="1473" pos:column="12"/></specifier> <type><name pos:line="1473" pos:column="13">boolean<pos:position pos:line="1473" pos:column="20"/></name></type> <name pos:line="1473" pos:column="21">isValidNamespace<pos:position pos:line="1473" pos:column="37"/></name><parameter_list pos:line="1473" pos:column="37">(<parameter><decl><type><name pos:line="1473" pos:column="38">MCollaboration<pos:position pos:line="1473" pos:column="52"/></name></type> <name pos:line="1473" pos:column="53">collab<pos:position pos:line="1473" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1473" pos:column="61">MNamespace<pos:position pos:line="1473" pos:column="71"/></name></type> <name pos:line="1473" pos:column="72">ns<pos:position pos:line="1473" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1473" pos:column="75"/></parameter_list> <block pos:line="1473" pos:column="76">{
        <decl_stmt><decl><type><name pos:line="1474" pos:column="9">Iterator<pos:position pos:line="1474" pos:column="17"/></name></type> <name pos:line="1474" pos:column="18">it<pos:position pos:line="1474" pos:column="20"/></name> <init pos:line="1474" pos:column="21">= <expr><call><name><name pos:line="1474" pos:column="23">collab<pos:position pos:line="1474" pos:column="29"/></name><operator pos:line="1474" pos:column="29">.<pos:position pos:line="1474" pos:column="30"/></operator><name pos:line="1474" pos:column="30">getOwnedElements<pos:position pos:line="1474" pos:column="46"/></name></name><argument_list pos:line="1474" pos:column="46">()<pos:position pos:line="1474" pos:column="48"/></argument_list></call><operator pos:line="1474" pos:column="48">.<pos:position pos:line="1474" pos:column="49"/></operator><call><name pos:line="1474" pos:column="49">iterator<pos:position pos:line="1474" pos:column="57"/></name><argument_list pos:line="1474" pos:column="57">()<pos:position pos:line="1474" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1474" pos:column="60"/></decl_stmt>
        <while pos:line="1475" pos:column="9">while <condition pos:line="1475" pos:column="15">(<expr><call><name><name pos:line="1475" pos:column="16">it<pos:position pos:line="1475" pos:column="18"/></name><operator pos:line="1475" pos:column="18">.<pos:position pos:line="1475" pos:column="19"/></operator><name pos:line="1475" pos:column="19">hasNext<pos:position pos:line="1475" pos:column="26"/></name></name><argument_list pos:line="1475" pos:column="26">()<pos:position pos:line="1475" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="1475" pos:column="29"/></condition> <block pos:line="1475" pos:column="30">{
            <decl_stmt><decl><type><name pos:line="1476" pos:column="13">MModelElement<pos:position pos:line="1476" pos:column="26"/></name></type> <name pos:line="1476" pos:column="27">m<pos:position pos:line="1476" pos:column="28"/></name> <init pos:line="1476" pos:column="29">= <expr><operator pos:line="1476" pos:column="31">(<pos:position pos:line="1476" pos:column="32"/></operator><name pos:line="1476" pos:column="32">MModelElement<pos:position pos:line="1476" pos:column="45"/></name><operator pos:line="1476" pos:column="45">)<pos:position pos:line="1476" pos:column="46"/></operator> <call><name><name pos:line="1476" pos:column="47">it<pos:position pos:line="1476" pos:column="49"/></name><operator pos:line="1476" pos:column="49">.<pos:position pos:line="1476" pos:column="50"/></operator><name pos:line="1476" pos:column="50">next<pos:position pos:line="1476" pos:column="54"/></name></name><argument_list pos:line="1476" pos:column="54">()<pos:position pos:line="1476" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1476" pos:column="57"/></decl_stmt>
            <if pos:line="1477" pos:column="13">if <condition pos:line="1477" pos:column="16">(<expr><name pos:line="1477" pos:column="17">m<pos:position pos:line="1477" pos:column="18"/></name> <operator pos:line="1477" pos:column="19">instanceof<pos:position pos:line="1477" pos:column="29"/></operator> <name pos:line="1477" pos:column="30">MClassifierRole<pos:position pos:line="1477" pos:column="45"/></name></expr>)<pos:position pos:line="1477" pos:column="46"/></condition><then pos:line="1477" pos:column="46"> <block pos:line="1477" pos:column="47">{
                <decl_stmt><decl><type><name pos:line="1478" pos:column="17">MClassifierRole<pos:position pos:line="1478" pos:column="32"/></name></type> <name pos:line="1478" pos:column="33">role<pos:position pos:line="1478" pos:column="37"/></name> <init pos:line="1478" pos:column="38">= <expr><operator pos:line="1478" pos:column="40">(<pos:position pos:line="1478" pos:column="41"/></operator><name pos:line="1478" pos:column="41">MClassifierRole<pos:position pos:line="1478" pos:column="56"/></name><operator pos:line="1478" pos:column="56">)<pos:position pos:line="1478" pos:column="57"/></operator> <name pos:line="1478" pos:column="58">m<pos:position pos:line="1478" pos:column="59"/></name></expr></init></decl>;<pos:position pos:line="1478" pos:column="60"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="1479" pos:column="17">Iterator<pos:position pos:line="1479" pos:column="25"/></name></type> <name pos:line="1479" pos:column="26">it2<pos:position pos:line="1479" pos:column="29"/></name> <init pos:line="1479" pos:column="30">= <expr><call><name><name pos:line="1479" pos:column="32">role<pos:position pos:line="1479" pos:column="36"/></name><operator pos:line="1479" pos:column="36">.<pos:position pos:line="1479" pos:column="37"/></operator><name pos:line="1479" pos:column="37">getBases<pos:position pos:line="1479" pos:column="45"/></name></name><argument_list pos:line="1479" pos:column="45">()<pos:position pos:line="1479" pos:column="47"/></argument_list></call><operator pos:line="1479" pos:column="47">.<pos:position pos:line="1479" pos:column="48"/></operator><call><name pos:line="1479" pos:column="48">iterator<pos:position pos:line="1479" pos:column="56"/></name><argument_list pos:line="1479" pos:column="56">()<pos:position pos:line="1479" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1479" pos:column="59"/></decl_stmt>
                <while pos:line="1480" pos:column="17">while <condition pos:line="1480" pos:column="23">(<expr><call><name><name pos:line="1480" pos:column="24">it2<pos:position pos:line="1480" pos:column="27"/></name><operator pos:line="1480" pos:column="27">.<pos:position pos:line="1480" pos:column="28"/></operator><name pos:line="1480" pos:column="28">hasNext<pos:position pos:line="1480" pos:column="35"/></name></name><argument_list pos:line="1480" pos:column="35">()<pos:position pos:line="1480" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="1480" pos:column="38"/></condition> <block pos:line="1480" pos:column="39">{
                    <if pos:line="1481" pos:column="21">if <condition pos:line="1481" pos:column="24">(<expr><operator pos:line="1481" pos:column="25">!<pos:position pos:line="1481" pos:column="26"/></operator><call><name><name pos:line="1481" pos:column="26">ns<pos:position pos:line="1481" pos:column="28"/></name><operator pos:line="1481" pos:column="28">.<pos:position pos:line="1481" pos:column="29"/></operator><name pos:line="1481" pos:column="29">getOwnedElements<pos:position pos:line="1481" pos:column="45"/></name></name><argument_list pos:line="1481" pos:column="45">()<pos:position pos:line="1481" pos:column="47"/></argument_list></call><operator pos:line="1481" pos:column="47">.<pos:position pos:line="1481" pos:column="48"/></operator><call><name pos:line="1481" pos:column="48">contains<pos:position pos:line="1481" pos:column="56"/></name><argument_list pos:line="1481" pos:column="56">(<argument><expr><call><name><name pos:line="1481" pos:column="57">it2<pos:position pos:line="1481" pos:column="60"/></name><operator pos:line="1481" pos:column="60">.<pos:position pos:line="1481" pos:column="61"/></operator><name pos:line="1481" pos:column="61">next<pos:position pos:line="1481" pos:column="65"/></name></name><argument_list pos:line="1481" pos:column="65">()<pos:position pos:line="1481" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="1481" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="1481" pos:column="69"/></condition><then pos:line="1481" pos:column="69"> <block pos:line="1481" pos:column="70">{
                        <return pos:line="1482" pos:column="25">return <expr><literal type="boolean" pos:line="1482" pos:column="32">false<pos:position pos:line="1482" pos:column="37"/></literal></expr>;<pos:position pos:line="1482" pos:column="38"/></return>
                    }<pos:position pos:line="1483" pos:column="22"/></block></then></if>
                }<pos:position pos:line="1484" pos:column="18"/></block></while>
            }<pos:position pos:line="1485" pos:column="14"/></block></then> <elseif pos:line="1485" pos:column="15">else <if pos:line="1485" pos:column="20">if <condition pos:line="1485" pos:column="23">(<expr><name pos:line="1485" pos:column="24">m<pos:position pos:line="1485" pos:column="25"/></name> <operator pos:line="1485" pos:column="26">instanceof<pos:position pos:line="1485" pos:column="36"/></operator> <name pos:line="1485" pos:column="37">MAssociationRole<pos:position pos:line="1485" pos:column="53"/></name></expr>)<pos:position pos:line="1485" pos:column="54"/></condition><then pos:line="1485" pos:column="54"> <block pos:line="1485" pos:column="55">{
                <if pos:line="1486" pos:column="17">if <condition pos:line="1486" pos:column="20">(<expr><operator pos:line="1486" pos:column="21">!<pos:position pos:line="1486" pos:column="22"/></operator><call><name><name pos:line="1486" pos:column="22">ns<pos:position pos:line="1486" pos:column="24"/></name><operator pos:line="1486" pos:column="24">.<pos:position pos:line="1486" pos:column="25"/></operator><name pos:line="1486" pos:column="25">getOwnedElements<pos:position pos:line="1486" pos:column="41"/></name></name><argument_list pos:line="1486" pos:column="41">()<pos:position pos:line="1486" pos:column="43"/></argument_list></call>
		    <operator pos:line="1487" pos:column="21">.<pos:position pos:line="1487" pos:column="22"/></operator><call><name pos:line="1487" pos:column="22">contains<pos:position pos:line="1487" pos:column="30"/></name><argument_list pos:line="1487" pos:column="30">(<argument><expr><operator pos:line="1487" pos:column="31">(<pos:position pos:line="1487" pos:column="32"/></operator><operator pos:line="1487" pos:column="32">(<pos:position pos:line="1487" pos:column="33"/></operator><name pos:line="1487" pos:column="33">MAssociationRole<pos:position pos:line="1487" pos:column="49"/></name><operator pos:line="1487" pos:column="49">)<pos:position pos:line="1487" pos:column="50"/></operator> <name pos:line="1487" pos:column="51">m<pos:position pos:line="1487" pos:column="52"/></name><operator pos:line="1487" pos:column="52">)<pos:position pos:line="1487" pos:column="53"/></operator><operator pos:line="1487" pos:column="53">.<pos:position pos:line="1487" pos:column="54"/></operator><call><name pos:line="1487" pos:column="54">getBase<pos:position pos:line="1487" pos:column="61"/></name><argument_list pos:line="1487" pos:column="61">()<pos:position pos:line="1487" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="1487" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="1487" pos:column="65"/></condition><then pos:line="1487" pos:column="65"> <block pos:line="1487" pos:column="66">{
                    <return pos:line="1488" pos:column="21">return <expr><literal type="boolean" pos:line="1488" pos:column="28">false<pos:position pos:line="1488" pos:column="33"/></literal></expr>;<pos:position pos:line="1488" pos:column="34"/></return>
                }<pos:position pos:line="1489" pos:column="18"/></block></then></if>
            }<pos:position pos:line="1490" pos:column="14"/></block></then></if></elseif></if>
        }<pos:position pos:line="1491" pos:column="10"/></block></while>
        <return pos:line="1492" pos:column="9">return <expr><literal type="boolean" pos:line="1492" pos:column="16">true<pos:position pos:line="1492" pos:column="20"/></literal></expr>;<pos:position pos:line="1492" pos:column="21"/></return>
    }<pos:position pos:line="1493" pos:column="6"/></block></function>

    <function><specifier pos:line="1495" pos:column="5">private<pos:position pos:line="1495" pos:column="12"/></specifier> <type><name pos:line="1495" pos:column="13">boolean<pos:position pos:line="1495" pos:column="20"/></name></type> <name pos:line="1495" pos:column="21">isValidNamespace<pos:position pos:line="1495" pos:column="37"/></name><parameter_list pos:line="1495" pos:column="37">(<parameter><decl><type><name pos:line="1495" pos:column="38">MGeneralization<pos:position pos:line="1495" pos:column="53"/></name></type> <name pos:line="1495" pos:column="54">gen<pos:position pos:line="1495" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1495" pos:column="59">MNamespace<pos:position pos:line="1495" pos:column="69"/></name></type> <name pos:line="1495" pos:column="70">ns<pos:position pos:line="1495" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="1495" pos:column="73"/></parameter_list> <block pos:line="1495" pos:column="74">{
        <if pos:line="1496" pos:column="9">if <condition pos:line="1496" pos:column="12">(<expr><call><name><name pos:line="1496" pos:column="13">gen<pos:position pos:line="1496" pos:column="16"/></name><operator pos:line="1496" pos:column="16">.<pos:position pos:line="1496" pos:column="17"/></operator><name pos:line="1496" pos:column="17">getParent<pos:position pos:line="1496" pos:column="26"/></name></name><argument_list pos:line="1496" pos:column="26">()<pos:position pos:line="1496" pos:column="28"/></argument_list></call> <operator pos:line="1496" pos:column="29">==<pos:position pos:line="1496" pos:column="31"/></operator> <literal type="null" pos:line="1496" pos:column="32">null<pos:position pos:line="1496" pos:column="36"/></literal> <operator pos:line="1496" pos:column="37">||<pos:position pos:line="1496" pos:column="39"/></operator> <call><name><name pos:line="1496" pos:column="40">gen<pos:position pos:line="1496" pos:column="43"/></name><operator pos:line="1496" pos:column="43">.<pos:position pos:line="1496" pos:column="44"/></operator><name pos:line="1496" pos:column="44">getChild<pos:position pos:line="1496" pos:column="52"/></name></name><argument_list pos:line="1496" pos:column="52">()<pos:position pos:line="1496" pos:column="54"/></argument_list></call> <operator pos:line="1496" pos:column="55">==<pos:position pos:line="1496" pos:column="57"/></operator> <literal type="null" pos:line="1496" pos:column="58">null<pos:position pos:line="1496" pos:column="62"/></literal></expr>)<pos:position pos:line="1496" pos:column="63"/></condition><then pos:line="1496" pos:column="63"> <block pos:line="1496" pos:column="64">{
            <return pos:line="1497" pos:column="13">return <expr><literal type="boolean" pos:line="1497" pos:column="20">true<pos:position pos:line="1497" pos:column="24"/></literal></expr>;<pos:position pos:line="1497" pos:column="25"/></return>
        }<pos:position pos:line="1498" pos:column="10"/></block></then></if>
        <decl_stmt><decl><type><name pos:line="1499" pos:column="9">MNamespace<pos:position pos:line="1499" pos:column="19"/></name></type> <name pos:line="1499" pos:column="20">ns1<pos:position pos:line="1499" pos:column="23"/></name> <init pos:line="1499" pos:column="24">= <expr><call><name><name pos:line="1499" pos:column="26">gen<pos:position pos:line="1499" pos:column="29"/></name><operator pos:line="1499" pos:column="29">.<pos:position pos:line="1499" pos:column="30"/></operator><name pos:line="1499" pos:column="30">getParent<pos:position pos:line="1499" pos:column="39"/></name></name><argument_list pos:line="1499" pos:column="39">()<pos:position pos:line="1499" pos:column="41"/></argument_list></call><operator pos:line="1499" pos:column="41">.<pos:position pos:line="1499" pos:column="42"/></operator><call><name pos:line="1499" pos:column="42">getNamespace<pos:position pos:line="1499" pos:column="54"/></name><argument_list pos:line="1499" pos:column="54">()<pos:position pos:line="1499" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1499" pos:column="57"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="1500" pos:column="9">MNamespace<pos:position pos:line="1500" pos:column="19"/></name></type> <name pos:line="1500" pos:column="20">ns2<pos:position pos:line="1500" pos:column="23"/></name> <init pos:line="1500" pos:column="24">= <expr><call><name><name pos:line="1500" pos:column="26">gen<pos:position pos:line="1500" pos:column="29"/></name><operator pos:line="1500" pos:column="29">.<pos:position pos:line="1500" pos:column="30"/></operator><name pos:line="1500" pos:column="30">getChild<pos:position pos:line="1500" pos:column="38"/></name></name><argument_list pos:line="1500" pos:column="38">()<pos:position pos:line="1500" pos:column="40"/></argument_list></call><operator pos:line="1500" pos:column="40">.<pos:position pos:line="1500" pos:column="41"/></operator><call><name pos:line="1500" pos:column="41">getNamespace<pos:position pos:line="1500" pos:column="53"/></name><argument_list pos:line="1500" pos:column="53">()<pos:position pos:line="1500" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1500" pos:column="56"/></decl_stmt>
        <if pos:line="1501" pos:column="9">if <condition pos:line="1501" pos:column="12">(<expr><name pos:line="1501" pos:column="13">ns<pos:position pos:line="1501" pos:column="15"/></name> <operator pos:line="1501" pos:column="16">==<pos:position pos:line="1501" pos:column="18"/></operator> <call><name pos:line="1501" pos:column="19">getFirstSharedNamespace<pos:position pos:line="1501" pos:column="42"/></name><argument_list pos:line="1501" pos:column="42">(<argument><expr><name pos:line="1501" pos:column="43">ns1<pos:position pos:line="1501" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="1501" pos:column="48">ns2<pos:position pos:line="1501" pos:column="51"/></name></expr></argument>)<pos:position pos:line="1501" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="1501" pos:column="53"/></condition><then pos:line="1501" pos:column="53"> <block pos:line="1501" pos:column="54">{
            <return pos:line="1502" pos:column="13">return <expr><literal type="boolean" pos:line="1502" pos:column="20">true<pos:position pos:line="1502" pos:column="24"/></literal></expr>;<pos:position pos:line="1502" pos:column="25"/></return>
        }<pos:position pos:line="1503" pos:column="10"/></block></then></if>
        <return pos:line="1504" pos:column="9">return <expr><literal type="boolean" pos:line="1504" pos:column="16">false<pos:position pos:line="1504" pos:column="21"/></literal></expr>;<pos:position pos:line="1504" pos:column="22"/></return>
    }<pos:position pos:line="1505" pos:column="6"/></block></function>

    <function><specifier pos:line="1507" pos:column="5">private<pos:position pos:line="1507" pos:column="12"/></specifier> <type><name pos:line="1507" pos:column="13">boolean<pos:position pos:line="1507" pos:column="20"/></name></type> <name pos:line="1507" pos:column="21">isValidNamespace<pos:position pos:line="1507" pos:column="37"/></name><parameter_list pos:line="1507" pos:column="37">(<parameter><decl><type><name pos:line="1507" pos:column="38">MStructuralFeature<pos:position pos:line="1507" pos:column="56"/></name></type> <name pos:line="1507" pos:column="57">struc<pos:position pos:line="1507" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1507" pos:column="64">MNamespace<pos:position pos:line="1507" pos:column="74"/></name></type> <name pos:line="1507" pos:column="75">ns<pos:position pos:line="1507" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="1507" pos:column="78"/></parameter_list> <block pos:line="1507" pos:column="79">{
        <if pos:line="1508" pos:column="9">if <condition pos:line="1508" pos:column="12">(<expr><call><name><name pos:line="1508" pos:column="13">struc<pos:position pos:line="1508" pos:column="18"/></name><operator pos:line="1508" pos:column="18">.<pos:position pos:line="1508" pos:column="19"/></operator><name pos:line="1508" pos:column="19">getType<pos:position pos:line="1508" pos:column="26"/></name></name><argument_list pos:line="1508" pos:column="26">()<pos:position pos:line="1508" pos:column="28"/></argument_list></call> <operator pos:line="1508" pos:column="29">==<pos:position pos:line="1508" pos:column="31"/></operator> <literal type="null" pos:line="1508" pos:column="32">null<pos:position pos:line="1508" pos:column="36"/></literal> <operator pos:line="1508" pos:column="37">||<pos:position pos:line="1508" pos:column="39"/></operator> <call><name><name pos:line="1508" pos:column="40">struc<pos:position pos:line="1508" pos:column="45"/></name><operator pos:line="1508" pos:column="45">.<pos:position pos:line="1508" pos:column="46"/></operator><name pos:line="1508" pos:column="46">getOwner<pos:position pos:line="1508" pos:column="54"/></name></name><argument_list pos:line="1508" pos:column="54">()<pos:position pos:line="1508" pos:column="56"/></argument_list></call> <operator pos:line="1508" pos:column="57">==<pos:position pos:line="1508" pos:column="59"/></operator> <literal type="null" pos:line="1508" pos:column="60">null<pos:position pos:line="1508" pos:column="64"/></literal></expr>)<pos:position pos:line="1508" pos:column="65"/></condition><then pos:line="1508" pos:column="65"> <block pos:line="1508" pos:column="66">{
            <return pos:line="1509" pos:column="13">return <expr><literal type="boolean" pos:line="1509" pos:column="20">true<pos:position pos:line="1509" pos:column="24"/></literal></expr>;<pos:position pos:line="1509" pos:column="25"/></return>
        }<pos:position pos:line="1510" pos:column="10"/></block></then></if>
        <return pos:line="1511" pos:column="9">return <expr><call><name><name pos:line="1511" pos:column="16">struc<pos:position pos:line="1511" pos:column="21"/></name><operator pos:line="1511" pos:column="21">.<pos:position pos:line="1511" pos:column="22"/></operator><name pos:line="1511" pos:column="22">getOwner<pos:position pos:line="1511" pos:column="30"/></name></name><argument_list pos:line="1511" pos:column="30">()<pos:position pos:line="1511" pos:column="32"/></argument_list></call><operator pos:line="1511" pos:column="32">.<pos:position pos:line="1511" pos:column="33"/></operator><call><name pos:line="1511" pos:column="33">getNamespace<pos:position pos:line="1511" pos:column="45"/></name><argument_list pos:line="1511" pos:column="45">()<pos:position pos:line="1511" pos:column="47"/></argument_list></call>
	    <operator pos:line="1512" pos:column="13">.<pos:position pos:line="1512" pos:column="14"/></operator><call><name pos:line="1512" pos:column="14">getOwnedElements<pos:position pos:line="1512" pos:column="30"/></name><argument_list pos:line="1512" pos:column="30">()<pos:position pos:line="1512" pos:column="32"/></argument_list></call><operator pos:line="1512" pos:column="32">.<pos:position pos:line="1512" pos:column="33"/></operator><call><name pos:line="1512" pos:column="33">contains<pos:position pos:line="1512" pos:column="41"/></name><argument_list pos:line="1512" pos:column="41">(<argument><expr><call><name><name pos:line="1512" pos:column="42">struc<pos:position pos:line="1512" pos:column="47"/></name><operator pos:line="1512" pos:column="47">.<pos:position pos:line="1512" pos:column="48"/></operator><name pos:line="1512" pos:column="48">getType<pos:position pos:line="1512" pos:column="55"/></name></name><argument_list pos:line="1512" pos:column="55">()<pos:position pos:line="1512" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="1512" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="1512" pos:column="59"/></return>
    }<pos:position pos:line="1513" pos:column="6"/></block></function>

    <function><specifier pos:line="1515" pos:column="5">private<pos:position pos:line="1515" pos:column="12"/></specifier> <type><name pos:line="1515" pos:column="13">boolean<pos:position pos:line="1515" pos:column="20"/></name></type> <name pos:line="1515" pos:column="21">isValidNamespace<pos:position pos:line="1515" pos:column="37"/></name><parameter_list pos:line="1515" pos:column="37">(<parameter><decl><type><name pos:line="1515" pos:column="38">MAssociation<pos:position pos:line="1515" pos:column="50"/></name></type> <name pos:line="1515" pos:column="51">assoc<pos:position pos:line="1515" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1515" pos:column="58">MNamespace<pos:position pos:line="1515" pos:column="68"/></name></type> <name pos:line="1515" pos:column="69">ns<pos:position pos:line="1515" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="1515" pos:column="72"/></parameter_list> <block pos:line="1515" pos:column="73">{
        <decl_stmt><decl><type><name pos:line="1516" pos:column="9">Iterator<pos:position pos:line="1516" pos:column="17"/></name></type> <name pos:line="1516" pos:column="18">it<pos:position pos:line="1516" pos:column="20"/></name> <init pos:line="1516" pos:column="21">= <expr><call><name><name pos:line="1516" pos:column="23">assoc<pos:position pos:line="1516" pos:column="28"/></name><operator pos:line="1516" pos:column="28">.<pos:position pos:line="1516" pos:column="29"/></operator><name pos:line="1516" pos:column="29">getConnections<pos:position pos:line="1516" pos:column="43"/></name></name><argument_list pos:line="1516" pos:column="43">()<pos:position pos:line="1516" pos:column="45"/></argument_list></call><operator pos:line="1516" pos:column="45">.<pos:position pos:line="1516" pos:column="46"/></operator><call><name pos:line="1516" pos:column="46">iterator<pos:position pos:line="1516" pos:column="54"/></name><argument_list pos:line="1516" pos:column="54">()<pos:position pos:line="1516" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1516" pos:column="57"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="1517" pos:column="9">List<pos:position pos:line="1517" pos:column="13"/></name></type> <name pos:line="1517" pos:column="14">namespaces<pos:position pos:line="1517" pos:column="24"/></name> <init pos:line="1517" pos:column="25">= <expr><operator pos:line="1517" pos:column="27">new<pos:position pos:line="1517" pos:column="30"/></operator> <call><name pos:line="1517" pos:column="31">ArrayList<pos:position pos:line="1517" pos:column="40"/></name><argument_list pos:line="1517" pos:column="40">()<pos:position pos:line="1517" pos:column="42"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1517" pos:column="43"/></decl_stmt>
        <while pos:line="1518" pos:column="9">while <condition pos:line="1518" pos:column="15">(<expr><call><name><name pos:line="1518" pos:column="16">it<pos:position pos:line="1518" pos:column="18"/></name><operator pos:line="1518" pos:column="18">.<pos:position pos:line="1518" pos:column="19"/></operator><name pos:line="1518" pos:column="19">hasNext<pos:position pos:line="1518" pos:column="26"/></name></name><argument_list pos:line="1518" pos:column="26">()<pos:position pos:line="1518" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="1518" pos:column="29"/></condition> <block pos:line="1518" pos:column="30">{
            <decl_stmt><decl><type><name pos:line="1519" pos:column="13">MAssociationEnd<pos:position pos:line="1519" pos:column="28"/></name></type> <name pos:line="1519" pos:column="29">end<pos:position pos:line="1519" pos:column="32"/></name> <init pos:line="1519" pos:column="33">= <expr><operator pos:line="1519" pos:column="35">(<pos:position pos:line="1519" pos:column="36"/></operator><name pos:line="1519" pos:column="36">MAssociationEnd<pos:position pos:line="1519" pos:column="51"/></name><operator pos:line="1519" pos:column="51">)<pos:position pos:line="1519" pos:column="52"/></operator> <call><name><name pos:line="1519" pos:column="53">it<pos:position pos:line="1519" pos:column="55"/></name><operator pos:line="1519" pos:column="55">.<pos:position pos:line="1519" pos:column="56"/></operator><name pos:line="1519" pos:column="56">next<pos:position pos:line="1519" pos:column="60"/></name></name><argument_list pos:line="1519" pos:column="60">()<pos:position pos:line="1519" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1519" pos:column="63"/></decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="1520" pos:column="13">namespaces<pos:position pos:line="1520" pos:column="23"/></name><operator pos:line="1520" pos:column="23">.<pos:position pos:line="1520" pos:column="24"/></operator><name pos:line="1520" pos:column="24">add<pos:position pos:line="1520" pos:column="27"/></name></name><argument_list pos:line="1520" pos:column="27">(<argument><expr><call><name><name pos:line="1520" pos:column="28">end<pos:position pos:line="1520" pos:column="31"/></name><operator pos:line="1520" pos:column="31">.<pos:position pos:line="1520" pos:column="32"/></operator><name pos:line="1520" pos:column="32">getType<pos:position pos:line="1520" pos:column="39"/></name></name><argument_list pos:line="1520" pos:column="39">()<pos:position pos:line="1520" pos:column="41"/></argument_list></call><operator pos:line="1520" pos:column="41">.<pos:position pos:line="1520" pos:column="42"/></operator><call><name pos:line="1520" pos:column="42">getNamespace<pos:position pos:line="1520" pos:column="54"/></name><argument_list pos:line="1520" pos:column="54">()<pos:position pos:line="1520" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="1520" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="1520" pos:column="58"/></expr_stmt>
        }<pos:position pos:line="1521" pos:column="10"/></block></while>
        <expr_stmt><expr><name pos:line="1522" pos:column="9">it<pos:position pos:line="1522" pos:column="11"/></name> <operator pos:line="1522" pos:column="12">=<pos:position pos:line="1522" pos:column="13"/></operator> <call><name><name pos:line="1522" pos:column="14">namespaces<pos:position pos:line="1522" pos:column="24"/></name><operator pos:line="1522" pos:column="24">.<pos:position pos:line="1522" pos:column="25"/></operator><name pos:line="1522" pos:column="25">iterator<pos:position pos:line="1522" pos:column="33"/></name></name><argument_list pos:line="1522" pos:column="33">()<pos:position pos:line="1522" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="1522" pos:column="36"/></expr_stmt>
        <while pos:line="1523" pos:column="9">while <condition pos:line="1523" pos:column="15">(<expr><call><name><name pos:line="1523" pos:column="16">it<pos:position pos:line="1523" pos:column="18"/></name><operator pos:line="1523" pos:column="18">.<pos:position pos:line="1523" pos:column="19"/></operator><name pos:line="1523" pos:column="19">hasNext<pos:position pos:line="1523" pos:column="26"/></name></name><argument_list pos:line="1523" pos:column="26">()<pos:position pos:line="1523" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="1523" pos:column="29"/></condition> <block pos:line="1523" pos:column="30">{
            <decl_stmt><decl><type><name pos:line="1524" pos:column="13">MNamespace<pos:position pos:line="1524" pos:column="23"/></name></type> <name pos:line="1524" pos:column="24">ns1<pos:position pos:line="1524" pos:column="27"/></name> <init pos:line="1524" pos:column="28">= <expr><operator pos:line="1524" pos:column="30">(<pos:position pos:line="1524" pos:column="31"/></operator><name pos:line="1524" pos:column="31">MNamespace<pos:position pos:line="1524" pos:column="41"/></name><operator pos:line="1524" pos:column="41">)<pos:position pos:line="1524" pos:column="42"/></operator> <call><name><name pos:line="1524" pos:column="43">it<pos:position pos:line="1524" pos:column="45"/></name><operator pos:line="1524" pos:column="45">.<pos:position pos:line="1524" pos:column="46"/></operator><name pos:line="1524" pos:column="46">next<pos:position pos:line="1524" pos:column="50"/></name></name><argument_list pos:line="1524" pos:column="50">()<pos:position pos:line="1524" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1524" pos:column="53"/></decl_stmt>
            <if pos:line="1525" pos:column="13">if <condition pos:line="1525" pos:column="16">(<expr><call><name><name pos:line="1525" pos:column="17">it<pos:position pos:line="1525" pos:column="19"/></name><operator pos:line="1525" pos:column="19">.<pos:position pos:line="1525" pos:column="20"/></operator><name pos:line="1525" pos:column="20">hasNext<pos:position pos:line="1525" pos:column="27"/></name></name><argument_list pos:line="1525" pos:column="27">()<pos:position pos:line="1525" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="1525" pos:column="30"/></condition><then pos:line="1525" pos:column="30"> <block pos:line="1525" pos:column="31">{
                <decl_stmt><decl><type><name pos:line="1526" pos:column="17">MNamespace<pos:position pos:line="1526" pos:column="27"/></name></type> <name pos:line="1526" pos:column="28">ns2<pos:position pos:line="1526" pos:column="31"/></name> <init pos:line="1526" pos:column="32">= <expr><operator pos:line="1526" pos:column="34">(<pos:position pos:line="1526" pos:column="35"/></operator><name pos:line="1526" pos:column="35">MNamespace<pos:position pos:line="1526" pos:column="45"/></name><operator pos:line="1526" pos:column="45">)<pos:position pos:line="1526" pos:column="46"/></operator> <call><name><name pos:line="1526" pos:column="47">it<pos:position pos:line="1526" pos:column="49"/></name><operator pos:line="1526" pos:column="49">.<pos:position pos:line="1526" pos:column="50"/></operator><name pos:line="1526" pos:column="50">next<pos:position pos:line="1526" pos:column="54"/></name></name><argument_list pos:line="1526" pos:column="54">()<pos:position pos:line="1526" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1526" pos:column="57"/></decl_stmt>
                <comment type="line" pos:line="1527" pos:column="17">// TODO: this contains a small error (ns can be part</comment>
                <comment type="line" pos:line="1528" pos:column="17">// of hierarchy of namespaces, that's not taken into</comment>
                <comment type="line" pos:line="1529" pos:column="17">// account)</comment>
                <if pos:line="1530" pos:column="17">if <condition pos:line="1530" pos:column="20">(<expr><name pos:line="1530" pos:column="21">ns<pos:position pos:line="1530" pos:column="23"/></name> <operator pos:line="1530" pos:column="24">==<pos:position pos:line="1530" pos:column="26"/></operator> <call><name pos:line="1530" pos:column="27">getFirstSharedNamespace<pos:position pos:line="1530" pos:column="50"/></name><argument_list pos:line="1530" pos:column="50">(<argument><expr><name pos:line="1530" pos:column="51">ns1<pos:position pos:line="1530" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="1530" pos:column="56">ns2<pos:position pos:line="1530" pos:column="59"/></name></expr></argument>)<pos:position pos:line="1530" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="1530" pos:column="61"/></condition><then pos:line="1530" pos:column="61"> <block pos:line="1530" pos:column="62">{
                    <return pos:line="1531" pos:column="21">return <expr><literal type="boolean" pos:line="1531" pos:column="28">true<pos:position pos:line="1531" pos:column="32"/></literal></expr>;<pos:position pos:line="1531" pos:column="33"/></return>
                }<pos:position pos:line="1532" pos:column="18"/></block></then></if>
            }<pos:position pos:line="1533" pos:column="14"/></block></then></if>
        }<pos:position pos:line="1534" pos:column="10"/></block></while>
        <return pos:line="1535" pos:column="9">return <expr><literal type="boolean" pos:line="1535" pos:column="16">false<pos:position pos:line="1535" pos:column="21"/></literal></expr>;<pos:position pos:line="1535" pos:column="22"/></return>
    }<pos:position pos:line="1536" pos:column="6"/></block></function>

    <function><specifier pos:line="1538" pos:column="5">private<pos:position pos:line="1538" pos:column="12"/></specifier> <type><name pos:line="1538" pos:column="13">boolean<pos:position pos:line="1538" pos:column="20"/></name></type> <name pos:line="1538" pos:column="21">isValidNamespace<pos:position pos:line="1538" pos:column="37"/></name><parameter_list pos:line="1538" pos:column="37">(
				     <parameter><decl><type><name pos:line="1539" pos:column="38">MGeneralizableElement<pos:position pos:line="1539" pos:column="59"/></name></type> <name pos:line="1539" pos:column="60">gen<pos:position pos:line="1539" pos:column="63"/></name></decl></parameter>,
				     <parameter><decl><type><name pos:line="1540" pos:column="38">MNamespace<pos:position pos:line="1540" pos:column="48"/></name></type> <name pos:line="1540" pos:column="49">ns<pos:position pos:line="1540" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1540" pos:column="52"/></parameter_list> <block pos:line="1540" pos:column="53">{
        <decl_stmt><decl><type><name pos:line="1541" pos:column="9">Iterator<pos:position pos:line="1541" pos:column="17"/></name></type> <name pos:line="1541" pos:column="18">it<pos:position pos:line="1541" pos:column="20"/></name> <init pos:line="1541" pos:column="21">= <expr><call><name><name pos:line="1541" pos:column="23">gen<pos:position pos:line="1541" pos:column="26"/></name><operator pos:line="1541" pos:column="26">.<pos:position pos:line="1541" pos:column="27"/></operator><name pos:line="1541" pos:column="27">getParents<pos:position pos:line="1541" pos:column="37"/></name></name><argument_list pos:line="1541" pos:column="37">()<pos:position pos:line="1541" pos:column="39"/></argument_list></call><operator pos:line="1541" pos:column="39">.<pos:position pos:line="1541" pos:column="40"/></operator><call><name pos:line="1541" pos:column="40">iterator<pos:position pos:line="1541" pos:column="48"/></name><argument_list pos:line="1541" pos:column="48">()<pos:position pos:line="1541" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1541" pos:column="51"/></decl_stmt>
        <while pos:line="1542" pos:column="9">while <condition pos:line="1542" pos:column="15">(<expr><call><name><name pos:line="1542" pos:column="16">it<pos:position pos:line="1542" pos:column="18"/></name><operator pos:line="1542" pos:column="18">.<pos:position pos:line="1542" pos:column="19"/></operator><name pos:line="1542" pos:column="19">hasNext<pos:position pos:line="1542" pos:column="26"/></name></name><argument_list pos:line="1542" pos:column="26">()<pos:position pos:line="1542" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="1542" pos:column="29"/></condition> <block pos:line="1542" pos:column="30">{
            <decl_stmt><decl><type><name pos:line="1543" pos:column="13">MGeneralizableElement<pos:position pos:line="1543" pos:column="34"/></name></type> <name pos:line="1543" pos:column="35">gen2<pos:position pos:line="1543" pos:column="39"/></name> <init pos:line="1543" pos:column="40">= <expr><operator pos:line="1543" pos:column="42">(<pos:position pos:line="1543" pos:column="43"/></operator><name pos:line="1543" pos:column="43">MGeneralizableElement<pos:position pos:line="1543" pos:column="64"/></name><operator pos:line="1543" pos:column="64">)<pos:position pos:line="1543" pos:column="65"/></operator> <call><name><name pos:line="1543" pos:column="66">it<pos:position pos:line="1543" pos:column="68"/></name><operator pos:line="1543" pos:column="68">.<pos:position pos:line="1543" pos:column="69"/></operator><name pos:line="1543" pos:column="69">next<pos:position pos:line="1543" pos:column="73"/></name></name><argument_list pos:line="1543" pos:column="73">()<pos:position pos:line="1543" pos:column="75"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1543" pos:column="76"/></decl_stmt>
            <if pos:line="1544" pos:column="13">if <condition pos:line="1544" pos:column="16">(<expr><operator pos:line="1544" pos:column="17">!<pos:position pos:line="1544" pos:column="18"/></operator><call><name><name pos:line="1544" pos:column="18">ns<pos:position pos:line="1544" pos:column="20"/></name><operator pos:line="1544" pos:column="20">.<pos:position pos:line="1544" pos:column="21"/></operator><name pos:line="1544" pos:column="21">getOwnedElements<pos:position pos:line="1544" pos:column="37"/></name></name><argument_list pos:line="1544" pos:column="37">()<pos:position pos:line="1544" pos:column="39"/></argument_list></call><operator pos:line="1544" pos:column="39">.<pos:position pos:line="1544" pos:column="40"/></operator><call><name pos:line="1544" pos:column="40">contains<pos:position pos:line="1544" pos:column="48"/></name><argument_list pos:line="1544" pos:column="48">(<argument><expr><name pos:line="1544" pos:column="49">gen2<pos:position pos:line="1544" pos:column="53"/></name></expr></argument>)<pos:position pos:line="1544" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="1544" pos:column="55"/></condition><then pos:line="1544" pos:column="55"> <block pos:line="1544" pos:column="56">{
                <return pos:line="1545" pos:column="17">return <expr><literal type="boolean" pos:line="1545" pos:column="24">false<pos:position pos:line="1545" pos:column="29"/></literal></expr>;<pos:position pos:line="1545" pos:column="30"/></return>
            }<pos:position pos:line="1546" pos:column="14"/></block></then></if>
        }<pos:position pos:line="1547" pos:column="10"/></block></while>
        <return pos:line="1548" pos:column="9">return <expr><literal type="boolean" pos:line="1548" pos:column="16">true<pos:position pos:line="1548" pos:column="20"/></literal></expr>;<pos:position pos:line="1548" pos:column="21"/></return>
    }<pos:position pos:line="1549" pos:column="6"/></block></function>
    <comment type="block" format="javadoc" pos:line="1550" pos:column="5">/**
     * Gets the first namespace two namespaces share. That is: it
     * returns the first namespace that owns the given namespaces
     * itself or some owner of the given namespaces.&lt;p&gt;
     *
     * @param ns1 is the first name space
     * @param ns2 is the second name space
     * @return MNamespace
     */</comment>
    <function><specifier pos:line="1559" pos:column="5">public<pos:position pos:line="1559" pos:column="11"/></specifier> <type><name pos:line="1559" pos:column="12">Object<pos:position pos:line="1559" pos:column="18"/></name></type> <name pos:line="1559" pos:column="19">getFirstSharedNamespace<pos:position pos:line="1559" pos:column="42"/></name><parameter_list pos:line="1559" pos:column="42">(<parameter><decl><type><name pos:line="1559" pos:column="43">Object<pos:position pos:line="1559" pos:column="49"/></name></type> <name pos:line="1559" pos:column="50">ns1<pos:position pos:line="1559" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1559" pos:column="55">Object<pos:position pos:line="1559" pos:column="61"/></name></type> <name pos:line="1559" pos:column="62">ns2<pos:position pos:line="1559" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1559" pos:column="66"/></parameter_list> <block pos:line="1559" pos:column="67">{
        <if pos:line="1560" pos:column="9">if <condition pos:line="1560" pos:column="12">(<expr><name pos:line="1560" pos:column="13">ns1<pos:position pos:line="1560" pos:column="16"/></name> <operator pos:line="1560" pos:column="17">==<pos:position pos:line="1560" pos:column="19"/></operator> <literal type="null" pos:line="1560" pos:column="20">null<pos:position pos:line="1560" pos:column="24"/></literal> <operator pos:line="1560" pos:column="25">||<pos:position pos:line="1560" pos:column="27"/></operator> <name pos:line="1560" pos:column="28">ns2<pos:position pos:line="1560" pos:column="31"/></name> <operator pos:line="1560" pos:column="32">==<pos:position pos:line="1560" pos:column="34"/></operator> <literal type="null" pos:line="1560" pos:column="35">null<pos:position pos:line="1560" pos:column="39"/></literal></expr>)<pos:position pos:line="1560" pos:column="40"/></condition><then pos:line="1560" pos:column="40"> <block pos:line="1560" pos:column="41">{
            <return pos:line="1561" pos:column="13">return <expr><literal type="null" pos:line="1561" pos:column="20">null<pos:position pos:line="1561" pos:column="24"/></literal></expr>;<pos:position pos:line="1561" pos:column="25"/></return>
        }<pos:position pos:line="1562" pos:column="10"/></block></then></if>
        <if pos:line="1563" pos:column="9">if <condition pos:line="1563" pos:column="12">(<expr><name pos:line="1563" pos:column="13">ns1<pos:position pos:line="1563" pos:column="16"/></name> <operator pos:line="1563" pos:column="17">==<pos:position pos:line="1563" pos:column="19"/></operator> <name pos:line="1563" pos:column="20">ns2<pos:position pos:line="1563" pos:column="23"/></name></expr>)<pos:position pos:line="1563" pos:column="24"/></condition><then pos:line="1563" pos:column="24"> <block pos:line="1563" pos:column="25">{
            <return pos:line="1564" pos:column="13">return <expr><name pos:line="1564" pos:column="20">ns1<pos:position pos:line="1564" pos:column="23"/></name></expr>;<pos:position pos:line="1564" pos:column="24"/></return>
        }<pos:position pos:line="1565" pos:column="10"/></block></then></if>
        <if pos:line="1566" pos:column="9">if <condition pos:line="1566" pos:column="12">(<expr><operator pos:line="1566" pos:column="13">!<pos:position pos:line="1566" pos:column="14"/></operator><operator pos:line="1566" pos:column="14">(<pos:position pos:line="1566" pos:column="15"/></operator><name pos:line="1566" pos:column="15">ns1<pos:position pos:line="1566" pos:column="18"/></name> <operator pos:line="1566" pos:column="19">instanceof<pos:position pos:line="1566" pos:column="29"/></operator> <name pos:line="1566" pos:column="30">MNamespace<pos:position pos:line="1566" pos:column="40"/></name><operator pos:line="1566" pos:column="40">)<pos:position pos:line="1566" pos:column="41"/></operator></expr>)<pos:position pos:line="1566" pos:column="42"/></condition><then pos:line="1566" pos:column="42"> <block pos:line="1566" pos:column="43">{
            <throw pos:line="1567" pos:column="13">throw <expr><operator pos:line="1567" pos:column="19">new<pos:position pos:line="1567" pos:column="22"/></operator> <call><name pos:line="1567" pos:column="23">IllegalArgumentException<pos:position pos:line="1567" pos:column="47"/></name><argument_list pos:line="1567" pos:column="47">()<pos:position pos:line="1567" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="1567" pos:column="50"/></throw>
        }<pos:position pos:line="1568" pos:column="10"/></block></then></if>
        <if pos:line="1569" pos:column="9">if <condition pos:line="1569" pos:column="12">(<expr><operator pos:line="1569" pos:column="13">!<pos:position pos:line="1569" pos:column="14"/></operator><operator pos:line="1569" pos:column="14">(<pos:position pos:line="1569" pos:column="15"/></operator><name pos:line="1569" pos:column="15">ns2<pos:position pos:line="1569" pos:column="18"/></name> <operator pos:line="1569" pos:column="19">instanceof<pos:position pos:line="1569" pos:column="29"/></operator> <name pos:line="1569" pos:column="30">MNamespace<pos:position pos:line="1569" pos:column="40"/></name><operator pos:line="1569" pos:column="40">)<pos:position pos:line="1569" pos:column="41"/></operator></expr>)<pos:position pos:line="1569" pos:column="42"/></condition><then pos:line="1569" pos:column="42"> <block pos:line="1569" pos:column="43">{
            <throw pos:line="1570" pos:column="13">throw <expr><operator pos:line="1570" pos:column="19">new<pos:position pos:line="1570" pos:column="22"/></operator> <call><name pos:line="1570" pos:column="23">IllegalArgumentException<pos:position pos:line="1570" pos:column="47"/></name><argument_list pos:line="1570" pos:column="47">()<pos:position pos:line="1570" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="1570" pos:column="50"/></throw>
        }<pos:position pos:line="1571" pos:column="10"/></block></then></if>

        <decl_stmt><decl><type><name pos:line="1573" pos:column="9">boolean<pos:position pos:line="1573" pos:column="16"/></name></type> <name pos:line="1573" pos:column="17">ns1Owner<pos:position pos:line="1573" pos:column="25"/></name> <init pos:line="1573" pos:column="26">=
            <expr><call><name><name pos:line="1574" pos:column="13">nsmodel<pos:position pos:line="1574" pos:column="20"/></name><operator pos:line="1574" pos:column="20">.<pos:position pos:line="1574" pos:column="21"/></operator><name pos:line="1574" pos:column="21">getModelManagementHelper<pos:position pos:line="1574" pos:column="45"/></name></name><argument_list pos:line="1574" pos:column="45">()<pos:position pos:line="1574" pos:column="47"/></argument_list></call>
	        <operator pos:line="1575" pos:column="17">.<pos:position pos:line="1575" pos:column="18"/></operator><call><name pos:line="1575" pos:column="18">getAllNamespaces<pos:position pos:line="1575" pos:column="34"/></name><argument_list pos:line="1575" pos:column="34">(<argument><expr><name pos:line="1575" pos:column="35">ns1<pos:position pos:line="1575" pos:column="38"/></name></expr></argument>)<pos:position pos:line="1575" pos:column="39"/></argument_list></call><operator pos:line="1575" pos:column="39">.<pos:position pos:line="1575" pos:column="40"/></operator><call><name pos:line="1575" pos:column="40">contains<pos:position pos:line="1575" pos:column="48"/></name><argument_list pos:line="1575" pos:column="48">(<argument><expr><name pos:line="1575" pos:column="49">ns2<pos:position pos:line="1575" pos:column="52"/></name></expr></argument>)<pos:position pos:line="1575" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1575" pos:column="54"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="1576" pos:column="9">boolean<pos:position pos:line="1576" pos:column="16"/></name></type> <name pos:line="1576" pos:column="17">ns2Owner<pos:position pos:line="1576" pos:column="25"/></name> <init pos:line="1576" pos:column="26">=
            <expr><call><name><name pos:line="1577" pos:column="13">nsmodel<pos:position pos:line="1577" pos:column="20"/></name><operator pos:line="1577" pos:column="20">.<pos:position pos:line="1577" pos:column="21"/></operator><name pos:line="1577" pos:column="21">getModelManagementHelper<pos:position pos:line="1577" pos:column="45"/></name></name><argument_list pos:line="1577" pos:column="45">()<pos:position pos:line="1577" pos:column="47"/></argument_list></call>
	        <operator pos:line="1578" pos:column="17">.<pos:position pos:line="1578" pos:column="18"/></operator><call><name pos:line="1578" pos:column="18">getAllNamespaces<pos:position pos:line="1578" pos:column="34"/></name><argument_list pos:line="1578" pos:column="34">(<argument><expr><name pos:line="1578" pos:column="35">ns2<pos:position pos:line="1578" pos:column="38"/></name></expr></argument>)<pos:position pos:line="1578" pos:column="39"/></argument_list></call><operator pos:line="1578" pos:column="39">.<pos:position pos:line="1578" pos:column="40"/></operator><call><name pos:line="1578" pos:column="40">contains<pos:position pos:line="1578" pos:column="48"/></name><argument_list pos:line="1578" pos:column="48">(<argument><expr><name pos:line="1578" pos:column="49">ns1<pos:position pos:line="1578" pos:column="52"/></name></expr></argument>)<pos:position pos:line="1578" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1578" pos:column="54"/></decl_stmt>
        <if pos:line="1579" pos:column="9">if <condition pos:line="1579" pos:column="12">(<expr><name pos:line="1579" pos:column="13">ns1Owner<pos:position pos:line="1579" pos:column="21"/></name></expr>)<pos:position pos:line="1579" pos:column="22"/></condition><then pos:line="1579" pos:column="22"> <block pos:line="1579" pos:column="23">{
            <return pos:line="1580" pos:column="13">return <expr><name pos:line="1580" pos:column="20">ns1<pos:position pos:line="1580" pos:column="23"/></name></expr>;<pos:position pos:line="1580" pos:column="24"/></return>
        }<pos:position pos:line="1581" pos:column="10"/></block></then></if>
        <if pos:line="1582" pos:column="9">if <condition pos:line="1582" pos:column="12">(<expr><name pos:line="1582" pos:column="13">ns2Owner<pos:position pos:line="1582" pos:column="21"/></name></expr>)<pos:position pos:line="1582" pos:column="22"/></condition><then pos:line="1582" pos:column="22"> <block pos:line="1582" pos:column="23">{
            <return pos:line="1583" pos:column="13">return <expr><name pos:line="1583" pos:column="20">ns2<pos:position pos:line="1583" pos:column="23"/></name></expr>;<pos:position pos:line="1583" pos:column="24"/></return>
        }<pos:position pos:line="1584" pos:column="10"/></block></then></if>
        <return pos:line="1585" pos:column="9">return <expr><call><name pos:line="1585" pos:column="16">getFirstSharedNamespace<pos:position pos:line="1585" pos:column="39"/></name><argument_list pos:line="1585" pos:column="39">(
                <argument><expr><operator pos:line="1586" pos:column="17">(<pos:position pos:line="1586" pos:column="18"/></operator><operator pos:line="1586" pos:column="18">(<pos:position pos:line="1586" pos:column="19"/></operator><name pos:line="1586" pos:column="19">MModelElement<pos:position pos:line="1586" pos:column="32"/></name><operator pos:line="1586" pos:column="32">)<pos:position pos:line="1586" pos:column="33"/></operator> <name pos:line="1586" pos:column="34">ns1<pos:position pos:line="1586" pos:column="37"/></name><operator pos:line="1586" pos:column="37">)<pos:position pos:line="1586" pos:column="38"/></operator><operator pos:line="1586" pos:column="38">.<pos:position pos:line="1586" pos:column="39"/></operator><call><name pos:line="1586" pos:column="39">getNamespace<pos:position pos:line="1586" pos:column="51"/></name><argument_list pos:line="1586" pos:column="51">()<pos:position pos:line="1586" pos:column="53"/></argument_list></call></expr></argument>,
                <argument><expr><operator pos:line="1587" pos:column="17">(<pos:position pos:line="1587" pos:column="18"/></operator><operator pos:line="1587" pos:column="18">(<pos:position pos:line="1587" pos:column="19"/></operator><name pos:line="1587" pos:column="19">MModelElement<pos:position pos:line="1587" pos:column="32"/></name><operator pos:line="1587" pos:column="32">)<pos:position pos:line="1587" pos:column="33"/></operator> <name pos:line="1587" pos:column="34">ns2<pos:position pos:line="1587" pos:column="37"/></name><operator pos:line="1587" pos:column="37">)<pos:position pos:line="1587" pos:column="38"/></operator><operator pos:line="1587" pos:column="38">.<pos:position pos:line="1587" pos:column="39"/></operator><call><name pos:line="1587" pos:column="39">getNamespace<pos:position pos:line="1587" pos:column="51"/></name><argument_list pos:line="1587" pos:column="51">()<pos:position pos:line="1587" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="1587" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="1587" pos:column="55"/></return>
    }<pos:position pos:line="1588" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="1590" pos:column="5">/**
     * Returns all possible namespaces that may be selected by some given
     * modelelement. Which namespaces are allowed, is decided in the method
     * isValidNamespace.&lt;p&gt;
     *
     * @param modelElement is the model element
     * @param model the model to search
     * @return Collection
     */</comment>
    <function><specifier pos:line="1599" pos:column="5">public<pos:position pos:line="1599" pos:column="11"/></specifier> <type><name pos:line="1599" pos:column="12">Collection<pos:position pos:line="1599" pos:column="22"/></name></type> <name pos:line="1599" pos:column="23">getAllPossibleNamespaces<pos:position pos:line="1599" pos:column="47"/></name><parameter_list pos:line="1599" pos:column="47">(<parameter><decl><type><name pos:line="1599" pos:column="48">Object<pos:position pos:line="1599" pos:column="54"/></name></type> <name pos:line="1599" pos:column="55">modelElement<pos:position pos:line="1599" pos:column="67"/></name></decl></parameter>,
            <parameter><decl><type><name pos:line="1600" pos:column="13">Object<pos:position pos:line="1600" pos:column="19"/></name></type> <name pos:line="1600" pos:column="20">model<pos:position pos:line="1600" pos:column="25"/></name></decl></parameter>)<pos:position pos:line="1600" pos:column="26"/></parameter_list> <block pos:line="1600" pos:column="27">{
        <decl_stmt><decl><type><name pos:line="1601" pos:column="9">MModelElement<pos:position pos:line="1601" pos:column="22"/></name></type> <name pos:line="1601" pos:column="23">m<pos:position pos:line="1601" pos:column="24"/></name> <init pos:line="1601" pos:column="25">= <expr><operator pos:line="1601" pos:column="27">(<pos:position pos:line="1601" pos:column="28"/></operator><name pos:line="1601" pos:column="28">MModelElement<pos:position pos:line="1601" pos:column="41"/></name><operator pos:line="1601" pos:column="41">)<pos:position pos:line="1601" pos:column="42"/></operator> <name pos:line="1601" pos:column="43">modelElement<pos:position pos:line="1601" pos:column="55"/></name></expr></init></decl>;<pos:position pos:line="1601" pos:column="56"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="1602" pos:column="9">List<pos:position pos:line="1602" pos:column="13"/></name></type> <name pos:line="1602" pos:column="14">ret<pos:position pos:line="1602" pos:column="17"/></name> <init pos:line="1602" pos:column="18">= <expr><operator pos:line="1602" pos:column="20">new<pos:position pos:line="1602" pos:column="23"/></operator> <call><name pos:line="1602" pos:column="24">ArrayList<pos:position pos:line="1602" pos:column="33"/></name><argument_list pos:line="1602" pos:column="33">()<pos:position pos:line="1602" pos:column="35"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1602" pos:column="36"/></decl_stmt>
        <if pos:line="1603" pos:column="9">if <condition pos:line="1603" pos:column="12">(<expr><name pos:line="1603" pos:column="13">m<pos:position pos:line="1603" pos:column="14"/></name> <operator pos:line="1603" pos:column="15">==<pos:position pos:line="1603" pos:column="17"/></operator> <literal type="null" pos:line="1603" pos:column="18">null<pos:position pos:line="1603" pos:column="22"/></literal></expr>)<pos:position pos:line="1603" pos:column="23"/></condition><then pos:line="1603" pos:column="23"> <block pos:line="1603" pos:column="24">{
            <return pos:line="1604" pos:column="13">return <expr><name pos:line="1604" pos:column="20">ret<pos:position pos:line="1604" pos:column="23"/></name></expr>;<pos:position pos:line="1604" pos:column="24"/></return>
        }<pos:position pos:line="1605" pos:column="10"/></block></then></if>
        <if pos:line="1606" pos:column="9">if <condition pos:line="1606" pos:column="12">(<expr><call><name pos:line="1606" pos:column="13">isValidNamespace<pos:position pos:line="1606" pos:column="29"/></name><argument_list pos:line="1606" pos:column="29">(<argument><expr><name pos:line="1606" pos:column="30">m<pos:position pos:line="1606" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="1606" pos:column="33">model<pos:position pos:line="1606" pos:column="38"/></name></expr></argument>)<pos:position pos:line="1606" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="1606" pos:column="40"/></condition><then pos:line="1606" pos:column="40"> <block pos:line="1606" pos:column="41">{
            <expr_stmt><expr><call><name><name pos:line="1607" pos:column="13">ret<pos:position pos:line="1607" pos:column="16"/></name><operator pos:line="1607" pos:column="16">.<pos:position pos:line="1607" pos:column="17"/></operator><name pos:line="1607" pos:column="17">add<pos:position pos:line="1607" pos:column="20"/></name></name><argument_list pos:line="1607" pos:column="20">(<argument><expr><name pos:line="1607" pos:column="21">model<pos:position pos:line="1607" pos:column="26"/></name></expr></argument>)<pos:position pos:line="1607" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="1607" pos:column="28"/></expr_stmt>
        }<pos:position pos:line="1608" pos:column="10"/></block></then></if>
        <decl_stmt><decl><type><name pos:line="1609" pos:column="9">Iterator<pos:position pos:line="1609" pos:column="17"/></name></type> <name pos:line="1609" pos:column="18">it<pos:position pos:line="1609" pos:column="20"/></name> <init pos:line="1609" pos:column="21">=
            <expr><call><name><name pos:line="1610" pos:column="13">nsmodel<pos:position pos:line="1610" pos:column="20"/></name><operator pos:line="1610" pos:column="20">.<pos:position pos:line="1610" pos:column="21"/></operator><name pos:line="1610" pos:column="21">getModelManagementHelper<pos:position pos:line="1610" pos:column="45"/></name></name><argument_list pos:line="1610" pos:column="45">()<pos:position pos:line="1610" pos:column="47"/></argument_list></call>
	        <operator pos:line="1611" pos:column="17">.<pos:position pos:line="1611" pos:column="18"/></operator><call><name pos:line="1611" pos:column="18">getAllModelElementsOfKind<pos:position pos:line="1611" pos:column="43"/></name><argument_list pos:line="1611" pos:column="43">(<argument><expr><name pos:line="1611" pos:column="44">model<pos:position pos:line="1611" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="1611" pos:column="51">MNamespace<pos:position pos:line="1611" pos:column="61"/></name><operator pos:line="1611" pos:column="61">.<pos:position pos:line="1611" pos:column="62"/></operator><name pos:line="1611" pos:column="62">class<pos:position pos:line="1611" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="1611" pos:column="68"/></argument_list></call>
	            <operator pos:line="1612" pos:column="21">.<pos:position pos:line="1612" pos:column="22"/></operator><call><name pos:line="1612" pos:column="22">iterator<pos:position pos:line="1612" pos:column="30"/></name><argument_list pos:line="1612" pos:column="30">()<pos:position pos:line="1612" pos:column="32"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1612" pos:column="33"/></decl_stmt>
        <while pos:line="1613" pos:column="9">while <condition pos:line="1613" pos:column="15">(<expr><call><name><name pos:line="1613" pos:column="16">it<pos:position pos:line="1613" pos:column="18"/></name><operator pos:line="1613" pos:column="18">.<pos:position pos:line="1613" pos:column="19"/></operator><name pos:line="1613" pos:column="19">hasNext<pos:position pos:line="1613" pos:column="26"/></name></name><argument_list pos:line="1613" pos:column="26">()<pos:position pos:line="1613" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="1613" pos:column="29"/></condition> <block pos:line="1613" pos:column="30">{
            <decl_stmt><decl><type><name pos:line="1614" pos:column="13">MNamespace<pos:position pos:line="1614" pos:column="23"/></name></type> <name pos:line="1614" pos:column="24">ns<pos:position pos:line="1614" pos:column="26"/></name> <init pos:line="1614" pos:column="27">= <expr><operator pos:line="1614" pos:column="29">(<pos:position pos:line="1614" pos:column="30"/></operator><name pos:line="1614" pos:column="30">MNamespace<pos:position pos:line="1614" pos:column="40"/></name><operator pos:line="1614" pos:column="40">)<pos:position pos:line="1614" pos:column="41"/></operator> <call><name><name pos:line="1614" pos:column="42">it<pos:position pos:line="1614" pos:column="44"/></name><operator pos:line="1614" pos:column="44">.<pos:position pos:line="1614" pos:column="45"/></operator><name pos:line="1614" pos:column="45">next<pos:position pos:line="1614" pos:column="49"/></name></name><argument_list pos:line="1614" pos:column="49">()<pos:position pos:line="1614" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1614" pos:column="52"/></decl_stmt>
            <if pos:line="1615" pos:column="13">if <condition pos:line="1615" pos:column="16">(<expr><call><name pos:line="1615" pos:column="17">isValidNamespace<pos:position pos:line="1615" pos:column="33"/></name><argument_list pos:line="1615" pos:column="33">(<argument><expr><name pos:line="1615" pos:column="34">m<pos:position pos:line="1615" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="1615" pos:column="37">ns<pos:position pos:line="1615" pos:column="39"/></name></expr></argument>)<pos:position pos:line="1615" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="1615" pos:column="41"/></condition><then pos:line="1615" pos:column="41"> <block pos:line="1615" pos:column="42">{
                <expr_stmt><expr><call><name><name pos:line="1616" pos:column="17">ret<pos:position pos:line="1616" pos:column="20"/></name><operator pos:line="1616" pos:column="20">.<pos:position pos:line="1616" pos:column="21"/></operator><name pos:line="1616" pos:column="21">add<pos:position pos:line="1616" pos:column="24"/></name></name><argument_list pos:line="1616" pos:column="24">(<argument><expr><name pos:line="1616" pos:column="25">ns<pos:position pos:line="1616" pos:column="27"/></name></expr></argument>)<pos:position pos:line="1616" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="1616" pos:column="29"/></expr_stmt>
            }<pos:position pos:line="1617" pos:column="14"/></block></then></if>
        }<pos:position pos:line="1618" pos:column="10"/></block></while>
        <return pos:line="1619" pos:column="9">return <expr><name pos:line="1619" pos:column="16">ret<pos:position pos:line="1619" pos:column="19"/></name></expr>;<pos:position pos:line="1619" pos:column="20"/></return>
    }<pos:position pos:line="1620" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="1622" pos:column="5">/**
     * Returns all children from some given generalizableelement on
     * all levels (the complete tree excluding the generalizable
     * element itself).&lt;p&gt;
     *
     * @param o is the generalizable element
     * @return Collection
     * @throws IllegalStateException if there is a circular reference.
     */</comment>
    <comment type="line" pos:line="1631" pos:column="5">// TODO: Argument shall be typed to catch a lot of problems at</comment>
    <comment type="line" pos:line="1632" pos:column="5">//       compile time.</comment>
    <comment type="line" pos:line="1633" pos:column="5">// TODO: The exception shall be declared explicitly.</comment>
    <comment type="line" pos:line="1634" pos:column="5">// TODO: Use an exception that needs to be caugh so users of</comment>
    <comment type="line" pos:line="1635" pos:column="5">//       getChildren won't forget that they need to catch it.</comment>
    <function><specifier pos:line="1636" pos:column="5">public<pos:position pos:line="1636" pos:column="11"/></specifier> <type><name pos:line="1636" pos:column="12">Collection<pos:position pos:line="1636" pos:column="22"/></name></type> <name pos:line="1636" pos:column="23">getChildren<pos:position pos:line="1636" pos:column="34"/></name><parameter_list pos:line="1636" pos:column="34">(<parameter><decl><type><name pos:line="1636" pos:column="35">Object<pos:position pos:line="1636" pos:column="41"/></name></type> <name pos:line="1636" pos:column="42">o<pos:position pos:line="1636" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="1636" pos:column="44"/></parameter_list> <block pos:line="1636" pos:column="45">{
	    <decl_stmt><decl><type><name pos:line="1637" pos:column="13">Collection<pos:position pos:line="1637" pos:column="23"/></name></type> <name pos:line="1637" pos:column="24">col<pos:position pos:line="1637" pos:column="27"/></name> <init pos:line="1637" pos:column="28">= <expr><operator pos:line="1637" pos:column="30">new<pos:position pos:line="1637" pos:column="33"/></operator> <call><name pos:line="1637" pos:column="34">ArrayList<pos:position pos:line="1637" pos:column="43"/></name><argument_list pos:line="1637" pos:column="43">()<pos:position pos:line="1637" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1637" pos:column="46"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="1638" pos:column="17">Collection<pos:position pos:line="1638" pos:column="27"/></name></type> <name pos:line="1638" pos:column="28">generalizations<pos:position pos:line="1638" pos:column="43"/></name> <init pos:line="1638" pos:column="44">= <expr><operator pos:line="1638" pos:column="46">new<pos:position pos:line="1638" pos:column="49"/></operator> <call><name pos:line="1638" pos:column="50">ArrayList<pos:position pos:line="1638" pos:column="59"/></name><argument_list pos:line="1638" pos:column="59">()<pos:position pos:line="1638" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1638" pos:column="62"/></decl_stmt>
        <if pos:line="1639" pos:column="9">if <condition pos:line="1639" pos:column="12">(<expr><name pos:line="1639" pos:column="13">o<pos:position pos:line="1639" pos:column="14"/></name> <operator pos:line="1639" pos:column="15">instanceof<pos:position pos:line="1639" pos:column="25"/></operator> <name pos:line="1639" pos:column="26">MGeneralizableElement<pos:position pos:line="1639" pos:column="47"/></name></expr>)<pos:position pos:line="1639" pos:column="48"/></condition><then pos:line="1639" pos:column="48"> <block pos:line="1639" pos:column="49">{
            <decl_stmt><decl><type><name pos:line="1640" pos:column="13">Iterator<pos:position pos:line="1640" pos:column="21"/></name></type> <name pos:line="1640" pos:column="22">it<pos:position pos:line="1640" pos:column="24"/></name> <init pos:line="1640" pos:column="25">=
                <expr><operator pos:line="1641" pos:column="17">(<pos:position pos:line="1641" pos:column="18"/></operator><operator pos:line="1641" pos:column="18">(<pos:position pos:line="1641" pos:column="19"/></operator><name pos:line="1641" pos:column="19">MGeneralizableElement<pos:position pos:line="1641" pos:column="40"/></name><operator pos:line="1641" pos:column="40">)<pos:position pos:line="1641" pos:column="41"/></operator> <name pos:line="1641" pos:column="42">o<pos:position pos:line="1641" pos:column="43"/></name><operator pos:line="1641" pos:column="43">)<pos:position pos:line="1641" pos:column="44"/></operator><operator pos:line="1641" pos:column="44">.<pos:position pos:line="1641" pos:column="45"/></operator><call><name pos:line="1641" pos:column="45">getSpecializations<pos:position pos:line="1641" pos:column="63"/></name><argument_list pos:line="1641" pos:column="63">()<pos:position pos:line="1641" pos:column="65"/></argument_list></call><operator pos:line="1641" pos:column="65">.<pos:position pos:line="1641" pos:column="66"/></operator><call><name pos:line="1641" pos:column="66">iterator<pos:position pos:line="1641" pos:column="74"/></name><argument_list pos:line="1641" pos:column="74">()<pos:position pos:line="1641" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1641" pos:column="77"/></decl_stmt>
            <while pos:line="1642" pos:column="13">while <condition pos:line="1642" pos:column="19">(<expr><call><name><name pos:line="1642" pos:column="20">it<pos:position pos:line="1642" pos:column="22"/></name><operator pos:line="1642" pos:column="22">.<pos:position pos:line="1642" pos:column="23"/></operator><name pos:line="1642" pos:column="23">hasNext<pos:position pos:line="1642" pos:column="30"/></name></name><argument_list pos:line="1642" pos:column="30">()<pos:position pos:line="1642" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="1642" pos:column="33"/></condition> <block pos:line="1642" pos:column="34">{
                <expr_stmt><expr><call><name pos:line="1643" pos:column="17">getChildren<pos:position pos:line="1643" pos:column="28"/></name><argument_list pos:line="1643" pos:column="28">(<argument><expr><name pos:line="1643" pos:column="29">col<pos:position pos:line="1643" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="1643" pos:column="34">(<pos:position pos:line="1643" pos:column="35"/></operator><name pos:line="1643" pos:column="35">MGeneralization<pos:position pos:line="1643" pos:column="50"/></name><operator pos:line="1643" pos:column="50">)<pos:position pos:line="1643" pos:column="51"/></operator> <call><name><name pos:line="1643" pos:column="52">it<pos:position pos:line="1643" pos:column="54"/></name><operator pos:line="1643" pos:column="54">.<pos:position pos:line="1643" pos:column="55"/></operator><name pos:line="1643" pos:column="55">next<pos:position pos:line="1643" pos:column="59"/></name></name><argument_list pos:line="1643" pos:column="59">()<pos:position pos:line="1643" pos:column="61"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="1643" pos:column="63">generalizations<pos:position pos:line="1643" pos:column="78"/></name></expr></argument>)<pos:position pos:line="1643" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="1643" pos:column="80"/></expr_stmt>
            }<pos:position pos:line="1644" pos:column="14"/></block></while>
        }<pos:position pos:line="1645" pos:column="10"/></block></then></if>
        <return pos:line="1646" pos:column="9">return <expr><name pos:line="1646" pos:column="16">col<pos:position pos:line="1646" pos:column="19"/></name></expr>;<pos:position pos:line="1646" pos:column="20"/></return>
    }<pos:position pos:line="1647" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="1649" pos:column="5">/**
     * Adds all children recursively to the Collection in the first argument.
     * The algorithm assumes that there is a cycle when a node has been visited twice
     * using already known generalizations.
     *
     * @param currentChildren collection to collect them in.
     * @param gen element whose children are added.
     * @param generalizations the list of already traversed generalizations.
     * @throws IllegalStateException if there is a circular reference.
     */</comment>
    <function><specifier pos:line="1659" pos:column="5">private<pos:position pos:line="1659" pos:column="12"/></specifier> <type><name pos:line="1659" pos:column="13">void<pos:position pos:line="1659" pos:column="17"/></name></type> <name pos:line="1659" pos:column="18">getChildren<pos:position pos:line="1659" pos:column="29"/></name><parameter_list pos:line="1659" pos:column="29">(<parameter><decl><type><name pos:line="1659" pos:column="30">Collection<pos:position pos:line="1659" pos:column="40"/></name></type> <name pos:line="1659" pos:column="41">currentChildren<pos:position pos:line="1659" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1659" pos:column="58">MGeneralization<pos:position pos:line="1659" pos:column="73"/></name></type> <name pos:line="1659" pos:column="74">gen<pos:position pos:line="1659" pos:column="77"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1659" pos:column="79">Collection<pos:position pos:line="1659" pos:column="89"/></name></type> <name pos:line="1659" pos:column="90">generalizations<pos:position pos:line="1659" pos:column="105"/></name></decl></parameter>)<pos:position pos:line="1659" pos:column="106"/></parameter_list> <block pos:line="1659" pos:column="107">{

	<decl_stmt><decl><type><name pos:line="1661" pos:column="9">MGeneralizableElement<pos:position pos:line="1661" pos:column="30"/></name></type> <name pos:line="1661" pos:column="31">child<pos:position pos:line="1661" pos:column="36"/></name> <init pos:line="1661" pos:column="37">= <expr><call><name><name pos:line="1661" pos:column="39">gen<pos:position pos:line="1661" pos:column="42"/></name><operator pos:line="1661" pos:column="42">.<pos:position pos:line="1661" pos:column="43"/></operator><name pos:line="1661" pos:column="43">getChild<pos:position pos:line="1661" pos:column="51"/></name></name><argument_list pos:line="1661" pos:column="51">()<pos:position pos:line="1661" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1661" pos:column="54"/></decl_stmt>
	<if pos:line="1662" pos:column="9">if <condition pos:line="1662" pos:column="12">(<expr><call><name><name pos:line="1662" pos:column="13">currentChildren<pos:position pos:line="1662" pos:column="28"/></name><operator pos:line="1662" pos:column="28">.<pos:position pos:line="1662" pos:column="29"/></operator><name pos:line="1662" pos:column="29">contains<pos:position pos:line="1662" pos:column="37"/></name></name><argument_list pos:line="1662" pos:column="37">(<argument><expr><name pos:line="1662" pos:column="38">child<pos:position pos:line="1662" pos:column="43"/></name></expr></argument>)<pos:position pos:line="1662" pos:column="44"/></argument_list></call> <operator pos:line="1662" pos:column="45">&amp;&amp;<pos:position pos:line="1662" pos:column="55"/></operator> <call><name><name pos:line="1662" pos:column="48">generalizations<pos:position pos:line="1662" pos:column="63"/></name><operator pos:line="1662" pos:column="63">.<pos:position pos:line="1662" pos:column="64"/></operator><name pos:line="1662" pos:column="64">contains<pos:position pos:line="1662" pos:column="72"/></name></name><argument_list pos:line="1662" pos:column="72">(<argument><expr><name pos:line="1662" pos:column="73">gen<pos:position pos:line="1662" pos:column="76"/></name></expr></argument>)<pos:position pos:line="1662" pos:column="77"/></argument_list></call></expr>)<pos:position pos:line="1662" pos:column="78"/></condition><then pos:line="1662" pos:column="78"> <block pos:line="1662" pos:column="79">{
			<throw pos:line="1663" pos:column="25">throw <expr><operator pos:line="1663" pos:column="31">new<pos:position pos:line="1663" pos:column="34"/></operator> <call><name pos:line="1663" pos:column="35">IllegalStateException<pos:position pos:line="1663" pos:column="56"/></name><argument_list pos:line="1663" pos:column="56">(<argument><expr><literal type="string" pos:line="1663" pos:column="57">"Circular inheritance occured."<pos:position pos:line="1663" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="1663" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="1663" pos:column="90"/></throw>
	}<pos:position pos:line="1664" pos:column="10"/></block></then>
	<else pos:line="1665" pos:column="9">else <block pos:line="1665" pos:column="14">{
		<expr_stmt><expr><call><name><name pos:line="1666" pos:column="17">currentChildren<pos:position pos:line="1666" pos:column="32"/></name><operator pos:line="1666" pos:column="32">.<pos:position pos:line="1666" pos:column="33"/></operator><name pos:line="1666" pos:column="33">add<pos:position pos:line="1666" pos:column="36"/></name></name><argument_list pos:line="1666" pos:column="36">(<argument><expr><name pos:line="1666" pos:column="37">child<pos:position pos:line="1666" pos:column="42"/></name></expr></argument>)<pos:position pos:line="1666" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="1666" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="1667" pos:column="17">generalizations<pos:position pos:line="1667" pos:column="32"/></name><operator pos:line="1667" pos:column="32">.<pos:position pos:line="1667" pos:column="33"/></operator><name pos:line="1667" pos:column="33">add<pos:position pos:line="1667" pos:column="36"/></name></name><argument_list pos:line="1667" pos:column="36">(<argument><expr><name pos:line="1667" pos:column="37">gen<pos:position pos:line="1667" pos:column="40"/></name></expr></argument>)<pos:position pos:line="1667" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="1667" pos:column="42"/></expr_stmt>
	}<pos:position pos:line="1668" pos:column="10"/></block></else></if>
	<decl_stmt><decl><type><name pos:line="1669" pos:column="9">Iterator<pos:position pos:line="1669" pos:column="17"/></name></type> <name pos:line="1669" pos:column="18">it<pos:position pos:line="1669" pos:column="20"/></name> <init pos:line="1669" pos:column="21">= <expr><call><name><name pos:line="1669" pos:column="23">child<pos:position pos:line="1669" pos:column="28"/></name><operator pos:line="1669" pos:column="28">.<pos:position pos:line="1669" pos:column="29"/></operator><name pos:line="1669" pos:column="29">getSpecializations<pos:position pos:line="1669" pos:column="47"/></name></name><argument_list pos:line="1669" pos:column="47">()<pos:position pos:line="1669" pos:column="49"/></argument_list></call><operator pos:line="1669" pos:column="49">.<pos:position pos:line="1669" pos:column="50"/></operator><call><name pos:line="1669" pos:column="50">iterator<pos:position pos:line="1669" pos:column="58"/></name><argument_list pos:line="1669" pos:column="58">()<pos:position pos:line="1669" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1669" pos:column="61"/></decl_stmt>
	<while pos:line="1670" pos:column="9">while <condition pos:line="1670" pos:column="15">(<expr><call><name><name pos:line="1670" pos:column="16">it<pos:position pos:line="1670" pos:column="18"/></name><operator pos:line="1670" pos:column="18">.<pos:position pos:line="1670" pos:column="19"/></operator><name pos:line="1670" pos:column="19">hasNext<pos:position pos:line="1670" pos:column="26"/></name></name><argument_list pos:line="1670" pos:column="26">()<pos:position pos:line="1670" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="1670" pos:column="29"/></condition> <block pos:line="1670" pos:column="30">{
	    <expr_stmt><expr><call><name pos:line="1671" pos:column="13">getChildren<pos:position pos:line="1671" pos:column="24"/></name><argument_list pos:line="1671" pos:column="24">(<argument><expr><name pos:line="1671" pos:column="25">currentChildren<pos:position pos:line="1671" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="1671" pos:column="42">(<pos:position pos:line="1671" pos:column="43"/></operator><name pos:line="1671" pos:column="43">MGeneralization<pos:position pos:line="1671" pos:column="58"/></name><operator pos:line="1671" pos:column="58">)<pos:position pos:line="1671" pos:column="59"/></operator> <call><name><name pos:line="1671" pos:column="60">it<pos:position pos:line="1671" pos:column="62"/></name><operator pos:line="1671" pos:column="62">.<pos:position pos:line="1671" pos:column="63"/></operator><name pos:line="1671" pos:column="63">next<pos:position pos:line="1671" pos:column="67"/></name></name><argument_list pos:line="1671" pos:column="67">()<pos:position pos:line="1671" pos:column="69"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="1671" pos:column="71">generalizations<pos:position pos:line="1671" pos:column="86"/></name></expr></argument>)<pos:position pos:line="1671" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="1671" pos:column="88"/></expr_stmt>
	}<pos:position pos:line="1672" pos:column="10"/></block></while>
    }<pos:position pos:line="1673" pos:column="6"/></block></function>
	

    <comment type="block" format="javadoc" pos:line="1676" pos:column="5">/**
     * Returns all interfaces that are realized by the given class or
     * by its superclasses. It's possible that interfaces occur twice
     * in the collection returned. In that case there is a double
     * reference to that interface.
     *
     * @param o is the given class
     * @return Collection
     */</comment>
    <function><specifier pos:line="1685" pos:column="5">public<pos:position pos:line="1685" pos:column="11"/></specifier> <type><name pos:line="1685" pos:column="12">Collection<pos:position pos:line="1685" pos:column="22"/></name></type> <name pos:line="1685" pos:column="23">getAllRealizedInterfaces<pos:position pos:line="1685" pos:column="47"/></name><parameter_list pos:line="1685" pos:column="47">(<parameter><decl><type><name pos:line="1685" pos:column="48">Object<pos:position pos:line="1685" pos:column="54"/></name></type> <name pos:line="1685" pos:column="55">o<pos:position pos:line="1685" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1685" pos:column="57"/></parameter_list> <block pos:line="1685" pos:column="58">{
        <return pos:line="1686" pos:column="9">return <expr><call><name pos:line="1686" pos:column="16">internalGetAllRealizedInterfaces<pos:position pos:line="1686" pos:column="48"/></name><argument_list pos:line="1686" pos:column="48">(
						<argument><expr><name pos:line="1687" pos:column="49">o<pos:position pos:line="1687" pos:column="50"/></name></expr></argument>,
						<argument><expr><operator pos:line="1688" pos:column="49">new<pos:position pos:line="1688" pos:column="52"/></operator> <call><name pos:line="1688" pos:column="53">ArrayList<pos:position pos:line="1688" pos:column="62"/></name><argument_list pos:line="1688" pos:column="62">()<pos:position pos:line="1688" pos:column="64"/></argument_list></call></expr></argument>,
						<argument><expr><operator pos:line="1689" pos:column="49">new<pos:position pos:line="1689" pos:column="52"/></operator> <call><name pos:line="1689" pos:column="53">HashSet<pos:position pos:line="1689" pos:column="60"/></name><argument_list pos:line="1689" pos:column="60">()<pos:position pos:line="1689" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="1689" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="1689" pos:column="64"/></return>
    }<pos:position pos:line="1690" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="1692" pos:column="5">/**
     * Helper method for getAllRealizedInterfaces.
     * @param o
     * @param col
     * @param visited
     * @return Collection
     */</comment>
    <function><specifier pos:line="1699" pos:column="5">private<pos:position pos:line="1699" pos:column="12"/></specifier> <type><name pos:line="1699" pos:column="13">Collection<pos:position pos:line="1699" pos:column="23"/></name></type> <name pos:line="1699" pos:column="24">internalGetAllRealizedInterfaces<pos:position pos:line="1699" pos:column="56"/></name><parameter_list pos:line="1699" pos:column="56">(
				<parameter><decl><type><name pos:line="1700" pos:column="33">Object<pos:position pos:line="1700" pos:column="39"/></name></type> <name pos:line="1700" pos:column="40">o<pos:position pos:line="1700" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1700" pos:column="43">Collection<pos:position pos:line="1700" pos:column="53"/></name></type> <name pos:line="1700" pos:column="54">col<pos:position pos:line="1700" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1700" pos:column="59">Set<pos:position pos:line="1700" pos:column="62"/></name></type> <name pos:line="1700" pos:column="63">visited<pos:position pos:line="1700" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1700" pos:column="71"/></parameter_list> <block pos:line="1700" pos:column="72">{
        <expr_stmt><expr><call><name><name pos:line="1701" pos:column="9">visited<pos:position pos:line="1701" pos:column="16"/></name><operator pos:line="1701" pos:column="16">.<pos:position pos:line="1701" pos:column="17"/></operator><name pos:line="1701" pos:column="17">add<pos:position pos:line="1701" pos:column="20"/></name></name><argument_list pos:line="1701" pos:column="20">(<argument><expr><name pos:line="1701" pos:column="21">o<pos:position pos:line="1701" pos:column="22"/></name></expr></argument>)<pos:position pos:line="1701" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="1701" pos:column="24"/></expr_stmt>
        <if pos:line="1702" pos:column="9">if <condition pos:line="1702" pos:column="12">(<expr><name pos:line="1702" pos:column="13">o<pos:position pos:line="1702" pos:column="14"/></name> <operator pos:line="1702" pos:column="15">!=<pos:position pos:line="1702" pos:column="17"/></operator> <literal type="null" pos:line="1702" pos:column="18">null<pos:position pos:line="1702" pos:column="22"/></literal></expr>)<pos:position pos:line="1702" pos:column="23"/></condition><then pos:line="1702" pos:column="23"> <block pos:line="1702" pos:column="24">{
            <if pos:line="1703" pos:column="13">if <condition pos:line="1703" pos:column="16">(<expr><name pos:line="1703" pos:column="17">o<pos:position pos:line="1703" pos:column="18"/></name> <operator pos:line="1703" pos:column="19">instanceof<pos:position pos:line="1703" pos:column="29"/></operator> <name pos:line="1703" pos:column="30">MClass<pos:position pos:line="1703" pos:column="36"/></name></expr>)<pos:position pos:line="1703" pos:column="37"/></condition><then pos:line="1703" pos:column="37"> <block pos:line="1703" pos:column="38">{
                <decl_stmt><decl><type><name pos:line="1704" pos:column="17">MClass<pos:position pos:line="1704" pos:column="23"/></name></type> <name pos:line="1704" pos:column="24">clazz<pos:position pos:line="1704" pos:column="29"/></name> <init pos:line="1704" pos:column="30">= <expr><operator pos:line="1704" pos:column="32">(<pos:position pos:line="1704" pos:column="33"/></operator><name pos:line="1704" pos:column="33">MClass<pos:position pos:line="1704" pos:column="39"/></name><operator pos:line="1704" pos:column="39">)<pos:position pos:line="1704" pos:column="40"/></operator> <name pos:line="1704" pos:column="41">o<pos:position pos:line="1704" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="1704" pos:column="43"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="1705" pos:column="17">Collection<pos:position pos:line="1705" pos:column="27"/></name></type> <name pos:line="1705" pos:column="28">supDependencies<pos:position pos:line="1705" pos:column="43"/></name> <init pos:line="1705" pos:column="44">= <expr><call><name><name pos:line="1705" pos:column="46">clazz<pos:position pos:line="1705" pos:column="51"/></name><operator pos:line="1705" pos:column="51">.<pos:position pos:line="1705" pos:column="52"/></operator><name pos:line="1705" pos:column="52">getClientDependencies<pos:position pos:line="1705" pos:column="73"/></name></name><argument_list pos:line="1705" pos:column="73">()<pos:position pos:line="1705" pos:column="75"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1705" pos:column="76"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="1706" pos:column="17">Iterator<pos:position pos:line="1706" pos:column="25"/></name></type> <name pos:line="1706" pos:column="26">it<pos:position pos:line="1706" pos:column="28"/></name> <init pos:line="1706" pos:column="29">= <expr><call><name><name pos:line="1706" pos:column="31">supDependencies<pos:position pos:line="1706" pos:column="46"/></name><operator pos:line="1706" pos:column="46">.<pos:position pos:line="1706" pos:column="47"/></operator><name pos:line="1706" pos:column="47">iterator<pos:position pos:line="1706" pos:column="55"/></name></name><argument_list pos:line="1706" pos:column="55">()<pos:position pos:line="1706" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1706" pos:column="58"/></decl_stmt>
                <while pos:line="1707" pos:column="17">while <condition pos:line="1707" pos:column="23">(<expr><call><name><name pos:line="1707" pos:column="24">it<pos:position pos:line="1707" pos:column="26"/></name><operator pos:line="1707" pos:column="26">.<pos:position pos:line="1707" pos:column="27"/></operator><name pos:line="1707" pos:column="27">hasNext<pos:position pos:line="1707" pos:column="34"/></name></name><argument_list pos:line="1707" pos:column="34">()<pos:position pos:line="1707" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="1707" pos:column="37"/></condition> <block pos:line="1707" pos:column="38">{
                    <decl_stmt><decl><type><name pos:line="1708" pos:column="21">MDependency<pos:position pos:line="1708" pos:column="32"/></name></type> <name pos:line="1708" pos:column="33">dependency<pos:position pos:line="1708" pos:column="43"/></name> <init pos:line="1708" pos:column="44">= <expr><operator pos:line="1708" pos:column="46">(<pos:position pos:line="1708" pos:column="47"/></operator><name pos:line="1708" pos:column="47">MDependency<pos:position pos:line="1708" pos:column="58"/></name><operator pos:line="1708" pos:column="58">)<pos:position pos:line="1708" pos:column="59"/></operator> <call><name><name pos:line="1708" pos:column="60">it<pos:position pos:line="1708" pos:column="62"/></name><operator pos:line="1708" pos:column="62">.<pos:position pos:line="1708" pos:column="63"/></operator><name pos:line="1708" pos:column="63">next<pos:position pos:line="1708" pos:column="67"/></name></name><argument_list pos:line="1708" pos:column="67">()<pos:position pos:line="1708" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1708" pos:column="70"/></decl_stmt>
                    <decl_stmt><decl><type><name pos:line="1709" pos:column="21">MStereotype<pos:position pos:line="1709" pos:column="32"/></name></type> <name pos:line="1709" pos:column="33">stereo<pos:position pos:line="1709" pos:column="39"/></name> <init pos:line="1709" pos:column="40">= <expr><call><name><name pos:line="1709" pos:column="42">dependency<pos:position pos:line="1709" pos:column="52"/></name><operator pos:line="1709" pos:column="52">.<pos:position pos:line="1709" pos:column="53"/></operator><name pos:line="1709" pos:column="53">getStereotype<pos:position pos:line="1709" pos:column="66"/></name></name><argument_list pos:line="1709" pos:column="66">()<pos:position pos:line="1709" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1709" pos:column="69"/></decl_stmt>
                    <if pos:line="1710" pos:column="21">if <condition pos:line="1710" pos:column="24">(<expr><name pos:line="1710" pos:column="25">dependency<pos:position pos:line="1710" pos:column="35"/></name> <operator pos:line="1710" pos:column="36">instanceof<pos:position pos:line="1710" pos:column="46"/></operator> <name pos:line="1710" pos:column="47">MAbstraction<pos:position pos:line="1710" pos:column="59"/></name>
                        <operator pos:line="1711" pos:column="25">&amp;&amp;<pos:position pos:line="1711" pos:column="35"/></operator> <name pos:line="1711" pos:column="28">stereo<pos:position pos:line="1711" pos:column="34"/></name> <operator pos:line="1711" pos:column="35">!=<pos:position pos:line="1711" pos:column="37"/></operator> <literal type="null" pos:line="1711" pos:column="38">null<pos:position pos:line="1711" pos:column="42"/></literal>
			<operator pos:line="1712" pos:column="25">&amp;&amp;<pos:position pos:line="1712" pos:column="35"/></operator> <literal type="string" pos:line="1712" pos:column="28">"realize"<pos:position pos:line="1712" pos:column="37"/></literal><operator pos:line="1712" pos:column="37">.<pos:position pos:line="1712" pos:column="38"/></operator><call><name pos:line="1712" pos:column="38">equals<pos:position pos:line="1712" pos:column="44"/></name><argument_list pos:line="1712" pos:column="44">(<argument><expr><call><name><name pos:line="1712" pos:column="45">stereo<pos:position pos:line="1712" pos:column="51"/></name><operator pos:line="1712" pos:column="51">.<pos:position pos:line="1712" pos:column="52"/></operator><name pos:line="1712" pos:column="52">getName<pos:position pos:line="1712" pos:column="59"/></name></name><argument_list pos:line="1712" pos:column="59">()<pos:position pos:line="1712" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="1712" pos:column="62"/></argument_list></call>
			<operator pos:line="1713" pos:column="25">&amp;&amp;<pos:position pos:line="1713" pos:column="35"/></operator> <literal type="string" pos:line="1713" pos:column="28">"Abstraction"<pos:position pos:line="1713" pos:column="41"/></literal><operator pos:line="1713" pos:column="41">.<pos:position pos:line="1713" pos:column="42"/></operator><call><name pos:line="1713" pos:column="42">equals<pos:position pos:line="1713" pos:column="48"/></name><argument_list pos:line="1713" pos:column="48">(<argument><expr><call><name><name pos:line="1713" pos:column="49">stereo<pos:position pos:line="1713" pos:column="55"/></name><operator pos:line="1713" pos:column="55">.<pos:position pos:line="1713" pos:column="56"/></operator><name pos:line="1713" pos:column="56">getBaseClass<pos:position pos:line="1713" pos:column="68"/></name></name><argument_list pos:line="1713" pos:column="68">()<pos:position pos:line="1713" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="1713" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="1713" pos:column="72"/></condition><then pos:line="1713" pos:column="72"> <block pos:line="1713" pos:column="73">{

                        <expr_stmt><expr><call><name><name pos:line="1715" pos:column="25">col<pos:position pos:line="1715" pos:column="28"/></name><operator pos:line="1715" pos:column="28">.<pos:position pos:line="1715" pos:column="29"/></operator><name pos:line="1715" pos:column="29">addAll<pos:position pos:line="1715" pos:column="35"/></name></name><argument_list pos:line="1715" pos:column="35">(<argument><expr><call><name><name pos:line="1715" pos:column="36">dependency<pos:position pos:line="1715" pos:column="46"/></name><operator pos:line="1715" pos:column="46">.<pos:position pos:line="1715" pos:column="47"/></operator><name pos:line="1715" pos:column="47">getSuppliers<pos:position pos:line="1715" pos:column="59"/></name></name><argument_list pos:line="1715" pos:column="59">()<pos:position pos:line="1715" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="1715" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="1715" pos:column="63"/></expr_stmt>

                    }<pos:position pos:line="1717" pos:column="22"/></block></then></if>
                }<pos:position pos:line="1718" pos:column="18"/></block></while>
                <decl_stmt><decl><type><name pos:line="1719" pos:column="17">Collection<pos:position pos:line="1719" pos:column="27"/></name></type> <name pos:line="1719" pos:column="28">superTypes<pos:position pos:line="1719" pos:column="38"/></name> <init pos:line="1719" pos:column="39">= <expr><call><name pos:line="1719" pos:column="41">getSupertypes<pos:position pos:line="1719" pos:column="54"/></name><argument_list pos:line="1719" pos:column="54">(<argument><expr><name pos:line="1719" pos:column="55">o<pos:position pos:line="1719" pos:column="56"/></name></expr></argument>)<pos:position pos:line="1719" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1719" pos:column="58"/></decl_stmt>
                <expr_stmt><expr><name pos:line="1720" pos:column="17">it<pos:position pos:line="1720" pos:column="19"/></name> <operator pos:line="1720" pos:column="20">=<pos:position pos:line="1720" pos:column="21"/></operator> <call><name><name pos:line="1720" pos:column="22">superTypes<pos:position pos:line="1720" pos:column="32"/></name><operator pos:line="1720" pos:column="32">.<pos:position pos:line="1720" pos:column="33"/></operator><name pos:line="1720" pos:column="33">iterator<pos:position pos:line="1720" pos:column="41"/></name></name><argument_list pos:line="1720" pos:column="41">()<pos:position pos:line="1720" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="1720" pos:column="44"/></expr_stmt>
                <while pos:line="1721" pos:column="17">while <condition pos:line="1721" pos:column="23">(<expr><call><name><name pos:line="1721" pos:column="24">it<pos:position pos:line="1721" pos:column="26"/></name><operator pos:line="1721" pos:column="26">.<pos:position pos:line="1721" pos:column="27"/></operator><name pos:line="1721" pos:column="27">hasNext<pos:position pos:line="1721" pos:column="34"/></name></name><argument_list pos:line="1721" pos:column="34">()<pos:position pos:line="1721" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="1721" pos:column="37"/></condition> <block pos:line="1721" pos:column="38">{
		    <decl_stmt><decl><type><name pos:line="1722" pos:column="21">Object<pos:position pos:line="1722" pos:column="27"/></name></type> <name pos:line="1722" pos:column="28">obj<pos:position pos:line="1722" pos:column="31"/></name> <init pos:line="1722" pos:column="32">= <expr><call><name><name pos:line="1722" pos:column="34">it<pos:position pos:line="1722" pos:column="36"/></name><operator pos:line="1722" pos:column="36">.<pos:position pos:line="1722" pos:column="37"/></operator><name pos:line="1722" pos:column="37">next<pos:position pos:line="1722" pos:column="41"/></name></name><argument_list pos:line="1722" pos:column="41">()<pos:position pos:line="1722" pos:column="43"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1722" pos:column="44"/></decl_stmt>
		    <if pos:line="1723" pos:column="21">if <condition pos:line="1723" pos:column="24">(<expr><operator pos:line="1723" pos:column="25">!<pos:position pos:line="1723" pos:column="26"/></operator><call><name><name pos:line="1723" pos:column="26">visited<pos:position pos:line="1723" pos:column="33"/></name><operator pos:line="1723" pos:column="33">.<pos:position pos:line="1723" pos:column="34"/></operator><name pos:line="1723" pos:column="34">contains<pos:position pos:line="1723" pos:column="42"/></name></name><argument_list pos:line="1723" pos:column="42">(<argument><expr><name pos:line="1723" pos:column="43">obj<pos:position pos:line="1723" pos:column="46"/></name></expr></argument>)<pos:position pos:line="1723" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="1723" pos:column="48"/></condition><then pos:line="1723" pos:column="48"> <block pos:line="1723" pos:column="49">{
			<expr_stmt><expr><call><name pos:line="1724" pos:column="25">internalGetAllRealizedInterfaces<pos:position pos:line="1724" pos:column="57"/></name><argument_list pos:line="1724" pos:column="57">(<argument><expr><name pos:line="1724" pos:column="58">obj<pos:position pos:line="1724" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="1724" pos:column="63">col<pos:position pos:line="1724" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="1724" pos:column="68">visited<pos:position pos:line="1724" pos:column="75"/></name></expr></argument>)<pos:position pos:line="1724" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="1724" pos:column="77"/></expr_stmt>
		    }<pos:position pos:line="1725" pos:column="22"/></block></then></if>
                }<pos:position pos:line="1726" pos:column="18"/></block></while>
            }<pos:position pos:line="1727" pos:column="14"/></block></then></if>
        }<pos:position pos:line="1728" pos:column="10"/></block></then></if>
        <return pos:line="1729" pos:column="9">return <expr><name pos:line="1729" pos:column="16">col<pos:position pos:line="1729" pos:column="19"/></name></expr>;<pos:position pos:line="1729" pos:column="20"/></return>
    }<pos:position pos:line="1730" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="1732" pos:column="5">/**
     * @param  association the association to be investigated
     * @return true if one of the association ends of the given association
     *         is of the composite kind
     */</comment>
    <function><specifier pos:line="1737" pos:column="5">public<pos:position pos:line="1737" pos:column="11"/></specifier> <specifier pos:line="1737" pos:column="12">final<pos:position pos:line="1737" pos:column="17"/></specifier> <type><name pos:line="1737" pos:column="18">boolean<pos:position pos:line="1737" pos:column="25"/></name></type> <name pos:line="1737" pos:column="26">hasCompositeEnd<pos:position pos:line="1737" pos:column="41"/></name><parameter_list pos:line="1737" pos:column="41">(<parameter><decl><type><name pos:line="1737" pos:column="42">Object<pos:position pos:line="1737" pos:column="48"/></name></type> <name pos:line="1737" pos:column="49">association<pos:position pos:line="1737" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1737" pos:column="61"/></parameter_list> <block pos:line="1737" pos:column="62">{
        <if pos:line="1738" pos:column="9">if <condition pos:line="1738" pos:column="12">(<expr><operator pos:line="1738" pos:column="13">!<pos:position pos:line="1738" pos:column="14"/></operator><operator pos:line="1738" pos:column="14">(<pos:position pos:line="1738" pos:column="15"/></operator><name pos:line="1738" pos:column="15">association<pos:position pos:line="1738" pos:column="26"/></name> <operator pos:line="1738" pos:column="27">instanceof<pos:position pos:line="1738" pos:column="37"/></operator> <name pos:line="1738" pos:column="38">MAssociation<pos:position pos:line="1738" pos:column="50"/></name><operator pos:line="1738" pos:column="50">)<pos:position pos:line="1738" pos:column="51"/></operator></expr>)<pos:position pos:line="1738" pos:column="52"/></condition><then pos:line="1738" pos:column="52"> <block pos:line="1738" pos:column="53">{
            <throw pos:line="1739" pos:column="13">throw <expr><operator pos:line="1739" pos:column="19">new<pos:position pos:line="1739" pos:column="22"/></operator> <call><name pos:line="1739" pos:column="23">IllegalArgumentException<pos:position pos:line="1739" pos:column="47"/></name><argument_list pos:line="1739" pos:column="47">()<pos:position pos:line="1739" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="1739" pos:column="50"/></throw>
	}<pos:position pos:line="1740" pos:column="10"/></block></then></if>

        <decl_stmt><decl><type><name pos:line="1742" pos:column="9">MAssociation<pos:position pos:line="1742" pos:column="21"/></name></type> <name pos:line="1742" pos:column="22">association1<pos:position pos:line="1742" pos:column="34"/></name> <init pos:line="1742" pos:column="35">= <expr><operator pos:line="1742" pos:column="37">(<pos:position pos:line="1742" pos:column="38"/></operator><name pos:line="1742" pos:column="38">MAssociation<pos:position pos:line="1742" pos:column="50"/></name><operator pos:line="1742" pos:column="50">)<pos:position pos:line="1742" pos:column="51"/></operator> <name pos:line="1742" pos:column="52">association<pos:position pos:line="1742" pos:column="63"/></name></expr></init></decl>;<pos:position pos:line="1742" pos:column="64"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="1744" pos:column="9">List<pos:position pos:line="1744" pos:column="13"/></name></type> <name pos:line="1744" pos:column="14">ends<pos:position pos:line="1744" pos:column="18"/></name> <init pos:line="1744" pos:column="19">= <expr><call><name><name pos:line="1744" pos:column="21">association1<pos:position pos:line="1744" pos:column="33"/></name><operator pos:line="1744" pos:column="33">.<pos:position pos:line="1744" pos:column="34"/></operator><name pos:line="1744" pos:column="34">getConnections<pos:position pos:line="1744" pos:column="48"/></name></name><argument_list pos:line="1744" pos:column="48">()<pos:position pos:line="1744" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1744" pos:column="51"/></decl_stmt>
	<for pos:line="1745" pos:column="9">for <control pos:line="1745" pos:column="13">(<init><decl><type><name pos:line="1745" pos:column="14">Iterator<pos:position pos:line="1745" pos:column="22"/></name></type> <name pos:line="1745" pos:column="23">iter<pos:position pos:line="1745" pos:column="27"/></name> <init pos:line="1745" pos:column="28">= <expr><call><name><name pos:line="1745" pos:column="30">ends<pos:position pos:line="1745" pos:column="34"/></name><operator pos:line="1745" pos:column="34">.<pos:position pos:line="1745" pos:column="35"/></operator><name pos:line="1745" pos:column="35">iterator<pos:position pos:line="1745" pos:column="43"/></name></name><argument_list pos:line="1745" pos:column="43">()<pos:position pos:line="1745" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1745" pos:column="46"/></init> <condition><expr><call><name><name pos:line="1745" pos:column="47">iter<pos:position pos:line="1745" pos:column="51"/></name><operator pos:line="1745" pos:column="51">.<pos:position pos:line="1745" pos:column="52"/></operator><name pos:line="1745" pos:column="52">hasNext<pos:position pos:line="1745" pos:column="59"/></name></name><argument_list pos:line="1745" pos:column="59">()<pos:position pos:line="1745" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="1745" pos:column="62"/></condition><incr/>)<pos:position pos:line="1745" pos:column="63"/></control> <block pos:line="1745" pos:column="64">{
	    <decl_stmt><decl><type><name pos:line="1746" pos:column="13">MAssociationEnd<pos:position pos:line="1746" pos:column="28"/></name></type> <name pos:line="1746" pos:column="29">end<pos:position pos:line="1746" pos:column="32"/></name> <init pos:line="1746" pos:column="33">= <expr><operator pos:line="1746" pos:column="35">(<pos:position pos:line="1746" pos:column="36"/></operator><name pos:line="1746" pos:column="36">MAssociationEnd<pos:position pos:line="1746" pos:column="51"/></name><operator pos:line="1746" pos:column="51">)<pos:position pos:line="1746" pos:column="52"/></operator> <call><name><name pos:line="1746" pos:column="53">iter<pos:position pos:line="1746" pos:column="57"/></name><operator pos:line="1746" pos:column="57">.<pos:position pos:line="1746" pos:column="58"/></operator><name pos:line="1746" pos:column="58">next<pos:position pos:line="1746" pos:column="62"/></name></name><argument_list pos:line="1746" pos:column="62">()<pos:position pos:line="1746" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1746" pos:column="65"/></decl_stmt>
	    <if pos:line="1747" pos:column="13">if <condition pos:line="1747" pos:column="16">(<expr><call><name><name pos:line="1747" pos:column="17">end<pos:position pos:line="1747" pos:column="20"/></name><operator pos:line="1747" pos:column="20">.<pos:position pos:line="1747" pos:column="21"/></operator><name pos:line="1747" pos:column="21">getAggregation<pos:position pos:line="1747" pos:column="35"/></name></name><argument_list pos:line="1747" pos:column="35">()<pos:position pos:line="1747" pos:column="37"/></argument_list></call> <operator pos:line="1747" pos:column="38">==<pos:position pos:line="1747" pos:column="40"/></operator> <name><name pos:line="1747" pos:column="41">MAggregationKind<pos:position pos:line="1747" pos:column="57"/></name><operator pos:line="1747" pos:column="57">.<pos:position pos:line="1747" pos:column="58"/></operator><name pos:line="1747" pos:column="58">COMPOSITE<pos:position pos:line="1747" pos:column="67"/></name></name></expr>)<pos:position pos:line="1747" pos:column="68"/></condition><then pos:line="1747" pos:column="68"> <block pos:line="1747" pos:column="69">{
	        <return pos:line="1748" pos:column="17">return <expr><literal type="boolean" pos:line="1748" pos:column="24">true<pos:position pos:line="1748" pos:column="28"/></literal></expr>;<pos:position pos:line="1748" pos:column="29"/></return>
	    }<pos:position pos:line="1749" pos:column="14"/></block></then></if>
	}<pos:position pos:line="1750" pos:column="10"/></block></for>
	<return pos:line="1751" pos:column="9">return <expr><literal type="boolean" pos:line="1751" pos:column="16">false<pos:position pos:line="1751" pos:column="21"/></literal></expr>;<pos:position pos:line="1751" pos:column="22"/></return>
    }<pos:position pos:line="1752" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="1754" pos:column="5">/**
     * @param associationEnd is the association end
     * @param kindType the MAggregationKind as a string in lower case letter,
     *                 eg: composite.
     * @return true if the aggregation kinds are the same.
     */</comment>
    <function><specifier pos:line="1760" pos:column="5">public<pos:position pos:line="1760" pos:column="11"/></specifier> <specifier pos:line="1760" pos:column="12">final<pos:position pos:line="1760" pos:column="17"/></specifier> <type><name pos:line="1760" pos:column="18">boolean<pos:position pos:line="1760" pos:column="25"/></name></type> <name pos:line="1760" pos:column="26">equalsAggregationKind<pos:position pos:line="1760" pos:column="47"/></name><parameter_list pos:line="1760" pos:column="47">(<parameter><decl><type><name pos:line="1760" pos:column="48">Object<pos:position pos:line="1760" pos:column="54"/></name></type> <name pos:line="1760" pos:column="55">associationEnd<pos:position pos:line="1760" pos:column="69"/></name></decl></parameter>,
                                               <parameter><decl><type><name pos:line="1761" pos:column="48">String<pos:position pos:line="1761" pos:column="54"/></name></type> <name pos:line="1761" pos:column="55">kindType<pos:position pos:line="1761" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1761" pos:column="64"/></parameter_list> <block pos:line="1761" pos:column="65">{
        <if pos:line="1762" pos:column="9">if <condition pos:line="1762" pos:column="12">(<expr><operator pos:line="1762" pos:column="13">!<pos:position pos:line="1762" pos:column="14"/></operator><operator pos:line="1762" pos:column="14">(<pos:position pos:line="1762" pos:column="15"/></operator><name pos:line="1762" pos:column="15">associationEnd<pos:position pos:line="1762" pos:column="29"/></name> <operator pos:line="1762" pos:column="30">instanceof<pos:position pos:line="1762" pos:column="40"/></operator> <name pos:line="1762" pos:column="41">MAssociationEnd<pos:position pos:line="1762" pos:column="56"/></name><operator pos:line="1762" pos:column="56">)<pos:position pos:line="1762" pos:column="57"/></operator></expr>)<pos:position pos:line="1762" pos:column="58"/></condition><then pos:line="1762" pos:column="58"> <block pos:line="1762" pos:column="59">{
            <throw pos:line="1763" pos:column="13">throw <expr><operator pos:line="1763" pos:column="19">new<pos:position pos:line="1763" pos:column="22"/></operator> <call><name pos:line="1763" pos:column="23">IllegalArgumentException<pos:position pos:line="1763" pos:column="47"/></name><argument_list pos:line="1763" pos:column="47">()<pos:position pos:line="1763" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="1763" pos:column="50"/></throw>
	}<pos:position pos:line="1764" pos:column="10"/></block></then></if>

        <decl_stmt><decl><type><name pos:line="1766" pos:column="9">MAssociationEnd<pos:position pos:line="1766" pos:column="24"/></name></type> <name pos:line="1766" pos:column="25">associationEnd1<pos:position pos:line="1766" pos:column="40"/></name> <init pos:line="1766" pos:column="41">= <expr><operator pos:line="1766" pos:column="43">(<pos:position pos:line="1766" pos:column="44"/></operator><name pos:line="1766" pos:column="44">MAssociationEnd<pos:position pos:line="1766" pos:column="59"/></name><operator pos:line="1766" pos:column="59">)<pos:position pos:line="1766" pos:column="60"/></operator> <name pos:line="1766" pos:column="61">associationEnd<pos:position pos:line="1766" pos:column="75"/></name></expr></init></decl>;<pos:position pos:line="1766" pos:column="76"/></decl_stmt>

        <if pos:line="1768" pos:column="9">if <condition pos:line="1768" pos:column="12">(<expr><call><name><name pos:line="1768" pos:column="13">kindType<pos:position pos:line="1768" pos:column="21"/></name><operator pos:line="1768" pos:column="21">.<pos:position pos:line="1768" pos:column="22"/></operator><name pos:line="1768" pos:column="22">equals<pos:position pos:line="1768" pos:column="28"/></name></name><argument_list pos:line="1768" pos:column="28">(<argument><expr><literal type="string" pos:line="1768" pos:column="29">"composite"<pos:position pos:line="1768" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="1768" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="1768" pos:column="42"/></condition><then pos:line="1768" pos:column="42"> <block pos:line="1768" pos:column="43">{
            <return pos:line="1769" pos:column="13">return <expr><call><name><name pos:line="1769" pos:column="20">MAggregationKind<pos:position pos:line="1769" pos:column="36"/></name><operator pos:line="1769" pos:column="36">.<pos:position pos:line="1769" pos:column="37"/></operator><name pos:line="1769" pos:column="37">COMPOSITE<pos:position pos:line="1769" pos:column="46"/></name><operator pos:line="1769" pos:column="46">.<pos:position pos:line="1769" pos:column="47"/></operator><name pos:line="1769" pos:column="47">equals<pos:position pos:line="1769" pos:column="53"/></name></name><argument_list pos:line="1769" pos:column="53">(
                            <argument><expr><call><name><name pos:line="1770" pos:column="29">associationEnd1<pos:position pos:line="1770" pos:column="44"/></name><operator pos:line="1770" pos:column="44">.<pos:position pos:line="1770" pos:column="45"/></operator><name pos:line="1770" pos:column="45">getAggregation<pos:position pos:line="1770" pos:column="59"/></name></name><argument_list pos:line="1770" pos:column="59">()<pos:position pos:line="1770" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="1770" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="1770" pos:column="63"/></return>
        }<pos:position pos:line="1771" pos:column="10"/></block></then></if> 
        <throw pos:line="1772" pos:column="9">throw <expr><operator pos:line="1772" pos:column="15">new<pos:position pos:line="1772" pos:column="18"/></operator> <call><name pos:line="1772" pos:column="19">IllegalArgumentException<pos:position pos:line="1772" pos:column="43"/></name><argument_list pos:line="1772" pos:column="43">(<argument><expr><literal type="string" pos:line="1772" pos:column="44">"kindType: "<pos:position pos:line="1772" pos:column="56"/></literal> <operator pos:line="1772" pos:column="57">+<pos:position pos:line="1772" pos:column="58"/></operator> <name pos:line="1772" pos:column="59">kindType<pos:position pos:line="1772" pos:column="67"/></name>
					       <operator pos:line="1773" pos:column="48">+<pos:position pos:line="1773" pos:column="49"/></operator> <literal type="string" pos:line="1773" pos:column="50">" not supported"<pos:position pos:line="1773" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="1773" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="1773" pos:column="68"/></throw>
    }<pos:position pos:line="1774" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="1776" pos:column="5">/**
     * Remove the given modelelement from a given comment.
     *
     * @param handle MComment
     * @param me MModelElement
     */</comment>
    <function><specifier pos:line="1782" pos:column="5">public<pos:position pos:line="1782" pos:column="11"/></specifier> <type><name pos:line="1782" pos:column="12">void<pos:position pos:line="1782" pos:column="16"/></name></type> <name pos:line="1782" pos:column="17">removeAnnotatedElement<pos:position pos:line="1782" pos:column="39"/></name><parameter_list pos:line="1782" pos:column="39">(<parameter><decl><type><name pos:line="1782" pos:column="40">Object<pos:position pos:line="1782" pos:column="46"/></name></type> <name pos:line="1782" pos:column="47">handle<pos:position pos:line="1782" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1782" pos:column="55">Object<pos:position pos:line="1782" pos:column="61"/></name></type> <name pos:line="1782" pos:column="62">me<pos:position pos:line="1782" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1782" pos:column="65"/></parameter_list> <block pos:line="1782" pos:column="66">{
        <if pos:line="1783" pos:column="9">if <condition pos:line="1783" pos:column="12">(<expr><name pos:line="1783" pos:column="13">handle<pos:position pos:line="1783" pos:column="19"/></name> <operator pos:line="1783" pos:column="20">instanceof<pos:position pos:line="1783" pos:column="30"/></operator> <name pos:line="1783" pos:column="31">MComment<pos:position pos:line="1783" pos:column="39"/></name> <operator pos:line="1783" pos:column="40">&amp;&amp;<pos:position pos:line="1783" pos:column="50"/></operator> <name pos:line="1783" pos:column="43">me<pos:position pos:line="1783" pos:column="45"/></name> <operator pos:line="1783" pos:column="46">instanceof<pos:position pos:line="1783" pos:column="56"/></operator> <name pos:line="1783" pos:column="57">MModelElement<pos:position pos:line="1783" pos:column="70"/></name></expr>)<pos:position pos:line="1783" pos:column="71"/></condition><then pos:line="1783" pos:column="71"> <block pos:line="1783" pos:column="72">{
            <expr_stmt><expr><operator pos:line="1784" pos:column="13">(<pos:position pos:line="1784" pos:column="14"/></operator><operator pos:line="1784" pos:column="14">(<pos:position pos:line="1784" pos:column="15"/></operator><name pos:line="1784" pos:column="15">MComment<pos:position pos:line="1784" pos:column="23"/></name><operator pos:line="1784" pos:column="23">)<pos:position pos:line="1784" pos:column="24"/></operator> <name pos:line="1784" pos:column="25">handle<pos:position pos:line="1784" pos:column="31"/></name><operator pos:line="1784" pos:column="31">)<pos:position pos:line="1784" pos:column="32"/></operator><operator pos:line="1784" pos:column="32">.<pos:position pos:line="1784" pos:column="33"/></operator><call><name pos:line="1784" pos:column="33">removeAnnotatedElement<pos:position pos:line="1784" pos:column="55"/></name><argument_list pos:line="1784" pos:column="55">(<argument><expr><operator pos:line="1784" pos:column="56">(<pos:position pos:line="1784" pos:column="57"/></operator><name pos:line="1784" pos:column="57">MModelElement<pos:position pos:line="1784" pos:column="70"/></name><operator pos:line="1784" pos:column="70">)<pos:position pos:line="1784" pos:column="71"/></operator> <name pos:line="1784" pos:column="72">me<pos:position pos:line="1784" pos:column="74"/></name></expr></argument>)<pos:position pos:line="1784" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="1784" pos:column="76"/></expr_stmt>
            <return pos:line="1785" pos:column="13">return;<pos:position pos:line="1785" pos:column="20"/></return>
        }<pos:position pos:line="1786" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name><name pos:line="1787" pos:column="9">LOG<pos:position pos:line="1787" pos:column="12"/></name><operator pos:line="1787" pos:column="12">.<pos:position pos:line="1787" pos:column="13"/></operator><name pos:line="1787" pos:column="13">error<pos:position pos:line="1787" pos:column="18"/></name></name><argument_list pos:line="1787" pos:column="18">(<argument><expr><literal type="string" pos:line="1787" pos:column="19">"Failed to remove comment from model element"<pos:position pos:line="1787" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="1787" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="1787" pos:column="66"/></expr_stmt>
        <throw pos:line="1788" pos:column="9">throw <expr><operator pos:line="1788" pos:column="15">new<pos:position pos:line="1788" pos:column="18"/></operator> <call><name pos:line="1788" pos:column="19">IllegalArgumentException<pos:position pos:line="1788" pos:column="43"/></name><argument_list pos:line="1788" pos:column="43">()<pos:position pos:line="1788" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="1788" pos:column="46"/></throw>
    }<pos:position pos:line="1789" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="1791" pos:column="5">/**
     * This method removes a dependency from a model element.
     *
     * @param handle is the model element
     * @param dep is the dependency
     */</comment>
    <function><specifier pos:line="1797" pos:column="5">public<pos:position pos:line="1797" pos:column="11"/></specifier> <type><name pos:line="1797" pos:column="12">void<pos:position pos:line="1797" pos:column="16"/></name></type> <name pos:line="1797" pos:column="17">removeClientDependency<pos:position pos:line="1797" pos:column="39"/></name><parameter_list pos:line="1797" pos:column="39">(<parameter><decl><type><name pos:line="1797" pos:column="40">Object<pos:position pos:line="1797" pos:column="46"/></name></type> <name pos:line="1797" pos:column="47">handle<pos:position pos:line="1797" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1797" pos:column="55">Object<pos:position pos:line="1797" pos:column="61"/></name></type> <name pos:line="1797" pos:column="62">dep<pos:position pos:line="1797" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1797" pos:column="66"/></parameter_list> <block pos:line="1797" pos:column="67">{
        <if pos:line="1798" pos:column="9">if <condition pos:line="1798" pos:column="12">(<expr><name pos:line="1798" pos:column="13">handle<pos:position pos:line="1798" pos:column="19"/></name> <operator pos:line="1798" pos:column="20">instanceof<pos:position pos:line="1798" pos:column="30"/></operator> <name pos:line="1798" pos:column="31">MModelElement<pos:position pos:line="1798" pos:column="44"/></name>
                <operator pos:line="1799" pos:column="17">&amp;&amp;<pos:position pos:line="1799" pos:column="27"/></operator> <name pos:line="1799" pos:column="20">dep<pos:position pos:line="1799" pos:column="23"/></name> <operator pos:line="1799" pos:column="24">instanceof<pos:position pos:line="1799" pos:column="34"/></operator> <name pos:line="1799" pos:column="35">MDependency<pos:position pos:line="1799" pos:column="46"/></name></expr>)<pos:position pos:line="1799" pos:column="47"/></condition><then pos:line="1799" pos:column="47"> <block pos:line="1799" pos:column="48">{
            <expr_stmt><expr><operator pos:line="1800" pos:column="13">(<pos:position pos:line="1800" pos:column="14"/></operator><operator pos:line="1800" pos:column="14">(<pos:position pos:line="1800" pos:column="15"/></operator><name pos:line="1800" pos:column="15">MModelElement<pos:position pos:line="1800" pos:column="28"/></name><operator pos:line="1800" pos:column="28">)<pos:position pos:line="1800" pos:column="29"/></operator> <name pos:line="1800" pos:column="30">handle<pos:position pos:line="1800" pos:column="36"/></name><operator pos:line="1800" pos:column="36">)<pos:position pos:line="1800" pos:column="37"/></operator><operator pos:line="1800" pos:column="37">.<pos:position pos:line="1800" pos:column="38"/></operator><call><name pos:line="1800" pos:column="38">removeClientDependency<pos:position pos:line="1800" pos:column="60"/></name><argument_list pos:line="1800" pos:column="60">(<argument><expr><operator pos:line="1800" pos:column="61">(<pos:position pos:line="1800" pos:column="62"/></operator><name pos:line="1800" pos:column="62">MDependency<pos:position pos:line="1800" pos:column="73"/></name><operator pos:line="1800" pos:column="73">)<pos:position pos:line="1800" pos:column="74"/></operator> <name pos:line="1800" pos:column="75">dep<pos:position pos:line="1800" pos:column="78"/></name></expr></argument>)<pos:position pos:line="1800" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="1800" pos:column="80"/></expr_stmt>
            <return pos:line="1801" pos:column="13">return;<pos:position pos:line="1801" pos:column="20"/></return>
        }<pos:position pos:line="1802" pos:column="10"/></block></then></if>
	<throw pos:line="1803" pos:column="9">throw <expr><operator pos:line="1803" pos:column="15">new<pos:position pos:line="1803" pos:column="18"/></operator> <call><name pos:line="1803" pos:column="19">IllegalArgumentException<pos:position pos:line="1803" pos:column="43"/></name><argument_list pos:line="1803" pos:column="43">()<pos:position pos:line="1803" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="1803" pos:column="46"/></throw>
    }<pos:position pos:line="1804" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="1806" pos:column="5">/**
     * Remove the given constraint from a given ModelElement.
     *
     * @param handle ModelElement
     * @param cons Constraint
     */</comment>
    <function><specifier pos:line="1812" pos:column="5">public<pos:position pos:line="1812" pos:column="11"/></specifier> <type><name pos:line="1812" pos:column="12">void<pos:position pos:line="1812" pos:column="16"/></name></type> <name pos:line="1812" pos:column="17">removeConstraint<pos:position pos:line="1812" pos:column="33"/></name><parameter_list pos:line="1812" pos:column="33">(<parameter><decl><type><name pos:line="1812" pos:column="34">Object<pos:position pos:line="1812" pos:column="40"/></name></type> <name pos:line="1812" pos:column="41">handle<pos:position pos:line="1812" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1812" pos:column="49">Object<pos:position pos:line="1812" pos:column="55"/></name></type> <name pos:line="1812" pos:column="56">cons<pos:position pos:line="1812" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1812" pos:column="61"/></parameter_list> <block pos:line="1812" pos:column="62">{
        <if pos:line="1813" pos:column="9">if <condition pos:line="1813" pos:column="12">(<expr><name pos:line="1813" pos:column="13">handle<pos:position pos:line="1813" pos:column="19"/></name> <operator pos:line="1813" pos:column="20">instanceof<pos:position pos:line="1813" pos:column="30"/></operator> <name pos:line="1813" pos:column="31">MModelElement<pos:position pos:line="1813" pos:column="44"/></name> <operator pos:line="1813" pos:column="45">&amp;&amp;<pos:position pos:line="1813" pos:column="55"/></operator> <name pos:line="1813" pos:column="48">cons<pos:position pos:line="1813" pos:column="52"/></name> <operator pos:line="1813" pos:column="53">instanceof<pos:position pos:line="1813" pos:column="63"/></operator> <name pos:line="1813" pos:column="64">MConstraint<pos:position pos:line="1813" pos:column="75"/></name></expr>)<pos:position pos:line="1813" pos:column="76"/></condition><then pos:line="1813" pos:column="76"> <block pos:line="1813" pos:column="77">{
            <expr_stmt><expr><operator pos:line="1814" pos:column="13">(<pos:position pos:line="1814" pos:column="14"/></operator><operator pos:line="1814" pos:column="14">(<pos:position pos:line="1814" pos:column="15"/></operator><name pos:line="1814" pos:column="15">MModelElement<pos:position pos:line="1814" pos:column="28"/></name><operator pos:line="1814" pos:column="28">)<pos:position pos:line="1814" pos:column="29"/></operator> <name pos:line="1814" pos:column="30">handle<pos:position pos:line="1814" pos:column="36"/></name><operator pos:line="1814" pos:column="36">)<pos:position pos:line="1814" pos:column="37"/></operator><operator pos:line="1814" pos:column="37">.<pos:position pos:line="1814" pos:column="38"/></operator><call><name pos:line="1814" pos:column="38">removeConstraint<pos:position pos:line="1814" pos:column="54"/></name><argument_list pos:line="1814" pos:column="54">(<argument><expr><operator pos:line="1814" pos:column="55">(<pos:position pos:line="1814" pos:column="56"/></operator><name pos:line="1814" pos:column="56">MConstraint<pos:position pos:line="1814" pos:column="67"/></name><operator pos:line="1814" pos:column="67">)<pos:position pos:line="1814" pos:column="68"/></operator> <name pos:line="1814" pos:column="69">cons<pos:position pos:line="1814" pos:column="73"/></name></expr></argument>)<pos:position pos:line="1814" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="1814" pos:column="75"/></expr_stmt>
            <return pos:line="1815" pos:column="13">return;<pos:position pos:line="1815" pos:column="20"/></return>
        }<pos:position pos:line="1816" pos:column="10"/></block></then></if>
        <throw pos:line="1817" pos:column="9">throw <expr><operator pos:line="1817" pos:column="15">new<pos:position pos:line="1817" pos:column="18"/></operator> <call><name pos:line="1817" pos:column="19">IllegalArgumentException<pos:position pos:line="1817" pos:column="43"/></name><argument_list pos:line="1817" pos:column="43">(<argument><expr><literal type="string" pos:line="1817" pos:column="44">"handle: "<pos:position pos:line="1817" pos:column="54"/></literal> <operator pos:line="1817" pos:column="55">+<pos:position pos:line="1817" pos:column="56"/></operator> <name pos:line="1817" pos:column="57">handle<pos:position pos:line="1817" pos:column="63"/></name>
                <operator pos:line="1818" pos:column="17">+<pos:position pos:line="1818" pos:column="18"/></operator> <literal type="string" pos:line="1818" pos:column="19">" or cons: "<pos:position pos:line="1818" pos:column="31"/></literal> <operator pos:line="1818" pos:column="32">+<pos:position pos:line="1818" pos:column="33"/></operator> <name pos:line="1818" pos:column="34">cons<pos:position pos:line="1818" pos:column="38"/></name></expr></argument>)<pos:position pos:line="1818" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="1818" pos:column="40"/></throw>
    }<pos:position pos:line="1819" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="1821" pos:column="5">/**
     * Removes a owned model element from a namespace.
     *
     * @param handle is the name space
     * @param value is the model element
     */</comment>
    <function><specifier pos:line="1827" pos:column="5">public<pos:position pos:line="1827" pos:column="11"/></specifier> <type><name pos:line="1827" pos:column="12">void<pos:position pos:line="1827" pos:column="16"/></name></type> <name pos:line="1827" pos:column="17">removeOwnedElement<pos:position pos:line="1827" pos:column="35"/></name><parameter_list pos:line="1827" pos:column="35">(<parameter><decl><type><name pos:line="1827" pos:column="36">Object<pos:position pos:line="1827" pos:column="42"/></name></type> <name pos:line="1827" pos:column="43">handle<pos:position pos:line="1827" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1827" pos:column="51">Object<pos:position pos:line="1827" pos:column="57"/></name></type> <name pos:line="1827" pos:column="58">value<pos:position pos:line="1827" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1827" pos:column="64"/></parameter_list> <block pos:line="1827" pos:column="65">{
        <if pos:line="1828" pos:column="9">if <condition pos:line="1828" pos:column="12">(<expr><name pos:line="1828" pos:column="13">handle<pos:position pos:line="1828" pos:column="19"/></name> <operator pos:line="1828" pos:column="20">instanceof<pos:position pos:line="1828" pos:column="30"/></operator> <name pos:line="1828" pos:column="31">MNamespace<pos:position pos:line="1828" pos:column="41"/></name>
                <operator pos:line="1829" pos:column="17">&amp;&amp;<pos:position pos:line="1829" pos:column="27"/></operator> <name pos:line="1829" pos:column="20">value<pos:position pos:line="1829" pos:column="25"/></name> <operator pos:line="1829" pos:column="26">instanceof<pos:position pos:line="1829" pos:column="36"/></operator> <name pos:line="1829" pos:column="37">MModelElement<pos:position pos:line="1829" pos:column="50"/></name></expr>)<pos:position pos:line="1829" pos:column="51"/></condition><then pos:line="1829" pos:column="51"> <block pos:line="1829" pos:column="52">{
            <expr_stmt><expr><operator pos:line="1830" pos:column="13">(<pos:position pos:line="1830" pos:column="14"/></operator><operator pos:line="1830" pos:column="14">(<pos:position pos:line="1830" pos:column="15"/></operator><name pos:line="1830" pos:column="15">MNamespace<pos:position pos:line="1830" pos:column="25"/></name><operator pos:line="1830" pos:column="25">)<pos:position pos:line="1830" pos:column="26"/></operator> <name pos:line="1830" pos:column="27">handle<pos:position pos:line="1830" pos:column="33"/></name><operator pos:line="1830" pos:column="33">)<pos:position pos:line="1830" pos:column="34"/></operator><operator pos:line="1830" pos:column="34">.<pos:position pos:line="1830" pos:column="35"/></operator><call><name pos:line="1830" pos:column="35">removeOwnedElement<pos:position pos:line="1830" pos:column="53"/></name><argument_list pos:line="1830" pos:column="53">(<argument><expr><operator pos:line="1830" pos:column="54">(<pos:position pos:line="1830" pos:column="55"/></operator><name pos:line="1830" pos:column="55">MModelElement<pos:position pos:line="1830" pos:column="68"/></name><operator pos:line="1830" pos:column="68">)<pos:position pos:line="1830" pos:column="69"/></operator> <name pos:line="1830" pos:column="70">value<pos:position pos:line="1830" pos:column="75"/></name></expr></argument>)<pos:position pos:line="1830" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="1830" pos:column="77"/></expr_stmt>
            <return pos:line="1831" pos:column="13">return;<pos:position pos:line="1831" pos:column="20"/></return>
        }<pos:position pos:line="1832" pos:column="10"/></block></then></if>
        <throw pos:line="1833" pos:column="9">throw <expr><operator pos:line="1833" pos:column="15">new<pos:position pos:line="1833" pos:column="18"/></operator> <call><name pos:line="1833" pos:column="19">IllegalArgumentException<pos:position pos:line="1833" pos:column="43"/></name><argument_list pos:line="1833" pos:column="43">(<argument><expr><literal type="string" pos:line="1833" pos:column="44">"handle: "<pos:position pos:line="1833" pos:column="54"/></literal> <operator pos:line="1833" pos:column="55">+<pos:position pos:line="1833" pos:column="56"/></operator> <name pos:line="1833" pos:column="57">handle<pos:position pos:line="1833" pos:column="63"/></name>
                <operator pos:line="1834" pos:column="17">+<pos:position pos:line="1834" pos:column="18"/></operator> <literal type="string" pos:line="1834" pos:column="19">" or value: "<pos:position pos:line="1834" pos:column="32"/></literal> <operator pos:line="1834" pos:column="33">+<pos:position pos:line="1834" pos:column="34"/></operator> <name pos:line="1834" pos:column="35">value<pos:position pos:line="1834" pos:column="40"/></name></expr></argument>)<pos:position pos:line="1834" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="1834" pos:column="42"/></throw>
    }<pos:position pos:line="1835" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="1837" pos:column="5">/**
     * This method removes a parameter from an operation.
     *
     * @param handle The operation.
     * @param parameter The parameter.
     */</comment>
    <function><specifier pos:line="1843" pos:column="5">public<pos:position pos:line="1843" pos:column="11"/></specifier> <type><name pos:line="1843" pos:column="12">void<pos:position pos:line="1843" pos:column="16"/></name></type> <name pos:line="1843" pos:column="17">removeParameter<pos:position pos:line="1843" pos:column="32"/></name><parameter_list pos:line="1843" pos:column="32">(<parameter><decl><type><name pos:line="1843" pos:column="33">Object<pos:position pos:line="1843" pos:column="39"/></name></type> <name pos:line="1843" pos:column="40">handle<pos:position pos:line="1843" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1843" pos:column="48">Object<pos:position pos:line="1843" pos:column="54"/></name></type> <name pos:line="1843" pos:column="55">parameter<pos:position pos:line="1843" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1843" pos:column="65"/></parameter_list> <block pos:line="1843" pos:column="66">{
        <if pos:line="1844" pos:column="9">if <condition pos:line="1844" pos:column="12">(<expr><name pos:line="1844" pos:column="13">parameter<pos:position pos:line="1844" pos:column="22"/></name> <operator pos:line="1844" pos:column="23">instanceof<pos:position pos:line="1844" pos:column="33"/></operator> <name pos:line="1844" pos:column="34">MParameter<pos:position pos:line="1844" pos:column="44"/></name></expr>)<pos:position pos:line="1844" pos:column="45"/></condition><then pos:line="1844" pos:column="45"> <block pos:line="1844" pos:column="46">{
            <if pos:line="1845" pos:column="13">if <condition pos:line="1845" pos:column="16">(<expr><name pos:line="1845" pos:column="17">handle<pos:position pos:line="1845" pos:column="23"/></name> <operator pos:line="1845" pos:column="24">instanceof<pos:position pos:line="1845" pos:column="34"/></operator> <name pos:line="1845" pos:column="35">MObjectFlowState<pos:position pos:line="1845" pos:column="51"/></name></expr>)<pos:position pos:line="1845" pos:column="52"/></condition><then pos:line="1845" pos:column="52"> <block pos:line="1845" pos:column="53">{
                <expr_stmt><expr><operator pos:line="1846" pos:column="17">(<pos:position pos:line="1846" pos:column="18"/></operator><operator pos:line="1846" pos:column="18">(<pos:position pos:line="1846" pos:column="19"/></operator><name pos:line="1846" pos:column="19">MObjectFlowState<pos:position pos:line="1846" pos:column="35"/></name><operator pos:line="1846" pos:column="35">)<pos:position pos:line="1846" pos:column="36"/></operator> <name pos:line="1846" pos:column="37">handle<pos:position pos:line="1846" pos:column="43"/></name><operator pos:line="1846" pos:column="43">)<pos:position pos:line="1846" pos:column="44"/></operator><operator pos:line="1846" pos:column="44">.<pos:position pos:line="1846" pos:column="45"/></operator><call><name pos:line="1846" pos:column="45">removeParameter<pos:position pos:line="1846" pos:column="60"/></name><argument_list pos:line="1846" pos:column="60">(
                        <argument><expr><operator pos:line="1847" pos:column="25">(<pos:position pos:line="1847" pos:column="26"/></operator><name pos:line="1847" pos:column="26">MParameter<pos:position pos:line="1847" pos:column="36"/></name><operator pos:line="1847" pos:column="36">)<pos:position pos:line="1847" pos:column="37"/></operator> <name pos:line="1847" pos:column="38">parameter<pos:position pos:line="1847" pos:column="47"/></name></expr></argument>)<pos:position pos:line="1847" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="1847" pos:column="49"/></expr_stmt>
                <return pos:line="1848" pos:column="17">return;<pos:position pos:line="1848" pos:column="24"/></return>
            }<pos:position pos:line="1849" pos:column="14"/></block></then></if>
            <if pos:line="1850" pos:column="13">if <condition pos:line="1850" pos:column="16">(<expr><name pos:line="1850" pos:column="17">handle<pos:position pos:line="1850" pos:column="23"/></name> <operator pos:line="1850" pos:column="24">instanceof<pos:position pos:line="1850" pos:column="34"/></operator> <name pos:line="1850" pos:column="35">MEvent<pos:position pos:line="1850" pos:column="41"/></name></expr>)<pos:position pos:line="1850" pos:column="42"/></condition><then pos:line="1850" pos:column="42"> <block pos:line="1850" pos:column="43">{
                <expr_stmt><expr><operator pos:line="1851" pos:column="17">(<pos:position pos:line="1851" pos:column="18"/></operator><operator pos:line="1851" pos:column="18">(<pos:position pos:line="1851" pos:column="19"/></operator><name pos:line="1851" pos:column="19">MEvent<pos:position pos:line="1851" pos:column="25"/></name><operator pos:line="1851" pos:column="25">)<pos:position pos:line="1851" pos:column="26"/></operator> <name pos:line="1851" pos:column="27">handle<pos:position pos:line="1851" pos:column="33"/></name><operator pos:line="1851" pos:column="33">)<pos:position pos:line="1851" pos:column="34"/></operator><operator pos:line="1851" pos:column="34">.<pos:position pos:line="1851" pos:column="35"/></operator><call><name pos:line="1851" pos:column="35">removeParameter<pos:position pos:line="1851" pos:column="50"/></name><argument_list pos:line="1851" pos:column="50">(<argument><expr><operator pos:line="1851" pos:column="51">(<pos:position pos:line="1851" pos:column="52"/></operator><name pos:line="1851" pos:column="52">MParameter<pos:position pos:line="1851" pos:column="62"/></name><operator pos:line="1851" pos:column="62">)<pos:position pos:line="1851" pos:column="63"/></operator> <name pos:line="1851" pos:column="64">parameter<pos:position pos:line="1851" pos:column="73"/></name></expr></argument>)<pos:position pos:line="1851" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="1851" pos:column="75"/></expr_stmt>
                <return pos:line="1852" pos:column="17">return;<pos:position pos:line="1852" pos:column="24"/></return>
            }<pos:position pos:line="1853" pos:column="14"/></block></then></if>
            <if pos:line="1854" pos:column="13">if <condition pos:line="1854" pos:column="16">(<expr><name pos:line="1854" pos:column="17">handle<pos:position pos:line="1854" pos:column="23"/></name> <operator pos:line="1854" pos:column="24">instanceof<pos:position pos:line="1854" pos:column="34"/></operator> <name pos:line="1854" pos:column="35">MBehavioralFeature<pos:position pos:line="1854" pos:column="53"/></name></expr>)<pos:position pos:line="1854" pos:column="54"/></condition><then pos:line="1854" pos:column="54"> <block pos:line="1854" pos:column="55">{
                <expr_stmt><expr><operator pos:line="1855" pos:column="17">(<pos:position pos:line="1855" pos:column="18"/></operator><operator pos:line="1855" pos:column="18">(<pos:position pos:line="1855" pos:column="19"/></operator><name pos:line="1855" pos:column="19">MBehavioralFeature<pos:position pos:line="1855" pos:column="37"/></name><operator pos:line="1855" pos:column="37">)<pos:position pos:line="1855" pos:column="38"/></operator> <name pos:line="1855" pos:column="39">handle<pos:position pos:line="1855" pos:column="45"/></name><operator pos:line="1855" pos:column="45">)<pos:position pos:line="1855" pos:column="46"/></operator><operator pos:line="1855" pos:column="46">.<pos:position pos:line="1855" pos:column="47"/></operator><call><name pos:line="1855" pos:column="47">removeParameter<pos:position pos:line="1855" pos:column="62"/></name><argument_list pos:line="1855" pos:column="62">(
                    <argument><expr><operator pos:line="1856" pos:column="21">(<pos:position pos:line="1856" pos:column="22"/></operator><name pos:line="1856" pos:column="22">MParameter<pos:position pos:line="1856" pos:column="32"/></name><operator pos:line="1856" pos:column="32">)<pos:position pos:line="1856" pos:column="33"/></operator> <name pos:line="1856" pos:column="34">parameter<pos:position pos:line="1856" pos:column="43"/></name></expr></argument>)<pos:position pos:line="1856" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="1856" pos:column="45"/></expr_stmt>
                <return pos:line="1857" pos:column="17">return;<pos:position pos:line="1857" pos:column="24"/></return>
            }<pos:position pos:line="1858" pos:column="14"/></block></then></if>
            <if pos:line="1859" pos:column="13">if <condition pos:line="1859" pos:column="16">(<expr><name pos:line="1859" pos:column="17">handle<pos:position pos:line="1859" pos:column="23"/></name> <operator pos:line="1859" pos:column="24">instanceof<pos:position pos:line="1859" pos:column="34"/></operator> <name pos:line="1859" pos:column="35">MClassifier<pos:position pos:line="1859" pos:column="46"/></name></expr>)<pos:position pos:line="1859" pos:column="47"/></condition><then pos:line="1859" pos:column="47"> <block pos:line="1859" pos:column="48">{
                <expr_stmt><expr><operator pos:line="1860" pos:column="17">(<pos:position pos:line="1860" pos:column="18"/></operator><operator pos:line="1860" pos:column="18">(<pos:position pos:line="1860" pos:column="19"/></operator><name pos:line="1860" pos:column="19">MClassifier<pos:position pos:line="1860" pos:column="30"/></name><operator pos:line="1860" pos:column="30">)<pos:position pos:line="1860" pos:column="31"/></operator> <name pos:line="1860" pos:column="32">handle<pos:position pos:line="1860" pos:column="38"/></name><operator pos:line="1860" pos:column="38">)<pos:position pos:line="1860" pos:column="39"/></operator><operator pos:line="1860" pos:column="39">.<pos:position pos:line="1860" pos:column="40"/></operator><call><name pos:line="1860" pos:column="40">removeParameter<pos:position pos:line="1860" pos:column="55"/></name><argument_list pos:line="1860" pos:column="55">(<argument><expr><operator pos:line="1860" pos:column="56">(<pos:position pos:line="1860" pos:column="57"/></operator><name pos:line="1860" pos:column="57">MParameter<pos:position pos:line="1860" pos:column="67"/></name><operator pos:line="1860" pos:column="67">)<pos:position pos:line="1860" pos:column="68"/></operator> <name pos:line="1860" pos:column="69">parameter<pos:position pos:line="1860" pos:column="78"/></name></expr></argument>)<pos:position pos:line="1860" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="1860" pos:column="80"/></expr_stmt>
                <return pos:line="1861" pos:column="17">return;<pos:position pos:line="1861" pos:column="24"/></return>
            }<pos:position pos:line="1862" pos:column="14"/></block></then></if>
        }<pos:position pos:line="1863" pos:column="10"/></block></then></if>

        <throw pos:line="1865" pos:column="9">throw <expr><operator pos:line="1865" pos:column="15">new<pos:position pos:line="1865" pos:column="18"/></operator> <call><name pos:line="1865" pos:column="19">IllegalArgumentException<pos:position pos:line="1865" pos:column="43"/></name><argument_list pos:line="1865" pos:column="43">(<argument><expr><literal type="string" pos:line="1865" pos:column="44">"handle: "<pos:position pos:line="1865" pos:column="54"/></literal> <operator pos:line="1865" pos:column="55">+<pos:position pos:line="1865" pos:column="56"/></operator> <name pos:line="1865" pos:column="57">handle<pos:position pos:line="1865" pos:column="63"/></name>
                <operator pos:line="1866" pos:column="17">+<pos:position pos:line="1866" pos:column="18"/></operator> <literal type="string" pos:line="1866" pos:column="19">" or parameter: "<pos:position pos:line="1866" pos:column="36"/></literal> <operator pos:line="1866" pos:column="37">+<pos:position pos:line="1866" pos:column="38"/></operator> <name pos:line="1866" pos:column="39">parameter<pos:position pos:line="1866" pos:column="48"/></name></expr></argument>)<pos:position pos:line="1866" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="1866" pos:column="50"/></throw>
    }<pos:position pos:line="1867" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="1869" pos:column="5">/**
     * Remove a source flow from a model element.
     *
     * @param handle The model element.
     * @param flow The flow.
     */</comment>
    <function><specifier pos:line="1875" pos:column="5">public<pos:position pos:line="1875" pos:column="11"/></specifier> <type><name pos:line="1875" pos:column="12">void<pos:position pos:line="1875" pos:column="16"/></name></type> <name pos:line="1875" pos:column="17">removeSourceFlow<pos:position pos:line="1875" pos:column="33"/></name><parameter_list pos:line="1875" pos:column="33">(<parameter><decl><type><name pos:line="1875" pos:column="34">Object<pos:position pos:line="1875" pos:column="40"/></name></type> <name pos:line="1875" pos:column="41">handle<pos:position pos:line="1875" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1875" pos:column="49">Object<pos:position pos:line="1875" pos:column="55"/></name></type> <name pos:line="1875" pos:column="56">flow<pos:position pos:line="1875" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1875" pos:column="61"/></parameter_list> <block pos:line="1875" pos:column="62">{
        <if pos:line="1876" pos:column="9">if <condition pos:line="1876" pos:column="12">(<expr><name pos:line="1876" pos:column="13">handle<pos:position pos:line="1876" pos:column="19"/></name> <operator pos:line="1876" pos:column="20">instanceof<pos:position pos:line="1876" pos:column="30"/></operator> <name pos:line="1876" pos:column="31">MModelElement<pos:position pos:line="1876" pos:column="44"/></name>
                <operator pos:line="1877" pos:column="17">&amp;&amp;<pos:position pos:line="1877" pos:column="27"/></operator> <name pos:line="1877" pos:column="20">flow<pos:position pos:line="1877" pos:column="24"/></name> <operator pos:line="1877" pos:column="25">instanceof<pos:position pos:line="1877" pos:column="35"/></operator> <name pos:line="1877" pos:column="36">MFlow<pos:position pos:line="1877" pos:column="41"/></name></expr>)<pos:position pos:line="1877" pos:column="42"/></condition><then pos:line="1877" pos:column="42"> <block pos:line="1877" pos:column="43">{
            <expr_stmt><expr><operator pos:line="1878" pos:column="13">(<pos:position pos:line="1878" pos:column="14"/></operator><operator pos:line="1878" pos:column="14">(<pos:position pos:line="1878" pos:column="15"/></operator><name pos:line="1878" pos:column="15">MModelElement<pos:position pos:line="1878" pos:column="28"/></name><operator pos:line="1878" pos:column="28">)<pos:position pos:line="1878" pos:column="29"/></operator> <name pos:line="1878" pos:column="30">handle<pos:position pos:line="1878" pos:column="36"/></name><operator pos:line="1878" pos:column="36">)<pos:position pos:line="1878" pos:column="37"/></operator><operator pos:line="1878" pos:column="37">.<pos:position pos:line="1878" pos:column="38"/></operator><call><name pos:line="1878" pos:column="38">removeSourceFlow<pos:position pos:line="1878" pos:column="54"/></name><argument_list pos:line="1878" pos:column="54">(<argument><expr><operator pos:line="1878" pos:column="55">(<pos:position pos:line="1878" pos:column="56"/></operator><name pos:line="1878" pos:column="56">MFlow<pos:position pos:line="1878" pos:column="61"/></name><operator pos:line="1878" pos:column="61">)<pos:position pos:line="1878" pos:column="62"/></operator> <name pos:line="1878" pos:column="63">flow<pos:position pos:line="1878" pos:column="67"/></name></expr></argument>)<pos:position pos:line="1878" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="1878" pos:column="69"/></expr_stmt>
            <return pos:line="1879" pos:column="13">return;<pos:position pos:line="1879" pos:column="20"/></return>
        }<pos:position pos:line="1880" pos:column="10"/></block></then></if>

        <throw pos:line="1882" pos:column="9">throw <expr><operator pos:line="1882" pos:column="15">new<pos:position pos:line="1882" pos:column="18"/></operator> <call><name pos:line="1882" pos:column="19">IllegalArgumentException<pos:position pos:line="1882" pos:column="43"/></name><argument_list pos:line="1882" pos:column="43">(<argument><expr><literal type="string" pos:line="1882" pos:column="44">"handle: "<pos:position pos:line="1882" pos:column="54"/></literal> <operator pos:line="1882" pos:column="55">+<pos:position pos:line="1882" pos:column="56"/></operator> <name pos:line="1882" pos:column="57">handle<pos:position pos:line="1882" pos:column="63"/></name>
                <operator pos:line="1883" pos:column="17">+<pos:position pos:line="1883" pos:column="18"/></operator> <literal type="string" pos:line="1883" pos:column="19">" or flow: "<pos:position pos:line="1883" pos:column="31"/></literal> <operator pos:line="1883" pos:column="32">+<pos:position pos:line="1883" pos:column="33"/></operator> <name pos:line="1883" pos:column="34">flow<pos:position pos:line="1883" pos:column="38"/></name></expr></argument>)<pos:position pos:line="1883" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="1883" pos:column="40"/></throw>
    }<pos:position pos:line="1884" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="1886" pos:column="5">/**
     * Adds a supplier dependency to some modelelement.
     *
     * @param supplier the supplier
     * @param dependency the dependency
     */</comment>
    <function><specifier pos:line="1892" pos:column="5">public<pos:position pos:line="1892" pos:column="11"/></specifier> <type><name pos:line="1892" pos:column="12">void<pos:position pos:line="1892" pos:column="16"/></name></type> <name pos:line="1892" pos:column="17">removeSupplierDependency<pos:position pos:line="1892" pos:column="41"/></name><parameter_list pos:line="1892" pos:column="41">(
            <parameter><decl><type><name pos:line="1893" pos:column="13">Object<pos:position pos:line="1893" pos:column="19"/></name></type> <name pos:line="1893" pos:column="20">supplier<pos:position pos:line="1893" pos:column="28"/></name></decl></parameter>,
            <parameter><decl><type><name pos:line="1894" pos:column="13">Object<pos:position pos:line="1894" pos:column="19"/></name></type> <name pos:line="1894" pos:column="20">dependency<pos:position pos:line="1894" pos:column="30"/></name></decl></parameter>)<pos:position pos:line="1894" pos:column="31"/></parameter_list> <block pos:line="1894" pos:column="32">{
        <if pos:line="1895" pos:column="9">if <condition pos:line="1895" pos:column="12">(<expr><name pos:line="1895" pos:column="13">supplier<pos:position pos:line="1895" pos:column="21"/></name> <operator pos:line="1895" pos:column="22">instanceof<pos:position pos:line="1895" pos:column="32"/></operator> <name pos:line="1895" pos:column="33">MModelElement<pos:position pos:line="1895" pos:column="46"/></name>
                <operator pos:line="1896" pos:column="17">&amp;&amp;<pos:position pos:line="1896" pos:column="27"/></operator> <name pos:line="1896" pos:column="20">dependency<pos:position pos:line="1896" pos:column="30"/></name> <operator pos:line="1896" pos:column="31">instanceof<pos:position pos:line="1896" pos:column="41"/></operator> <name pos:line="1896" pos:column="42">MDependency<pos:position pos:line="1896" pos:column="53"/></name></expr>)<pos:position pos:line="1896" pos:column="54"/></condition><then pos:line="1896" pos:column="54"> <block pos:line="1896" pos:column="55">{
            <decl_stmt><decl><type><name pos:line="1897" pos:column="13">MModelElement<pos:position pos:line="1897" pos:column="26"/></name></type> <name pos:line="1897" pos:column="27">me<pos:position pos:line="1897" pos:column="29"/></name> <init pos:line="1897" pos:column="30">= <expr><operator pos:line="1897" pos:column="32">(<pos:position pos:line="1897" pos:column="33"/></operator><name pos:line="1897" pos:column="33">MModelElement<pos:position pos:line="1897" pos:column="46"/></name><operator pos:line="1897" pos:column="46">)<pos:position pos:line="1897" pos:column="47"/></operator> <name pos:line="1897" pos:column="48">supplier<pos:position pos:line="1897" pos:column="56"/></name></expr></init></decl>;<pos:position pos:line="1897" pos:column="57"/></decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="1898" pos:column="13">me<pos:position pos:line="1898" pos:column="15"/></name><operator pos:line="1898" pos:column="15">.<pos:position pos:line="1898" pos:column="16"/></operator><name pos:line="1898" pos:column="16">removeSupplierDependency<pos:position pos:line="1898" pos:column="40"/></name></name><argument_list pos:line="1898" pos:column="40">(<argument><expr><operator pos:line="1898" pos:column="41">(<pos:position pos:line="1898" pos:column="42"/></operator><name pos:line="1898" pos:column="42">MDependency<pos:position pos:line="1898" pos:column="53"/></name><operator pos:line="1898" pos:column="53">)<pos:position pos:line="1898" pos:column="54"/></operator> <name pos:line="1898" pos:column="55">dependency<pos:position pos:line="1898" pos:column="65"/></name></expr></argument>)<pos:position pos:line="1898" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="1898" pos:column="67"/></expr_stmt>
            <return pos:line="1899" pos:column="13">return;<pos:position pos:line="1899" pos:column="20"/></return>
        }<pos:position pos:line="1900" pos:column="10"/></block></then></if>
        <throw pos:line="1901" pos:column="9">throw <expr><operator pos:line="1901" pos:column="15">new<pos:position pos:line="1901" pos:column="18"/></operator> <call><name pos:line="1901" pos:column="19">IllegalArgumentException<pos:position pos:line="1901" pos:column="43"/></name><argument_list pos:line="1901" pos:column="43">(<argument><expr><literal type="string" pos:line="1901" pos:column="44">"supplier: "<pos:position pos:line="1901" pos:column="56"/></literal> <operator pos:line="1901" pos:column="57">+<pos:position pos:line="1901" pos:column="58"/></operator> <name pos:line="1901" pos:column="59">supplier<pos:position pos:line="1901" pos:column="67"/></name>
                <operator pos:line="1902" pos:column="17">+<pos:position pos:line="1902" pos:column="18"/></operator> <literal type="string" pos:line="1902" pos:column="19">" or dependency: "<pos:position pos:line="1902" pos:column="37"/></literal> <operator pos:line="1902" pos:column="38">+<pos:position pos:line="1902" pos:column="39"/></operator> <name pos:line="1902" pos:column="40">dependency<pos:position pos:line="1902" pos:column="50"/></name></expr></argument>)<pos:position pos:line="1902" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="1902" pos:column="52"/></throw>
    }<pos:position pos:line="1903" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="1905" pos:column="5">/**
     * Removes a named tagged value from a model element, ie subsequent calls
     * to getTaggedValue will return null for name, at least until a tagged
     * value with that name has been added again.
     *
     * @param handle the model element to remove the tagged value from
     * @param name the name of the tagged value
     * @throws IllegalArgumentException if handle isn't a model element
     */</comment>
    <function><specifier pos:line="1914" pos:column="5">public<pos:position pos:line="1914" pos:column="11"/></specifier> <type><name pos:line="1914" pos:column="12">void<pos:position pos:line="1914" pos:column="16"/></name></type> <name pos:line="1914" pos:column="17">removeTaggedValue<pos:position pos:line="1914" pos:column="34"/></name><parameter_list pos:line="1914" pos:column="34">(<parameter><decl><type><name pos:line="1914" pos:column="35">Object<pos:position pos:line="1914" pos:column="41"/></name></type> <name pos:line="1914" pos:column="42">handle<pos:position pos:line="1914" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1914" pos:column="50">String<pos:position pos:line="1914" pos:column="56"/></name></type> <name pos:line="1914" pos:column="57">name<pos:position pos:line="1914" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1914" pos:column="62"/></parameter_list> <block pos:line="1914" pos:column="63">{
        <if pos:line="1915" pos:column="9">if <condition pos:line="1915" pos:column="12">(<expr><name pos:line="1915" pos:column="13">handle<pos:position pos:line="1915" pos:column="19"/></name> <operator pos:line="1915" pos:column="20">instanceof<pos:position pos:line="1915" pos:column="30"/></operator> <name pos:line="1915" pos:column="31">MModelElement<pos:position pos:line="1915" pos:column="44"/></name></expr>)<pos:position pos:line="1915" pos:column="45"/></condition><then pos:line="1915" pos:column="45"> <block pos:line="1915" pos:column="46">{
            <decl_stmt><decl><type><name pos:line="1916" pos:column="13">MModelElement<pos:position pos:line="1916" pos:column="26"/></name></type> <name pos:line="1916" pos:column="27">me<pos:position pos:line="1916" pos:column="29"/></name> <init pos:line="1916" pos:column="30">= <expr><operator pos:line="1916" pos:column="32">(<pos:position pos:line="1916" pos:column="33"/></operator><name pos:line="1916" pos:column="33">MModelElement<pos:position pos:line="1916" pos:column="46"/></name><operator pos:line="1916" pos:column="46">)<pos:position pos:line="1916" pos:column="47"/></operator> <name pos:line="1916" pos:column="48">handle<pos:position pos:line="1916" pos:column="54"/></name></expr></init></decl>;<pos:position pos:line="1916" pos:column="55"/></decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="1917" pos:column="13">me<pos:position pos:line="1917" pos:column="15"/></name><operator pos:line="1917" pos:column="15">.<pos:position pos:line="1917" pos:column="16"/></operator><name pos:line="1917" pos:column="16">removeTaggedValue<pos:position pos:line="1917" pos:column="33"/></name></name><argument_list pos:line="1917" pos:column="33">(<argument><expr><name pos:line="1917" pos:column="34">name<pos:position pos:line="1917" pos:column="38"/></name></expr></argument>)<pos:position pos:line="1917" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="1917" pos:column="40"/></expr_stmt>
            <return pos:line="1918" pos:column="13">return;<pos:position pos:line="1918" pos:column="20"/></return>
        }<pos:position pos:line="1919" pos:column="10"/></block></then></if>

        <throw pos:line="1921" pos:column="9">throw <expr><operator pos:line="1921" pos:column="15">new<pos:position pos:line="1921" pos:column="18"/></operator> <call><name pos:line="1921" pos:column="19">IllegalArgumentException<pos:position pos:line="1921" pos:column="43"/></name><argument_list pos:line="1921" pos:column="43">(<argument><expr><literal type="string" pos:line="1921" pos:column="44">"handle: "<pos:position pos:line="1921" pos:column="54"/></literal> <operator pos:line="1921" pos:column="55">+<pos:position pos:line="1921" pos:column="56"/></operator> <name pos:line="1921" pos:column="57">handle<pos:position pos:line="1921" pos:column="63"/></name></expr></argument>)<pos:position pos:line="1921" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="1921" pos:column="65"/></throw>
    }<pos:position pos:line="1922" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="1924" pos:column="5">/**
     * Add a target flow to a model element.
     *
     * @param handle The model element.
     * @param flow The flow to add.
     */</comment>
    <function><specifier pos:line="1930" pos:column="5">public<pos:position pos:line="1930" pos:column="11"/></specifier> <type><name pos:line="1930" pos:column="12">void<pos:position pos:line="1930" pos:column="16"/></name></type> <name pos:line="1930" pos:column="17">removeTargetFlow<pos:position pos:line="1930" pos:column="33"/></name><parameter_list pos:line="1930" pos:column="33">(<parameter><decl><type><name pos:line="1930" pos:column="34">Object<pos:position pos:line="1930" pos:column="40"/></name></type> <name pos:line="1930" pos:column="41">handle<pos:position pos:line="1930" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1930" pos:column="49">Object<pos:position pos:line="1930" pos:column="55"/></name></type> <name pos:line="1930" pos:column="56">flow<pos:position pos:line="1930" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1930" pos:column="61"/></parameter_list> <block pos:line="1930" pos:column="62">{
        <if pos:line="1931" pos:column="9">if <condition pos:line="1931" pos:column="12">(<expr><name pos:line="1931" pos:column="13">handle<pos:position pos:line="1931" pos:column="19"/></name> <operator pos:line="1931" pos:column="20">instanceof<pos:position pos:line="1931" pos:column="30"/></operator> <name pos:line="1931" pos:column="31">MModelElement<pos:position pos:line="1931" pos:column="44"/></name>
                <operator pos:line="1932" pos:column="17">&amp;&amp;<pos:position pos:line="1932" pos:column="27"/></operator> <name pos:line="1932" pos:column="20">flow<pos:position pos:line="1932" pos:column="24"/></name> <operator pos:line="1932" pos:column="25">instanceof<pos:position pos:line="1932" pos:column="35"/></operator> <name pos:line="1932" pos:column="36">MFlow<pos:position pos:line="1932" pos:column="41"/></name></expr>)<pos:position pos:line="1932" pos:column="42"/></condition><then pos:line="1932" pos:column="42"> <block pos:line="1932" pos:column="43">{
            <expr_stmt><expr><operator pos:line="1933" pos:column="13">(<pos:position pos:line="1933" pos:column="14"/></operator><operator pos:line="1933" pos:column="14">(<pos:position pos:line="1933" pos:column="15"/></operator><name pos:line="1933" pos:column="15">MModelElement<pos:position pos:line="1933" pos:column="28"/></name><operator pos:line="1933" pos:column="28">)<pos:position pos:line="1933" pos:column="29"/></operator> <name pos:line="1933" pos:column="30">handle<pos:position pos:line="1933" pos:column="36"/></name><operator pos:line="1933" pos:column="36">)<pos:position pos:line="1933" pos:column="37"/></operator><operator pos:line="1933" pos:column="37">.<pos:position pos:line="1933" pos:column="38"/></operator><call><name pos:line="1933" pos:column="38">removeTargetFlow<pos:position pos:line="1933" pos:column="54"/></name><argument_list pos:line="1933" pos:column="54">(<argument><expr><operator pos:line="1933" pos:column="55">(<pos:position pos:line="1933" pos:column="56"/></operator><name pos:line="1933" pos:column="56">MFlow<pos:position pos:line="1933" pos:column="61"/></name><operator pos:line="1933" pos:column="61">)<pos:position pos:line="1933" pos:column="62"/></operator> <name pos:line="1933" pos:column="63">flow<pos:position pos:line="1933" pos:column="67"/></name></expr></argument>)<pos:position pos:line="1933" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="1933" pos:column="69"/></expr_stmt>
            <return pos:line="1934" pos:column="13">return;<pos:position pos:line="1934" pos:column="20"/></return>
        }<pos:position pos:line="1935" pos:column="10"/></block></then></if>

        <throw pos:line="1937" pos:column="9">throw <expr><operator pos:line="1937" pos:column="15">new<pos:position pos:line="1937" pos:column="18"/></operator> <call><name pos:line="1937" pos:column="19">IllegalArgumentException<pos:position pos:line="1937" pos:column="43"/></name><argument_list pos:line="1937" pos:column="43">(<argument><expr><literal type="string" pos:line="1937" pos:column="44">"handle: "<pos:position pos:line="1937" pos:column="54"/></literal> <operator pos:line="1937" pos:column="55">+<pos:position pos:line="1937" pos:column="56"/></operator> <name pos:line="1937" pos:column="57">handle<pos:position pos:line="1937" pos:column="63"/></name>
                <operator pos:line="1938" pos:column="17">+<pos:position pos:line="1938" pos:column="18"/></operator> <literal type="string" pos:line="1938" pos:column="19">" or flow: "<pos:position pos:line="1938" pos:column="31"/></literal> <operator pos:line="1938" pos:column="32">+<pos:position pos:line="1938" pos:column="33"/></operator> <name pos:line="1938" pos:column="34">flow<pos:position pos:line="1938" pos:column="38"/></name></expr></argument>)<pos:position pos:line="1938" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="1938" pos:column="40"/></throw>
    }<pos:position pos:line="1939" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="1941" pos:column="5">/**
     * Adds an annotated element to a comment.
     *
     * @param comment The comment to which the element is annotated
     * @param annotatedElement The element to annotate
     */</comment>
    <function><specifier pos:line="1947" pos:column="5">public<pos:position pos:line="1947" pos:column="11"/></specifier> <type><name pos:line="1947" pos:column="12">void<pos:position pos:line="1947" pos:column="16"/></name></type> <name pos:line="1947" pos:column="17">addAnnotatedElement<pos:position pos:line="1947" pos:column="36"/></name><parameter_list pos:line="1947" pos:column="36">(<parameter><decl><type><name pos:line="1947" pos:column="37">Object<pos:position pos:line="1947" pos:column="43"/></name></type> <name pos:line="1947" pos:column="44">comment<pos:position pos:line="1947" pos:column="51"/></name></decl></parameter>,
            <parameter><decl><type><name pos:line="1948" pos:column="13">Object<pos:position pos:line="1948" pos:column="19"/></name></type> <name pos:line="1948" pos:column="20">annotatedElement<pos:position pos:line="1948" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="1948" pos:column="37"/></parameter_list> <block pos:line="1948" pos:column="38">{
        <if pos:line="1949" pos:column="9">if <condition pos:line="1949" pos:column="12">(<expr><name pos:line="1949" pos:column="13">comment<pos:position pos:line="1949" pos:column="20"/></name> <operator pos:line="1949" pos:column="21">instanceof<pos:position pos:line="1949" pos:column="31"/></operator> <name pos:line="1949" pos:column="32">MComment<pos:position pos:line="1949" pos:column="40"/></name>
                <operator pos:line="1950" pos:column="17">&amp;&amp;<pos:position pos:line="1950" pos:column="27"/></operator> <name pos:line="1950" pos:column="20">annotatedElement<pos:position pos:line="1950" pos:column="36"/></name> <operator pos:line="1950" pos:column="37">instanceof<pos:position pos:line="1950" pos:column="47"/></operator> <name pos:line="1950" pos:column="48">MModelElement<pos:position pos:line="1950" pos:column="61"/></name></expr>)<pos:position pos:line="1950" pos:column="62"/></condition><then pos:line="1950" pos:column="62"> <block pos:line="1950" pos:column="63">{
            <expr_stmt><expr><operator pos:line="1951" pos:column="13">(<pos:position pos:line="1951" pos:column="14"/></operator><operator pos:line="1951" pos:column="14">(<pos:position pos:line="1951" pos:column="15"/></operator><name pos:line="1951" pos:column="15">MComment<pos:position pos:line="1951" pos:column="23"/></name><operator pos:line="1951" pos:column="23">)<pos:position pos:line="1951" pos:column="24"/></operator> <name pos:line="1951" pos:column="25">comment<pos:position pos:line="1951" pos:column="32"/></name><operator pos:line="1951" pos:column="32">)<pos:position pos:line="1951" pos:column="33"/></operator>
                <operator pos:line="1952" pos:column="17">.<pos:position pos:line="1952" pos:column="18"/></operator><call><name pos:line="1952" pos:column="18">addAnnotatedElement<pos:position pos:line="1952" pos:column="37"/></name><argument_list pos:line="1952" pos:column="37">(<argument><expr><operator pos:line="1952" pos:column="38">(<pos:position pos:line="1952" pos:column="39"/></operator><operator pos:line="1952" pos:column="39">(<pos:position pos:line="1952" pos:column="40"/></operator><name pos:line="1952" pos:column="40">MModelElement<pos:position pos:line="1952" pos:column="53"/></name><operator pos:line="1952" pos:column="53">)<pos:position pos:line="1952" pos:column="54"/></operator> <name pos:line="1952" pos:column="55">annotatedElement<pos:position pos:line="1952" pos:column="71"/></name><operator pos:line="1952" pos:column="71">)<pos:position pos:line="1952" pos:column="72"/></operator></expr></argument>)<pos:position pos:line="1952" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="1952" pos:column="74"/></expr_stmt>
            <return pos:line="1953" pos:column="13">return;<pos:position pos:line="1953" pos:column="20"/></return>
        }<pos:position pos:line="1954" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name><name pos:line="1955" pos:column="9">LOG<pos:position pos:line="1955" pos:column="12"/></name><operator pos:line="1955" pos:column="12">.<pos:position pos:line="1955" pos:column="13"/></operator><name pos:line="1955" pos:column="13">error<pos:position pos:line="1955" pos:column="18"/></name></name><argument_list pos:line="1955" pos:column="18">(<argument><expr><literal type="string" pos:line="1955" pos:column="19">"Failed to link a comment to a model element"<pos:position pos:line="1955" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="1955" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="1955" pos:column="66"/></expr_stmt>
        <throw pos:line="1956" pos:column="9">throw <expr><operator pos:line="1956" pos:column="15">new<pos:position pos:line="1956" pos:column="18"/></operator> <call><name pos:line="1956" pos:column="19">IllegalArgumentException<pos:position pos:line="1956" pos:column="43"/></name><argument_list pos:line="1956" pos:column="43">(<argument><expr><literal type="string" pos:line="1956" pos:column="44">"comment: "<pos:position pos:line="1956" pos:column="55"/></literal> <operator pos:line="1956" pos:column="56">+<pos:position pos:line="1956" pos:column="57"/></operator> <name pos:line="1956" pos:column="58">comment<pos:position pos:line="1956" pos:column="65"/></name>
                <operator pos:line="1957" pos:column="17">+<pos:position pos:line="1957" pos:column="18"/></operator> <literal type="string" pos:line="1957" pos:column="19">" or annotatedElement: "<pos:position pos:line="1957" pos:column="43"/></literal> <operator pos:line="1957" pos:column="44">+<pos:position pos:line="1957" pos:column="45"/></operator> <name pos:line="1957" pos:column="46">annotatedElement<pos:position pos:line="1957" pos:column="62"/></name></expr></argument>)<pos:position pos:line="1957" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="1957" pos:column="64"/></throw>
    }<pos:position pos:line="1958" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="1960" pos:column="5">/**
     * Adds a client model element to some dependency.
     *
     * @param handle dependency.
     * @param element The model element.
     * @throws IllegalArgumentException if the handle is not a dependency
     * or the element is not a model element.
     */</comment>
    <function><specifier pos:line="1968" pos:column="5">public<pos:position pos:line="1968" pos:column="11"/></specifier> <type><name pos:line="1968" pos:column="12">void<pos:position pos:line="1968" pos:column="16"/></name></type> <name pos:line="1968" pos:column="17">addClient<pos:position pos:line="1968" pos:column="26"/></name><parameter_list pos:line="1968" pos:column="26">(<parameter><decl><type><name pos:line="1968" pos:column="27">Object<pos:position pos:line="1968" pos:column="33"/></name></type> <name pos:line="1968" pos:column="34">handle<pos:position pos:line="1968" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1968" pos:column="42">Object<pos:position pos:line="1968" pos:column="48"/></name></type> <name pos:line="1968" pos:column="49">element<pos:position pos:line="1968" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1968" pos:column="57"/></parameter_list> <block pos:line="1968" pos:column="58">{
        <if pos:line="1969" pos:column="9">if <condition pos:line="1969" pos:column="12">(<expr><name pos:line="1969" pos:column="13">handle<pos:position pos:line="1969" pos:column="19"/></name> <operator pos:line="1969" pos:column="20">instanceof<pos:position pos:line="1969" pos:column="30"/></operator> <name pos:line="1969" pos:column="31">MDependency<pos:position pos:line="1969" pos:column="42"/></name>
                <operator pos:line="1970" pos:column="17">&amp;&amp;<pos:position pos:line="1970" pos:column="27"/></operator> <name pos:line="1970" pos:column="20">element<pos:position pos:line="1970" pos:column="27"/></name> <operator pos:line="1970" pos:column="28">instanceof<pos:position pos:line="1970" pos:column="38"/></operator> <name pos:line="1970" pos:column="39">MModelElement<pos:position pos:line="1970" pos:column="52"/></name></expr>)<pos:position pos:line="1970" pos:column="53"/></condition><then pos:line="1970" pos:column="53"> <block pos:line="1970" pos:column="54">{
            <expr_stmt><expr><operator pos:line="1971" pos:column="13">(<pos:position pos:line="1971" pos:column="14"/></operator><operator pos:line="1971" pos:column="14">(<pos:position pos:line="1971" pos:column="15"/></operator><name pos:line="1971" pos:column="15">MDependency<pos:position pos:line="1971" pos:column="26"/></name><operator pos:line="1971" pos:column="26">)<pos:position pos:line="1971" pos:column="27"/></operator> <name pos:line="1971" pos:column="28">handle<pos:position pos:line="1971" pos:column="34"/></name><operator pos:line="1971" pos:column="34">)<pos:position pos:line="1971" pos:column="35"/></operator><operator pos:line="1971" pos:column="35">.<pos:position pos:line="1971" pos:column="36"/></operator><call><name pos:line="1971" pos:column="36">addClient<pos:position pos:line="1971" pos:column="45"/></name><argument_list pos:line="1971" pos:column="45">(<argument><expr><operator pos:line="1971" pos:column="46">(<pos:position pos:line="1971" pos:column="47"/></operator><name pos:line="1971" pos:column="47">MModelElement<pos:position pos:line="1971" pos:column="60"/></name><operator pos:line="1971" pos:column="60">)<pos:position pos:line="1971" pos:column="61"/></operator> <name pos:line="1971" pos:column="62">element<pos:position pos:line="1971" pos:column="69"/></name></expr></argument>)<pos:position pos:line="1971" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="1971" pos:column="71"/></expr_stmt>
            <return pos:line="1972" pos:column="13">return;<pos:position pos:line="1972" pos:column="20"/></return>
        }<pos:position pos:line="1973" pos:column="10"/></block></then></if>
        <throw pos:line="1974" pos:column="9">throw <expr><operator pos:line="1974" pos:column="15">new<pos:position pos:line="1974" pos:column="18"/></operator> <call><name pos:line="1974" pos:column="19">IllegalArgumentException<pos:position pos:line="1974" pos:column="43"/></name><argument_list pos:line="1974" pos:column="43">(<argument><expr><literal type="string" pos:line="1974" pos:column="44">"handle: "<pos:position pos:line="1974" pos:column="54"/></literal> <operator pos:line="1974" pos:column="55">+<pos:position pos:line="1974" pos:column="56"/></operator> <name pos:line="1974" pos:column="57">handle<pos:position pos:line="1974" pos:column="63"/></name>
                <operator pos:line="1975" pos:column="17">+<pos:position pos:line="1975" pos:column="18"/></operator> <literal type="string" pos:line="1975" pos:column="19">" or element: "<pos:position pos:line="1975" pos:column="34"/></literal> <operator pos:line="1975" pos:column="35">+<pos:position pos:line="1975" pos:column="36"/></operator> <name pos:line="1975" pos:column="37">element<pos:position pos:line="1975" pos:column="44"/></name></expr></argument>)<pos:position pos:line="1975" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="1975" pos:column="46"/></throw>
    }<pos:position pos:line="1976" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="1978" pos:column="5">/**
     * Adds a client dependency to some modelelement.
     *
     * @param handle the modelelement
     * @param dependency the dependency
     */</comment>
    <function><specifier pos:line="1984" pos:column="5">public<pos:position pos:line="1984" pos:column="11"/></specifier> <type><name pos:line="1984" pos:column="12">void<pos:position pos:line="1984" pos:column="16"/></name></type> <name pos:line="1984" pos:column="17">addClientDependency<pos:position pos:line="1984" pos:column="36"/></name><parameter_list pos:line="1984" pos:column="36">(<parameter><decl><type><name pos:line="1984" pos:column="37">Object<pos:position pos:line="1984" pos:column="43"/></name></type> <name pos:line="1984" pos:column="44">handle<pos:position pos:line="1984" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1984" pos:column="52">Object<pos:position pos:line="1984" pos:column="58"/></name></type> <name pos:line="1984" pos:column="59">dependency<pos:position pos:line="1984" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="1984" pos:column="70"/></parameter_list> <block pos:line="1984" pos:column="71">{
        <if pos:line="1985" pos:column="9">if <condition pos:line="1985" pos:column="12">(<expr><name pos:line="1985" pos:column="13">handle<pos:position pos:line="1985" pos:column="19"/></name> <operator pos:line="1985" pos:column="20">instanceof<pos:position pos:line="1985" pos:column="30"/></operator> <name pos:line="1985" pos:column="31">MModelElement<pos:position pos:line="1985" pos:column="44"/></name>
                <operator pos:line="1986" pos:column="17">&amp;&amp;<pos:position pos:line="1986" pos:column="27"/></operator> <name pos:line="1986" pos:column="20">dependency<pos:position pos:line="1986" pos:column="30"/></name> <operator pos:line="1986" pos:column="31">instanceof<pos:position pos:line="1986" pos:column="41"/></operator> <name pos:line="1986" pos:column="42">MDependency<pos:position pos:line="1986" pos:column="53"/></name></expr>)<pos:position pos:line="1986" pos:column="54"/></condition><then pos:line="1986" pos:column="54"> <block pos:line="1986" pos:column="55">{
            <decl_stmt><decl><type><name pos:line="1987" pos:column="13">MModelElement<pos:position pos:line="1987" pos:column="26"/></name></type> <name pos:line="1987" pos:column="27">me<pos:position pos:line="1987" pos:column="29"/></name> <init pos:line="1987" pos:column="30">= <expr><operator pos:line="1987" pos:column="32">(<pos:position pos:line="1987" pos:column="33"/></operator><name pos:line="1987" pos:column="33">MModelElement<pos:position pos:line="1987" pos:column="46"/></name><operator pos:line="1987" pos:column="46">)<pos:position pos:line="1987" pos:column="47"/></operator> <name pos:line="1987" pos:column="48">handle<pos:position pos:line="1987" pos:column="54"/></name></expr></init></decl>;<pos:position pos:line="1987" pos:column="55"/></decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="1988" pos:column="13">me<pos:position pos:line="1988" pos:column="15"/></name><operator pos:line="1988" pos:column="15">.<pos:position pos:line="1988" pos:column="16"/></operator><name pos:line="1988" pos:column="16">addClientDependency<pos:position pos:line="1988" pos:column="35"/></name></name><argument_list pos:line="1988" pos:column="35">(<argument><expr><operator pos:line="1988" pos:column="36">(<pos:position pos:line="1988" pos:column="37"/></operator><name pos:line="1988" pos:column="37">MDependency<pos:position pos:line="1988" pos:column="48"/></name><operator pos:line="1988" pos:column="48">)<pos:position pos:line="1988" pos:column="49"/></operator> <name pos:line="1988" pos:column="50">dependency<pos:position pos:line="1988" pos:column="60"/></name></expr></argument>)<pos:position pos:line="1988" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="1988" pos:column="62"/></expr_stmt>
            <return pos:line="1989" pos:column="13">return;<pos:position pos:line="1989" pos:column="20"/></return>
        }<pos:position pos:line="1990" pos:column="10"/></block></then></if>
        <throw pos:line="1991" pos:column="9">throw <expr><operator pos:line="1991" pos:column="15">new<pos:position pos:line="1991" pos:column="18"/></operator> <call><name pos:line="1991" pos:column="19">IllegalArgumentException<pos:position pos:line="1991" pos:column="43"/></name><argument_list pos:line="1991" pos:column="43">(<argument><expr><literal type="string" pos:line="1991" pos:column="44">"handle: "<pos:position pos:line="1991" pos:column="54"/></literal> <operator pos:line="1991" pos:column="55">+<pos:position pos:line="1991" pos:column="56"/></operator> <name pos:line="1991" pos:column="57">handle<pos:position pos:line="1991" pos:column="63"/></name>
                <operator pos:line="1992" pos:column="17">+<pos:position pos:line="1992" pos:column="18"/></operator> <literal type="string" pos:line="1992" pos:column="19">" or dependency: "<pos:position pos:line="1992" pos:column="37"/></literal> <operator pos:line="1992" pos:column="38">+<pos:position pos:line="1992" pos:column="39"/></operator> <name pos:line="1992" pos:column="40">dependency<pos:position pos:line="1992" pos:column="50"/></name></expr></argument>)<pos:position pos:line="1992" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="1992" pos:column="52"/></throw>
    }<pos:position pos:line="1993" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="1995" pos:column="5">/**
     * Add a new comment to a model element.
     *
     * @param element the element to which the comment is to be added
     * @param comment the comment for the model element
     */</comment>
    <function><specifier pos:line="2001" pos:column="5">public<pos:position pos:line="2001" pos:column="11"/></specifier> <type><name pos:line="2001" pos:column="12">void<pos:position pos:line="2001" pos:column="16"/></name></type> <name pos:line="2001" pos:column="17">addComment<pos:position pos:line="2001" pos:column="27"/></name><parameter_list pos:line="2001" pos:column="27">(<parameter><decl><type><name pos:line="2001" pos:column="28">Object<pos:position pos:line="2001" pos:column="34"/></name></type> <name pos:line="2001" pos:column="35">element<pos:position pos:line="2001" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2001" pos:column="44">Object<pos:position pos:line="2001" pos:column="50"/></name></type> <name pos:line="2001" pos:column="51">comment<pos:position pos:line="2001" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="2001" pos:column="59"/></parameter_list> <block pos:line="2001" pos:column="60">{
        <if pos:line="2002" pos:column="9">if <condition pos:line="2002" pos:column="12">(<expr><name pos:line="2002" pos:column="13">element<pos:position pos:line="2002" pos:column="20"/></name> <operator pos:line="2002" pos:column="21">instanceof<pos:position pos:line="2002" pos:column="31"/></operator> <name pos:line="2002" pos:column="32">MModelElement<pos:position pos:line="2002" pos:column="45"/></name> <operator pos:line="2002" pos:column="46">&amp;&amp;<pos:position pos:line="2002" pos:column="56"/></operator> <name pos:line="2002" pos:column="49">comment<pos:position pos:line="2002" pos:column="56"/></name> <operator pos:line="2002" pos:column="57">instanceof<pos:position pos:line="2002" pos:column="67"/></operator> <name pos:line="2002" pos:column="68">MComment<pos:position pos:line="2002" pos:column="76"/></name></expr>)<pos:position pos:line="2002" pos:column="77"/></condition><then pos:line="2002" pos:column="77"> <block pos:line="2002" pos:column="78">{
            <expr_stmt><expr><operator pos:line="2003" pos:column="13">(<pos:position pos:line="2003" pos:column="14"/></operator><operator pos:line="2003" pos:column="14">(<pos:position pos:line="2003" pos:column="15"/></operator><name pos:line="2003" pos:column="15">MModelElement<pos:position pos:line="2003" pos:column="28"/></name><operator pos:line="2003" pos:column="28">)<pos:position pos:line="2003" pos:column="29"/></operator> <name pos:line="2003" pos:column="30">element<pos:position pos:line="2003" pos:column="37"/></name><operator pos:line="2003" pos:column="37">)<pos:position pos:line="2003" pos:column="38"/></operator><operator pos:line="2003" pos:column="38">.<pos:position pos:line="2003" pos:column="39"/></operator><call><name pos:line="2003" pos:column="39">addComment<pos:position pos:line="2003" pos:column="49"/></name><argument_list pos:line="2003" pos:column="49">(<argument><expr><operator pos:line="2003" pos:column="50">(<pos:position pos:line="2003" pos:column="51"/></operator><name pos:line="2003" pos:column="51">MComment<pos:position pos:line="2003" pos:column="59"/></name><operator pos:line="2003" pos:column="59">)<pos:position pos:line="2003" pos:column="60"/></operator> <name pos:line="2003" pos:column="61">comment<pos:position pos:line="2003" pos:column="68"/></name></expr></argument>)<pos:position pos:line="2003" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="2003" pos:column="70"/></expr_stmt>
            <return pos:line="2004" pos:column="13">return;<pos:position pos:line="2004" pos:column="20"/></return>
        }<pos:position pos:line="2005" pos:column="10"/></block></then></if>
        <throw pos:line="2006" pos:column="9">throw <expr><operator pos:line="2006" pos:column="15">new<pos:position pos:line="2006" pos:column="18"/></operator> <call><name pos:line="2006" pos:column="19">IllegalArgumentException<pos:position pos:line="2006" pos:column="43"/></name><argument_list pos:line="2006" pos:column="43">(<argument><expr><literal type="string" pos:line="2006" pos:column="44">"element: "<pos:position pos:line="2006" pos:column="55"/></literal> <operator pos:line="2006" pos:column="56">+<pos:position pos:line="2006" pos:column="57"/></operator> <name pos:line="2006" pos:column="58">element<pos:position pos:line="2006" pos:column="65"/></name></expr></argument>)<pos:position pos:line="2006" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="2006" pos:column="67"/></throw>
    }<pos:position pos:line="2007" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="2009" pos:column="5">/**
     * Add an End to a connection.
     *
     * @param handle Association or Link
     * @param connection AssociationEnd or LinkEnd
     */</comment>
    <function><specifier pos:line="2015" pos:column="5">public<pos:position pos:line="2015" pos:column="11"/></specifier> <type><name pos:line="2015" pos:column="12">void<pos:position pos:line="2015" pos:column="16"/></name></type> <name pos:line="2015" pos:column="17">addConnection<pos:position pos:line="2015" pos:column="30"/></name><parameter_list pos:line="2015" pos:column="30">(<parameter><decl><type><name pos:line="2015" pos:column="31">Object<pos:position pos:line="2015" pos:column="37"/></name></type> <name pos:line="2015" pos:column="38">handle<pos:position pos:line="2015" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2015" pos:column="46">Object<pos:position pos:line="2015" pos:column="52"/></name></type> <name pos:line="2015" pos:column="53">connection<pos:position pos:line="2015" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="2015" pos:column="64"/></parameter_list> <block pos:line="2015" pos:column="65">{
        <if pos:line="2016" pos:column="9">if <condition pos:line="2016" pos:column="12">(<expr><name pos:line="2016" pos:column="13">handle<pos:position pos:line="2016" pos:column="19"/></name> <operator pos:line="2016" pos:column="20">instanceof<pos:position pos:line="2016" pos:column="30"/></operator> <name pos:line="2016" pos:column="31">MAssociation<pos:position pos:line="2016" pos:column="43"/></name>
            <operator pos:line="2017" pos:column="13">&amp;&amp;<pos:position pos:line="2017" pos:column="23"/></operator> <name pos:line="2017" pos:column="16">connection<pos:position pos:line="2017" pos:column="26"/></name> <operator pos:line="2017" pos:column="27">instanceof<pos:position pos:line="2017" pos:column="37"/></operator> <name pos:line="2017" pos:column="38">MAssociationEnd<pos:position pos:line="2017" pos:column="53"/></name></expr>)<pos:position pos:line="2017" pos:column="54"/></condition><then pos:line="2017" pos:column="54"> <block pos:line="2017" pos:column="55">{
            <expr_stmt><expr><operator pos:line="2018" pos:column="13">(<pos:position pos:line="2018" pos:column="14"/></operator><operator pos:line="2018" pos:column="14">(<pos:position pos:line="2018" pos:column="15"/></operator><name pos:line="2018" pos:column="15">MAssociation<pos:position pos:line="2018" pos:column="27"/></name><operator pos:line="2018" pos:column="27">)<pos:position pos:line="2018" pos:column="28"/></operator> <name pos:line="2018" pos:column="29">handle<pos:position pos:line="2018" pos:column="35"/></name><operator pos:line="2018" pos:column="35">)<pos:position pos:line="2018" pos:column="36"/></operator><operator pos:line="2018" pos:column="36">.<pos:position pos:line="2018" pos:column="37"/></operator><call><name pos:line="2018" pos:column="37">addConnection<pos:position pos:line="2018" pos:column="50"/></name><argument_list pos:line="2018" pos:column="50">(<argument><expr><operator pos:line="2018" pos:column="51">(<pos:position pos:line="2018" pos:column="52"/></operator><name pos:line="2018" pos:column="52">MAssociationEnd<pos:position pos:line="2018" pos:column="67"/></name><operator pos:line="2018" pos:column="67">)<pos:position pos:line="2018" pos:column="68"/></operator> <name pos:line="2018" pos:column="69">connection<pos:position pos:line="2018" pos:column="79"/></name></expr></argument>)<pos:position pos:line="2018" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="2018" pos:column="81"/></expr_stmt>
            <return pos:line="2019" pos:column="13">return;<pos:position pos:line="2019" pos:column="20"/></return>
        }<pos:position pos:line="2020" pos:column="10"/></block></then></if>
        <if pos:line="2021" pos:column="9">if <condition pos:line="2021" pos:column="12">(<expr><name pos:line="2021" pos:column="13">handle<pos:position pos:line="2021" pos:column="19"/></name> <operator pos:line="2021" pos:column="20">instanceof<pos:position pos:line="2021" pos:column="30"/></operator> <name pos:line="2021" pos:column="31">MLink<pos:position pos:line="2021" pos:column="36"/></name>
            <operator pos:line="2022" pos:column="13">&amp;&amp;<pos:position pos:line="2022" pos:column="23"/></operator> <name pos:line="2022" pos:column="16">connection<pos:position pos:line="2022" pos:column="26"/></name> <operator pos:line="2022" pos:column="27">instanceof<pos:position pos:line="2022" pos:column="37"/></operator> <name pos:line="2022" pos:column="38">MLinkEnd<pos:position pos:line="2022" pos:column="46"/></name></expr>)<pos:position pos:line="2022" pos:column="47"/></condition><then pos:line="2022" pos:column="47"> <block pos:line="2022" pos:column="48">{
            <expr_stmt><expr><operator pos:line="2023" pos:column="13">(<pos:position pos:line="2023" pos:column="14"/></operator><operator pos:line="2023" pos:column="14">(<pos:position pos:line="2023" pos:column="15"/></operator><name pos:line="2023" pos:column="15">MLink<pos:position pos:line="2023" pos:column="20"/></name><operator pos:line="2023" pos:column="20">)<pos:position pos:line="2023" pos:column="21"/></operator> <name pos:line="2023" pos:column="22">handle<pos:position pos:line="2023" pos:column="28"/></name><operator pos:line="2023" pos:column="28">)<pos:position pos:line="2023" pos:column="29"/></operator><operator pos:line="2023" pos:column="29">.<pos:position pos:line="2023" pos:column="30"/></operator><call><name pos:line="2023" pos:column="30">addConnection<pos:position pos:line="2023" pos:column="43"/></name><argument_list pos:line="2023" pos:column="43">(<argument><expr><operator pos:line="2023" pos:column="44">(<pos:position pos:line="2023" pos:column="45"/></operator><name pos:line="2023" pos:column="45">MLinkEnd<pos:position pos:line="2023" pos:column="53"/></name><operator pos:line="2023" pos:column="53">)<pos:position pos:line="2023" pos:column="54"/></operator> <name pos:line="2023" pos:column="55">connection<pos:position pos:line="2023" pos:column="65"/></name></expr></argument>)<pos:position pos:line="2023" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="2023" pos:column="67"/></expr_stmt>
            <return pos:line="2024" pos:column="13">return;<pos:position pos:line="2024" pos:column="20"/></return>
        }<pos:position pos:line="2025" pos:column="10"/></block></then></if>
        <throw pos:line="2026" pos:column="9">throw <expr><operator pos:line="2026" pos:column="15">new<pos:position pos:line="2026" pos:column="18"/></operator> <call><name pos:line="2026" pos:column="19">IllegalArgumentException<pos:position pos:line="2026" pos:column="43"/></name><argument_list pos:line="2026" pos:column="43">(<argument><expr><literal type="string" pos:line="2026" pos:column="44">"handle: "<pos:position pos:line="2026" pos:column="54"/></literal> <operator pos:line="2026" pos:column="55">+<pos:position pos:line="2026" pos:column="56"/></operator> <name pos:line="2026" pos:column="57">handle<pos:position pos:line="2026" pos:column="63"/></name>
                <operator pos:line="2027" pos:column="17">+<pos:position pos:line="2027" pos:column="18"/></operator> <literal type="string" pos:line="2027" pos:column="19">" or connection: "<pos:position pos:line="2027" pos:column="37"/></literal> <operator pos:line="2027" pos:column="38">+<pos:position pos:line="2027" pos:column="39"/></operator> <name pos:line="2027" pos:column="40">connection<pos:position pos:line="2027" pos:column="50"/></name></expr></argument>)<pos:position pos:line="2027" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="2027" pos:column="52"/></throw>
    }<pos:position pos:line="2028" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="2030" pos:column="5">/**
     * Adds a constraint to some model element.
     *
     * @param handle model element
     * @param mc constraint
     */</comment>
    <function><specifier pos:line="2036" pos:column="5">public<pos:position pos:line="2036" pos:column="11"/></specifier> <type><name pos:line="2036" pos:column="12">void<pos:position pos:line="2036" pos:column="16"/></name></type> <name pos:line="2036" pos:column="17">addConstraint<pos:position pos:line="2036" pos:column="30"/></name><parameter_list pos:line="2036" pos:column="30">(<parameter><decl><type><name pos:line="2036" pos:column="31">Object<pos:position pos:line="2036" pos:column="37"/></name></type> <name pos:line="2036" pos:column="38">handle<pos:position pos:line="2036" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2036" pos:column="46">Object<pos:position pos:line="2036" pos:column="52"/></name></type> <name pos:line="2036" pos:column="53">mc<pos:position pos:line="2036" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="2036" pos:column="56"/></parameter_list> <block pos:line="2036" pos:column="57">{
        <if pos:line="2037" pos:column="9">if <condition pos:line="2037" pos:column="12">(<expr><name pos:line="2037" pos:column="13">handle<pos:position pos:line="2037" pos:column="19"/></name> <operator pos:line="2037" pos:column="20">instanceof<pos:position pos:line="2037" pos:column="30"/></operator> <name pos:line="2037" pos:column="31">MModelElement<pos:position pos:line="2037" pos:column="44"/></name> <operator pos:line="2037" pos:column="45">&amp;&amp;<pos:position pos:line="2037" pos:column="55"/></operator> <name pos:line="2037" pos:column="48">mc<pos:position pos:line="2037" pos:column="50"/></name> <operator pos:line="2037" pos:column="51">instanceof<pos:position pos:line="2037" pos:column="61"/></operator> <name pos:line="2037" pos:column="62">MConstraint<pos:position pos:line="2037" pos:column="73"/></name></expr>)<pos:position pos:line="2037" pos:column="74"/></condition><then pos:line="2037" pos:column="74"> <block pos:line="2037" pos:column="75">{
            <expr_stmt><expr><operator pos:line="2038" pos:column="13">(<pos:position pos:line="2038" pos:column="14"/></operator><operator pos:line="2038" pos:column="14">(<pos:position pos:line="2038" pos:column="15"/></operator><name pos:line="2038" pos:column="15">MModelElement<pos:position pos:line="2038" pos:column="28"/></name><operator pos:line="2038" pos:column="28">)<pos:position pos:line="2038" pos:column="29"/></operator> <name pos:line="2038" pos:column="30">handle<pos:position pos:line="2038" pos:column="36"/></name><operator pos:line="2038" pos:column="36">)<pos:position pos:line="2038" pos:column="37"/></operator><operator pos:line="2038" pos:column="37">.<pos:position pos:line="2038" pos:column="38"/></operator><call><name pos:line="2038" pos:column="38">addConstraint<pos:position pos:line="2038" pos:column="51"/></name><argument_list pos:line="2038" pos:column="51">(<argument><expr><operator pos:line="2038" pos:column="52">(<pos:position pos:line="2038" pos:column="53"/></operator><name pos:line="2038" pos:column="53">MConstraint<pos:position pos:line="2038" pos:column="64"/></name><operator pos:line="2038" pos:column="64">)<pos:position pos:line="2038" pos:column="65"/></operator> <name pos:line="2038" pos:column="66">mc<pos:position pos:line="2038" pos:column="68"/></name></expr></argument>)<pos:position pos:line="2038" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="2038" pos:column="70"/></expr_stmt>
            <return pos:line="2039" pos:column="13">return;<pos:position pos:line="2039" pos:column="20"/></return>
        }<pos:position pos:line="2040" pos:column="10"/></block></then></if>
    <throw pos:line="2041" pos:column="5">throw <expr><operator pos:line="2041" pos:column="11">new<pos:position pos:line="2041" pos:column="14"/></operator> <call><name pos:line="2041" pos:column="15">IllegalArgumentException<pos:position pos:line="2041" pos:column="39"/></name><argument_list pos:line="2041" pos:column="39">(<argument><expr><literal type="string" pos:line="2041" pos:column="40">"handle: "<pos:position pos:line="2041" pos:column="50"/></literal> <operator pos:line="2041" pos:column="51">+<pos:position pos:line="2041" pos:column="52"/></operator> <name pos:line="2041" pos:column="53">handle<pos:position pos:line="2041" pos:column="59"/></name> <operator pos:line="2041" pos:column="60">+<pos:position pos:line="2041" pos:column="61"/></operator> <literal type="string" pos:line="2041" pos:column="62">" or mc: "<pos:position pos:line="2041" pos:column="72"/></literal> <operator pos:line="2041" pos:column="73">+<pos:position pos:line="2041" pos:column="74"/></operator> <name pos:line="2041" pos:column="75">mc<pos:position pos:line="2041" pos:column="77"/></name></expr></argument>)<pos:position pos:line="2041" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="2041" pos:column="79"/></throw>
    }<pos:position pos:line="2042" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="2044" pos:column="5">/**
     * @param handle Component
     * @param node Node
     */</comment>
    <function><specifier pos:line="2048" pos:column="5">public<pos:position pos:line="2048" pos:column="11"/></specifier> <type><name pos:line="2048" pos:column="12">void<pos:position pos:line="2048" pos:column="16"/></name></type> <name pos:line="2048" pos:column="17">addDeploymentLocation<pos:position pos:line="2048" pos:column="38"/></name><parameter_list pos:line="2048" pos:column="38">(<parameter><decl><type><name pos:line="2048" pos:column="39">Object<pos:position pos:line="2048" pos:column="45"/></name></type> <name pos:line="2048" pos:column="46">handle<pos:position pos:line="2048" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2048" pos:column="54">Object<pos:position pos:line="2048" pos:column="60"/></name></type> <name pos:line="2048" pos:column="61">node<pos:position pos:line="2048" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="2048" pos:column="66"/></parameter_list> <block pos:line="2048" pos:column="67">{
        <if pos:line="2049" pos:column="9">if <condition pos:line="2049" pos:column="12">(<expr><name pos:line="2049" pos:column="13">handle<pos:position pos:line="2049" pos:column="19"/></name> <operator pos:line="2049" pos:column="20">instanceof<pos:position pos:line="2049" pos:column="30"/></operator> <name pos:line="2049" pos:column="31">MComponent<pos:position pos:line="2049" pos:column="41"/></name> <operator pos:line="2049" pos:column="42">&amp;&amp;<pos:position pos:line="2049" pos:column="52"/></operator> <name pos:line="2049" pos:column="45">node<pos:position pos:line="2049" pos:column="49"/></name> <operator pos:line="2049" pos:column="50">instanceof<pos:position pos:line="2049" pos:column="60"/></operator> <name pos:line="2049" pos:column="61">MNode<pos:position pos:line="2049" pos:column="66"/></name></expr>)<pos:position pos:line="2049" pos:column="67"/></condition><then pos:line="2049" pos:column="67"> <block pos:line="2049" pos:column="68">{
            <expr_stmt><expr><operator pos:line="2050" pos:column="13">(<pos:position pos:line="2050" pos:column="14"/></operator><operator pos:line="2050" pos:column="14">(<pos:position pos:line="2050" pos:column="15"/></operator><name pos:line="2050" pos:column="15">MComponent<pos:position pos:line="2050" pos:column="25"/></name><operator pos:line="2050" pos:column="25">)<pos:position pos:line="2050" pos:column="26"/></operator> <name pos:line="2050" pos:column="27">handle<pos:position pos:line="2050" pos:column="33"/></name><operator pos:line="2050" pos:column="33">)<pos:position pos:line="2050" pos:column="34"/></operator><operator pos:line="2050" pos:column="34">.<pos:position pos:line="2050" pos:column="35"/></operator><call><name pos:line="2050" pos:column="35">addDeploymentLocation<pos:position pos:line="2050" pos:column="56"/></name><argument_list pos:line="2050" pos:column="56">(<argument><expr><operator pos:line="2050" pos:column="57">(<pos:position pos:line="2050" pos:column="58"/></operator><name pos:line="2050" pos:column="58">MNode<pos:position pos:line="2050" pos:column="63"/></name><operator pos:line="2050" pos:column="63">)<pos:position pos:line="2050" pos:column="64"/></operator> <name pos:line="2050" pos:column="65">node<pos:position pos:line="2050" pos:column="69"/></name></expr></argument>)<pos:position pos:line="2050" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="2050" pos:column="71"/></expr_stmt>
            <return pos:line="2051" pos:column="13">return;<pos:position pos:line="2051" pos:column="20"/></return>
        }<pos:position pos:line="2052" pos:column="10"/></block></then></if>
        <throw pos:line="2053" pos:column="9">throw <expr><operator pos:line="2053" pos:column="15">new<pos:position pos:line="2053" pos:column="18"/></operator> <call><name pos:line="2053" pos:column="19">IllegalArgumentException<pos:position pos:line="2053" pos:column="43"/></name><argument_list pos:line="2053" pos:column="43">(<argument><expr><literal type="string" pos:line="2053" pos:column="44">"handle: "<pos:position pos:line="2053" pos:column="54"/></literal> <operator pos:line="2053" pos:column="55">+<pos:position pos:line="2053" pos:column="56"/></operator> <name pos:line="2053" pos:column="57">handle<pos:position pos:line="2053" pos:column="63"/></name>
                <operator pos:line="2054" pos:column="17">+<pos:position pos:line="2054" pos:column="18"/></operator> <literal type="string" pos:line="2054" pos:column="19">" or node: "<pos:position pos:line="2054" pos:column="31"/></literal> <operator pos:line="2054" pos:column="32">+<pos:position pos:line="2054" pos:column="33"/></operator> <name pos:line="2054" pos:column="34">node<pos:position pos:line="2054" pos:column="38"/></name></expr></argument>)<pos:position pos:line="2054" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="2054" pos:column="40"/></throw>
    }<pos:position pos:line="2055" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="2057" pos:column="5">/**
     * Adds a feature to some classifier.
     *
     * @param handle classifier
     * @param index position
     * @param f feature
     */</comment>
    <function><specifier pos:line="2064" pos:column="5">public<pos:position pos:line="2064" pos:column="11"/></specifier> <type><name pos:line="2064" pos:column="12">void<pos:position pos:line="2064" pos:column="16"/></name></type> <name pos:line="2064" pos:column="17">addFeature<pos:position pos:line="2064" pos:column="27"/></name><parameter_list pos:line="2064" pos:column="27">(<parameter><decl><type><name pos:line="2064" pos:column="28">Object<pos:position pos:line="2064" pos:column="34"/></name></type> <name pos:line="2064" pos:column="35">handle<pos:position pos:line="2064" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2064" pos:column="43">int<pos:position pos:line="2064" pos:column="46"/></name></type> <name pos:line="2064" pos:column="47">index<pos:position pos:line="2064" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2064" pos:column="54">Object<pos:position pos:line="2064" pos:column="60"/></name></type> <name pos:line="2064" pos:column="61">f<pos:position pos:line="2064" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="2064" pos:column="63"/></parameter_list> <block pos:line="2064" pos:column="64">{
        <if pos:line="2065" pos:column="9">if <condition pos:line="2065" pos:column="12">(<expr><name pos:line="2065" pos:column="13">handle<pos:position pos:line="2065" pos:column="19"/></name> <operator pos:line="2065" pos:column="20">instanceof<pos:position pos:line="2065" pos:column="30"/></operator> <name pos:line="2065" pos:column="31">MClassifier<pos:position pos:line="2065" pos:column="42"/></name> <operator pos:line="2065" pos:column="43">&amp;&amp;<pos:position pos:line="2065" pos:column="53"/></operator> <name pos:line="2065" pos:column="46">f<pos:position pos:line="2065" pos:column="47"/></name> <operator pos:line="2065" pos:column="48">instanceof<pos:position pos:line="2065" pos:column="58"/></operator> <name pos:line="2065" pos:column="59">MFeature<pos:position pos:line="2065" pos:column="67"/></name></expr>)<pos:position pos:line="2065" pos:column="68"/></condition><then pos:line="2065" pos:column="68"> <block pos:line="2065" pos:column="69">{
            <if pos:line="2066" pos:column="13">if <condition pos:line="2066" pos:column="16">(<expr><call><name><name pos:line="2066" pos:column="17">LOG<pos:position pos:line="2066" pos:column="20"/></name><operator pos:line="2066" pos:column="20">.<pos:position pos:line="2066" pos:column="21"/></operator><name pos:line="2066" pos:column="21">isInfoEnabled<pos:position pos:line="2066" pos:column="34"/></name></name><argument_list pos:line="2066" pos:column="34">()<pos:position pos:line="2066" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="2066" pos:column="37"/></condition><then pos:line="2066" pos:column="37"> <block pos:line="2066" pos:column="38">{
                <expr_stmt><expr><call><name><name pos:line="2067" pos:column="17">LOG<pos:position pos:line="2067" pos:column="20"/></name><operator pos:line="2067" pos:column="20">.<pos:position pos:line="2067" pos:column="21"/></operator><name pos:line="2067" pos:column="21">info<pos:position pos:line="2067" pos:column="25"/></name></name><argument_list pos:line="2067" pos:column="25">(<argument><expr><literal type="string" pos:line="2067" pos:column="26">"Adding the feature "<pos:position pos:line="2067" pos:column="47"/></literal> <operator pos:line="2067" pos:column="48">+<pos:position pos:line="2067" pos:column="49"/></operator> <name pos:line="2067" pos:column="50">f<pos:position pos:line="2067" pos:column="51"/></name> <operator pos:line="2067" pos:column="52">+<pos:position pos:line="2067" pos:column="53"/></operator> <literal type="string" pos:line="2067" pos:column="54">" at "<pos:position pos:line="2067" pos:column="60"/></literal> <operator pos:line="2067" pos:column="61">+<pos:position pos:line="2067" pos:column="62"/></operator> <name pos:line="2067" pos:column="63">index<pos:position pos:line="2067" pos:column="68"/></name></expr></argument>)<pos:position pos:line="2067" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="2067" pos:column="70"/></expr_stmt>
            }<pos:position pos:line="2068" pos:column="14"/></block></then></if>
            <expr_stmt><expr><operator pos:line="2069" pos:column="13">(<pos:position pos:line="2069" pos:column="14"/></operator><operator pos:line="2069" pos:column="14">(<pos:position pos:line="2069" pos:column="15"/></operator><name pos:line="2069" pos:column="15">MClassifier<pos:position pos:line="2069" pos:column="26"/></name><operator pos:line="2069" pos:column="26">)<pos:position pos:line="2069" pos:column="27"/></operator> <name pos:line="2069" pos:column="28">handle<pos:position pos:line="2069" pos:column="34"/></name><operator pos:line="2069" pos:column="34">)<pos:position pos:line="2069" pos:column="35"/></operator><operator pos:line="2069" pos:column="35">.<pos:position pos:line="2069" pos:column="36"/></operator><call><name pos:line="2069" pos:column="36">addFeature<pos:position pos:line="2069" pos:column="46"/></name><argument_list pos:line="2069" pos:column="46">(<argument><expr><name pos:line="2069" pos:column="47">index<pos:position pos:line="2069" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="2069" pos:column="54">(<pos:position pos:line="2069" pos:column="55"/></operator><name pos:line="2069" pos:column="55">MFeature<pos:position pos:line="2069" pos:column="63"/></name><operator pos:line="2069" pos:column="63">)<pos:position pos:line="2069" pos:column="64"/></operator> <name pos:line="2069" pos:column="65">f<pos:position pos:line="2069" pos:column="66"/></name></expr></argument>)<pos:position pos:line="2069" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="2069" pos:column="68"/></expr_stmt>
            <return pos:line="2070" pos:column="13">return;<pos:position pos:line="2070" pos:column="20"/></return>
        }<pos:position pos:line="2071" pos:column="10"/></block></then></if>
        <throw pos:line="2072" pos:column="9">throw <expr><operator pos:line="2072" pos:column="15">new<pos:position pos:line="2072" pos:column="18"/></operator> <call><name pos:line="2072" pos:column="19">IllegalArgumentException<pos:position pos:line="2072" pos:column="43"/></name><argument_list pos:line="2072" pos:column="43">(<argument><expr><literal type="string" pos:line="2072" pos:column="44">"handle: "<pos:position pos:line="2072" pos:column="54"/></literal> <operator pos:line="2072" pos:column="55">+<pos:position pos:line="2072" pos:column="56"/></operator> <name pos:line="2072" pos:column="57">handle<pos:position pos:line="2072" pos:column="63"/></name>
                <operator pos:line="2073" pos:column="17">+<pos:position pos:line="2073" pos:column="18"/></operator> <literal type="string" pos:line="2073" pos:column="19">" or f: "<pos:position pos:line="2073" pos:column="28"/></literal> <operator pos:line="2073" pos:column="29">+<pos:position pos:line="2073" pos:column="30"/></operator> <name pos:line="2073" pos:column="31">f<pos:position pos:line="2073" pos:column="32"/></name></expr></argument>)<pos:position pos:line="2073" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="2073" pos:column="34"/></throw>
    }<pos:position pos:line="2074" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="2076" pos:column="5">/**
     * Adds a feature to some classifier.
     *
     * @param handle classifier
     * @param f feature
     */</comment>
    <function><specifier pos:line="2082" pos:column="5">public<pos:position pos:line="2082" pos:column="11"/></specifier> <type><name pos:line="2082" pos:column="12">void<pos:position pos:line="2082" pos:column="16"/></name></type> <name pos:line="2082" pos:column="17">addFeature<pos:position pos:line="2082" pos:column="27"/></name><parameter_list pos:line="2082" pos:column="27">(<parameter><decl><type><name pos:line="2082" pos:column="28">Object<pos:position pos:line="2082" pos:column="34"/></name></type> <name pos:line="2082" pos:column="35">handle<pos:position pos:line="2082" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2082" pos:column="43">Object<pos:position pos:line="2082" pos:column="49"/></name></type> <name pos:line="2082" pos:column="50">f<pos:position pos:line="2082" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="2082" pos:column="52"/></parameter_list> <block pos:line="2082" pos:column="53">{
        <if pos:line="2083" pos:column="9">if <condition pos:line="2083" pos:column="12">(<expr><name pos:line="2083" pos:column="13">handle<pos:position pos:line="2083" pos:column="19"/></name> <operator pos:line="2083" pos:column="20">instanceof<pos:position pos:line="2083" pos:column="30"/></operator> <name pos:line="2083" pos:column="31">MClassifier<pos:position pos:line="2083" pos:column="42"/></name> <operator pos:line="2083" pos:column="43">&amp;&amp;<pos:position pos:line="2083" pos:column="53"/></operator> <name pos:line="2083" pos:column="46">f<pos:position pos:line="2083" pos:column="47"/></name> <operator pos:line="2083" pos:column="48">instanceof<pos:position pos:line="2083" pos:column="58"/></operator> <name pos:line="2083" pos:column="59">MFeature<pos:position pos:line="2083" pos:column="67"/></name></expr>)<pos:position pos:line="2083" pos:column="68"/></condition><then pos:line="2083" pos:column="68"> <block pos:line="2083" pos:column="69">{
            <if pos:line="2084" pos:column="13">if <condition pos:line="2084" pos:column="16">(<expr><call><name><name pos:line="2084" pos:column="17">LOG<pos:position pos:line="2084" pos:column="20"/></name><operator pos:line="2084" pos:column="20">.<pos:position pos:line="2084" pos:column="21"/></operator><name pos:line="2084" pos:column="21">isInfoEnabled<pos:position pos:line="2084" pos:column="34"/></name></name><argument_list pos:line="2084" pos:column="34">()<pos:position pos:line="2084" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="2084" pos:column="37"/></condition><then pos:line="2084" pos:column="37"> <block pos:line="2084" pos:column="38">{
                <expr_stmt><expr><call><name><name pos:line="2085" pos:column="17">LOG<pos:position pos:line="2085" pos:column="20"/></name><operator pos:line="2085" pos:column="20">.<pos:position pos:line="2085" pos:column="21"/></operator><name pos:line="2085" pos:column="21">info<pos:position pos:line="2085" pos:column="25"/></name></name><argument_list pos:line="2085" pos:column="25">(<argument><expr><literal type="string" pos:line="2085" pos:column="26">"Adding the feature "<pos:position pos:line="2085" pos:column="47"/></literal> <operator pos:line="2085" pos:column="48">+<pos:position pos:line="2085" pos:column="49"/></operator> <name pos:line="2085" pos:column="50">f<pos:position pos:line="2085" pos:column="51"/></name></expr></argument>)<pos:position pos:line="2085" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="2085" pos:column="53"/></expr_stmt>
            }<pos:position pos:line="2086" pos:column="14"/></block></then></if>
            <expr_stmt><expr><operator pos:line="2087" pos:column="13">(<pos:position pos:line="2087" pos:column="14"/></operator><operator pos:line="2087" pos:column="14">(<pos:position pos:line="2087" pos:column="15"/></operator><name pos:line="2087" pos:column="15">MClassifier<pos:position pos:line="2087" pos:column="26"/></name><operator pos:line="2087" pos:column="26">)<pos:position pos:line="2087" pos:column="27"/></operator> <name pos:line="2087" pos:column="28">handle<pos:position pos:line="2087" pos:column="34"/></name><operator pos:line="2087" pos:column="34">)<pos:position pos:line="2087" pos:column="35"/></operator><operator pos:line="2087" pos:column="35">.<pos:position pos:line="2087" pos:column="36"/></operator><call><name pos:line="2087" pos:column="36">addFeature<pos:position pos:line="2087" pos:column="46"/></name><argument_list pos:line="2087" pos:column="46">(<argument><expr><operator pos:line="2087" pos:column="47">(<pos:position pos:line="2087" pos:column="48"/></operator><name pos:line="2087" pos:column="48">MFeature<pos:position pos:line="2087" pos:column="56"/></name><operator pos:line="2087" pos:column="56">)<pos:position pos:line="2087" pos:column="57"/></operator> <name pos:line="2087" pos:column="58">f<pos:position pos:line="2087" pos:column="59"/></name></expr></argument>)<pos:position pos:line="2087" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="2087" pos:column="61"/></expr_stmt>
            <return pos:line="2088" pos:column="13">return;<pos:position pos:line="2088" pos:column="20"/></return>
        }<pos:position pos:line="2089" pos:column="10"/></block></then></if>
        <throw pos:line="2090" pos:column="9">throw <expr><operator pos:line="2090" pos:column="15">new<pos:position pos:line="2090" pos:column="18"/></operator> <call><name pos:line="2090" pos:column="19">IllegalArgumentException<pos:position pos:line="2090" pos:column="43"/></name><argument_list pos:line="2090" pos:column="43">(<argument><expr><literal type="string" pos:line="2090" pos:column="44">"handle: "<pos:position pos:line="2090" pos:column="54"/></literal> <operator pos:line="2090" pos:column="55">+<pos:position pos:line="2090" pos:column="56"/></operator> <name pos:line="2090" pos:column="57">handle<pos:position pos:line="2090" pos:column="63"/></name></expr></argument>)<pos:position pos:line="2090" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="2090" pos:column="65"/></throw>
    }<pos:position pos:line="2091" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="2093" pos:column="5">/**
     * Add the given Link to the given Link or Association.
     *
     * @param handle the Link or Association
     * @param link Link
     */</comment>
    <function><specifier pos:line="2099" pos:column="5">public<pos:position pos:line="2099" pos:column="11"/></specifier> <type><name pos:line="2099" pos:column="12">void<pos:position pos:line="2099" pos:column="16"/></name></type> <name pos:line="2099" pos:column="17">addLink<pos:position pos:line="2099" pos:column="24"/></name><parameter_list pos:line="2099" pos:column="24">(<parameter><decl><type><name pos:line="2099" pos:column="25">Object<pos:position pos:line="2099" pos:column="31"/></name></type> <name pos:line="2099" pos:column="32">handle<pos:position pos:line="2099" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2099" pos:column="40">Object<pos:position pos:line="2099" pos:column="46"/></name></type> <name pos:line="2099" pos:column="47">link<pos:position pos:line="2099" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="2099" pos:column="52"/></parameter_list> <block pos:line="2099" pos:column="53">{
        <if pos:line="2100" pos:column="9">if <condition pos:line="2100" pos:column="12">(<expr><name pos:line="2100" pos:column="13">handle<pos:position pos:line="2100" pos:column="19"/></name> <operator pos:line="2100" pos:column="20">instanceof<pos:position pos:line="2100" pos:column="30"/></operator> <name pos:line="2100" pos:column="31">MAssociation<pos:position pos:line="2100" pos:column="43"/></name> <operator pos:line="2100" pos:column="44">&amp;&amp;<pos:position pos:line="2100" pos:column="54"/></operator> <name pos:line="2100" pos:column="47">link<pos:position pos:line="2100" pos:column="51"/></name> <operator pos:line="2100" pos:column="52">instanceof<pos:position pos:line="2100" pos:column="62"/></operator> <name pos:line="2100" pos:column="63">MLink<pos:position pos:line="2100" pos:column="68"/></name></expr>)<pos:position pos:line="2100" pos:column="69"/></condition><then pos:line="2100" pos:column="69"> <block pos:line="2100" pos:column="70">{
            <expr_stmt><expr><operator pos:line="2101" pos:column="13">(<pos:position pos:line="2101" pos:column="14"/></operator><operator pos:line="2101" pos:column="14">(<pos:position pos:line="2101" pos:column="15"/></operator><name pos:line="2101" pos:column="15">MAssociation<pos:position pos:line="2101" pos:column="27"/></name><operator pos:line="2101" pos:column="27">)<pos:position pos:line="2101" pos:column="28"/></operator> <name pos:line="2101" pos:column="29">handle<pos:position pos:line="2101" pos:column="35"/></name><operator pos:line="2101" pos:column="35">)<pos:position pos:line="2101" pos:column="36"/></operator><operator pos:line="2101" pos:column="36">.<pos:position pos:line="2101" pos:column="37"/></operator><call><name pos:line="2101" pos:column="37">addLink<pos:position pos:line="2101" pos:column="44"/></name><argument_list pos:line="2101" pos:column="44">(<argument><expr><operator pos:line="2101" pos:column="45">(<pos:position pos:line="2101" pos:column="46"/></operator><name pos:line="2101" pos:column="46">MLink<pos:position pos:line="2101" pos:column="51"/></name><operator pos:line="2101" pos:column="51">)<pos:position pos:line="2101" pos:column="52"/></operator> <name pos:line="2101" pos:column="53">link<pos:position pos:line="2101" pos:column="57"/></name></expr></argument>)<pos:position pos:line="2101" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="2101" pos:column="59"/></expr_stmt>
            <return pos:line="2102" pos:column="13">return;<pos:position pos:line="2102" pos:column="20"/></return>
        }<pos:position pos:line="2103" pos:column="10"/></block></then></if>
        <throw pos:line="2104" pos:column="9">throw <expr><operator pos:line="2104" pos:column="15">new<pos:position pos:line="2104" pos:column="18"/></operator> <call><name pos:line="2104" pos:column="19">IllegalArgumentException<pos:position pos:line="2104" pos:column="43"/></name><argument_list pos:line="2104" pos:column="43">(<argument><expr><literal type="string" pos:line="2104" pos:column="44">"handle: "<pos:position pos:line="2104" pos:column="54"/></literal> <operator pos:line="2104" pos:column="55">+<pos:position pos:line="2104" pos:column="56"/></operator> <name pos:line="2104" pos:column="57">handle<pos:position pos:line="2104" pos:column="63"/></name>
                <operator pos:line="2105" pos:column="17">+<pos:position pos:line="2105" pos:column="18"/></operator> <literal type="string" pos:line="2105" pos:column="19">" or link: "<pos:position pos:line="2105" pos:column="31"/></literal> <operator pos:line="2105" pos:column="32">+<pos:position pos:line="2105" pos:column="33"/></operator> <name pos:line="2105" pos:column="34">link<pos:position pos:line="2105" pos:column="38"/></name></expr></argument>)<pos:position pos:line="2105" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="2105" pos:column="40"/></throw>
    }<pos:position pos:line="2106" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="2108" pos:column="5">/**
     * Adds a method to some operation and copies the op's attributes
     * to the method.
     *
     * @param handle is the operation
     * @param m is the method
     */</comment>
    <function><specifier pos:line="2115" pos:column="5">public<pos:position pos:line="2115" pos:column="11"/></specifier> <type><name pos:line="2115" pos:column="12">void<pos:position pos:line="2115" pos:column="16"/></name></type> <name pos:line="2115" pos:column="17">addMethod<pos:position pos:line="2115" pos:column="26"/></name><parameter_list pos:line="2115" pos:column="26">(<parameter><decl><type><name pos:line="2115" pos:column="27">Object<pos:position pos:line="2115" pos:column="33"/></name></type> <name pos:line="2115" pos:column="34">handle<pos:position pos:line="2115" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2115" pos:column="42">Object<pos:position pos:line="2115" pos:column="48"/></name></type> <name pos:line="2115" pos:column="49">m<pos:position pos:line="2115" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="2115" pos:column="51"/></parameter_list> <block pos:line="2115" pos:column="52">{
        <if pos:line="2116" pos:column="9">if <condition pos:line="2116" pos:column="12">(<expr><name pos:line="2116" pos:column="13">handle<pos:position pos:line="2116" pos:column="19"/></name> <operator pos:line="2116" pos:column="20">instanceof<pos:position pos:line="2116" pos:column="30"/></operator> <name pos:line="2116" pos:column="31">MOperation<pos:position pos:line="2116" pos:column="41"/></name>
            <operator pos:line="2117" pos:column="13">&amp;&amp;<pos:position pos:line="2117" pos:column="23"/></operator> <name pos:line="2117" pos:column="16">m<pos:position pos:line="2117" pos:column="17"/></name> <operator pos:line="2117" pos:column="18">instanceof<pos:position pos:line="2117" pos:column="28"/></operator> <name pos:line="2117" pos:column="29">MMethod<pos:position pos:line="2117" pos:column="36"/></name></expr>)<pos:position pos:line="2117" pos:column="37"/></condition><then pos:line="2117" pos:column="37"> <block pos:line="2117" pos:column="38">{
            <expr_stmt><expr><operator pos:line="2118" pos:column="13">(<pos:position pos:line="2118" pos:column="14"/></operator><operator pos:line="2118" pos:column="14">(<pos:position pos:line="2118" pos:column="15"/></operator><name pos:line="2118" pos:column="15">MMethod<pos:position pos:line="2118" pos:column="22"/></name><operator pos:line="2118" pos:column="22">)<pos:position pos:line="2118" pos:column="23"/></operator> <name pos:line="2118" pos:column="24">m<pos:position pos:line="2118" pos:column="25"/></name><operator pos:line="2118" pos:column="25">)<pos:position pos:line="2118" pos:column="26"/></operator><operator pos:line="2118" pos:column="26">.<pos:position pos:line="2118" pos:column="27"/></operator><call><name pos:line="2118" pos:column="27">setVisibility<pos:position pos:line="2118" pos:column="40"/></name><argument_list pos:line="2118" pos:column="40">(<argument><expr><operator pos:line="2118" pos:column="41">(<pos:position pos:line="2118" pos:column="42"/></operator><operator pos:line="2118" pos:column="42">(<pos:position pos:line="2118" pos:column="43"/></operator><name pos:line="2118" pos:column="43">MOperation<pos:position pos:line="2118" pos:column="53"/></name><operator pos:line="2118" pos:column="53">)<pos:position pos:line="2118" pos:column="54"/></operator> <name pos:line="2118" pos:column="55">handle<pos:position pos:line="2118" pos:column="61"/></name><operator pos:line="2118" pos:column="61">)<pos:position pos:line="2118" pos:column="62"/></operator><operator pos:line="2118" pos:column="62">.<pos:position pos:line="2118" pos:column="63"/></operator><call><name pos:line="2118" pos:column="63">getVisibility<pos:position pos:line="2118" pos:column="76"/></name><argument_list pos:line="2118" pos:column="76">()<pos:position pos:line="2118" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="2118" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="2118" pos:column="80"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="2119" pos:column="13">(<pos:position pos:line="2119" pos:column="14"/></operator><operator pos:line="2119" pos:column="14">(<pos:position pos:line="2119" pos:column="15"/></operator><name pos:line="2119" pos:column="15">MMethod<pos:position pos:line="2119" pos:column="22"/></name><operator pos:line="2119" pos:column="22">)<pos:position pos:line="2119" pos:column="23"/></operator> <name pos:line="2119" pos:column="24">m<pos:position pos:line="2119" pos:column="25"/></name><operator pos:line="2119" pos:column="25">)<pos:position pos:line="2119" pos:column="26"/></operator><operator pos:line="2119" pos:column="26">.<pos:position pos:line="2119" pos:column="27"/></operator><call><name pos:line="2119" pos:column="27">setOwnerScope<pos:position pos:line="2119" pos:column="40"/></name><argument_list pos:line="2119" pos:column="40">(<argument><expr><operator pos:line="2119" pos:column="41">(<pos:position pos:line="2119" pos:column="42"/></operator><operator pos:line="2119" pos:column="42">(<pos:position pos:line="2119" pos:column="43"/></operator><name pos:line="2119" pos:column="43">MOperation<pos:position pos:line="2119" pos:column="53"/></name><operator pos:line="2119" pos:column="53">)<pos:position pos:line="2119" pos:column="54"/></operator> <name pos:line="2119" pos:column="55">handle<pos:position pos:line="2119" pos:column="61"/></name><operator pos:line="2119" pos:column="61">)<pos:position pos:line="2119" pos:column="62"/></operator><operator pos:line="2119" pos:column="62">.<pos:position pos:line="2119" pos:column="63"/></operator><call><name pos:line="2119" pos:column="63">getOwnerScope<pos:position pos:line="2119" pos:column="76"/></name><argument_list pos:line="2119" pos:column="76">()<pos:position pos:line="2119" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="2119" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="2119" pos:column="80"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="2120" pos:column="13">(<pos:position pos:line="2120" pos:column="14"/></operator><operator pos:line="2120" pos:column="14">(<pos:position pos:line="2120" pos:column="15"/></operator><name pos:line="2120" pos:column="15">MOperation<pos:position pos:line="2120" pos:column="25"/></name><operator pos:line="2120" pos:column="25">)<pos:position pos:line="2120" pos:column="26"/></operator> <name pos:line="2120" pos:column="27">handle<pos:position pos:line="2120" pos:column="33"/></name><operator pos:line="2120" pos:column="33">)<pos:position pos:line="2120" pos:column="34"/></operator><operator pos:line="2120" pos:column="34">.<pos:position pos:line="2120" pos:column="35"/></operator><call><name pos:line="2120" pos:column="35">addMethod<pos:position pos:line="2120" pos:column="44"/></name><argument_list pos:line="2120" pos:column="44">(<argument><expr><operator pos:line="2120" pos:column="45">(<pos:position pos:line="2120" pos:column="46"/></operator><name pos:line="2120" pos:column="46">MMethod<pos:position pos:line="2120" pos:column="53"/></name><operator pos:line="2120" pos:column="53">)<pos:position pos:line="2120" pos:column="54"/></operator> <name pos:line="2120" pos:column="55">m<pos:position pos:line="2120" pos:column="56"/></name></expr></argument>)<pos:position pos:line="2120" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="2120" pos:column="58"/></expr_stmt>
            <return pos:line="2121" pos:column="13">return;<pos:position pos:line="2121" pos:column="20"/></return>
        }<pos:position pos:line="2122" pos:column="10"/></block></then></if>
        <throw pos:line="2123" pos:column="9">throw <expr><operator pos:line="2123" pos:column="15">new<pos:position pos:line="2123" pos:column="18"/></operator> <call><name pos:line="2123" pos:column="19">IllegalArgumentException<pos:position pos:line="2123" pos:column="43"/></name><argument_list pos:line="2123" pos:column="43">(<argument><expr><literal type="string" pos:line="2123" pos:column="44">"handle: "<pos:position pos:line="2123" pos:column="54"/></literal> <operator pos:line="2123" pos:column="55">+<pos:position pos:line="2123" pos:column="56"/></operator> <name pos:line="2123" pos:column="57">handle<pos:position pos:line="2123" pos:column="63"/></name> <operator pos:line="2123" pos:column="64">+<pos:position pos:line="2123" pos:column="65"/></operator> <literal type="string" pos:line="2123" pos:column="66">" or m: "<pos:position pos:line="2123" pos:column="75"/></literal> <operator pos:line="2123" pos:column="76">+<pos:position pos:line="2123" pos:column="77"/></operator> <name pos:line="2123" pos:column="78">m<pos:position pos:line="2123" pos:column="79"/></name></expr></argument>)<pos:position pos:line="2123" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="2123" pos:column="81"/></throw>
    }<pos:position pos:line="2124" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="2126" pos:column="5">/**
     * Adds a model element to some namespace.
     *
     * @param handle namespace
     * @param me model element
     */</comment>
    <function><specifier pos:line="2132" pos:column="5">public<pos:position pos:line="2132" pos:column="11"/></specifier> <type><name pos:line="2132" pos:column="12">void<pos:position pos:line="2132" pos:column="16"/></name></type> <name pos:line="2132" pos:column="17">addOwnedElement<pos:position pos:line="2132" pos:column="32"/></name><parameter_list pos:line="2132" pos:column="32">(<parameter><decl><type><name pos:line="2132" pos:column="33">Object<pos:position pos:line="2132" pos:column="39"/></name></type> <name pos:line="2132" pos:column="40">handle<pos:position pos:line="2132" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2132" pos:column="48">Object<pos:position pos:line="2132" pos:column="54"/></name></type> <name pos:line="2132" pos:column="55">me<pos:position pos:line="2132" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="2132" pos:column="58"/></parameter_list> <block pos:line="2132" pos:column="59">{
        <if pos:line="2133" pos:column="9">if <condition pos:line="2133" pos:column="12">(<expr><name pos:line="2133" pos:column="13">handle<pos:position pos:line="2133" pos:column="19"/></name> <operator pos:line="2133" pos:column="20">instanceof<pos:position pos:line="2133" pos:column="30"/></operator> <name pos:line="2133" pos:column="31">MNamespace<pos:position pos:line="2133" pos:column="41"/></name> <operator pos:line="2133" pos:column="42">&amp;&amp;<pos:position pos:line="2133" pos:column="52"/></operator> <name pos:line="2133" pos:column="45">me<pos:position pos:line="2133" pos:column="47"/></name> <operator pos:line="2133" pos:column="48">instanceof<pos:position pos:line="2133" pos:column="58"/></operator> <name pos:line="2133" pos:column="59">MModelElement<pos:position pos:line="2133" pos:column="72"/></name></expr>)<pos:position pos:line="2133" pos:column="73"/></condition><then pos:line="2133" pos:column="73"> <block pos:line="2133" pos:column="74">{
            <expr_stmt><expr><operator pos:line="2134" pos:column="13">(<pos:position pos:line="2134" pos:column="14"/></operator><operator pos:line="2134" pos:column="14">(<pos:position pos:line="2134" pos:column="15"/></operator><name pos:line="2134" pos:column="15">MNamespace<pos:position pos:line="2134" pos:column="25"/></name><operator pos:line="2134" pos:column="25">)<pos:position pos:line="2134" pos:column="26"/></operator> <name pos:line="2134" pos:column="27">handle<pos:position pos:line="2134" pos:column="33"/></name><operator pos:line="2134" pos:column="33">)<pos:position pos:line="2134" pos:column="34"/></operator><operator pos:line="2134" pos:column="34">.<pos:position pos:line="2134" pos:column="35"/></operator><call><name pos:line="2134" pos:column="35">addOwnedElement<pos:position pos:line="2134" pos:column="50"/></name><argument_list pos:line="2134" pos:column="50">(<argument><expr><operator pos:line="2134" pos:column="51">(<pos:position pos:line="2134" pos:column="52"/></operator><name pos:line="2134" pos:column="52">MModelElement<pos:position pos:line="2134" pos:column="65"/></name><operator pos:line="2134" pos:column="65">)<pos:position pos:line="2134" pos:column="66"/></operator> <name pos:line="2134" pos:column="67">me<pos:position pos:line="2134" pos:column="69"/></name></expr></argument>)<pos:position pos:line="2134" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="2134" pos:column="71"/></expr_stmt>
            <return pos:line="2135" pos:column="13">return;<pos:position pos:line="2135" pos:column="20"/></return>
        }<pos:position pos:line="2136" pos:column="10"/></block></then></if>
        <throw pos:line="2137" pos:column="9">throw <expr><operator pos:line="2137" pos:column="15">new<pos:position pos:line="2137" pos:column="18"/></operator> <call><name pos:line="2137" pos:column="19">IllegalArgumentException<pos:position pos:line="2137" pos:column="43"/></name><argument_list pos:line="2137" pos:column="43">(<argument><expr><literal type="string" pos:line="2137" pos:column="44">"handle: "<pos:position pos:line="2137" pos:column="54"/></literal> <operator pos:line="2137" pos:column="55">+<pos:position pos:line="2137" pos:column="56"/></operator> <name pos:line="2137" pos:column="57">handle<pos:position pos:line="2137" pos:column="63"/></name>
                <operator pos:line="2138" pos:column="17">+<pos:position pos:line="2138" pos:column="18"/></operator> <literal type="string" pos:line="2138" pos:column="19">" or me: "<pos:position pos:line="2138" pos:column="29"/></literal> <operator pos:line="2138" pos:column="30">+<pos:position pos:line="2138" pos:column="31"/></operator> <name pos:line="2138" pos:column="32">me<pos:position pos:line="2138" pos:column="34"/></name></expr></argument>)<pos:position pos:line="2138" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="2138" pos:column="36"/></throw>
    }<pos:position pos:line="2139" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="2141" pos:column="5">/**
     * Add a Parameter to the given object at given location.
     *
     * @param handle The object that will get the Parameter:
     *               MEvent, MBehavioralFeature.
     * @param index the location
     * @param parameter Object that will be added
     */</comment>
    <function><specifier pos:line="2149" pos:column="5">public<pos:position pos:line="2149" pos:column="11"/></specifier> <type><name pos:line="2149" pos:column="12">void<pos:position pos:line="2149" pos:column="16"/></name></type> <name pos:line="2149" pos:column="17">addParameter<pos:position pos:line="2149" pos:column="29"/></name><parameter_list pos:line="2149" pos:column="29">(
        <parameter><decl><type><name pos:line="2150" pos:column="9">Object<pos:position pos:line="2150" pos:column="15"/></name></type> <name pos:line="2150" pos:column="16">handle<pos:position pos:line="2150" pos:column="22"/></name></decl></parameter>,
        <parameter><decl><type><name pos:line="2151" pos:column="9">int<pos:position pos:line="2151" pos:column="12"/></name></type> <name pos:line="2151" pos:column="13">index<pos:position pos:line="2151" pos:column="18"/></name></decl></parameter>,
        <parameter><decl><type><name pos:line="2152" pos:column="9">Object<pos:position pos:line="2152" pos:column="15"/></name></type> <name pos:line="2152" pos:column="16">parameter<pos:position pos:line="2152" pos:column="25"/></name></decl></parameter>)<pos:position pos:line="2152" pos:column="26"/></parameter_list> <block pos:line="2152" pos:column="27">{
        <if pos:line="2153" pos:column="9">if <condition pos:line="2153" pos:column="12">(<expr><name pos:line="2153" pos:column="13">parameter<pos:position pos:line="2153" pos:column="22"/></name> <operator pos:line="2153" pos:column="23">instanceof<pos:position pos:line="2153" pos:column="33"/></operator> <name pos:line="2153" pos:column="34">MParameter<pos:position pos:line="2153" pos:column="44"/></name></expr>)<pos:position pos:line="2153" pos:column="45"/></condition><then pos:line="2153" pos:column="45"> <block pos:line="2153" pos:column="46">{
            <if pos:line="2154" pos:column="13">if <condition pos:line="2154" pos:column="16">(<expr><name pos:line="2154" pos:column="17">handle<pos:position pos:line="2154" pos:column="23"/></name> <operator pos:line="2154" pos:column="24">instanceof<pos:position pos:line="2154" pos:column="34"/></operator> <name pos:line="2154" pos:column="35">MEvent<pos:position pos:line="2154" pos:column="41"/></name></expr>)<pos:position pos:line="2154" pos:column="42"/></condition><then pos:line="2154" pos:column="42"> <block pos:line="2154" pos:column="43">{
                <expr_stmt><expr><operator pos:line="2155" pos:column="17">(<pos:position pos:line="2155" pos:column="18"/></operator><operator pos:line="2155" pos:column="18">(<pos:position pos:line="2155" pos:column="19"/></operator><name pos:line="2155" pos:column="19">MEvent<pos:position pos:line="2155" pos:column="25"/></name><operator pos:line="2155" pos:column="25">)<pos:position pos:line="2155" pos:column="26"/></operator> <name pos:line="2155" pos:column="27">handle<pos:position pos:line="2155" pos:column="33"/></name><operator pos:line="2155" pos:column="33">)<pos:position pos:line="2155" pos:column="34"/></operator><operator pos:line="2155" pos:column="34">.<pos:position pos:line="2155" pos:column="35"/></operator><call><name pos:line="2155" pos:column="35">addParameter<pos:position pos:line="2155" pos:column="47"/></name><argument_list pos:line="2155" pos:column="47">(<argument><expr><name pos:line="2155" pos:column="48">index<pos:position pos:line="2155" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="2155" pos:column="55">(<pos:position pos:line="2155" pos:column="56"/></operator><name pos:line="2155" pos:column="56">MParameter<pos:position pos:line="2155" pos:column="66"/></name><operator pos:line="2155" pos:column="66">)<pos:position pos:line="2155" pos:column="67"/></operator> <name pos:line="2155" pos:column="68">parameter<pos:position pos:line="2155" pos:column="77"/></name></expr></argument>)<pos:position pos:line="2155" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="2155" pos:column="79"/></expr_stmt>
                <return pos:line="2156" pos:column="17">return;<pos:position pos:line="2156" pos:column="24"/></return>
            }<pos:position pos:line="2157" pos:column="14"/></block></then></if>
            <if pos:line="2158" pos:column="13">if <condition pos:line="2158" pos:column="16">(<expr><name pos:line="2158" pos:column="17">handle<pos:position pos:line="2158" pos:column="23"/></name> <operator pos:line="2158" pos:column="24">instanceof<pos:position pos:line="2158" pos:column="34"/></operator> <name pos:line="2158" pos:column="35">MBehavioralFeature<pos:position pos:line="2158" pos:column="53"/></name></expr>)<pos:position pos:line="2158" pos:column="54"/></condition><then pos:line="2158" pos:column="54"> <block pos:line="2158" pos:column="55">{
                <expr_stmt><expr><operator pos:line="2159" pos:column="17">(<pos:position pos:line="2159" pos:column="18"/></operator><operator pos:line="2159" pos:column="18">(<pos:position pos:line="2159" pos:column="19"/></operator><name pos:line="2159" pos:column="19">MBehavioralFeature<pos:position pos:line="2159" pos:column="37"/></name><operator pos:line="2159" pos:column="37">)<pos:position pos:line="2159" pos:column="38"/></operator> <name pos:line="2159" pos:column="39">handle<pos:position pos:line="2159" pos:column="45"/></name><operator pos:line="2159" pos:column="45">)<pos:position pos:line="2159" pos:column="46"/></operator><operator pos:line="2159" pos:column="46">.<pos:position pos:line="2159" pos:column="47"/></operator><call><name pos:line="2159" pos:column="47">addParameter<pos:position pos:line="2159" pos:column="59"/></name><argument_list pos:line="2159" pos:column="59">(
                        <argument><expr><name pos:line="2160" pos:column="25">index<pos:position pos:line="2160" pos:column="30"/></name></expr></argument>,
                        <argument><expr><operator pos:line="2161" pos:column="25">(<pos:position pos:line="2161" pos:column="26"/></operator><name pos:line="2161" pos:column="26">MParameter<pos:position pos:line="2161" pos:column="36"/></name><operator pos:line="2161" pos:column="36">)<pos:position pos:line="2161" pos:column="37"/></operator> <name pos:line="2161" pos:column="38">parameter<pos:position pos:line="2161" pos:column="47"/></name></expr></argument>)<pos:position pos:line="2161" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="2161" pos:column="49"/></expr_stmt>
                <return pos:line="2162" pos:column="17">return;<pos:position pos:line="2162" pos:column="24"/></return>
            }<pos:position pos:line="2163" pos:column="14"/></block></then></if>
        }<pos:position pos:line="2164" pos:column="10"/></block></then></if>
        <throw pos:line="2165" pos:column="9">throw <expr><operator pos:line="2165" pos:column="15">new<pos:position pos:line="2165" pos:column="18"/></operator> <call><name pos:line="2165" pos:column="19">IllegalArgumentException<pos:position pos:line="2165" pos:column="43"/></name><argument_list pos:line="2165" pos:column="43">(<argument><expr><literal type="string" pos:line="2165" pos:column="44">"handle: "<pos:position pos:line="2165" pos:column="54"/></literal> <operator pos:line="2165" pos:column="55">+<pos:position pos:line="2165" pos:column="56"/></operator> <name pos:line="2165" pos:column="57">handle<pos:position pos:line="2165" pos:column="63"/></name>
                <operator pos:line="2166" pos:column="17">+<pos:position pos:line="2166" pos:column="18"/></operator> <literal type="string" pos:line="2166" pos:column="19">" or parameter: "<pos:position pos:line="2166" pos:column="36"/></literal> <operator pos:line="2166" pos:column="37">+<pos:position pos:line="2166" pos:column="38"/></operator> <name pos:line="2166" pos:column="39">parameter<pos:position pos:line="2166" pos:column="48"/></name></expr></argument>)<pos:position pos:line="2166" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="2166" pos:column="50"/></throw>
    }<pos:position pos:line="2167" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="2169" pos:column="5">/**
     * Add a Parameter to the given object.
     *
     * @param handle The object that will get the Parameter:
     *               MObjectFlowState, MEvent, MBehavioralFeature, MClassifier.
     * @param parameter Object that will be added
     */</comment>
    <function><specifier pos:line="2176" pos:column="5">public<pos:position pos:line="2176" pos:column="11"/></specifier> <type><name pos:line="2176" pos:column="12">void<pos:position pos:line="2176" pos:column="16"/></name></type> <name pos:line="2176" pos:column="17">addParameter<pos:position pos:line="2176" pos:column="29"/></name><parameter_list pos:line="2176" pos:column="29">(<parameter><decl><type><name pos:line="2176" pos:column="30">Object<pos:position pos:line="2176" pos:column="36"/></name></type> <name pos:line="2176" pos:column="37">handle<pos:position pos:line="2176" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2176" pos:column="45">Object<pos:position pos:line="2176" pos:column="51"/></name></type> <name pos:line="2176" pos:column="52">parameter<pos:position pos:line="2176" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="2176" pos:column="62"/></parameter_list> <block pos:line="2176" pos:column="63">{
        <if pos:line="2177" pos:column="9">if <condition pos:line="2177" pos:column="12">(<expr><name pos:line="2177" pos:column="13">parameter<pos:position pos:line="2177" pos:column="22"/></name> <operator pos:line="2177" pos:column="23">instanceof<pos:position pos:line="2177" pos:column="33"/></operator> <name pos:line="2177" pos:column="34">MParameter<pos:position pos:line="2177" pos:column="44"/></name></expr>)<pos:position pos:line="2177" pos:column="45"/></condition><then pos:line="2177" pos:column="45"> <block pos:line="2177" pos:column="46">{
            <if pos:line="2178" pos:column="13">if <condition pos:line="2178" pos:column="16">(<expr><name pos:line="2178" pos:column="17">handle<pos:position pos:line="2178" pos:column="23"/></name> <operator pos:line="2178" pos:column="24">instanceof<pos:position pos:line="2178" pos:column="34"/></operator> <name pos:line="2178" pos:column="35">MObjectFlowState<pos:position pos:line="2178" pos:column="51"/></name></expr>)<pos:position pos:line="2178" pos:column="52"/></condition><then pos:line="2178" pos:column="52"> <block pos:line="2178" pos:column="53">{
                <expr_stmt><expr><operator pos:line="2179" pos:column="17">(<pos:position pos:line="2179" pos:column="18"/></operator><operator pos:line="2179" pos:column="18">(<pos:position pos:line="2179" pos:column="19"/></operator><name pos:line="2179" pos:column="19">MObjectFlowState<pos:position pos:line="2179" pos:column="35"/></name><operator pos:line="2179" pos:column="35">)<pos:position pos:line="2179" pos:column="36"/></operator> <name pos:line="2179" pos:column="37">handle<pos:position pos:line="2179" pos:column="43"/></name><operator pos:line="2179" pos:column="43">)<pos:position pos:line="2179" pos:column="44"/></operator><operator pos:line="2179" pos:column="44">.<pos:position pos:line="2179" pos:column="45"/></operator><call><name pos:line="2179" pos:column="45">addParameter<pos:position pos:line="2179" pos:column="57"/></name><argument_list pos:line="2179" pos:column="57">(
                        <argument><expr><operator pos:line="2180" pos:column="25">(<pos:position pos:line="2180" pos:column="26"/></operator><name pos:line="2180" pos:column="26">MParameter<pos:position pos:line="2180" pos:column="36"/></name><operator pos:line="2180" pos:column="36">)<pos:position pos:line="2180" pos:column="37"/></operator> <name pos:line="2180" pos:column="38">parameter<pos:position pos:line="2180" pos:column="47"/></name></expr></argument>)<pos:position pos:line="2180" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="2180" pos:column="49"/></expr_stmt>
                <return pos:line="2181" pos:column="17">return;<pos:position pos:line="2181" pos:column="24"/></return>
            }<pos:position pos:line="2182" pos:column="14"/></block></then></if>
            <if pos:line="2183" pos:column="13">if <condition pos:line="2183" pos:column="16">(<expr><name pos:line="2183" pos:column="17">handle<pos:position pos:line="2183" pos:column="23"/></name> <operator pos:line="2183" pos:column="24">instanceof<pos:position pos:line="2183" pos:column="34"/></operator> <name pos:line="2183" pos:column="35">MEvent<pos:position pos:line="2183" pos:column="41"/></name></expr>)<pos:position pos:line="2183" pos:column="42"/></condition><then pos:line="2183" pos:column="42"> <block pos:line="2183" pos:column="43">{
                <expr_stmt><expr><operator pos:line="2184" pos:column="17">(<pos:position pos:line="2184" pos:column="18"/></operator><operator pos:line="2184" pos:column="18">(<pos:position pos:line="2184" pos:column="19"/></operator><name pos:line="2184" pos:column="19">MEvent<pos:position pos:line="2184" pos:column="25"/></name><operator pos:line="2184" pos:column="25">)<pos:position pos:line="2184" pos:column="26"/></operator> <name pos:line="2184" pos:column="27">handle<pos:position pos:line="2184" pos:column="33"/></name><operator pos:line="2184" pos:column="33">)<pos:position pos:line="2184" pos:column="34"/></operator><operator pos:line="2184" pos:column="34">.<pos:position pos:line="2184" pos:column="35"/></operator><call><name pos:line="2184" pos:column="35">addParameter<pos:position pos:line="2184" pos:column="47"/></name><argument_list pos:line="2184" pos:column="47">(<argument><expr><operator pos:line="2184" pos:column="48">(<pos:position pos:line="2184" pos:column="49"/></operator><name pos:line="2184" pos:column="49">MParameter<pos:position pos:line="2184" pos:column="59"/></name><operator pos:line="2184" pos:column="59">)<pos:position pos:line="2184" pos:column="60"/></operator> <name pos:line="2184" pos:column="61">parameter<pos:position pos:line="2184" pos:column="70"/></name></expr></argument>)<pos:position pos:line="2184" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="2184" pos:column="72"/></expr_stmt>
                <return pos:line="2185" pos:column="17">return;<pos:position pos:line="2185" pos:column="24"/></return>
            }<pos:position pos:line="2186" pos:column="14"/></block></then></if>
            <if pos:line="2187" pos:column="13">if <condition pos:line="2187" pos:column="16">(<expr><name pos:line="2187" pos:column="17">handle<pos:position pos:line="2187" pos:column="23"/></name> <operator pos:line="2187" pos:column="24">instanceof<pos:position pos:line="2187" pos:column="34"/></operator> <name pos:line="2187" pos:column="35">MBehavioralFeature<pos:position pos:line="2187" pos:column="53"/></name></expr>)<pos:position pos:line="2187" pos:column="54"/></condition><then pos:line="2187" pos:column="54"> <block pos:line="2187" pos:column="55">{
                <expr_stmt><expr><operator pos:line="2188" pos:column="17">(<pos:position pos:line="2188" pos:column="18"/></operator><operator pos:line="2188" pos:column="18">(<pos:position pos:line="2188" pos:column="19"/></operator><name pos:line="2188" pos:column="19">MBehavioralFeature<pos:position pos:line="2188" pos:column="37"/></name><operator pos:line="2188" pos:column="37">)<pos:position pos:line="2188" pos:column="38"/></operator> <name pos:line="2188" pos:column="39">handle<pos:position pos:line="2188" pos:column="45"/></name><operator pos:line="2188" pos:column="45">)<pos:position pos:line="2188" pos:column="46"/></operator><operator pos:line="2188" pos:column="46">.<pos:position pos:line="2188" pos:column="47"/></operator><call><name pos:line="2188" pos:column="47">addParameter<pos:position pos:line="2188" pos:column="59"/></name><argument_list pos:line="2188" pos:column="59">(
                    <argument><expr><operator pos:line="2189" pos:column="21">(<pos:position pos:line="2189" pos:column="22"/></operator><name pos:line="2189" pos:column="22">MParameter<pos:position pos:line="2189" pos:column="32"/></name><operator pos:line="2189" pos:column="32">)<pos:position pos:line="2189" pos:column="33"/></operator> <name pos:line="2189" pos:column="34">parameter<pos:position pos:line="2189" pos:column="43"/></name></expr></argument>)<pos:position pos:line="2189" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="2189" pos:column="45"/></expr_stmt>
                <return pos:line="2190" pos:column="17">return;<pos:position pos:line="2190" pos:column="24"/></return>
            }<pos:position pos:line="2191" pos:column="14"/></block></then></if>
            <if pos:line="2192" pos:column="13">if <condition pos:line="2192" pos:column="16">(<expr><name pos:line="2192" pos:column="17">handle<pos:position pos:line="2192" pos:column="23"/></name> <operator pos:line="2192" pos:column="24">instanceof<pos:position pos:line="2192" pos:column="34"/></operator> <name pos:line="2192" pos:column="35">MClassifier<pos:position pos:line="2192" pos:column="46"/></name></expr>)<pos:position pos:line="2192" pos:column="47"/></condition><then pos:line="2192" pos:column="47"> <block pos:line="2192" pos:column="48">{
                <expr_stmt><expr><operator pos:line="2193" pos:column="17">(<pos:position pos:line="2193" pos:column="18"/></operator><operator pos:line="2193" pos:column="18">(<pos:position pos:line="2193" pos:column="19"/></operator><name pos:line="2193" pos:column="19">MClassifier<pos:position pos:line="2193" pos:column="30"/></name><operator pos:line="2193" pos:column="30">)<pos:position pos:line="2193" pos:column="31"/></operator> <name pos:line="2193" pos:column="32">handle<pos:position pos:line="2193" pos:column="38"/></name><operator pos:line="2193" pos:column="38">)<pos:position pos:line="2193" pos:column="39"/></operator><operator pos:line="2193" pos:column="39">.<pos:position pos:line="2193" pos:column="40"/></operator><call><name pos:line="2193" pos:column="40">addParameter<pos:position pos:line="2193" pos:column="52"/></name><argument_list pos:line="2193" pos:column="52">(<argument><expr><operator pos:line="2193" pos:column="53">(<pos:position pos:line="2193" pos:column="54"/></operator><name pos:line="2193" pos:column="54">MParameter<pos:position pos:line="2193" pos:column="64"/></name><operator pos:line="2193" pos:column="64">)<pos:position pos:line="2193" pos:column="65"/></operator> <name pos:line="2193" pos:column="66">parameter<pos:position pos:line="2193" pos:column="75"/></name></expr></argument>)<pos:position pos:line="2193" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="2193" pos:column="77"/></expr_stmt>
                <return pos:line="2194" pos:column="17">return;<pos:position pos:line="2194" pos:column="24"/></return>
            }<pos:position pos:line="2195" pos:column="14"/></block></then></if>
        }<pos:position pos:line="2196" pos:column="10"/></block></then></if>
        <throw pos:line="2197" pos:column="9">throw <expr><operator pos:line="2197" pos:column="15">new<pos:position pos:line="2197" pos:column="18"/></operator> <call><name pos:line="2197" pos:column="19">IllegalArgumentException<pos:position pos:line="2197" pos:column="43"/></name><argument_list pos:line="2197" pos:column="43">(<argument><expr><literal type="string" pos:line="2197" pos:column="44">"handle: "<pos:position pos:line="2197" pos:column="54"/></literal> <operator pos:line="2197" pos:column="55">+<pos:position pos:line="2197" pos:column="56"/></operator> <name pos:line="2197" pos:column="57">handle<pos:position pos:line="2197" pos:column="63"/></name>
                <operator pos:line="2198" pos:column="17">+<pos:position pos:line="2198" pos:column="18"/></operator> <literal type="string" pos:line="2198" pos:column="19">" or parameter: "<pos:position pos:line="2198" pos:column="36"/></literal> <operator pos:line="2198" pos:column="37">+<pos:position pos:line="2198" pos:column="38"/></operator> <name pos:line="2198" pos:column="39">parameter<pos:position pos:line="2198" pos:column="48"/></name></expr></argument>)<pos:position pos:line="2198" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="2198" pos:column="50"/></throw>
    }<pos:position pos:line="2199" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="2201" pos:column="5">/**
     * Add a raised Signal to a Message or Operation.
     *
     * @param handle the Message or Operation
     * @param sig the Signal that is raised
     */</comment>
    <function><specifier pos:line="2207" pos:column="5">public<pos:position pos:line="2207" pos:column="11"/></specifier> <type><name pos:line="2207" pos:column="12">void<pos:position pos:line="2207" pos:column="16"/></name></type> <name pos:line="2207" pos:column="17">addRaisedSignal<pos:position pos:line="2207" pos:column="32"/></name><parameter_list pos:line="2207" pos:column="32">(<parameter><decl><type><name pos:line="2207" pos:column="33">Object<pos:position pos:line="2207" pos:column="39"/></name></type> <name pos:line="2207" pos:column="40">handle<pos:position pos:line="2207" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2207" pos:column="48">Object<pos:position pos:line="2207" pos:column="54"/></name></type> <name pos:line="2207" pos:column="55">sig<pos:position pos:line="2207" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="2207" pos:column="59"/></parameter_list> <block pos:line="2207" pos:column="60">{
        <if pos:line="2208" pos:column="9">if <condition pos:line="2208" pos:column="12">(<expr><name pos:line="2208" pos:column="13">sig<pos:position pos:line="2208" pos:column="16"/></name> <operator pos:line="2208" pos:column="17">instanceof<pos:position pos:line="2208" pos:column="27"/></operator> <name pos:line="2208" pos:column="28">MSignal<pos:position pos:line="2208" pos:column="35"/></name></expr>)<pos:position pos:line="2208" pos:column="36"/></condition><then pos:line="2208" pos:column="36"> <block pos:line="2208" pos:column="37">{
            <if pos:line="2209" pos:column="13">if <condition pos:line="2209" pos:column="16">(<expr><name pos:line="2209" pos:column="17">handle<pos:position pos:line="2209" pos:column="23"/></name> <operator pos:line="2209" pos:column="24">instanceof<pos:position pos:line="2209" pos:column="34"/></operator> <name pos:line="2209" pos:column="35">MMessage<pos:position pos:line="2209" pos:column="43"/></name></expr>)<pos:position pos:line="2209" pos:column="44"/></condition><then pos:line="2209" pos:column="44"> <block pos:line="2209" pos:column="45">{
                <expr_stmt><expr><operator pos:line="2210" pos:column="17">(<pos:position pos:line="2210" pos:column="18"/></operator><operator pos:line="2210" pos:column="18">(<pos:position pos:line="2210" pos:column="19"/></operator><name pos:line="2210" pos:column="19">MBehavioralFeature<pos:position pos:line="2210" pos:column="37"/></name><operator pos:line="2210" pos:column="37">)<pos:position pos:line="2210" pos:column="38"/></operator> <name pos:line="2210" pos:column="39">handle<pos:position pos:line="2210" pos:column="45"/></name><operator pos:line="2210" pos:column="45">)<pos:position pos:line="2210" pos:column="46"/></operator><operator pos:line="2210" pos:column="46">.<pos:position pos:line="2210" pos:column="47"/></operator><call><name pos:line="2210" pos:column="47">addRaisedSignal<pos:position pos:line="2210" pos:column="62"/></name><argument_list pos:line="2210" pos:column="62">(<argument><expr><operator pos:line="2210" pos:column="63">(<pos:position pos:line="2210" pos:column="64"/></operator><name pos:line="2210" pos:column="64">MSignal<pos:position pos:line="2210" pos:column="71"/></name><operator pos:line="2210" pos:column="71">)<pos:position pos:line="2210" pos:column="72"/></operator> <name pos:line="2210" pos:column="73">sig<pos:position pos:line="2210" pos:column="76"/></name></expr></argument>)<pos:position pos:line="2210" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="2210" pos:column="78"/></expr_stmt>
                <return pos:line="2211" pos:column="17">return;<pos:position pos:line="2211" pos:column="24"/></return>
            }<pos:position pos:line="2212" pos:column="14"/></block></then></if>
            <if pos:line="2213" pos:column="13">if <condition pos:line="2213" pos:column="16">(<expr><name pos:line="2213" pos:column="17">handle<pos:position pos:line="2213" pos:column="23"/></name> <operator pos:line="2213" pos:column="24">instanceof<pos:position pos:line="2213" pos:column="34"/></operator> <name pos:line="2213" pos:column="35">MOperation<pos:position pos:line="2213" pos:column="45"/></name></expr>)<pos:position pos:line="2213" pos:column="46"/></condition><then pos:line="2213" pos:column="46"> <block pos:line="2213" pos:column="47">{
                <expr_stmt><expr><operator pos:line="2214" pos:column="17">(<pos:position pos:line="2214" pos:column="18"/></operator><operator pos:line="2214" pos:column="18">(<pos:position pos:line="2214" pos:column="19"/></operator><name pos:line="2214" pos:column="19">MOperation<pos:position pos:line="2214" pos:column="29"/></name><operator pos:line="2214" pos:column="29">)<pos:position pos:line="2214" pos:column="30"/></operator> <name pos:line="2214" pos:column="31">handle<pos:position pos:line="2214" pos:column="37"/></name><operator pos:line="2214" pos:column="37">)<pos:position pos:line="2214" pos:column="38"/></operator><operator pos:line="2214" pos:column="38">.<pos:position pos:line="2214" pos:column="39"/></operator><call><name pos:line="2214" pos:column="39">addRaisedSignal<pos:position pos:line="2214" pos:column="54"/></name><argument_list pos:line="2214" pos:column="54">(<argument><expr><operator pos:line="2214" pos:column="55">(<pos:position pos:line="2214" pos:column="56"/></operator><name pos:line="2214" pos:column="56">MSignal<pos:position pos:line="2214" pos:column="63"/></name><operator pos:line="2214" pos:column="63">)<pos:position pos:line="2214" pos:column="64"/></operator> <name pos:line="2214" pos:column="65">sig<pos:position pos:line="2214" pos:column="68"/></name></expr></argument>)<pos:position pos:line="2214" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="2214" pos:column="70"/></expr_stmt>
                <return pos:line="2215" pos:column="17">return;<pos:position pos:line="2215" pos:column="24"/></return>
            }<pos:position pos:line="2216" pos:column="14"/></block></then></if>
        }<pos:position pos:line="2217" pos:column="10"/></block></then></if>
        <throw pos:line="2218" pos:column="9">throw <expr><operator pos:line="2218" pos:column="15">new<pos:position pos:line="2218" pos:column="18"/></operator> <call><name pos:line="2218" pos:column="19">IllegalArgumentException<pos:position pos:line="2218" pos:column="43"/></name><argument_list pos:line="2218" pos:column="43">(<argument><expr><literal type="string" pos:line="2218" pos:column="44">"handle: "<pos:position pos:line="2218" pos:column="54"/></literal> <operator pos:line="2218" pos:column="55">+<pos:position pos:line="2218" pos:column="56"/></operator> <name pos:line="2218" pos:column="57">handle<pos:position pos:line="2218" pos:column="63"/></name>
                <operator pos:line="2219" pos:column="17">+<pos:position pos:line="2219" pos:column="18"/></operator> <literal type="string" pos:line="2219" pos:column="19">" or sig: "<pos:position pos:line="2219" pos:column="30"/></literal> <operator pos:line="2219" pos:column="31">+<pos:position pos:line="2219" pos:column="32"/></operator> <name pos:line="2219" pos:column="33">sig<pos:position pos:line="2219" pos:column="36"/></name></expr></argument>)<pos:position pos:line="2219" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="2219" pos:column="38"/></throw>
    }<pos:position pos:line="2220" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="2222" pos:column="5">/**
     * Add a source flow to a model element.
     *
     * @param handle The model element.
     * @param flow The flow.
     */</comment>
    <function><specifier pos:line="2228" pos:column="5">public<pos:position pos:line="2228" pos:column="11"/></specifier> <type><name pos:line="2228" pos:column="12">void<pos:position pos:line="2228" pos:column="16"/></name></type> <name pos:line="2228" pos:column="17">addSourceFlow<pos:position pos:line="2228" pos:column="30"/></name><parameter_list pos:line="2228" pos:column="30">(<parameter><decl><type><name pos:line="2228" pos:column="31">Object<pos:position pos:line="2228" pos:column="37"/></name></type> <name pos:line="2228" pos:column="38">handle<pos:position pos:line="2228" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2228" pos:column="46">Object<pos:position pos:line="2228" pos:column="52"/></name></type> <name pos:line="2228" pos:column="53">flow<pos:position pos:line="2228" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="2228" pos:column="58"/></parameter_list> <block pos:line="2228" pos:column="59">{
        <if pos:line="2229" pos:column="9">if <condition pos:line="2229" pos:column="12">(<expr><name pos:line="2229" pos:column="13">handle<pos:position pos:line="2229" pos:column="19"/></name> <operator pos:line="2229" pos:column="20">instanceof<pos:position pos:line="2229" pos:column="30"/></operator> <name pos:line="2229" pos:column="31">MModelElement<pos:position pos:line="2229" pos:column="44"/></name>
                <operator pos:line="2230" pos:column="17">&amp;&amp;<pos:position pos:line="2230" pos:column="27"/></operator> <name pos:line="2230" pos:column="20">flow<pos:position pos:line="2230" pos:column="24"/></name> <operator pos:line="2230" pos:column="25">instanceof<pos:position pos:line="2230" pos:column="35"/></operator> <name pos:line="2230" pos:column="36">MFlow<pos:position pos:line="2230" pos:column="41"/></name></expr>)<pos:position pos:line="2230" pos:column="42"/></condition><then pos:line="2230" pos:column="42"> <block pos:line="2230" pos:column="43">{
            <expr_stmt><expr><operator pos:line="2231" pos:column="13">(<pos:position pos:line="2231" pos:column="14"/></operator><operator pos:line="2231" pos:column="14">(<pos:position pos:line="2231" pos:column="15"/></operator><name pos:line="2231" pos:column="15">MModelElement<pos:position pos:line="2231" pos:column="28"/></name><operator pos:line="2231" pos:column="28">)<pos:position pos:line="2231" pos:column="29"/></operator> <name pos:line="2231" pos:column="30">handle<pos:position pos:line="2231" pos:column="36"/></name><operator pos:line="2231" pos:column="36">)<pos:position pos:line="2231" pos:column="37"/></operator><operator pos:line="2231" pos:column="37">.<pos:position pos:line="2231" pos:column="38"/></operator><call><name pos:line="2231" pos:column="38">addSourceFlow<pos:position pos:line="2231" pos:column="51"/></name><argument_list pos:line="2231" pos:column="51">(<argument><expr><operator pos:line="2231" pos:column="52">(<pos:position pos:line="2231" pos:column="53"/></operator><name pos:line="2231" pos:column="53">MFlow<pos:position pos:line="2231" pos:column="58"/></name><operator pos:line="2231" pos:column="58">)<pos:position pos:line="2231" pos:column="59"/></operator> <name pos:line="2231" pos:column="60">flow<pos:position pos:line="2231" pos:column="64"/></name></expr></argument>)<pos:position pos:line="2231" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="2231" pos:column="66"/></expr_stmt>
            <return pos:line="2232" pos:column="13">return;<pos:position pos:line="2232" pos:column="20"/></return>
        }<pos:position pos:line="2233" pos:column="10"/></block></then></if>

        <throw pos:line="2235" pos:column="9">throw <expr><operator pos:line="2235" pos:column="15">new<pos:position pos:line="2235" pos:column="18"/></operator> <call><name pos:line="2235" pos:column="19">IllegalArgumentException<pos:position pos:line="2235" pos:column="43"/></name><argument_list pos:line="2235" pos:column="43">(<argument><expr><literal type="string" pos:line="2235" pos:column="44">"handle: "<pos:position pos:line="2235" pos:column="54"/></literal> <operator pos:line="2235" pos:column="55">+<pos:position pos:line="2235" pos:column="56"/></operator> <name pos:line="2235" pos:column="57">handle<pos:position pos:line="2235" pos:column="63"/></name>
                <operator pos:line="2236" pos:column="17">+<pos:position pos:line="2236" pos:column="18"/></operator> <literal type="string" pos:line="2236" pos:column="19">" or flow: "<pos:position pos:line="2236" pos:column="31"/></literal> <operator pos:line="2236" pos:column="32">+<pos:position pos:line="2236" pos:column="33"/></operator> <name pos:line="2236" pos:column="34">flow<pos:position pos:line="2236" pos:column="38"/></name></expr></argument>)<pos:position pos:line="2236" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="2236" pos:column="40"/></throw>
    }<pos:position pos:line="2237" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="2239" pos:column="5">/**
     * Adds a supplier classifier to some abstraction.
     *
     * @param handle abstraction
     * @param element supplier model element
     */</comment>
    <function><specifier pos:line="2245" pos:column="5">public<pos:position pos:line="2245" pos:column="11"/></specifier> <type><name pos:line="2245" pos:column="12">void<pos:position pos:line="2245" pos:column="16"/></name></type> <name pos:line="2245" pos:column="17">addSupplier<pos:position pos:line="2245" pos:column="28"/></name><parameter_list pos:line="2245" pos:column="28">(<parameter><decl><type><name pos:line="2245" pos:column="29">Object<pos:position pos:line="2245" pos:column="35"/></name></type> <name pos:line="2245" pos:column="36">handle<pos:position pos:line="2245" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2245" pos:column="44">Object<pos:position pos:line="2245" pos:column="50"/></name></type> <name pos:line="2245" pos:column="51">element<pos:position pos:line="2245" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="2245" pos:column="59"/></parameter_list> <block pos:line="2245" pos:column="60">{
        <if pos:line="2246" pos:column="9">if <condition pos:line="2246" pos:column="12">(<expr><name pos:line="2246" pos:column="13">handle<pos:position pos:line="2246" pos:column="19"/></name> <operator pos:line="2246" pos:column="20">instanceof<pos:position pos:line="2246" pos:column="30"/></operator> <name pos:line="2246" pos:column="31">MDependency<pos:position pos:line="2246" pos:column="42"/></name> <operator pos:line="2246" pos:column="43">&amp;&amp;<pos:position pos:line="2246" pos:column="53"/></operator> <name pos:line="2246" pos:column="46">element<pos:position pos:line="2246" pos:column="53"/></name> <operator pos:line="2246" pos:column="54">instanceof<pos:position pos:line="2246" pos:column="64"/></operator> <name pos:line="2246" pos:column="65">MModelElement<pos:position pos:line="2246" pos:column="78"/></name></expr>)<pos:position pos:line="2246" pos:column="79"/></condition><then pos:line="2246" pos:column="79"> <block pos:line="2246" pos:column="80">{
            <expr_stmt><expr><operator pos:line="2247" pos:column="13">(<pos:position pos:line="2247" pos:column="14"/></operator><operator pos:line="2247" pos:column="14">(<pos:position pos:line="2247" pos:column="15"/></operator><name pos:line="2247" pos:column="15">MDependency<pos:position pos:line="2247" pos:column="26"/></name><operator pos:line="2247" pos:column="26">)<pos:position pos:line="2247" pos:column="27"/></operator> <name pos:line="2247" pos:column="28">handle<pos:position pos:line="2247" pos:column="34"/></name><operator pos:line="2247" pos:column="34">)<pos:position pos:line="2247" pos:column="35"/></operator><operator pos:line="2247" pos:column="35">.<pos:position pos:line="2247" pos:column="36"/></operator><call><name pos:line="2247" pos:column="36">addSupplier<pos:position pos:line="2247" pos:column="47"/></name><argument_list pos:line="2247" pos:column="47">(<argument><expr><operator pos:line="2247" pos:column="48">(<pos:position pos:line="2247" pos:column="49"/></operator><name pos:line="2247" pos:column="49">MModelElement<pos:position pos:line="2247" pos:column="62"/></name><operator pos:line="2247" pos:column="62">)<pos:position pos:line="2247" pos:column="63"/></operator> <name pos:line="2247" pos:column="64">element<pos:position pos:line="2247" pos:column="71"/></name></expr></argument>)<pos:position pos:line="2247" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="2247" pos:column="73"/></expr_stmt>
            <return pos:line="2248" pos:column="13">return;<pos:position pos:line="2248" pos:column="20"/></return>
        }<pos:position pos:line="2249" pos:column="10"/></block></then></if>
        <throw pos:line="2250" pos:column="9">throw <expr><operator pos:line="2250" pos:column="15">new<pos:position pos:line="2250" pos:column="18"/></operator> <call><name pos:line="2250" pos:column="19">IllegalArgumentException<pos:position pos:line="2250" pos:column="43"/></name><argument_list pos:line="2250" pos:column="43">(<argument><expr><literal type="string" pos:line="2250" pos:column="44">"handle: "<pos:position pos:line="2250" pos:column="54"/></literal> <operator pos:line="2250" pos:column="55">+<pos:position pos:line="2250" pos:column="56"/></operator> <name pos:line="2250" pos:column="57">handle<pos:position pos:line="2250" pos:column="63"/></name>
                <operator pos:line="2251" pos:column="17">+<pos:position pos:line="2251" pos:column="18"/></operator> <literal type="string" pos:line="2251" pos:column="19">" or element: "<pos:position pos:line="2251" pos:column="34"/></literal> <operator pos:line="2251" pos:column="35">+<pos:position pos:line="2251" pos:column="36"/></operator> <name pos:line="2251" pos:column="37">element<pos:position pos:line="2251" pos:column="44"/></name></expr></argument>)<pos:position pos:line="2251" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="2251" pos:column="46"/></throw>
    }<pos:position pos:line="2252" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="2254" pos:column="5">/**
     * Adds a supplier dependency to some modelelement.
     *
     * @param supplier the supplier
     * @param dependency the dependency
     */</comment>
    <function><specifier pos:line="2260" pos:column="5">public<pos:position pos:line="2260" pos:column="11"/></specifier> <type><name pos:line="2260" pos:column="12">void<pos:position pos:line="2260" pos:column="16"/></name></type> <name pos:line="2260" pos:column="17">addSupplierDependency<pos:position pos:line="2260" pos:column="38"/></name><parameter_list pos:line="2260" pos:column="38">(
            <parameter><decl><type><name pos:line="2261" pos:column="13">Object<pos:position pos:line="2261" pos:column="19"/></name></type> <name pos:line="2261" pos:column="20">supplier<pos:position pos:line="2261" pos:column="28"/></name></decl></parameter>,
            <parameter><decl><type><name pos:line="2262" pos:column="13">Object<pos:position pos:line="2262" pos:column="19"/></name></type> <name pos:line="2262" pos:column="20">dependency<pos:position pos:line="2262" pos:column="30"/></name></decl></parameter>)<pos:position pos:line="2262" pos:column="31"/></parameter_list> <block pos:line="2262" pos:column="32">{
        <if pos:line="2263" pos:column="9">if <condition pos:line="2263" pos:column="12">(<expr><name pos:line="2263" pos:column="13">supplier<pos:position pos:line="2263" pos:column="21"/></name> <operator pos:line="2263" pos:column="22">instanceof<pos:position pos:line="2263" pos:column="32"/></operator> <name pos:line="2263" pos:column="33">MModelElement<pos:position pos:line="2263" pos:column="46"/></name>
                <operator pos:line="2264" pos:column="17">&amp;&amp;<pos:position pos:line="2264" pos:column="27"/></operator> <name pos:line="2264" pos:column="20">dependency<pos:position pos:line="2264" pos:column="30"/></name> <operator pos:line="2264" pos:column="31">instanceof<pos:position pos:line="2264" pos:column="41"/></operator> <name pos:line="2264" pos:column="42">MDependency<pos:position pos:line="2264" pos:column="53"/></name></expr>)<pos:position pos:line="2264" pos:column="54"/></condition><then pos:line="2264" pos:column="54"> <block pos:line="2264" pos:column="55">{
            <decl_stmt><decl><type><name pos:line="2265" pos:column="13">MModelElement<pos:position pos:line="2265" pos:column="26"/></name></type> <name pos:line="2265" pos:column="27">me<pos:position pos:line="2265" pos:column="29"/></name> <init pos:line="2265" pos:column="30">= <expr><operator pos:line="2265" pos:column="32">(<pos:position pos:line="2265" pos:column="33"/></operator><name pos:line="2265" pos:column="33">MModelElement<pos:position pos:line="2265" pos:column="46"/></name><operator pos:line="2265" pos:column="46">)<pos:position pos:line="2265" pos:column="47"/></operator> <name pos:line="2265" pos:column="48">supplier<pos:position pos:line="2265" pos:column="56"/></name></expr></init></decl>;<pos:position pos:line="2265" pos:column="57"/></decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="2266" pos:column="13">me<pos:position pos:line="2266" pos:column="15"/></name><operator pos:line="2266" pos:column="15">.<pos:position pos:line="2266" pos:column="16"/></operator><name pos:line="2266" pos:column="16">addSupplierDependency<pos:position pos:line="2266" pos:column="37"/></name></name><argument_list pos:line="2266" pos:column="37">(<argument><expr><operator pos:line="2266" pos:column="38">(<pos:position pos:line="2266" pos:column="39"/></operator><name pos:line="2266" pos:column="39">MDependency<pos:position pos:line="2266" pos:column="50"/></name><operator pos:line="2266" pos:column="50">)<pos:position pos:line="2266" pos:column="51"/></operator> <name pos:line="2266" pos:column="52">dependency<pos:position pos:line="2266" pos:column="62"/></name></expr></argument>)<pos:position pos:line="2266" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="2266" pos:column="64"/></expr_stmt>
            <return pos:line="2267" pos:column="13">return;<pos:position pos:line="2267" pos:column="20"/></return>
        }<pos:position pos:line="2268" pos:column="10"/></block></then></if>
        <throw pos:line="2269" pos:column="9">throw <expr><operator pos:line="2269" pos:column="15">new<pos:position pos:line="2269" pos:column="18"/></operator> <call><name pos:line="2269" pos:column="19">IllegalArgumentException<pos:position pos:line="2269" pos:column="43"/></name><argument_list pos:line="2269" pos:column="43">(<argument><expr><literal type="string" pos:line="2269" pos:column="44">"supplier: "<pos:position pos:line="2269" pos:column="56"/></literal> <operator pos:line="2269" pos:column="57">+<pos:position pos:line="2269" pos:column="58"/></operator> <name pos:line="2269" pos:column="59">supplier<pos:position pos:line="2269" pos:column="67"/></name>
                <operator pos:line="2270" pos:column="17">+<pos:position pos:line="2270" pos:column="18"/></operator> <literal type="string" pos:line="2270" pos:column="19">" or dependency: "<pos:position pos:line="2270" pos:column="37"/></literal> <operator pos:line="2270" pos:column="38">+<pos:position pos:line="2270" pos:column="39"/></operator> <name pos:line="2270" pos:column="40">dependency<pos:position pos:line="2270" pos:column="50"/></name></expr></argument>)<pos:position pos:line="2270" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="2270" pos:column="52"/></throw>
    }<pos:position pos:line="2271" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="2273" pos:column="5">/**
     * Adds a TaggedValue to a ModelElement.
     *
     * @param handle ModelElement
     * @param taggedValue TaggedValue
     */</comment>
    <function><specifier pos:line="2279" pos:column="5">public<pos:position pos:line="2279" pos:column="11"/></specifier> <type><name pos:line="2279" pos:column="12">void<pos:position pos:line="2279" pos:column="16"/></name></type> <name pos:line="2279" pos:column="17">addTaggedValue<pos:position pos:line="2279" pos:column="31"/></name><parameter_list pos:line="2279" pos:column="31">(<parameter><decl><type><name pos:line="2279" pos:column="32">Object<pos:position pos:line="2279" pos:column="38"/></name></type> <name pos:line="2279" pos:column="39">handle<pos:position pos:line="2279" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2279" pos:column="47">Object<pos:position pos:line="2279" pos:column="53"/></name></type> <name pos:line="2279" pos:column="54">taggedValue<pos:position pos:line="2279" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="2279" pos:column="66"/></parameter_list> <block pos:line="2279" pos:column="67">{
    		<expr_stmt><expr><call><name><name pos:line="2280" pos:column="17">nsmodel<pos:position pos:line="2280" pos:column="24"/></name><operator pos:line="2280" pos:column="24">.<pos:position pos:line="2280" pos:column="25"/></operator><name pos:line="2280" pos:column="25">getExtensionMechanismsHelper<pos:position pos:line="2280" pos:column="53"/></name></name><argument_list pos:line="2280" pos:column="53">()<pos:position pos:line="2280" pos:column="55"/></argument_list></call><operator pos:line="2280" pos:column="55">.<pos:position pos:line="2280" pos:column="56"/></operator><call><name pos:line="2280" pos:column="56">addTaggedValue<pos:position pos:line="2280" pos:column="70"/></name><argument_list pos:line="2280" pos:column="70">(<argument><expr><name pos:line="2280" pos:column="71">handle<pos:position pos:line="2280" pos:column="77"/></name></expr></argument>,<argument><expr><name pos:line="2280" pos:column="78">taggedValue<pos:position pos:line="2280" pos:column="89"/></name></expr></argument>)<pos:position pos:line="2280" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="2280" pos:column="91"/></expr_stmt>
    }<pos:position pos:line="2281" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="2283" pos:column="5">/**
     * Add a target flow to a model element.
     *
     * @param handle The model element.
     * @param flow The flow to add.
     */</comment>
    <function><specifier pos:line="2289" pos:column="5">public<pos:position pos:line="2289" pos:column="11"/></specifier> <type><name pos:line="2289" pos:column="12">void<pos:position pos:line="2289" pos:column="16"/></name></type> <name pos:line="2289" pos:column="17">addTargetFlow<pos:position pos:line="2289" pos:column="30"/></name><parameter_list pos:line="2289" pos:column="30">(<parameter><decl><type><name pos:line="2289" pos:column="31">Object<pos:position pos:line="2289" pos:column="37"/></name></type> <name pos:line="2289" pos:column="38">handle<pos:position pos:line="2289" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2289" pos:column="46">Object<pos:position pos:line="2289" pos:column="52"/></name></type> <name pos:line="2289" pos:column="53">flow<pos:position pos:line="2289" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="2289" pos:column="58"/></parameter_list> <block pos:line="2289" pos:column="59">{
        <if pos:line="2290" pos:column="9">if <condition pos:line="2290" pos:column="12">(<expr><name pos:line="2290" pos:column="13">handle<pos:position pos:line="2290" pos:column="19"/></name> <operator pos:line="2290" pos:column="20">instanceof<pos:position pos:line="2290" pos:column="30"/></operator> <name pos:line="2290" pos:column="31">MModelElement<pos:position pos:line="2290" pos:column="44"/></name>
                <operator pos:line="2291" pos:column="17">&amp;&amp;<pos:position pos:line="2291" pos:column="27"/></operator> <name pos:line="2291" pos:column="20">flow<pos:position pos:line="2291" pos:column="24"/></name> <operator pos:line="2291" pos:column="25">instanceof<pos:position pos:line="2291" pos:column="35"/></operator> <name pos:line="2291" pos:column="36">MFlow<pos:position pos:line="2291" pos:column="41"/></name></expr>)<pos:position pos:line="2291" pos:column="42"/></condition><then pos:line="2291" pos:column="42"> <block pos:line="2291" pos:column="43">{
            <expr_stmt><expr><operator pos:line="2292" pos:column="13">(<pos:position pos:line="2292" pos:column="14"/></operator><operator pos:line="2292" pos:column="14">(<pos:position pos:line="2292" pos:column="15"/></operator><name pos:line="2292" pos:column="15">MModelElement<pos:position pos:line="2292" pos:column="28"/></name><operator pos:line="2292" pos:column="28">)<pos:position pos:line="2292" pos:column="29"/></operator> <name pos:line="2292" pos:column="30">handle<pos:position pos:line="2292" pos:column="36"/></name><operator pos:line="2292" pos:column="36">)<pos:position pos:line="2292" pos:column="37"/></operator><operator pos:line="2292" pos:column="37">.<pos:position pos:line="2292" pos:column="38"/></operator><call><name pos:line="2292" pos:column="38">addTargetFlow<pos:position pos:line="2292" pos:column="51"/></name><argument_list pos:line="2292" pos:column="51">(<argument><expr><operator pos:line="2292" pos:column="52">(<pos:position pos:line="2292" pos:column="53"/></operator><name pos:line="2292" pos:column="53">MFlow<pos:position pos:line="2292" pos:column="58"/></name><operator pos:line="2292" pos:column="58">)<pos:position pos:line="2292" pos:column="59"/></operator> <name pos:line="2292" pos:column="60">flow<pos:position pos:line="2292" pos:column="64"/></name></expr></argument>)<pos:position pos:line="2292" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="2292" pos:column="66"/></expr_stmt>
            <return pos:line="2293" pos:column="13">return;<pos:position pos:line="2293" pos:column="20"/></return>
        }<pos:position pos:line="2294" pos:column="10"/></block></then></if>

        <throw pos:line="2296" pos:column="9">throw <expr><operator pos:line="2296" pos:column="15">new<pos:position pos:line="2296" pos:column="18"/></operator> <call><name pos:line="2296" pos:column="19">IllegalArgumentException<pos:position pos:line="2296" pos:column="43"/></name><argument_list pos:line="2296" pos:column="43">(<argument><expr><literal type="string" pos:line="2296" pos:column="44">"handle: "<pos:position pos:line="2296" pos:column="54"/></literal> <operator pos:line="2296" pos:column="55">+<pos:position pos:line="2296" pos:column="56"/></operator> <name pos:line="2296" pos:column="57">handle<pos:position pos:line="2296" pos:column="63"/></name>
                <operator pos:line="2297" pos:column="17">+<pos:position pos:line="2297" pos:column="18"/></operator> <literal type="string" pos:line="2297" pos:column="19">" or flow: "<pos:position pos:line="2297" pos:column="31"/></literal> <operator pos:line="2297" pos:column="32">+<pos:position pos:line="2297" pos:column="33"/></operator> <name pos:line="2297" pos:column="34">flow<pos:position pos:line="2297" pos:column="38"/></name></expr></argument>)<pos:position pos:line="2297" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="2297" pos:column="40"/></throw>
    }<pos:position pos:line="2298" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="2300" pos:column="5">/**
     * Sets if some model element is abstract.
     *
     * @see org.argouml.model.CoreHelper#setAbstract(Object, boolean)
     * @param handle is the classifier
     * @param flag is true if it should be abstract
     */</comment>
    <function><specifier pos:line="2307" pos:column="5">public<pos:position pos:line="2307" pos:column="11"/></specifier> <type><name pos:line="2307" pos:column="12">void<pos:position pos:line="2307" pos:column="16"/></name></type> <name pos:line="2307" pos:column="17">setAbstract<pos:position pos:line="2307" pos:column="28"/></name><parameter_list pos:line="2307" pos:column="28">(<parameter><decl><type><name pos:line="2307" pos:column="29">Object<pos:position pos:line="2307" pos:column="35"/></name></type> <name pos:line="2307" pos:column="36">handle<pos:position pos:line="2307" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2307" pos:column="44">boolean<pos:position pos:line="2307" pos:column="51"/></name></type> <name pos:line="2307" pos:column="52">flag<pos:position pos:line="2307" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="2307" pos:column="57"/></parameter_list> <block pos:line="2307" pos:column="58">{
        <if pos:line="2308" pos:column="9">if <condition pos:line="2308" pos:column="12">(<expr><name pos:line="2308" pos:column="13">handle<pos:position pos:line="2308" pos:column="19"/></name> <operator pos:line="2308" pos:column="20">instanceof<pos:position pos:line="2308" pos:column="30"/></operator> <name pos:line="2308" pos:column="31">MGeneralizableElement<pos:position pos:line="2308" pos:column="52"/></name></expr>)<pos:position pos:line="2308" pos:column="53"/></condition><then pos:line="2308" pos:column="53"> <block pos:line="2308" pos:column="54">{
            <expr_stmt><expr><operator pos:line="2309" pos:column="13">(<pos:position pos:line="2309" pos:column="14"/></operator><operator pos:line="2309" pos:column="14">(<pos:position pos:line="2309" pos:column="15"/></operator><name pos:line="2309" pos:column="15">MGeneralizableElement<pos:position pos:line="2309" pos:column="36"/></name><operator pos:line="2309" pos:column="36">)<pos:position pos:line="2309" pos:column="37"/></operator> <name pos:line="2309" pos:column="38">handle<pos:position pos:line="2309" pos:column="44"/></name><operator pos:line="2309" pos:column="44">)<pos:position pos:line="2309" pos:column="45"/></operator><operator pos:line="2309" pos:column="45">.<pos:position pos:line="2309" pos:column="46"/></operator><call><name pos:line="2309" pos:column="46">setAbstract<pos:position pos:line="2309" pos:column="57"/></name><argument_list pos:line="2309" pos:column="57">(<argument><expr><name pos:line="2309" pos:column="58">flag<pos:position pos:line="2309" pos:column="62"/></name></expr></argument>)<pos:position pos:line="2309" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="2309" pos:column="64"/></expr_stmt>
            <return pos:line="2310" pos:column="13">return;<pos:position pos:line="2310" pos:column="20"/></return>
        }<pos:position pos:line="2311" pos:column="10"/></block></then></if>
        <if pos:line="2312" pos:column="9">if <condition pos:line="2312" pos:column="12">(<expr><name pos:line="2312" pos:column="13">handle<pos:position pos:line="2312" pos:column="19"/></name> <operator pos:line="2312" pos:column="20">instanceof<pos:position pos:line="2312" pos:column="30"/></operator> <name pos:line="2312" pos:column="31">MOperation<pos:position pos:line="2312" pos:column="41"/></name></expr>)<pos:position pos:line="2312" pos:column="42"/></condition><then pos:line="2312" pos:column="42"> <block pos:line="2312" pos:column="43">{
            <expr_stmt><expr><operator pos:line="2313" pos:column="13">(<pos:position pos:line="2313" pos:column="14"/></operator><operator pos:line="2313" pos:column="14">(<pos:position pos:line="2313" pos:column="15"/></operator><name pos:line="2313" pos:column="15">MOperation<pos:position pos:line="2313" pos:column="25"/></name><operator pos:line="2313" pos:column="25">)<pos:position pos:line="2313" pos:column="26"/></operator> <name pos:line="2313" pos:column="27">handle<pos:position pos:line="2313" pos:column="33"/></name><operator pos:line="2313" pos:column="33">)<pos:position pos:line="2313" pos:column="34"/></operator><operator pos:line="2313" pos:column="34">.<pos:position pos:line="2313" pos:column="35"/></operator><call><name pos:line="2313" pos:column="35">setAbstract<pos:position pos:line="2313" pos:column="46"/></name><argument_list pos:line="2313" pos:column="46">(<argument><expr><name pos:line="2313" pos:column="47">flag<pos:position pos:line="2313" pos:column="51"/></name></expr></argument>)<pos:position pos:line="2313" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="2313" pos:column="53"/></expr_stmt>
            <return pos:line="2314" pos:column="13">return;<pos:position pos:line="2314" pos:column="20"/></return>
        }<pos:position pos:line="2315" pos:column="10"/></block></then></if>
        <if pos:line="2316" pos:column="9">if <condition pos:line="2316" pos:column="12">(<expr><name pos:line="2316" pos:column="13">handle<pos:position pos:line="2316" pos:column="19"/></name> <operator pos:line="2316" pos:column="20">instanceof<pos:position pos:line="2316" pos:column="30"/></operator> <name pos:line="2316" pos:column="31">MReception<pos:position pos:line="2316" pos:column="41"/></name></expr>)<pos:position pos:line="2316" pos:column="42"/></condition><then pos:line="2316" pos:column="42"> <block pos:line="2316" pos:column="43">{
            <expr_stmt><expr><operator pos:line="2317" pos:column="13">(<pos:position pos:line="2317" pos:column="14"/></operator><operator pos:line="2317" pos:column="14">(<pos:position pos:line="2317" pos:column="15"/></operator><name pos:line="2317" pos:column="15">MReception<pos:position pos:line="2317" pos:column="25"/></name><operator pos:line="2317" pos:column="25">)<pos:position pos:line="2317" pos:column="26"/></operator> <name pos:line="2317" pos:column="27">handle<pos:position pos:line="2317" pos:column="33"/></name><operator pos:line="2317" pos:column="33">)<pos:position pos:line="2317" pos:column="34"/></operator><operator pos:line="2317" pos:column="34">.<pos:position pos:line="2317" pos:column="35"/></operator><call><name pos:line="2317" pos:column="35">setAbstarct<pos:position pos:line="2317" pos:column="46"/></name><argument_list pos:line="2317" pos:column="46">(<argument><expr><name pos:line="2317" pos:column="47">flag<pos:position pos:line="2317" pos:column="51"/></name></expr></argument>)<pos:position pos:line="2317" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="2317" pos:column="53"/></expr_stmt>
        }<pos:position pos:line="2318" pos:column="10"/></block></then></if>
        <throw pos:line="2319" pos:column="9">throw <expr><operator pos:line="2319" pos:column="15">new<pos:position pos:line="2319" pos:column="18"/></operator> <call><name pos:line="2319" pos:column="19">IllegalArgumentException<pos:position pos:line="2319" pos:column="43"/></name><argument_list pos:line="2319" pos:column="43">(<argument><expr><literal type="string" pos:line="2319" pos:column="44">"handle: "<pos:position pos:line="2319" pos:column="54"/></literal> <operator pos:line="2319" pos:column="55">+<pos:position pos:line="2319" pos:column="56"/></operator> <name pos:line="2319" pos:column="57">handle<pos:position pos:line="2319" pos:column="63"/></name></expr></argument>)<pos:position pos:line="2319" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="2319" pos:column="65"/></throw>
    }<pos:position pos:line="2320" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="2322" pos:column="5">/**
     * Makes a Class active.
     *
     * @param handle Class
     * @param active boolean
     */</comment>
    <function><specifier pos:line="2328" pos:column="5">public<pos:position pos:line="2328" pos:column="11"/></specifier> <type><name pos:line="2328" pos:column="12">void<pos:position pos:line="2328" pos:column="16"/></name></type> <name pos:line="2328" pos:column="17">setActive<pos:position pos:line="2328" pos:column="26"/></name><parameter_list pos:line="2328" pos:column="26">(<parameter><decl><type><name pos:line="2328" pos:column="27">Object<pos:position pos:line="2328" pos:column="33"/></name></type> <name pos:line="2328" pos:column="34">handle<pos:position pos:line="2328" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2328" pos:column="42">boolean<pos:position pos:line="2328" pos:column="49"/></name></type> <name pos:line="2328" pos:column="50">active<pos:position pos:line="2328" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="2328" pos:column="57"/></parameter_list> <block pos:line="2328" pos:column="58">{
        <if pos:line="2329" pos:column="9">if <condition pos:line="2329" pos:column="12">(<expr><name pos:line="2329" pos:column="13">handle<pos:position pos:line="2329" pos:column="19"/></name> <operator pos:line="2329" pos:column="20">instanceof<pos:position pos:line="2329" pos:column="30"/></operator> <name pos:line="2329" pos:column="31">MClass<pos:position pos:line="2329" pos:column="37"/></name></expr>)<pos:position pos:line="2329" pos:column="38"/></condition><then pos:line="2329" pos:column="38"> <block pos:line="2329" pos:column="39">{
            <expr_stmt><expr><operator pos:line="2330" pos:column="13">(<pos:position pos:line="2330" pos:column="14"/></operator><operator pos:line="2330" pos:column="14">(<pos:position pos:line="2330" pos:column="15"/></operator><name pos:line="2330" pos:column="15">MClass<pos:position pos:line="2330" pos:column="21"/></name><operator pos:line="2330" pos:column="21">)<pos:position pos:line="2330" pos:column="22"/></operator> <name pos:line="2330" pos:column="23">handle<pos:position pos:line="2330" pos:column="29"/></name><operator pos:line="2330" pos:column="29">)<pos:position pos:line="2330" pos:column="30"/></operator><operator pos:line="2330" pos:column="30">.<pos:position pos:line="2330" pos:column="31"/></operator><call><name pos:line="2330" pos:column="31">setActive<pos:position pos:line="2330" pos:column="40"/></name><argument_list pos:line="2330" pos:column="40">(<argument><expr><name pos:line="2330" pos:column="41">active<pos:position pos:line="2330" pos:column="47"/></name></expr></argument>)<pos:position pos:line="2330" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="2330" pos:column="49"/></expr_stmt>
            <return pos:line="2331" pos:column="13">return;<pos:position pos:line="2331" pos:column="20"/></return>
        }<pos:position pos:line="2332" pos:column="10"/></block></then></if>
        <throw pos:line="2333" pos:column="9">throw <expr><operator pos:line="2333" pos:column="15">new<pos:position pos:line="2333" pos:column="18"/></operator> <call><name pos:line="2333" pos:column="19">IllegalArgumentException<pos:position pos:line="2333" pos:column="43"/></name><argument_list pos:line="2333" pos:column="43">(<argument><expr><literal type="string" pos:line="2333" pos:column="44">"handle: "<pos:position pos:line="2333" pos:column="54"/></literal> <operator pos:line="2333" pos:column="55">+<pos:position pos:line="2333" pos:column="56"/></operator> <name pos:line="2333" pos:column="57">handle<pos:position pos:line="2333" pos:column="63"/></name></expr></argument>)<pos:position pos:line="2333" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="2333" pos:column="65"/></throw>
    }<pos:position pos:line="2334" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="2336" pos:column="5">/**
     * Sets the aggregation of some model element.
     *
     * @param handle the model element to set aggregation
     * @param aggregationKind the aggregation kind
     */</comment>
    <function><specifier pos:line="2342" pos:column="5">public<pos:position pos:line="2342" pos:column="11"/></specifier> <type><name pos:line="2342" pos:column="12">void<pos:position pos:line="2342" pos:column="16"/></name></type> <name pos:line="2342" pos:column="17">setAggregation<pos:position pos:line="2342" pos:column="31"/></name><parameter_list pos:line="2342" pos:column="31">(<parameter><decl><type><name pos:line="2342" pos:column="32">Object<pos:position pos:line="2342" pos:column="38"/></name></type> <name pos:line="2342" pos:column="39">handle<pos:position pos:line="2342" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2342" pos:column="47">Object<pos:position pos:line="2342" pos:column="53"/></name></type> <name pos:line="2342" pos:column="54">aggregationKind<pos:position pos:line="2342" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="2342" pos:column="70"/></parameter_list> <block pos:line="2342" pos:column="71">{
        <if pos:line="2343" pos:column="9">if <condition pos:line="2343" pos:column="12">(<expr><name pos:line="2343" pos:column="13">handle<pos:position pos:line="2343" pos:column="19"/></name> <operator pos:line="2343" pos:column="20">instanceof<pos:position pos:line="2343" pos:column="30"/></operator> <name pos:line="2343" pos:column="31">MAssociationEnd<pos:position pos:line="2343" pos:column="46"/></name>
            <operator pos:line="2344" pos:column="13">&amp;&amp;<pos:position pos:line="2344" pos:column="23"/></operator> <name pos:line="2344" pos:column="16">aggregationKind<pos:position pos:line="2344" pos:column="31"/></name> <operator pos:line="2344" pos:column="32">instanceof<pos:position pos:line="2344" pos:column="42"/></operator> <name pos:line="2344" pos:column="43">MAggregationKind<pos:position pos:line="2344" pos:column="59"/></name></expr>)<pos:position pos:line="2344" pos:column="60"/></condition><then pos:line="2344" pos:column="60"> <block pos:line="2344" pos:column="61">{
            <expr_stmt><expr><operator pos:line="2345" pos:column="13">(<pos:position pos:line="2345" pos:column="14"/></operator><operator pos:line="2345" pos:column="14">(<pos:position pos:line="2345" pos:column="15"/></operator><name pos:line="2345" pos:column="15">MAssociationEnd<pos:position pos:line="2345" pos:column="30"/></name><operator pos:line="2345" pos:column="30">)<pos:position pos:line="2345" pos:column="31"/></operator> <name pos:line="2345" pos:column="32">handle<pos:position pos:line="2345" pos:column="38"/></name><operator pos:line="2345" pos:column="38">)<pos:position pos:line="2345" pos:column="39"/></operator><operator pos:line="2345" pos:column="39">.<pos:position pos:line="2345" pos:column="40"/></operator><call><name pos:line="2345" pos:column="40">setAggregation<pos:position pos:line="2345" pos:column="54"/></name><argument_list pos:line="2345" pos:column="54">(
                <argument><expr><operator pos:line="2346" pos:column="17">(<pos:position pos:line="2346" pos:column="18"/></operator><name pos:line="2346" pos:column="18">MAggregationKind<pos:position pos:line="2346" pos:column="34"/></name><operator pos:line="2346" pos:column="34">)<pos:position pos:line="2346" pos:column="35"/></operator> <name pos:line="2346" pos:column="36">aggregationKind<pos:position pos:line="2346" pos:column="51"/></name></expr></argument>)<pos:position pos:line="2346" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="2346" pos:column="53"/></expr_stmt>
                <return pos:line="2347" pos:column="17">return;<pos:position pos:line="2347" pos:column="24"/></return>
        }<pos:position pos:line="2348" pos:column="10"/></block></then></if>
        <throw pos:line="2349" pos:column="9">throw <expr><operator pos:line="2349" pos:column="15">new<pos:position pos:line="2349" pos:column="18"/></operator> <call><name pos:line="2349" pos:column="19">IllegalArgumentException<pos:position pos:line="2349" pos:column="43"/></name><argument_list pos:line="2349" pos:column="43">(<argument><expr><literal type="string" pos:line="2349" pos:column="44">"handle: "<pos:position pos:line="2349" pos:column="54"/></literal> <operator pos:line="2349" pos:column="55">+<pos:position pos:line="2349" pos:column="56"/></operator> <name pos:line="2349" pos:column="57">handle<pos:position pos:line="2349" pos:column="63"/></name>
                <operator pos:line="2350" pos:column="17">+<pos:position pos:line="2350" pos:column="18"/></operator> <literal type="string" pos:line="2350" pos:column="19">" or aggregationKind: "<pos:position pos:line="2350" pos:column="42"/></literal> <operator pos:line="2350" pos:column="43">+<pos:position pos:line="2350" pos:column="44"/></operator> <name pos:line="2350" pos:column="45">aggregationKind<pos:position pos:line="2350" pos:column="60"/></name></expr></argument>)<pos:position pos:line="2350" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="2350" pos:column="62"/></throw>
    }<pos:position pos:line="2351" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="2353" pos:column="5">/**
     * Sets the list of annotated elements of the given comment.
     *
     * @param handle the given comment
     * @param elems the list of annotated modelelements
     */</comment>
    <function><specifier pos:line="2359" pos:column="5">public<pos:position pos:line="2359" pos:column="11"/></specifier> <type><name pos:line="2359" pos:column="12">void<pos:position pos:line="2359" pos:column="16"/></name></type> <name pos:line="2359" pos:column="17">setAnnotatedElements<pos:position pos:line="2359" pos:column="37"/></name><parameter_list pos:line="2359" pos:column="37">(<parameter><decl><type><name pos:line="2359" pos:column="38">Object<pos:position pos:line="2359" pos:column="44"/></name></type> <name pos:line="2359" pos:column="45">handle<pos:position pos:line="2359" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2359" pos:column="53">Collection<pos:position pos:line="2359" pos:column="63"/></name></type> <name pos:line="2359" pos:column="64">elems<pos:position pos:line="2359" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="2359" pos:column="70"/></parameter_list> <block pos:line="2359" pos:column="71">{
        <if pos:line="2360" pos:column="9">if <condition pos:line="2360" pos:column="12">(<expr><name pos:line="2360" pos:column="13">handle<pos:position pos:line="2360" pos:column="19"/></name> <operator pos:line="2360" pos:column="20">instanceof<pos:position pos:line="2360" pos:column="30"/></operator> <name pos:line="2360" pos:column="31">MComment<pos:position pos:line="2360" pos:column="39"/></name>
            <operator pos:line="2361" pos:column="13">&amp;&amp;<pos:position pos:line="2361" pos:column="23"/></operator> <name pos:line="2361" pos:column="16">elems<pos:position pos:line="2361" pos:column="21"/></name> <operator pos:line="2361" pos:column="22">instanceof<pos:position pos:line="2361" pos:column="32"/></operator> <name pos:line="2361" pos:column="33">List<pos:position pos:line="2361" pos:column="37"/></name></expr>)<pos:position pos:line="2361" pos:column="38"/></condition><then pos:line="2361" pos:column="38"> <block pos:line="2361" pos:column="39">{
            <expr_stmt><expr><operator pos:line="2362" pos:column="13">(<pos:position pos:line="2362" pos:column="14"/></operator><operator pos:line="2362" pos:column="14">(<pos:position pos:line="2362" pos:column="15"/></operator><name pos:line="2362" pos:column="15">MComment<pos:position pos:line="2362" pos:column="23"/></name><operator pos:line="2362" pos:column="23">)<pos:position pos:line="2362" pos:column="24"/></operator> <name pos:line="2362" pos:column="25">handle<pos:position pos:line="2362" pos:column="31"/></name><operator pos:line="2362" pos:column="31">)<pos:position pos:line="2362" pos:column="32"/></operator><operator pos:line="2362" pos:column="32">.<pos:position pos:line="2362" pos:column="33"/></operator><call><name pos:line="2362" pos:column="33">setAnnotatedElements<pos:position pos:line="2362" pos:column="53"/></name><argument_list pos:line="2362" pos:column="53">(<argument><expr><name pos:line="2362" pos:column="54">elems<pos:position pos:line="2362" pos:column="59"/></name></expr></argument>)<pos:position pos:line="2362" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="2362" pos:column="61"/></expr_stmt>
            <return pos:line="2363" pos:column="13">return;<pos:position pos:line="2363" pos:column="20"/></return>
        }<pos:position pos:line="2364" pos:column="10"/></block></then></if>
        <throw pos:line="2365" pos:column="9">throw <expr><operator pos:line="2365" pos:column="15">new<pos:position pos:line="2365" pos:column="18"/></operator> <call><name pos:line="2365" pos:column="19">IllegalArgumentException<pos:position pos:line="2365" pos:column="43"/></name><argument_list pos:line="2365" pos:column="43">(<argument><expr><literal type="string" pos:line="2365" pos:column="44">"handle: "<pos:position pos:line="2365" pos:column="54"/></literal> <operator pos:line="2365" pos:column="55">+<pos:position pos:line="2365" pos:column="56"/></operator> <name pos:line="2365" pos:column="57">handle<pos:position pos:line="2365" pos:column="63"/></name></expr></argument>)<pos:position pos:line="2365" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="2365" pos:column="65"/></throw>
    }<pos:position pos:line="2366" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="2368" pos:column="5">/**
     * Sets the association of some model element.
     *
     * @param handle the model element to set association
     * @param association is the association
     */</comment>
    <function><specifier pos:line="2374" pos:column="5">public<pos:position pos:line="2374" pos:column="11"/></specifier> <type><name pos:line="2374" pos:column="12">void<pos:position pos:line="2374" pos:column="16"/></name></type> <name pos:line="2374" pos:column="17">setAssociation<pos:position pos:line="2374" pos:column="31"/></name><parameter_list pos:line="2374" pos:column="31">(<parameter><decl><type><name pos:line="2374" pos:column="32">Object<pos:position pos:line="2374" pos:column="38"/></name></type> <name pos:line="2374" pos:column="39">handle<pos:position pos:line="2374" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2374" pos:column="47">Object<pos:position pos:line="2374" pos:column="53"/></name></type> <name pos:line="2374" pos:column="54">association<pos:position pos:line="2374" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="2374" pos:column="66"/></parameter_list> <block pos:line="2374" pos:column="67">{
        <if pos:line="2375" pos:column="9">if <condition pos:line="2375" pos:column="12">(<expr><name pos:line="2375" pos:column="13">association<pos:position pos:line="2375" pos:column="24"/></name> <operator pos:line="2375" pos:column="25">instanceof<pos:position pos:line="2375" pos:column="35"/></operator> <name pos:line="2375" pos:column="36">MAssociation<pos:position pos:line="2375" pos:column="48"/></name></expr>)<pos:position pos:line="2375" pos:column="49"/></condition><then pos:line="2375" pos:column="49"> <block pos:line="2375" pos:column="50">{
            <if pos:line="2376" pos:column="13">if <condition pos:line="2376" pos:column="16">(<expr><name pos:line="2376" pos:column="17">handle<pos:position pos:line="2376" pos:column="23"/></name> <operator pos:line="2376" pos:column="24">instanceof<pos:position pos:line="2376" pos:column="34"/></operator> <name pos:line="2376" pos:column="35">MAssociationEnd<pos:position pos:line="2376" pos:column="50"/></name></expr>)<pos:position pos:line="2376" pos:column="51"/></condition><then pos:line="2376" pos:column="51"> <block pos:line="2376" pos:column="52">{
                <expr_stmt><expr><operator pos:line="2377" pos:column="17">(<pos:position pos:line="2377" pos:column="18"/></operator><operator pos:line="2377" pos:column="18">(<pos:position pos:line="2377" pos:column="19"/></operator><name pos:line="2377" pos:column="19">MAssociationEnd<pos:position pos:line="2377" pos:column="34"/></name><operator pos:line="2377" pos:column="34">)<pos:position pos:line="2377" pos:column="35"/></operator> <name pos:line="2377" pos:column="36">handle<pos:position pos:line="2377" pos:column="42"/></name><operator pos:line="2377" pos:column="42">)<pos:position pos:line="2377" pos:column="43"/></operator><operator pos:line="2377" pos:column="43">.<pos:position pos:line="2377" pos:column="44"/></operator><call><name pos:line="2377" pos:column="44">setAssociation<pos:position pos:line="2377" pos:column="58"/></name><argument_list pos:line="2377" pos:column="58">(
                    <argument><expr><operator pos:line="2378" pos:column="21">(<pos:position pos:line="2378" pos:column="22"/></operator><name pos:line="2378" pos:column="22">MAssociation<pos:position pos:line="2378" pos:column="34"/></name><operator pos:line="2378" pos:column="34">)<pos:position pos:line="2378" pos:column="35"/></operator> <name pos:line="2378" pos:column="36">association<pos:position pos:line="2378" pos:column="47"/></name></expr></argument>)<pos:position pos:line="2378" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="2378" pos:column="49"/></expr_stmt>
                <return pos:line="2379" pos:column="17">return;<pos:position pos:line="2379" pos:column="24"/></return>
            }<pos:position pos:line="2380" pos:column="14"/></block></then></if>
            <if pos:line="2381" pos:column="13">if <condition pos:line="2381" pos:column="16">(<expr><name pos:line="2381" pos:column="17">handle<pos:position pos:line="2381" pos:column="23"/></name> <operator pos:line="2381" pos:column="24">instanceof<pos:position pos:line="2381" pos:column="34"/></operator> <name pos:line="2381" pos:column="35">MLink<pos:position pos:line="2381" pos:column="40"/></name></expr>)<pos:position pos:line="2381" pos:column="41"/></condition><then pos:line="2381" pos:column="41"> <block pos:line="2381" pos:column="42">{
                <expr_stmt><expr><operator pos:line="2382" pos:column="17">(<pos:position pos:line="2382" pos:column="18"/></operator><operator pos:line="2382" pos:column="18">(<pos:position pos:line="2382" pos:column="19"/></operator><name pos:line="2382" pos:column="19">MLink<pos:position pos:line="2382" pos:column="24"/></name><operator pos:line="2382" pos:column="24">)<pos:position pos:line="2382" pos:column="25"/></operator> <name pos:line="2382" pos:column="26">handle<pos:position pos:line="2382" pos:column="32"/></name><operator pos:line="2382" pos:column="32">)<pos:position pos:line="2382" pos:column="33"/></operator><operator pos:line="2382" pos:column="33">.<pos:position pos:line="2382" pos:column="34"/></operator><call><name pos:line="2382" pos:column="34">setAssociation<pos:position pos:line="2382" pos:column="48"/></name><argument_list pos:line="2382" pos:column="48">(<argument><expr><operator pos:line="2382" pos:column="49">(<pos:position pos:line="2382" pos:column="50"/></operator><name pos:line="2382" pos:column="50">MAssociation<pos:position pos:line="2382" pos:column="62"/></name><operator pos:line="2382" pos:column="62">)<pos:position pos:line="2382" pos:column="63"/></operator> <name pos:line="2382" pos:column="64">association<pos:position pos:line="2382" pos:column="75"/></name></expr></argument>)<pos:position pos:line="2382" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="2382" pos:column="77"/></expr_stmt>
                <return pos:line="2383" pos:column="17">return;<pos:position pos:line="2383" pos:column="24"/></return>
            }<pos:position pos:line="2384" pos:column="14"/></block></then></if>
        }<pos:position pos:line="2385" pos:column="10"/></block></then> <elseif pos:line="2385" pos:column="11">else <if pos:line="2385" pos:column="16">if <condition pos:line="2385" pos:column="19">(<expr><name pos:line="2385" pos:column="20">association<pos:position pos:line="2385" pos:column="31"/></name> <operator pos:line="2385" pos:column="32">instanceof<pos:position pos:line="2385" pos:column="42"/></operator> <name pos:line="2385" pos:column="43">MAssociationRole<pos:position pos:line="2385" pos:column="59"/></name></expr>)<pos:position pos:line="2385" pos:column="60"/></condition><then pos:line="2385" pos:column="60"> <block pos:line="2385" pos:column="61">{
            <if pos:line="2386" pos:column="13">if <condition pos:line="2386" pos:column="16">(<expr><name pos:line="2386" pos:column="17">handle<pos:position pos:line="2386" pos:column="23"/></name> <operator pos:line="2386" pos:column="24">instanceof<pos:position pos:line="2386" pos:column="34"/></operator> <name pos:line="2386" pos:column="35">MAssociationEndRole<pos:position pos:line="2386" pos:column="54"/></name></expr>)<pos:position pos:line="2386" pos:column="55"/></condition><then pos:line="2386" pos:column="55"> <block pos:line="2386" pos:column="56">{
                <expr_stmt><expr><operator pos:line="2387" pos:column="17">(<pos:position pos:line="2387" pos:column="18"/></operator><operator pos:line="2387" pos:column="18">(<pos:position pos:line="2387" pos:column="19"/></operator><name pos:line="2387" pos:column="19">MAssociationEndRole<pos:position pos:line="2387" pos:column="38"/></name><operator pos:line="2387" pos:column="38">)<pos:position pos:line="2387" pos:column="39"/></operator> <name pos:line="2387" pos:column="40">handle<pos:position pos:line="2387" pos:column="46"/></name><operator pos:line="2387" pos:column="46">)<pos:position pos:line="2387" pos:column="47"/></operator><operator pos:line="2387" pos:column="47">.<pos:position pos:line="2387" pos:column="48"/></operator><call><name pos:line="2387" pos:column="48">setAssociation<pos:position pos:line="2387" pos:column="62"/></name><argument_list pos:line="2387" pos:column="62">(
                        <argument><expr><operator pos:line="2388" pos:column="25">(<pos:position pos:line="2388" pos:column="26"/></operator><name pos:line="2388" pos:column="26">MAssociationRole<pos:position pos:line="2388" pos:column="42"/></name><operator pos:line="2388" pos:column="42">)<pos:position pos:line="2388" pos:column="43"/></operator> <name pos:line="2388" pos:column="44">association<pos:position pos:line="2388" pos:column="55"/></name></expr></argument>)<pos:position pos:line="2388" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="2388" pos:column="57"/></expr_stmt>
            }<pos:position pos:line="2389" pos:column="14"/></block></then></if>
        }<pos:position pos:line="2390" pos:column="10"/></block></then></if></elseif></if>
        <throw pos:line="2391" pos:column="9">throw <expr><operator pos:line="2391" pos:column="15">new<pos:position pos:line="2391" pos:column="18"/></operator> <call><name pos:line="2391" pos:column="19">IllegalArgumentException<pos:position pos:line="2391" pos:column="43"/></name><argument_list pos:line="2391" pos:column="43">(<argument><expr><literal type="string" pos:line="2391" pos:column="44">"handle: "<pos:position pos:line="2391" pos:column="54"/></literal> <operator pos:line="2391" pos:column="55">+<pos:position pos:line="2391" pos:column="56"/></operator> <name pos:line="2391" pos:column="57">handle<pos:position pos:line="2391" pos:column="63"/></name>
                <operator pos:line="2392" pos:column="17">+<pos:position pos:line="2392" pos:column="18"/></operator> <literal type="string" pos:line="2392" pos:column="19">" or association: "<pos:position pos:line="2392" pos:column="38"/></literal> <operator pos:line="2392" pos:column="39">+<pos:position pos:line="2392" pos:column="40"/></operator> <name pos:line="2392" pos:column="41">association<pos:position pos:line="2392" pos:column="52"/></name></expr></argument>)<pos:position pos:line="2392" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="2392" pos:column="54"/></throw>
    }<pos:position pos:line="2393" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="2395" pos:column="5">/**
     * Sets if some model element is a leaf.
     *
     * @param handle model element
     * @param flag is true if it is a leaf.
     */</comment>
    <function><specifier pos:line="2401" pos:column="5">public<pos:position pos:line="2401" pos:column="11"/></specifier> <type><name pos:line="2401" pos:column="12">void<pos:position pos:line="2401" pos:column="16"/></name></type> <name pos:line="2401" pos:column="17">setLeaf<pos:position pos:line="2401" pos:column="24"/></name><parameter_list pos:line="2401" pos:column="24">(<parameter><decl><type><name pos:line="2401" pos:column="25">Object<pos:position pos:line="2401" pos:column="31"/></name></type> <name pos:line="2401" pos:column="32">handle<pos:position pos:line="2401" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2401" pos:column="40">boolean<pos:position pos:line="2401" pos:column="47"/></name></type> <name pos:line="2401" pos:column="48">flag<pos:position pos:line="2401" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="2401" pos:column="53"/></parameter_list> <block pos:line="2401" pos:column="54">{
        <if pos:line="2402" pos:column="9">if <condition pos:line="2402" pos:column="12">(<expr><name pos:line="2402" pos:column="13">handle<pos:position pos:line="2402" pos:column="19"/></name> <operator pos:line="2402" pos:column="20">instanceof<pos:position pos:line="2402" pos:column="30"/></operator> <name pos:line="2402" pos:column="31">MReception<pos:position pos:line="2402" pos:column="41"/></name></expr>)<pos:position pos:line="2402" pos:column="42"/></condition><then pos:line="2402" pos:column="42"> <block pos:line="2402" pos:column="43">{
            <expr_stmt><expr><operator pos:line="2403" pos:column="13">(<pos:position pos:line="2403" pos:column="14"/></operator><operator pos:line="2403" pos:column="14">(<pos:position pos:line="2403" pos:column="15"/></operator><name pos:line="2403" pos:column="15">MReception<pos:position pos:line="2403" pos:column="25"/></name><operator pos:line="2403" pos:column="25">)<pos:position pos:line="2403" pos:column="26"/></operator> <name pos:line="2403" pos:column="27">handle<pos:position pos:line="2403" pos:column="33"/></name><operator pos:line="2403" pos:column="33">)<pos:position pos:line="2403" pos:column="34"/></operator><operator pos:line="2403" pos:column="34">.<pos:position pos:line="2403" pos:column="35"/></operator><call><name pos:line="2403" pos:column="35">setLeaf<pos:position pos:line="2403" pos:column="42"/></name><argument_list pos:line="2403" pos:column="42">(<argument><expr><name pos:line="2403" pos:column="43">flag<pos:position pos:line="2403" pos:column="47"/></name></expr></argument>)<pos:position pos:line="2403" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="2403" pos:column="49"/></expr_stmt>
            <return pos:line="2404" pos:column="13">return;<pos:position pos:line="2404" pos:column="20"/></return>
        }<pos:position pos:line="2405" pos:column="10"/></block></then></if>
        <if pos:line="2406" pos:column="9">if <condition pos:line="2406" pos:column="12">(<expr><name pos:line="2406" pos:column="13">handle<pos:position pos:line="2406" pos:column="19"/></name> <operator pos:line="2406" pos:column="20">instanceof<pos:position pos:line="2406" pos:column="30"/></operator> <name pos:line="2406" pos:column="31">MOperation<pos:position pos:line="2406" pos:column="41"/></name></expr>)<pos:position pos:line="2406" pos:column="42"/></condition><then pos:line="2406" pos:column="42"> <block pos:line="2406" pos:column="43">{
            <expr_stmt><expr><operator pos:line="2407" pos:column="13">(<pos:position pos:line="2407" pos:column="14"/></operator><operator pos:line="2407" pos:column="14">(<pos:position pos:line="2407" pos:column="15"/></operator><name pos:line="2407" pos:column="15">MOperation<pos:position pos:line="2407" pos:column="25"/></name><operator pos:line="2407" pos:column="25">)<pos:position pos:line="2407" pos:column="26"/></operator> <name pos:line="2407" pos:column="27">handle<pos:position pos:line="2407" pos:column="33"/></name><operator pos:line="2407" pos:column="33">)<pos:position pos:line="2407" pos:column="34"/></operator><operator pos:line="2407" pos:column="34">.<pos:position pos:line="2407" pos:column="35"/></operator><call><name pos:line="2407" pos:column="35">setLeaf<pos:position pos:line="2407" pos:column="42"/></name><argument_list pos:line="2407" pos:column="42">(<argument><expr><name pos:line="2407" pos:column="43">flag<pos:position pos:line="2407" pos:column="47"/></name></expr></argument>)<pos:position pos:line="2407" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="2407" pos:column="49"/></expr_stmt>
            <return pos:line="2408" pos:column="13">return;<pos:position pos:line="2408" pos:column="20"/></return>
        }<pos:position pos:line="2409" pos:column="10"/></block></then></if>
        <if pos:line="2410" pos:column="9">if <condition pos:line="2410" pos:column="12">(<expr><name pos:line="2410" pos:column="13">handle<pos:position pos:line="2410" pos:column="19"/></name> <operator pos:line="2410" pos:column="20">instanceof<pos:position pos:line="2410" pos:column="30"/></operator> <name pos:line="2410" pos:column="31">MGeneralizableElement<pos:position pos:line="2410" pos:column="52"/></name></expr>)<pos:position pos:line="2410" pos:column="53"/></condition><then pos:line="2410" pos:column="53"> <block pos:line="2410" pos:column="54">{
            <expr_stmt><expr><operator pos:line="2411" pos:column="13">(<pos:position pos:line="2411" pos:column="14"/></operator><operator pos:line="2411" pos:column="14">(<pos:position pos:line="2411" pos:column="15"/></operator><name pos:line="2411" pos:column="15">MGeneralizableElement<pos:position pos:line="2411" pos:column="36"/></name><operator pos:line="2411" pos:column="36">)<pos:position pos:line="2411" pos:column="37"/></operator> <name pos:line="2411" pos:column="38">handle<pos:position pos:line="2411" pos:column="44"/></name><operator pos:line="2411" pos:column="44">)<pos:position pos:line="2411" pos:column="45"/></operator><operator pos:line="2411" pos:column="45">.<pos:position pos:line="2411" pos:column="46"/></operator><call><name pos:line="2411" pos:column="46">setLeaf<pos:position pos:line="2411" pos:column="53"/></name><argument_list pos:line="2411" pos:column="53">(<argument><expr><name pos:line="2411" pos:column="54">flag<pos:position pos:line="2411" pos:column="58"/></name></expr></argument>)<pos:position pos:line="2411" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="2411" pos:column="60"/></expr_stmt>
            <return pos:line="2412" pos:column="13">return;<pos:position pos:line="2412" pos:column="20"/></return>
        }<pos:position pos:line="2413" pos:column="10"/></block></then></if>
        <throw pos:line="2414" pos:column="9">throw <expr><operator pos:line="2414" pos:column="15">new<pos:position pos:line="2414" pos:column="18"/></operator> <call><name pos:line="2414" pos:column="19">IllegalArgumentException<pos:position pos:line="2414" pos:column="43"/></name><argument_list pos:line="2414" pos:column="43">(<argument><expr><literal type="string" pos:line="2414" pos:column="44">"handle: "<pos:position pos:line="2414" pos:column="54"/></literal> <operator pos:line="2414" pos:column="55">+<pos:position pos:line="2414" pos:column="56"/></operator> <name pos:line="2414" pos:column="57">handle<pos:position pos:line="2414" pos:column="63"/></name></expr></argument>)<pos:position pos:line="2414" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="2414" pos:column="65"/></throw>
    }<pos:position pos:line="2415" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="2417" pos:column="5">/**
     * Sets the raised signals of some behavioural feature.
     *
     * @param handle the behavioural feature
     * @param raisedSignals the raised signals
     */</comment>
    <function><specifier pos:line="2423" pos:column="5">public<pos:position pos:line="2423" pos:column="11"/></specifier> <type><name pos:line="2423" pos:column="12">void<pos:position pos:line="2423" pos:column="16"/></name></type> <name pos:line="2423" pos:column="17">setRaisedSignals<pos:position pos:line="2423" pos:column="33"/></name><parameter_list pos:line="2423" pos:column="33">(
        <parameter><decl><type><name pos:line="2424" pos:column="9">Object<pos:position pos:line="2424" pos:column="15"/></name></type> <name pos:line="2424" pos:column="16">handle<pos:position pos:line="2424" pos:column="22"/></name></decl></parameter>,
        <parameter><decl><type><name pos:line="2425" pos:column="9">Collection<pos:position pos:line="2425" pos:column="19"/></name></type> <name pos:line="2425" pos:column="20">raisedSignals<pos:position pos:line="2425" pos:column="33"/></name></decl></parameter>)<pos:position pos:line="2425" pos:column="34"/></parameter_list> <block pos:line="2425" pos:column="35">{
        <if pos:line="2426" pos:column="9">if <condition pos:line="2426" pos:column="12">(<expr><name pos:line="2426" pos:column="13">handle<pos:position pos:line="2426" pos:column="19"/></name> <operator pos:line="2426" pos:column="20">instanceof<pos:position pos:line="2426" pos:column="30"/></operator> <name pos:line="2426" pos:column="31">MBehavioralFeature<pos:position pos:line="2426" pos:column="49"/></name></expr>)<pos:position pos:line="2426" pos:column="50"/></condition><then pos:line="2426" pos:column="50"> <block pos:line="2426" pos:column="51">{
            <expr_stmt><expr><operator pos:line="2427" pos:column="13">(<pos:position pos:line="2427" pos:column="14"/></operator><operator pos:line="2427" pos:column="14">(<pos:position pos:line="2427" pos:column="15"/></operator><name pos:line="2427" pos:column="15">MBehavioralFeature<pos:position pos:line="2427" pos:column="33"/></name><operator pos:line="2427" pos:column="33">)<pos:position pos:line="2427" pos:column="34"/></operator> <name pos:line="2427" pos:column="35">handle<pos:position pos:line="2427" pos:column="41"/></name><operator pos:line="2427" pos:column="41">)<pos:position pos:line="2427" pos:column="42"/></operator><operator pos:line="2427" pos:column="42">.<pos:position pos:line="2427" pos:column="43"/></operator><call><name pos:line="2427" pos:column="43">setRaisedSignals<pos:position pos:line="2427" pos:column="59"/></name><argument_list pos:line="2427" pos:column="59">(<argument><expr><name pos:line="2427" pos:column="60">raisedSignals<pos:position pos:line="2427" pos:column="73"/></name></expr></argument>)<pos:position pos:line="2427" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="2427" pos:column="75"/></expr_stmt>
            <return pos:line="2428" pos:column="13">return;<pos:position pos:line="2428" pos:column="20"/></return>
        }<pos:position pos:line="2429" pos:column="10"/></block></then></if>
        <throw pos:line="2430" pos:column="9">throw <expr><operator pos:line="2430" pos:column="15">new<pos:position pos:line="2430" pos:column="18"/></operator> <call><name pos:line="2430" pos:column="19">IllegalArgumentException<pos:position pos:line="2430" pos:column="43"/></name><argument_list pos:line="2430" pos:column="43">(<argument><expr><literal type="string" pos:line="2430" pos:column="44">"handle: "<pos:position pos:line="2430" pos:column="54"/></literal> <operator pos:line="2430" pos:column="55">+<pos:position pos:line="2430" pos:column="56"/></operator> <name pos:line="2430" pos:column="57">handle<pos:position pos:line="2430" pos:column="63"/></name></expr></argument>)<pos:position pos:line="2430" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="2430" pos:column="65"/></throw>
    }<pos:position pos:line="2431" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="2433" pos:column="5">/**
     * @see org.argouml.model.CoreHelper#setBody(
     *         java.lang.Object, java.lang.Object)
     */</comment>
    <function><specifier pos:line="2437" pos:column="5">public<pos:position pos:line="2437" pos:column="11"/></specifier> <type><name pos:line="2437" pos:column="12">void<pos:position pos:line="2437" pos:column="16"/></name></type> <name pos:line="2437" pos:column="17">setBody<pos:position pos:line="2437" pos:column="24"/></name><parameter_list pos:line="2437" pos:column="24">(<parameter><decl><type><name pos:line="2437" pos:column="25">Object<pos:position pos:line="2437" pos:column="31"/></name></type> <name pos:line="2437" pos:column="32">handle<pos:position pos:line="2437" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2437" pos:column="40">Object<pos:position pos:line="2437" pos:column="46"/></name></type> <name pos:line="2437" pos:column="47">expr<pos:position pos:line="2437" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="2437" pos:column="52"/></parameter_list> <block pos:line="2437" pos:column="53">{
        <if pos:line="2438" pos:column="9">if <condition pos:line="2438" pos:column="12">(<expr><name pos:line="2438" pos:column="13">handle<pos:position pos:line="2438" pos:column="19"/></name> <operator pos:line="2438" pos:column="20">instanceof<pos:position pos:line="2438" pos:column="30"/></operator> <name pos:line="2438" pos:column="31">MMethod<pos:position pos:line="2438" pos:column="38"/></name>
            <operator pos:line="2439" pos:column="13">&amp;&amp;<pos:position pos:line="2439" pos:column="23"/></operator> <operator pos:line="2439" pos:column="16">(<pos:position pos:line="2439" pos:column="17"/></operator><name pos:line="2439" pos:column="17">expr<pos:position pos:line="2439" pos:column="21"/></name> <operator pos:line="2439" pos:column="22">==<pos:position pos:line="2439" pos:column="24"/></operator> <literal type="null" pos:line="2439" pos:column="25">null<pos:position pos:line="2439" pos:column="29"/></literal> <operator pos:line="2439" pos:column="30">||<pos:position pos:line="2439" pos:column="32"/></operator> <name pos:line="2439" pos:column="33">expr<pos:position pos:line="2439" pos:column="37"/></name> <operator pos:line="2439" pos:column="38">instanceof<pos:position pos:line="2439" pos:column="48"/></operator> <name pos:line="2439" pos:column="49">MProcedureExpression<pos:position pos:line="2439" pos:column="69"/></name><operator pos:line="2439" pos:column="69">)<pos:position pos:line="2439" pos:column="70"/></operator></expr>)<pos:position pos:line="2439" pos:column="71"/></condition><then pos:line="2439" pos:column="71"> <block pos:line="2439" pos:column="72">{
            <expr_stmt><expr><operator pos:line="2440" pos:column="13">(<pos:position pos:line="2440" pos:column="14"/></operator><operator pos:line="2440" pos:column="14">(<pos:position pos:line="2440" pos:column="15"/></operator><name pos:line="2440" pos:column="15">MMethod<pos:position pos:line="2440" pos:column="22"/></name><operator pos:line="2440" pos:column="22">)<pos:position pos:line="2440" pos:column="23"/></operator> <name pos:line="2440" pos:column="24">handle<pos:position pos:line="2440" pos:column="30"/></name><operator pos:line="2440" pos:column="30">)<pos:position pos:line="2440" pos:column="31"/></operator><operator pos:line="2440" pos:column="31">.<pos:position pos:line="2440" pos:column="32"/></operator><call><name pos:line="2440" pos:column="32">setBody<pos:position pos:line="2440" pos:column="39"/></name><argument_list pos:line="2440" pos:column="39">(<argument><expr><operator pos:line="2440" pos:column="40">(<pos:position pos:line="2440" pos:column="41"/></operator><name pos:line="2440" pos:column="41">MProcedureExpression<pos:position pos:line="2440" pos:column="61"/></name><operator pos:line="2440" pos:column="61">)<pos:position pos:line="2440" pos:column="62"/></operator> <name pos:line="2440" pos:column="63">expr<pos:position pos:line="2440" pos:column="67"/></name></expr></argument>)<pos:position pos:line="2440" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="2440" pos:column="69"/></expr_stmt>
            <return pos:line="2441" pos:column="13">return;<pos:position pos:line="2441" pos:column="20"/></return>
        }<pos:position pos:line="2442" pos:column="10"/></block></then></if>

        <if pos:line="2444" pos:column="9">if <condition pos:line="2444" pos:column="12">(<expr><name pos:line="2444" pos:column="13">handle<pos:position pos:line="2444" pos:column="19"/></name> <operator pos:line="2444" pos:column="20">instanceof<pos:position pos:line="2444" pos:column="30"/></operator> <name pos:line="2444" pos:column="31">MConstraint<pos:position pos:line="2444" pos:column="42"/></name>
            <operator pos:line="2445" pos:column="13">&amp;&amp;<pos:position pos:line="2445" pos:column="23"/></operator> <operator pos:line="2445" pos:column="16">(<pos:position pos:line="2445" pos:column="17"/></operator><name pos:line="2445" pos:column="17">expr<pos:position pos:line="2445" pos:column="21"/></name> <operator pos:line="2445" pos:column="22">==<pos:position pos:line="2445" pos:column="24"/></operator> <literal type="null" pos:line="2445" pos:column="25">null<pos:position pos:line="2445" pos:column="29"/></literal> <operator pos:line="2445" pos:column="30">||<pos:position pos:line="2445" pos:column="32"/></operator> <name pos:line="2445" pos:column="33">expr<pos:position pos:line="2445" pos:column="37"/></name> <operator pos:line="2445" pos:column="38">instanceof<pos:position pos:line="2445" pos:column="48"/></operator> <name pos:line="2445" pos:column="49">MBooleanExpression<pos:position pos:line="2445" pos:column="67"/></name><operator pos:line="2445" pos:column="67">)<pos:position pos:line="2445" pos:column="68"/></operator></expr>)<pos:position pos:line="2445" pos:column="69"/></condition><then pos:line="2445" pos:column="69"> <block pos:line="2445" pos:column="70">{
            <expr_stmt><expr><operator pos:line="2446" pos:column="13">(<pos:position pos:line="2446" pos:column="14"/></operator><operator pos:line="2446" pos:column="14">(<pos:position pos:line="2446" pos:column="15"/></operator><name pos:line="2446" pos:column="15">MConstraint<pos:position pos:line="2446" pos:column="26"/></name><operator pos:line="2446" pos:column="26">)<pos:position pos:line="2446" pos:column="27"/></operator> <name pos:line="2446" pos:column="28">handle<pos:position pos:line="2446" pos:column="34"/></name><operator pos:line="2446" pos:column="34">)<pos:position pos:line="2446" pos:column="35"/></operator><operator pos:line="2446" pos:column="35">.<pos:position pos:line="2446" pos:column="36"/></operator><call><name pos:line="2446" pos:column="36">setBody<pos:position pos:line="2446" pos:column="43"/></name><argument_list pos:line="2446" pos:column="43">(<argument><expr><operator pos:line="2446" pos:column="44">(<pos:position pos:line="2446" pos:column="45"/></operator><name pos:line="2446" pos:column="45">MBooleanExpression<pos:position pos:line="2446" pos:column="63"/></name><operator pos:line="2446" pos:column="63">)<pos:position pos:line="2446" pos:column="64"/></operator> <name pos:line="2446" pos:column="65">expr<pos:position pos:line="2446" pos:column="69"/></name></expr></argument>)<pos:position pos:line="2446" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="2446" pos:column="71"/></expr_stmt>
            <return pos:line="2447" pos:column="13">return;<pos:position pos:line="2447" pos:column="20"/></return>
        }<pos:position pos:line="2448" pos:column="10"/></block></then></if>

        <throw pos:line="2450" pos:column="9">throw <expr><operator pos:line="2450" pos:column="15">new<pos:position pos:line="2450" pos:column="18"/></operator> <call><name pos:line="2450" pos:column="19">IllegalArgumentException<pos:position pos:line="2450" pos:column="43"/></name><argument_list pos:line="2450" pos:column="43">(<argument><expr><literal type="string" pos:line="2450" pos:column="44">"handle: "<pos:position pos:line="2450" pos:column="54"/></literal> <operator pos:line="2450" pos:column="55">+<pos:position pos:line="2450" pos:column="56"/></operator> <name pos:line="2450" pos:column="57">handle<pos:position pos:line="2450" pos:column="63"/></name>
                <operator pos:line="2451" pos:column="17">+<pos:position pos:line="2451" pos:column="18"/></operator> <literal type="string" pos:line="2451" pos:column="19">" or expr: "<pos:position pos:line="2451" pos:column="31"/></literal> <operator pos:line="2451" pos:column="32">+<pos:position pos:line="2451" pos:column="33"/></operator> <name pos:line="2451" pos:column="34">expr<pos:position pos:line="2451" pos:column="38"/></name></expr></argument>)<pos:position pos:line="2451" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="2451" pos:column="40"/></throw>
    }<pos:position pos:line="2452" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="2454" pos:column="5">/**
     * Set the Changeability of a StructuralFeature or AssociationEnd.
     *
     * @param handle StructuralFeature or AssociationEnd
     * @param ck ChangeableKind
     */</comment>
    <function><specifier pos:line="2460" pos:column="5">public<pos:position pos:line="2460" pos:column="11"/></specifier> <type><name pos:line="2460" pos:column="12">void<pos:position pos:line="2460" pos:column="16"/></name></type> <name pos:line="2460" pos:column="17">setChangeability<pos:position pos:line="2460" pos:column="33"/></name><parameter_list pos:line="2460" pos:column="33">(<parameter><decl><type><name pos:line="2460" pos:column="34">Object<pos:position pos:line="2460" pos:column="40"/></name></type> <name pos:line="2460" pos:column="41">handle<pos:position pos:line="2460" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2460" pos:column="49">Object<pos:position pos:line="2460" pos:column="55"/></name></type> <name pos:line="2460" pos:column="56">ck<pos:position pos:line="2460" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="2460" pos:column="59"/></parameter_list> <block pos:line="2460" pos:column="60">{
        <if pos:line="2461" pos:column="9">if <condition pos:line="2461" pos:column="12">(<expr><name pos:line="2461" pos:column="13">ck<pos:position pos:line="2461" pos:column="15"/></name> <operator pos:line="2461" pos:column="16">==<pos:position pos:line="2461" pos:column="18"/></operator> <literal type="null" pos:line="2461" pos:column="19">null<pos:position pos:line="2461" pos:column="23"/></literal> <operator pos:line="2461" pos:column="24">||<pos:position pos:line="2461" pos:column="26"/></operator> <name pos:line="2461" pos:column="27">ck<pos:position pos:line="2461" pos:column="29"/></name> <operator pos:line="2461" pos:column="30">instanceof<pos:position pos:line="2461" pos:column="40"/></operator> <name pos:line="2461" pos:column="41">MChangeableKind<pos:position pos:line="2461" pos:column="56"/></name></expr>)<pos:position pos:line="2461" pos:column="57"/></condition><then pos:line="2461" pos:column="57"> <block pos:line="2461" pos:column="58">{
            <decl_stmt><decl><type><name pos:line="2462" pos:column="13">MChangeableKind<pos:position pos:line="2462" pos:column="28"/></name></type> <name pos:line="2462" pos:column="29">changeableKind<pos:position pos:line="2462" pos:column="43"/></name> <init pos:line="2462" pos:column="44">= <expr><operator pos:line="2462" pos:column="46">(<pos:position pos:line="2462" pos:column="47"/></operator><name pos:line="2462" pos:column="47">MChangeableKind<pos:position pos:line="2462" pos:column="62"/></name><operator pos:line="2462" pos:column="62">)<pos:position pos:line="2462" pos:column="63"/></operator> <name pos:line="2462" pos:column="64">ck<pos:position pos:line="2462" pos:column="66"/></name></expr></init></decl>;<pos:position pos:line="2462" pos:column="67"/></decl_stmt>

            <if pos:line="2464" pos:column="13">if <condition pos:line="2464" pos:column="16">(<expr><name pos:line="2464" pos:column="17">handle<pos:position pos:line="2464" pos:column="23"/></name> <operator pos:line="2464" pos:column="24">instanceof<pos:position pos:line="2464" pos:column="34"/></operator> <name pos:line="2464" pos:column="35">MStructuralFeature<pos:position pos:line="2464" pos:column="53"/></name></expr>)<pos:position pos:line="2464" pos:column="54"/></condition><then pos:line="2464" pos:column="54"> <block pos:line="2464" pos:column="55">{
                <expr_stmt><expr><operator pos:line="2465" pos:column="17">(<pos:position pos:line="2465" pos:column="18"/></operator><operator pos:line="2465" pos:column="18">(<pos:position pos:line="2465" pos:column="19"/></operator><name pos:line="2465" pos:column="19">MStructuralFeature<pos:position pos:line="2465" pos:column="37"/></name><operator pos:line="2465" pos:column="37">)<pos:position pos:line="2465" pos:column="38"/></operator> <name pos:line="2465" pos:column="39">handle<pos:position pos:line="2465" pos:column="45"/></name><operator pos:line="2465" pos:column="45">)<pos:position pos:line="2465" pos:column="46"/></operator><operator pos:line="2465" pos:column="46">.<pos:position pos:line="2465" pos:column="47"/></operator><call><name pos:line="2465" pos:column="47">setChangeability<pos:position pos:line="2465" pos:column="63"/></name><argument_list pos:line="2465" pos:column="63">(<argument><expr><name pos:line="2465" pos:column="64">changeableKind<pos:position pos:line="2465" pos:column="78"/></name></expr></argument>)<pos:position pos:line="2465" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="2465" pos:column="80"/></expr_stmt>
                <return pos:line="2466" pos:column="17">return;<pos:position pos:line="2466" pos:column="24"/></return>
            }<pos:position pos:line="2467" pos:column="14"/></block></then></if>
            <if pos:line="2468" pos:column="13">if <condition pos:line="2468" pos:column="16">(<expr><name pos:line="2468" pos:column="17">handle<pos:position pos:line="2468" pos:column="23"/></name> <operator pos:line="2468" pos:column="24">instanceof<pos:position pos:line="2468" pos:column="34"/></operator> <name pos:line="2468" pos:column="35">MAssociationEnd<pos:position pos:line="2468" pos:column="50"/></name></expr>)<pos:position pos:line="2468" pos:column="51"/></condition><then pos:line="2468" pos:column="51"> <block pos:line="2468" pos:column="52">{
                <expr_stmt><expr><operator pos:line="2469" pos:column="17">(<pos:position pos:line="2469" pos:column="18"/></operator><operator pos:line="2469" pos:column="18">(<pos:position pos:line="2469" pos:column="19"/></operator><name pos:line="2469" pos:column="19">MAssociationEnd<pos:position pos:line="2469" pos:column="34"/></name><operator pos:line="2469" pos:column="34">)<pos:position pos:line="2469" pos:column="35"/></operator> <name pos:line="2469" pos:column="36">handle<pos:position pos:line="2469" pos:column="42"/></name><operator pos:line="2469" pos:column="42">)<pos:position pos:line="2469" pos:column="43"/></operator><operator pos:line="2469" pos:column="43">.<pos:position pos:line="2469" pos:column="44"/></operator><call><name pos:line="2469" pos:column="44">setChangeability<pos:position pos:line="2469" pos:column="60"/></name><argument_list pos:line="2469" pos:column="60">(<argument><expr><name pos:line="2469" pos:column="61">changeableKind<pos:position pos:line="2469" pos:column="75"/></name></expr></argument>)<pos:position pos:line="2469" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="2469" pos:column="77"/></expr_stmt>
                <return pos:line="2470" pos:column="17">return;<pos:position pos:line="2470" pos:column="24"/></return>
            }<pos:position pos:line="2471" pos:column="14"/></block></then></if>
        }<pos:position pos:line="2472" pos:column="10"/></block></then></if>
        <throw pos:line="2473" pos:column="9">throw <expr><operator pos:line="2473" pos:column="15">new<pos:position pos:line="2473" pos:column="18"/></operator> <call><name pos:line="2473" pos:column="19">IllegalArgumentException<pos:position pos:line="2473" pos:column="43"/></name><argument_list pos:line="2473" pos:column="43">(<argument><expr><literal type="string" pos:line="2473" pos:column="44">"handle: "<pos:position pos:line="2473" pos:column="54"/></literal> <operator pos:line="2473" pos:column="55">+<pos:position pos:line="2473" pos:column="56"/></operator> <name pos:line="2473" pos:column="57">handle<pos:position pos:line="2473" pos:column="63"/></name>
                <operator pos:line="2474" pos:column="17">+<pos:position pos:line="2474" pos:column="18"/></operator> <literal type="string" pos:line="2474" pos:column="19">" or ck: "<pos:position pos:line="2474" pos:column="29"/></literal> <operator pos:line="2474" pos:column="30">+<pos:position pos:line="2474" pos:column="31"/></operator> <name pos:line="2474" pos:column="32">ck<pos:position pos:line="2474" pos:column="34"/></name></expr></argument>)<pos:position pos:line="2474" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="2474" pos:column="36"/></throw>
    }<pos:position pos:line="2475" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="2477" pos:column="5">/**
     * Set the changeability of some feature.
     *
     * @param handle is the feature
     * @param flag is the changeability flag
     */</comment>
    <function><specifier pos:line="2483" pos:column="5">public<pos:position pos:line="2483" pos:column="11"/></specifier> <type><name pos:line="2483" pos:column="12">void<pos:position pos:line="2483" pos:column="16"/></name></type> <name pos:line="2483" pos:column="17">setChangeable<pos:position pos:line="2483" pos:column="30"/></name><parameter_list pos:line="2483" pos:column="30">(<parameter><decl><type><name pos:line="2483" pos:column="31">Object<pos:position pos:line="2483" pos:column="37"/></name></type> <name pos:line="2483" pos:column="38">handle<pos:position pos:line="2483" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2483" pos:column="46">boolean<pos:position pos:line="2483" pos:column="53"/></name></type> <name pos:line="2483" pos:column="54">flag<pos:position pos:line="2483" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="2483" pos:column="59"/></parameter_list> <block pos:line="2483" pos:column="60">{
        <comment type="line" pos:line="2484" pos:column="9">// TODO: the implementation is ugly, because I have no spec</comment>
        <comment type="line" pos:line="2485" pos:column="9">// at hand...</comment>
        <if pos:line="2486" pos:column="9">if <condition pos:line="2486" pos:column="12">(<expr><name pos:line="2486" pos:column="13">handle<pos:position pos:line="2486" pos:column="19"/></name> <operator pos:line="2486" pos:column="20">instanceof<pos:position pos:line="2486" pos:column="30"/></operator> <name pos:line="2486" pos:column="31">MStructuralFeature<pos:position pos:line="2486" pos:column="49"/></name></expr>)<pos:position pos:line="2486" pos:column="50"/></condition><then pos:line="2486" pos:column="50"> <block pos:line="2486" pos:column="51">{
            <if pos:line="2487" pos:column="13">if <condition pos:line="2487" pos:column="16">(<expr><name pos:line="2487" pos:column="17">flag<pos:position pos:line="2487" pos:column="21"/></name></expr>)<pos:position pos:line="2487" pos:column="22"/></condition><then pos:line="2487" pos:column="22"> <block pos:line="2487" pos:column="23">{
                <expr_stmt><expr><operator pos:line="2488" pos:column="17">(<pos:position pos:line="2488" pos:column="18"/></operator><operator pos:line="2488" pos:column="18">(<pos:position pos:line="2488" pos:column="19"/></operator><name pos:line="2488" pos:column="19">MStructuralFeature<pos:position pos:line="2488" pos:column="37"/></name><operator pos:line="2488" pos:column="37">)<pos:position pos:line="2488" pos:column="38"/></operator> <name pos:line="2488" pos:column="39">handle<pos:position pos:line="2488" pos:column="45"/></name><operator pos:line="2488" pos:column="45">)<pos:position pos:line="2488" pos:column="46"/></operator><operator pos:line="2488" pos:column="46">.<pos:position pos:line="2488" pos:column="47"/></operator><call><name pos:line="2488" pos:column="47">setChangeability<pos:position pos:line="2488" pos:column="63"/></name><argument_list pos:line="2488" pos:column="63">(
                    <argument><expr><name><name pos:line="2489" pos:column="21">MChangeableKind<pos:position pos:line="2489" pos:column="36"/></name><operator pos:line="2489" pos:column="36">.<pos:position pos:line="2489" pos:column="37"/></operator><name pos:line="2489" pos:column="37">CHANGEABLE<pos:position pos:line="2489" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="2489" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="2489" pos:column="49"/></expr_stmt>
                    <return pos:line="2490" pos:column="21">return;<pos:position pos:line="2490" pos:column="28"/></return>
            }<pos:position pos:line="2491" pos:column="14"/></block></then></if> 
            <expr_stmt><expr><operator pos:line="2492" pos:column="13">(<pos:position pos:line="2492" pos:column="14"/></operator><operator pos:line="2492" pos:column="14">(<pos:position pos:line="2492" pos:column="15"/></operator><name pos:line="2492" pos:column="15">MStructuralFeature<pos:position pos:line="2492" pos:column="33"/></name><operator pos:line="2492" pos:column="33">)<pos:position pos:line="2492" pos:column="34"/></operator> <name pos:line="2492" pos:column="35">handle<pos:position pos:line="2492" pos:column="41"/></name><operator pos:line="2492" pos:column="41">)<pos:position pos:line="2492" pos:column="42"/></operator><operator pos:line="2492" pos:column="42">.<pos:position pos:line="2492" pos:column="43"/></operator><call><name pos:line="2492" pos:column="43">setChangeability<pos:position pos:line="2492" pos:column="59"/></name><argument_list pos:line="2492" pos:column="59">(
                    <argument><expr><name><name pos:line="2493" pos:column="21">MChangeableKind<pos:position pos:line="2493" pos:column="36"/></name><operator pos:line="2493" pos:column="36">.<pos:position pos:line="2493" pos:column="37"/></operator><name pos:line="2493" pos:column="37">FROZEN<pos:position pos:line="2493" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="2493" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="2493" pos:column="45"/></expr_stmt>
            <return pos:line="2494" pos:column="13">return;<pos:position pos:line="2494" pos:column="20"/></return>
        }<pos:position pos:line="2495" pos:column="10"/></block></then> <elseif pos:line="2495" pos:column="11">else <if pos:line="2495" pos:column="16">if <condition pos:line="2495" pos:column="19">(<expr><name pos:line="2495" pos:column="20">handle<pos:position pos:line="2495" pos:column="26"/></name> <operator pos:line="2495" pos:column="27">instanceof<pos:position pos:line="2495" pos:column="37"/></operator> <name pos:line="2495" pos:column="38">MAssociationEnd<pos:position pos:line="2495" pos:column="53"/></name></expr>)<pos:position pos:line="2495" pos:column="54"/></condition><then pos:line="2495" pos:column="54"> <block pos:line="2495" pos:column="55">{
            <decl_stmt><decl><type><name pos:line="2496" pos:column="13">MAssociationEnd<pos:position pos:line="2496" pos:column="28"/></name></type> <name pos:line="2496" pos:column="29">ae<pos:position pos:line="2496" pos:column="31"/></name> <init pos:line="2496" pos:column="32">= <expr><operator pos:line="2496" pos:column="34">(<pos:position pos:line="2496" pos:column="35"/></operator><name pos:line="2496" pos:column="35">MAssociationEnd<pos:position pos:line="2496" pos:column="50"/></name><operator pos:line="2496" pos:column="50">)<pos:position pos:line="2496" pos:column="51"/></operator> <name pos:line="2496" pos:column="52">handle<pos:position pos:line="2496" pos:column="58"/></name></expr></init></decl>;<pos:position pos:line="2496" pos:column="59"/></decl_stmt>
            <if pos:line="2497" pos:column="13">if <condition pos:line="2497" pos:column="16">(<expr><name pos:line="2497" pos:column="17">flag<pos:position pos:line="2497" pos:column="21"/></name></expr>)<pos:position pos:line="2497" pos:column="22"/></condition><then pos:line="2497" pos:column="22"> <block pos:line="2497" pos:column="23">{
                <expr_stmt><expr><call><name><name pos:line="2498" pos:column="17">ae<pos:position pos:line="2498" pos:column="19"/></name><operator pos:line="2498" pos:column="19">.<pos:position pos:line="2498" pos:column="20"/></operator><name pos:line="2498" pos:column="20">setChangeability<pos:position pos:line="2498" pos:column="36"/></name></name><argument_list pos:line="2498" pos:column="36">(<argument><expr><name><name pos:line="2498" pos:column="37">MChangeableKind<pos:position pos:line="2498" pos:column="52"/></name><operator pos:line="2498" pos:column="52">.<pos:position pos:line="2498" pos:column="53"/></operator><name pos:line="2498" pos:column="53">CHANGEABLE<pos:position pos:line="2498" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="2498" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="2498" pos:column="65"/></expr_stmt>
            }<pos:position pos:line="2499" pos:column="14"/></block></then> <else pos:line="2499" pos:column="15">else <block pos:line="2499" pos:column="20">{
                <expr_stmt><expr><call><name><name pos:line="2500" pos:column="17">ae<pos:position pos:line="2500" pos:column="19"/></name><operator pos:line="2500" pos:column="19">.<pos:position pos:line="2500" pos:column="20"/></operator><name pos:line="2500" pos:column="20">setChangeability<pos:position pos:line="2500" pos:column="36"/></name></name><argument_list pos:line="2500" pos:column="36">(<argument><expr><name><name pos:line="2500" pos:column="37">MChangeableKind<pos:position pos:line="2500" pos:column="52"/></name><operator pos:line="2500" pos:column="52">.<pos:position pos:line="2500" pos:column="53"/></operator><name pos:line="2500" pos:column="53">FROZEN<pos:position pos:line="2500" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="2500" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="2500" pos:column="61"/></expr_stmt>
            }<pos:position pos:line="2501" pos:column="14"/></block></else></if>
            <return pos:line="2502" pos:column="13">return;<pos:position pos:line="2502" pos:column="20"/></return>
        }<pos:position pos:line="2503" pos:column="10"/></block></then></if></elseif></if>
        <throw pos:line="2504" pos:column="9">throw <expr><operator pos:line="2504" pos:column="15">new<pos:position pos:line="2504" pos:column="18"/></operator> <call><name pos:line="2504" pos:column="19">IllegalArgumentException<pos:position pos:line="2504" pos:column="43"/></name><argument_list pos:line="2504" pos:column="43">(<argument><expr><literal type="string" pos:line="2504" pos:column="44">"handle: "<pos:position pos:line="2504" pos:column="54"/></literal> <operator pos:line="2504" pos:column="55">+<pos:position pos:line="2504" pos:column="56"/></operator> <name pos:line="2504" pos:column="57">handle<pos:position pos:line="2504" pos:column="63"/></name></expr></argument>)<pos:position pos:line="2504" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="2504" pos:column="65"/></throw>
    }<pos:position pos:line="2505" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="2507" pos:column="5">/**
     * Set the child for a generalization.
     *
     * @param handle Generalization
     * @param child GeneralizableElement
     */</comment>
    <function><specifier pos:line="2513" pos:column="5">public<pos:position pos:line="2513" pos:column="11"/></specifier> <type><name pos:line="2513" pos:column="12">void<pos:position pos:line="2513" pos:column="16"/></name></type> <name pos:line="2513" pos:column="17">setChild<pos:position pos:line="2513" pos:column="25"/></name><parameter_list pos:line="2513" pos:column="25">(<parameter><decl><type><name pos:line="2513" pos:column="26">Object<pos:position pos:line="2513" pos:column="32"/></name></type> <name pos:line="2513" pos:column="33">handle<pos:position pos:line="2513" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2513" pos:column="41">Object<pos:position pos:line="2513" pos:column="47"/></name></type> <name pos:line="2513" pos:column="48">child<pos:position pos:line="2513" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2513" pos:column="54"/></parameter_list> <block pos:line="2513" pos:column="55">{
        <if pos:line="2514" pos:column="9">if <condition pos:line="2514" pos:column="12">(<expr><name pos:line="2514" pos:column="13">handle<pos:position pos:line="2514" pos:column="19"/></name> <operator pos:line="2514" pos:column="20">instanceof<pos:position pos:line="2514" pos:column="30"/></operator> <name pos:line="2514" pos:column="31">MGeneralization<pos:position pos:line="2514" pos:column="46"/></name></expr>)<pos:position pos:line="2514" pos:column="47"/></condition><then pos:line="2514" pos:column="47"> <block pos:line="2514" pos:column="48">{
            <expr_stmt><expr><operator pos:line="2515" pos:column="13">(<pos:position pos:line="2515" pos:column="14"/></operator><operator pos:line="2515" pos:column="14">(<pos:position pos:line="2515" pos:column="15"/></operator><name pos:line="2515" pos:column="15">MGeneralization<pos:position pos:line="2515" pos:column="30"/></name><operator pos:line="2515" pos:column="30">)<pos:position pos:line="2515" pos:column="31"/></operator> <name pos:line="2515" pos:column="32">handle<pos:position pos:line="2515" pos:column="38"/></name><operator pos:line="2515" pos:column="38">)<pos:position pos:line="2515" pos:column="39"/></operator><operator pos:line="2515" pos:column="39">.<pos:position pos:line="2515" pos:column="40"/></operator><call><name pos:line="2515" pos:column="40">setChild<pos:position pos:line="2515" pos:column="48"/></name><argument_list pos:line="2515" pos:column="48">(<argument><expr><operator pos:line="2515" pos:column="49">(<pos:position pos:line="2515" pos:column="50"/></operator><name pos:line="2515" pos:column="50">MGeneralizableElement<pos:position pos:line="2515" pos:column="71"/></name><operator pos:line="2515" pos:column="71">)<pos:position pos:line="2515" pos:column="72"/></operator> <name pos:line="2515" pos:column="73">child<pos:position pos:line="2515" pos:column="78"/></name></expr></argument>)<pos:position pos:line="2515" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="2515" pos:column="80"/></expr_stmt>
            <return pos:line="2516" pos:column="13">return;<pos:position pos:line="2516" pos:column="20"/></return>
        }<pos:position pos:line="2517" pos:column="10"/></block></then></if>
        <throw pos:line="2518" pos:column="9">throw <expr><operator pos:line="2518" pos:column="15">new<pos:position pos:line="2518" pos:column="18"/></operator> <call><name pos:line="2518" pos:column="19">IllegalArgumentException<pos:position pos:line="2518" pos:column="43"/></name><argument_list pos:line="2518" pos:column="43">(<argument><expr><literal type="string" pos:line="2518" pos:column="44">"handle: "<pos:position pos:line="2518" pos:column="54"/></literal> <operator pos:line="2518" pos:column="55">+<pos:position pos:line="2518" pos:column="56"/></operator> <name pos:line="2518" pos:column="57">handle<pos:position pos:line="2518" pos:column="63"/></name>
                <operator pos:line="2519" pos:column="17">+<pos:position pos:line="2519" pos:column="18"/></operator> <literal type="string" pos:line="2519" pos:column="19">" or child: "<pos:position pos:line="2519" pos:column="32"/></literal> <operator pos:line="2519" pos:column="33">+<pos:position pos:line="2519" pos:column="34"/></operator> <name pos:line="2519" pos:column="35">child<pos:position pos:line="2519" pos:column="40"/></name></expr></argument>)<pos:position pos:line="2519" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="2519" pos:column="42"/></throw>
    }<pos:position pos:line="2520" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="2522" pos:column="5">/**
     * Set the concurrency of some operation.
     *
     * @param handle is the operation
     * @param concurrencyKind is the concurrency
     */</comment>
    <function><specifier pos:line="2528" pos:column="5">public<pos:position pos:line="2528" pos:column="11"/></specifier> <type><name pos:line="2528" pos:column="12">void<pos:position pos:line="2528" pos:column="16"/></name></type> <name pos:line="2528" pos:column="17">setConcurrency<pos:position pos:line="2528" pos:column="31"/></name><parameter_list pos:line="2528" pos:column="31">(
        <parameter><decl><type><name pos:line="2529" pos:column="9">Object<pos:position pos:line="2529" pos:column="15"/></name></type> <name pos:line="2529" pos:column="16">handle<pos:position pos:line="2529" pos:column="22"/></name></decl></parameter>,
        <parameter><decl><type><name pos:line="2530" pos:column="9">Object<pos:position pos:line="2530" pos:column="15"/></name></type> <name pos:line="2530" pos:column="16">concurrencyKind<pos:position pos:line="2530" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="2530" pos:column="32"/></parameter_list> <block pos:line="2530" pos:column="33">{
        <if pos:line="2531" pos:column="9">if <condition pos:line="2531" pos:column="12">(<expr><name pos:line="2531" pos:column="13">handle<pos:position pos:line="2531" pos:column="19"/></name> <operator pos:line="2531" pos:column="20">instanceof<pos:position pos:line="2531" pos:column="30"/></operator> <name pos:line="2531" pos:column="31">MOperation<pos:position pos:line="2531" pos:column="41"/></name>
            <operator pos:line="2532" pos:column="13">&amp;&amp;<pos:position pos:line="2532" pos:column="23"/></operator> <name pos:line="2532" pos:column="16">concurrencyKind<pos:position pos:line="2532" pos:column="31"/></name> <operator pos:line="2532" pos:column="32">instanceof<pos:position pos:line="2532" pos:column="42"/></operator> <name pos:line="2532" pos:column="43">MCallConcurrencyKind<pos:position pos:line="2532" pos:column="63"/></name></expr>)<pos:position pos:line="2532" pos:column="64"/></condition><then pos:line="2532" pos:column="64"> <block pos:line="2532" pos:column="65">{
            <expr_stmt><expr><operator pos:line="2533" pos:column="13">(<pos:position pos:line="2533" pos:column="14"/></operator><operator pos:line="2533" pos:column="14">(<pos:position pos:line="2533" pos:column="15"/></operator><name pos:line="2533" pos:column="15">MOperation<pos:position pos:line="2533" pos:column="25"/></name><operator pos:line="2533" pos:column="25">)<pos:position pos:line="2533" pos:column="26"/></operator> <name pos:line="2533" pos:column="27">handle<pos:position pos:line="2533" pos:column="33"/></name><operator pos:line="2533" pos:column="33">)<pos:position pos:line="2533" pos:column="34"/></operator><operator pos:line="2533" pos:column="34">.<pos:position pos:line="2533" pos:column="35"/></operator><call><name pos:line="2533" pos:column="35">setConcurrency<pos:position pos:line="2533" pos:column="49"/></name><argument_list pos:line="2533" pos:column="49">(
                <argument><expr><operator pos:line="2534" pos:column="17">(<pos:position pos:line="2534" pos:column="18"/></operator><name pos:line="2534" pos:column="18">MCallConcurrencyKind<pos:position pos:line="2534" pos:column="38"/></name><operator pos:line="2534" pos:column="38">)<pos:position pos:line="2534" pos:column="39"/></operator> <name pos:line="2534" pos:column="40">concurrencyKind<pos:position pos:line="2534" pos:column="55"/></name></expr></argument>)<pos:position pos:line="2534" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="2534" pos:column="57"/></expr_stmt>
            <return pos:line="2535" pos:column="13">return;<pos:position pos:line="2535" pos:column="20"/></return>
        }<pos:position pos:line="2536" pos:column="10"/></block></then></if>
        <throw pos:line="2537" pos:column="9">throw <expr><operator pos:line="2537" pos:column="15">new<pos:position pos:line="2537" pos:column="18"/></operator> <call><name pos:line="2537" pos:column="19">IllegalArgumentException<pos:position pos:line="2537" pos:column="43"/></name><argument_list pos:line="2537" pos:column="43">(<argument><expr><literal type="string" pos:line="2537" pos:column="44">"handle: "<pos:position pos:line="2537" pos:column="54"/></literal> <operator pos:line="2537" pos:column="55">+<pos:position pos:line="2537" pos:column="56"/></operator> <name pos:line="2537" pos:column="57">handle<pos:position pos:line="2537" pos:column="63"/></name>
                <operator pos:line="2538" pos:column="17">+<pos:position pos:line="2538" pos:column="18"/></operator> <literal type="string" pos:line="2538" pos:column="19">" or concurrencyKind: "<pos:position pos:line="2538" pos:column="42"/></literal> <operator pos:line="2538" pos:column="43">+<pos:position pos:line="2538" pos:column="44"/></operator> <name pos:line="2538" pos:column="45">concurrencyKind<pos:position pos:line="2538" pos:column="60"/></name></expr></argument>)<pos:position pos:line="2538" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="2538" pos:column="62"/></throw>
    }<pos:position pos:line="2539" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="2541" pos:column="5">/**
     * Sets the list of connections of the given association or link.
     *
     * @param handle the given association or link
     * @param elems the list of association-ends or link-ends
     */</comment>
    <function><specifier pos:line="2547" pos:column="5">public<pos:position pos:line="2547" pos:column="11"/></specifier> <type><name pos:line="2547" pos:column="12">void<pos:position pos:line="2547" pos:column="16"/></name></type> <name pos:line="2547" pos:column="17">setConnections<pos:position pos:line="2547" pos:column="31"/></name><parameter_list pos:line="2547" pos:column="31">(<parameter><decl><type><name pos:line="2547" pos:column="32">Object<pos:position pos:line="2547" pos:column="38"/></name></type> <name pos:line="2547" pos:column="39">handle<pos:position pos:line="2547" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2547" pos:column="47">Collection<pos:position pos:line="2547" pos:column="57"/></name></type> <name pos:line="2547" pos:column="58">elems<pos:position pos:line="2547" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="2547" pos:column="64"/></parameter_list> <block pos:line="2547" pos:column="65">{
        <if pos:line="2548" pos:column="9">if <condition pos:line="2548" pos:column="12">(<expr><name pos:line="2548" pos:column="13">handle<pos:position pos:line="2548" pos:column="19"/></name> <operator pos:line="2548" pos:column="20">instanceof<pos:position pos:line="2548" pos:column="30"/></operator> <name pos:line="2548" pos:column="31">MAssociation<pos:position pos:line="2548" pos:column="43"/></name> <operator pos:line="2548" pos:column="44">&amp;&amp;<pos:position pos:line="2548" pos:column="54"/></operator> <name pos:line="2548" pos:column="47">elems<pos:position pos:line="2548" pos:column="52"/></name> <operator pos:line="2548" pos:column="53">instanceof<pos:position pos:line="2548" pos:column="63"/></operator> <name pos:line="2548" pos:column="64">List<pos:position pos:line="2548" pos:column="68"/></name></expr>)<pos:position pos:line="2548" pos:column="69"/></condition><then pos:line="2548" pos:column="69"> <block pos:line="2548" pos:column="70">{
            <expr_stmt><expr><operator pos:line="2549" pos:column="13">(<pos:position pos:line="2549" pos:column="14"/></operator><operator pos:line="2549" pos:column="14">(<pos:position pos:line="2549" pos:column="15"/></operator><name pos:line="2549" pos:column="15">MAssociation<pos:position pos:line="2549" pos:column="27"/></name><operator pos:line="2549" pos:column="27">)<pos:position pos:line="2549" pos:column="28"/></operator> <name pos:line="2549" pos:column="29">handle<pos:position pos:line="2549" pos:column="35"/></name><operator pos:line="2549" pos:column="35">)<pos:position pos:line="2549" pos:column="36"/></operator><operator pos:line="2549" pos:column="36">.<pos:position pos:line="2549" pos:column="37"/></operator><call><name pos:line="2549" pos:column="37">setConnections<pos:position pos:line="2549" pos:column="51"/></name><argument_list pos:line="2549" pos:column="51">(<argument><expr><operator pos:line="2549" pos:column="52">(<pos:position pos:line="2549" pos:column="53"/></operator><name pos:line="2549" pos:column="53">List<pos:position pos:line="2549" pos:column="57"/></name><operator pos:line="2549" pos:column="57">)<pos:position pos:line="2549" pos:column="58"/></operator> <name pos:line="2549" pos:column="59">elems<pos:position pos:line="2549" pos:column="64"/></name></expr></argument>)<pos:position pos:line="2549" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="2549" pos:column="66"/></expr_stmt>
            <return pos:line="2550" pos:column="13">return;<pos:position pos:line="2550" pos:column="20"/></return>
        }<pos:position pos:line="2551" pos:column="10"/></block></then></if>
        <if pos:line="2552" pos:column="9">if <condition pos:line="2552" pos:column="12">(<expr><name pos:line="2552" pos:column="13">handle<pos:position pos:line="2552" pos:column="19"/></name> <operator pos:line="2552" pos:column="20">instanceof<pos:position pos:line="2552" pos:column="30"/></operator> <name pos:line="2552" pos:column="31">MLink<pos:position pos:line="2552" pos:column="36"/></name> <operator pos:line="2552" pos:column="37">&amp;&amp;<pos:position pos:line="2552" pos:column="47"/></operator> <name pos:line="2552" pos:column="40">elems<pos:position pos:line="2552" pos:column="45"/></name> <operator pos:line="2552" pos:column="46">instanceof<pos:position pos:line="2552" pos:column="56"/></operator> <name pos:line="2552" pos:column="57">List<pos:position pos:line="2552" pos:column="61"/></name></expr>)<pos:position pos:line="2552" pos:column="62"/></condition><then pos:line="2552" pos:column="62"> <block pos:line="2552" pos:column="63">{
            <expr_stmt><expr><operator pos:line="2553" pos:column="13">(<pos:position pos:line="2553" pos:column="14"/></operator><operator pos:line="2553" pos:column="14">(<pos:position pos:line="2553" pos:column="15"/></operator><name pos:line="2553" pos:column="15">MLink<pos:position pos:line="2553" pos:column="20"/></name><operator pos:line="2553" pos:column="20">)<pos:position pos:line="2553" pos:column="21"/></operator> <name pos:line="2553" pos:column="22">handle<pos:position pos:line="2553" pos:column="28"/></name><operator pos:line="2553" pos:column="28">)<pos:position pos:line="2553" pos:column="29"/></operator><operator pos:line="2553" pos:column="29">.<pos:position pos:line="2553" pos:column="30"/></operator><call><name pos:line="2553" pos:column="30">setConnections<pos:position pos:line="2553" pos:column="44"/></name><argument_list pos:line="2553" pos:column="44">(<argument><expr><name pos:line="2553" pos:column="45">elems<pos:position pos:line="2553" pos:column="50"/></name></expr></argument>)<pos:position pos:line="2553" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="2553" pos:column="52"/></expr_stmt>
            <return pos:line="2554" pos:column="13">return;<pos:position pos:line="2554" pos:column="20"/></return>
        }<pos:position pos:line="2555" pos:column="10"/></block></then></if>
        <throw pos:line="2556" pos:column="9">throw <expr><operator pos:line="2556" pos:column="15">new<pos:position pos:line="2556" pos:column="18"/></operator> <call><name pos:line="2556" pos:column="19">IllegalArgumentException<pos:position pos:line="2556" pos:column="43"/></name><argument_list pos:line="2556" pos:column="43">(<argument><expr><literal type="string" pos:line="2556" pos:column="44">"handle: "<pos:position pos:line="2556" pos:column="54"/></literal> <operator pos:line="2556" pos:column="55">+<pos:position pos:line="2556" pos:column="56"/></operator> <name pos:line="2556" pos:column="57">handle<pos:position pos:line="2556" pos:column="63"/></name></expr></argument>)<pos:position pos:line="2556" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="2556" pos:column="65"/></throw>
    }<pos:position pos:line="2557" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="2559" pos:column="5">/**
     * Sets a default value of some parameter.
     *
     * @param handle is the parameter
     * @param expr is the expression
     */</comment>
    <function><specifier pos:line="2565" pos:column="5">public<pos:position pos:line="2565" pos:column="11"/></specifier> <type><name pos:line="2565" pos:column="12">void<pos:position pos:line="2565" pos:column="16"/></name></type> <name pos:line="2565" pos:column="17">setDefaultValue<pos:position pos:line="2565" pos:column="32"/></name><parameter_list pos:line="2565" pos:column="32">(<parameter><decl><type><name pos:line="2565" pos:column="33">Object<pos:position pos:line="2565" pos:column="39"/></name></type> <name pos:line="2565" pos:column="40">handle<pos:position pos:line="2565" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2565" pos:column="48">Object<pos:position pos:line="2565" pos:column="54"/></name></type> <name pos:line="2565" pos:column="55">expr<pos:position pos:line="2565" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="2565" pos:column="60"/></parameter_list> <block pos:line="2565" pos:column="61">{
        <if pos:line="2566" pos:column="9">if <condition pos:line="2566" pos:column="12">(<expr><name pos:line="2566" pos:column="13">handle<pos:position pos:line="2566" pos:column="19"/></name> <operator pos:line="2566" pos:column="20">instanceof<pos:position pos:line="2566" pos:column="30"/></operator> <name pos:line="2566" pos:column="31">MParameter<pos:position pos:line="2566" pos:column="41"/></name> <operator pos:line="2566" pos:column="42">&amp;&amp;<pos:position pos:line="2566" pos:column="52"/></operator> <name pos:line="2566" pos:column="45">expr<pos:position pos:line="2566" pos:column="49"/></name> <operator pos:line="2566" pos:column="50">instanceof<pos:position pos:line="2566" pos:column="60"/></operator> <name pos:line="2566" pos:column="61">MExpression<pos:position pos:line="2566" pos:column="72"/></name></expr>)<pos:position pos:line="2566" pos:column="73"/></condition><then pos:line="2566" pos:column="73"> <block pos:line="2566" pos:column="74">{
            <expr_stmt><expr><operator pos:line="2567" pos:column="13">(<pos:position pos:line="2567" pos:column="14"/></operator><operator pos:line="2567" pos:column="14">(<pos:position pos:line="2567" pos:column="15"/></operator><name pos:line="2567" pos:column="15">MParameter<pos:position pos:line="2567" pos:column="25"/></name><operator pos:line="2567" pos:column="25">)<pos:position pos:line="2567" pos:column="26"/></operator> <name pos:line="2567" pos:column="27">handle<pos:position pos:line="2567" pos:column="33"/></name><operator pos:line="2567" pos:column="33">)<pos:position pos:line="2567" pos:column="34"/></operator><operator pos:line="2567" pos:column="34">.<pos:position pos:line="2567" pos:column="35"/></operator><call><name pos:line="2567" pos:column="35">setDefaultValue<pos:position pos:line="2567" pos:column="50"/></name><argument_list pos:line="2567" pos:column="50">(<argument><expr><operator pos:line="2567" pos:column="51">(<pos:position pos:line="2567" pos:column="52"/></operator><name pos:line="2567" pos:column="52">MExpression<pos:position pos:line="2567" pos:column="63"/></name><operator pos:line="2567" pos:column="63">)<pos:position pos:line="2567" pos:column="64"/></operator> <name pos:line="2567" pos:column="65">expr<pos:position pos:line="2567" pos:column="69"/></name></expr></argument>)<pos:position pos:line="2567" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="2567" pos:column="71"/></expr_stmt>
            <return pos:line="2568" pos:column="13">return;<pos:position pos:line="2568" pos:column="20"/></return>
        }<pos:position pos:line="2569" pos:column="10"/></block></then></if>
        <throw pos:line="2570" pos:column="9">throw <expr><operator pos:line="2570" pos:column="15">new<pos:position pos:line="2570" pos:column="18"/></operator> <call><name pos:line="2570" pos:column="19">IllegalArgumentException<pos:position pos:line="2570" pos:column="43"/></name><argument_list pos:line="2570" pos:column="43">(<argument><expr><literal type="string" pos:line="2570" pos:column="44">"handle: "<pos:position pos:line="2570" pos:column="54"/></literal> <operator pos:line="2570" pos:column="55">+<pos:position pos:line="2570" pos:column="56"/></operator> <name pos:line="2570" pos:column="57">handle<pos:position pos:line="2570" pos:column="63"/></name>
                <operator pos:line="2571" pos:column="17">+<pos:position pos:line="2571" pos:column="18"/></operator> <literal type="string" pos:line="2571" pos:column="19">" or expr: "<pos:position pos:line="2571" pos:column="31"/></literal> <operator pos:line="2571" pos:column="32">+<pos:position pos:line="2571" pos:column="33"/></operator> <name pos:line="2571" pos:column="34">expr<pos:position pos:line="2571" pos:column="38"/></name></expr></argument>)<pos:position pos:line="2571" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="2571" pos:column="40"/></throw>
    }<pos:position pos:line="2572" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="2574" pos:column="5">/**
     * @param handle a generalization
     * @param discriminator the discriminator to set
     */</comment>
    <function><specifier pos:line="2578" pos:column="5">public<pos:position pos:line="2578" pos:column="11"/></specifier> <type><name pos:line="2578" pos:column="12">void<pos:position pos:line="2578" pos:column="16"/></name></type> <name pos:line="2578" pos:column="17">setDiscriminator<pos:position pos:line="2578" pos:column="33"/></name><parameter_list pos:line="2578" pos:column="33">(<parameter><decl><type><name pos:line="2578" pos:column="34">Object<pos:position pos:line="2578" pos:column="40"/></name></type> <name pos:line="2578" pos:column="41">handle<pos:position pos:line="2578" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2578" pos:column="49">String<pos:position pos:line="2578" pos:column="55"/></name></type> <name pos:line="2578" pos:column="56">discriminator<pos:position pos:line="2578" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="2578" pos:column="70"/></parameter_list> <block pos:line="2578" pos:column="71">{
        <if pos:line="2579" pos:column="9">if <condition pos:line="2579" pos:column="12">(<expr><name pos:line="2579" pos:column="13">handle<pos:position pos:line="2579" pos:column="19"/></name> <operator pos:line="2579" pos:column="20">instanceof<pos:position pos:line="2579" pos:column="30"/></operator> <name pos:line="2579" pos:column="31">MGeneralization<pos:position pos:line="2579" pos:column="46"/></name></expr>)<pos:position pos:line="2579" pos:column="47"/></condition><then pos:line="2579" pos:column="47"> <block pos:line="2579" pos:column="48">{
            <expr_stmt><expr><operator pos:line="2580" pos:column="13">(<pos:position pos:line="2580" pos:column="14"/></operator><operator pos:line="2580" pos:column="14">(<pos:position pos:line="2580" pos:column="15"/></operator><name pos:line="2580" pos:column="15">MGeneralization<pos:position pos:line="2580" pos:column="30"/></name><operator pos:line="2580" pos:column="30">)<pos:position pos:line="2580" pos:column="31"/></operator> <name pos:line="2580" pos:column="32">handle<pos:position pos:line="2580" pos:column="38"/></name><operator pos:line="2580" pos:column="38">)<pos:position pos:line="2580" pos:column="39"/></operator><operator pos:line="2580" pos:column="39">.<pos:position pos:line="2580" pos:column="40"/></operator><call><name pos:line="2580" pos:column="40">setDiscriminator<pos:position pos:line="2580" pos:column="56"/></name><argument_list pos:line="2580" pos:column="56">(<argument><expr><name pos:line="2580" pos:column="57">discriminator<pos:position pos:line="2580" pos:column="70"/></name></expr></argument>)<pos:position pos:line="2580" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="2580" pos:column="72"/></expr_stmt>
            <return pos:line="2581" pos:column="13">return;<pos:position pos:line="2581" pos:column="20"/></return>
        }<pos:position pos:line="2582" pos:column="10"/></block></then></if>
        <throw pos:line="2583" pos:column="9">throw <expr><operator pos:line="2583" pos:column="15">new<pos:position pos:line="2583" pos:column="18"/></operator> <call><name pos:line="2583" pos:column="19">IllegalArgumentException<pos:position pos:line="2583" pos:column="43"/></name><argument_list pos:line="2583" pos:column="43">(<argument><expr><literal type="string" pos:line="2583" pos:column="44">"handle: "<pos:position pos:line="2583" pos:column="54"/></literal> <operator pos:line="2583" pos:column="55">+<pos:position pos:line="2583" pos:column="56"/></operator> <name pos:line="2583" pos:column="57">handle<pos:position pos:line="2583" pos:column="63"/></name></expr></argument>)<pos:position pos:line="2583" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="2583" pos:column="65"/></throw>
    }<pos:position pos:line="2584" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="2586" pos:column="5">/**
     * Set the feature at the given position.
     *
     * @param elem The classifier to set.
     * @param i The position. Start with 0.
     * @param impl The feature to set.
     */</comment>
    <function><specifier pos:line="2593" pos:column="5">public<pos:position pos:line="2593" pos:column="11"/></specifier> <type><name pos:line="2593" pos:column="12">void<pos:position pos:line="2593" pos:column="16"/></name></type> <name pos:line="2593" pos:column="17">setFeature<pos:position pos:line="2593" pos:column="27"/></name><parameter_list pos:line="2593" pos:column="27">(<parameter><decl><type><name pos:line="2593" pos:column="28">Object<pos:position pos:line="2593" pos:column="34"/></name></type> <name pos:line="2593" pos:column="35">elem<pos:position pos:line="2593" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2593" pos:column="41">int<pos:position pos:line="2593" pos:column="44"/></name></type> <name pos:line="2593" pos:column="45">i<pos:position pos:line="2593" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2593" pos:column="48">Object<pos:position pos:line="2593" pos:column="54"/></name></type> <name pos:line="2593" pos:column="55">impl<pos:position pos:line="2593" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="2593" pos:column="60"/></parameter_list> <block pos:line="2593" pos:column="61">{
        <if pos:line="2594" pos:column="9">if <condition pos:line="2594" pos:column="12">(<expr><name pos:line="2594" pos:column="13">elem<pos:position pos:line="2594" pos:column="17"/></name> <operator pos:line="2594" pos:column="18">instanceof<pos:position pos:line="2594" pos:column="28"/></operator> <name pos:line="2594" pos:column="29">MClassifier<pos:position pos:line="2594" pos:column="40"/></name> <operator pos:line="2594" pos:column="41">&amp;&amp;<pos:position pos:line="2594" pos:column="51"/></operator> <name pos:line="2594" pos:column="44">impl<pos:position pos:line="2594" pos:column="48"/></name> <operator pos:line="2594" pos:column="49">instanceof<pos:position pos:line="2594" pos:column="59"/></operator> <name pos:line="2594" pos:column="60">MFeature<pos:position pos:line="2594" pos:column="68"/></name></expr>)<pos:position pos:line="2594" pos:column="69"/></condition><then pos:line="2594" pos:column="69"> <block pos:line="2594" pos:column="70">{
            <if pos:line="2595" pos:column="13">if <condition pos:line="2595" pos:column="16">(<expr><call><name><name pos:line="2595" pos:column="17">LOG<pos:position pos:line="2595" pos:column="20"/></name><operator pos:line="2595" pos:column="20">.<pos:position pos:line="2595" pos:column="21"/></operator><name pos:line="2595" pos:column="21">isInfoEnabled<pos:position pos:line="2595" pos:column="34"/></name></name><argument_list pos:line="2595" pos:column="34">()<pos:position pos:line="2595" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="2595" pos:column="37"/></condition><then pos:line="2595" pos:column="37"> <block pos:line="2595" pos:column="38">{
                <expr_stmt><expr><call><name><name pos:line="2596" pos:column="17">LOG<pos:position pos:line="2596" pos:column="20"/></name><operator pos:line="2596" pos:column="20">.<pos:position pos:line="2596" pos:column="21"/></operator><name pos:line="2596" pos:column="21">info<pos:position pos:line="2596" pos:column="25"/></name></name><argument_list pos:line="2596" pos:column="25">(<argument><expr><literal type="string" pos:line="2596" pos:column="26">"Setting the feature "<pos:position pos:line="2596" pos:column="48"/></literal> <operator pos:line="2596" pos:column="49">+<pos:position pos:line="2596" pos:column="50"/></operator> <name pos:line="2596" pos:column="51">impl<pos:position pos:line="2596" pos:column="55"/></name> <operator pos:line="2596" pos:column="56">+<pos:position pos:line="2596" pos:column="57"/></operator> <literal type="string" pos:line="2596" pos:column="58">" at "<pos:position pos:line="2596" pos:column="64"/></literal> <operator pos:line="2596" pos:column="65">+<pos:position pos:line="2596" pos:column="66"/></operator> <name pos:line="2596" pos:column="67">i<pos:position pos:line="2596" pos:column="68"/></name></expr></argument>)<pos:position pos:line="2596" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="2596" pos:column="70"/></expr_stmt>
            }<pos:position pos:line="2597" pos:column="14"/></block></then></if>
            <expr_stmt><expr><operator pos:line="2598" pos:column="13">(<pos:position pos:line="2598" pos:column="14"/></operator><operator pos:line="2598" pos:column="14">(<pos:position pos:line="2598" pos:column="15"/></operator><name pos:line="2598" pos:column="15">MClassifier<pos:position pos:line="2598" pos:column="26"/></name><operator pos:line="2598" pos:column="26">)<pos:position pos:line="2598" pos:column="27"/></operator> <name pos:line="2598" pos:column="28">elem<pos:position pos:line="2598" pos:column="32"/></name><operator pos:line="2598" pos:column="32">)<pos:position pos:line="2598" pos:column="33"/></operator><operator pos:line="2598" pos:column="33">.<pos:position pos:line="2598" pos:column="34"/></operator><call><name pos:line="2598" pos:column="34">setFeature<pos:position pos:line="2598" pos:column="44"/></name><argument_list pos:line="2598" pos:column="44">(<argument><expr><name pos:line="2598" pos:column="45">i<pos:position pos:line="2598" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="2598" pos:column="48">(<pos:position pos:line="2598" pos:column="49"/></operator><name pos:line="2598" pos:column="49">MFeature<pos:position pos:line="2598" pos:column="57"/></name><operator pos:line="2598" pos:column="57">)<pos:position pos:line="2598" pos:column="58"/></operator> <name pos:line="2598" pos:column="59">impl<pos:position pos:line="2598" pos:column="63"/></name></expr></argument>)<pos:position pos:line="2598" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="2598" pos:column="65"/></expr_stmt>
            <return pos:line="2599" pos:column="13">return;<pos:position pos:line="2599" pos:column="20"/></return>
        }<pos:position pos:line="2600" pos:column="10"/></block></then></if>

        <throw pos:line="2602" pos:column="9">throw <expr><operator pos:line="2602" pos:column="15">new<pos:position pos:line="2602" pos:column="18"/></operator> <call><name pos:line="2602" pos:column="19">IllegalArgumentException<pos:position pos:line="2602" pos:column="43"/></name><argument_list pos:line="2602" pos:column="43">(<argument><expr><literal type="string" pos:line="2602" pos:column="44">"elem: "<pos:position pos:line="2602" pos:column="52"/></literal> <operator pos:line="2602" pos:column="53">+<pos:position pos:line="2602" pos:column="54"/></operator> <name pos:line="2602" pos:column="55">elem<pos:position pos:line="2602" pos:column="59"/></name>
                <operator pos:line="2603" pos:column="17">+<pos:position pos:line="2603" pos:column="18"/></operator> <literal type="string" pos:line="2603" pos:column="19">" or impl: "<pos:position pos:line="2603" pos:column="31"/></literal> <operator pos:line="2603" pos:column="32">+<pos:position pos:line="2603" pos:column="33"/></operator> <name pos:line="2603" pos:column="34">impl<pos:position pos:line="2603" pos:column="38"/></name></expr></argument>)<pos:position pos:line="2603" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="2603" pos:column="40"/></throw>
    }<pos:position pos:line="2604" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="2606" pos:column="5">/**
     * Sets the features of some model element.
     *
     * @param handle the model element to set features to
     * @param features the features
     */</comment>
    <function><specifier pos:line="2612" pos:column="5">public<pos:position pos:line="2612" pos:column="11"/></specifier> <type><name pos:line="2612" pos:column="12">void<pos:position pos:line="2612" pos:column="16"/></name></type> <name pos:line="2612" pos:column="17">setFeatures<pos:position pos:line="2612" pos:column="28"/></name><parameter_list pos:line="2612" pos:column="28">(<parameter><decl><type><name pos:line="2612" pos:column="29">Object<pos:position pos:line="2612" pos:column="35"/></name></type> <name pos:line="2612" pos:column="36">handle<pos:position pos:line="2612" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2612" pos:column="44">Collection<pos:position pos:line="2612" pos:column="54"/></name></type> <name pos:line="2612" pos:column="55">features<pos:position pos:line="2612" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="2612" pos:column="64"/></parameter_list> <block pos:line="2612" pos:column="65">{
        <if pos:line="2613" pos:column="9">if <condition pos:line="2613" pos:column="12">(<expr><name pos:line="2613" pos:column="13">handle<pos:position pos:line="2613" pos:column="19"/></name> <operator pos:line="2613" pos:column="20">instanceof<pos:position pos:line="2613" pos:column="30"/></operator> <name pos:line="2613" pos:column="31">MClassifier<pos:position pos:line="2613" pos:column="42"/></name></expr>)<pos:position pos:line="2613" pos:column="43"/></condition><then pos:line="2613" pos:column="43"> <block pos:line="2613" pos:column="44">{
            <expr_stmt><expr><call><name><name pos:line="2614" pos:column="13">LOG<pos:position pos:line="2614" pos:column="16"/></name><operator pos:line="2614" pos:column="16">.<pos:position pos:line="2614" pos:column="17"/></operator><name pos:line="2614" pos:column="17">info<pos:position pos:line="2614" pos:column="21"/></name></name><argument_list pos:line="2614" pos:column="21">(<argument><expr><literal type="string" pos:line="2614" pos:column="22">"Setting the features collection"<pos:position pos:line="2614" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="2614" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="2614" pos:column="57"/></expr_stmt>
            <decl_stmt><decl><type><name pos:line="2615" pos:column="13">List<pos:position pos:line="2615" pos:column="17"/></name></type> <name pos:line="2615" pos:column="18">featuresList<pos:position pos:line="2615" pos:column="30"/></name> <init pos:line="2615" pos:column="31">= <expr><literal type="null" pos:line="2615" pos:column="33">null<pos:position pos:line="2615" pos:column="37"/></literal></expr></init></decl>;<pos:position pos:line="2615" pos:column="38"/></decl_stmt>
            <if pos:line="2616" pos:column="13">if <condition pos:line="2616" pos:column="16">(<expr><name pos:line="2616" pos:column="17">features<pos:position pos:line="2616" pos:column="25"/></name> <operator pos:line="2616" pos:column="26">instanceof<pos:position pos:line="2616" pos:column="36"/></operator> <name pos:line="2616" pos:column="37">List<pos:position pos:line="2616" pos:column="41"/></name></expr>)<pos:position pos:line="2616" pos:column="42"/></condition><then pos:line="2616" pos:column="42"> <block pos:line="2616" pos:column="43">{
                <expr_stmt><expr><name pos:line="2617" pos:column="17">featuresList<pos:position pos:line="2617" pos:column="29"/></name> <operator pos:line="2617" pos:column="30">=<pos:position pos:line="2617" pos:column="31"/></operator> <operator pos:line="2617" pos:column="32">(<pos:position pos:line="2617" pos:column="33"/></operator><name pos:line="2617" pos:column="33">List<pos:position pos:line="2617" pos:column="37"/></name><operator pos:line="2617" pos:column="37">)<pos:position pos:line="2617" pos:column="38"/></operator> <name pos:line="2617" pos:column="39">features<pos:position pos:line="2617" pos:column="47"/></name></expr>;<pos:position pos:line="2617" pos:column="48"/></expr_stmt>
            }<pos:position pos:line="2618" pos:column="14"/></block></then> <else pos:line="2618" pos:column="15">else <block pos:line="2618" pos:column="20">{
                <expr_stmt><expr><name pos:line="2619" pos:column="17">featuresList<pos:position pos:line="2619" pos:column="29"/></name> <operator pos:line="2619" pos:column="30">=<pos:position pos:line="2619" pos:column="31"/></operator> <operator pos:line="2619" pos:column="32">new<pos:position pos:line="2619" pos:column="35"/></operator> <call><name pos:line="2619" pos:column="36">ArrayList<pos:position pos:line="2619" pos:column="45"/></name><argument_list pos:line="2619" pos:column="45">(<argument><expr><name pos:line="2619" pos:column="46">features<pos:position pos:line="2619" pos:column="54"/></name></expr></argument>)<pos:position pos:line="2619" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="2619" pos:column="56"/></expr_stmt>
            }<pos:position pos:line="2620" pos:column="14"/></block></else></if>
            <expr_stmt><expr><operator pos:line="2621" pos:column="13">(<pos:position pos:line="2621" pos:column="14"/></operator><operator pos:line="2621" pos:column="14">(<pos:position pos:line="2621" pos:column="15"/></operator><name pos:line="2621" pos:column="15">MClassifier<pos:position pos:line="2621" pos:column="26"/></name><operator pos:line="2621" pos:column="26">)<pos:position pos:line="2621" pos:column="27"/></operator> <name pos:line="2621" pos:column="28">handle<pos:position pos:line="2621" pos:column="34"/></name><operator pos:line="2621" pos:column="34">)<pos:position pos:line="2621" pos:column="35"/></operator><operator pos:line="2621" pos:column="35">.<pos:position pos:line="2621" pos:column="36"/></operator><call><name pos:line="2621" pos:column="36">setFeatures<pos:position pos:line="2621" pos:column="47"/></name><argument_list pos:line="2621" pos:column="47">(<argument><expr><name pos:line="2621" pos:column="48">featuresList<pos:position pos:line="2621" pos:column="60"/></name></expr></argument>)<pos:position pos:line="2621" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="2621" pos:column="62"/></expr_stmt>
            <return pos:line="2622" pos:column="13">return;<pos:position pos:line="2622" pos:column="20"/></return>
        }<pos:position pos:line="2623" pos:column="10"/></block></then></if>
        <throw pos:line="2624" pos:column="9">throw <expr><operator pos:line="2624" pos:column="15">new<pos:position pos:line="2624" pos:column="18"/></operator> <call><name pos:line="2624" pos:column="19">IllegalArgumentException<pos:position pos:line="2624" pos:column="43"/></name><argument_list pos:line="2624" pos:column="43">(<argument><expr><literal type="string" pos:line="2624" pos:column="44">"handle: "<pos:position pos:line="2624" pos:column="54"/></literal> <operator pos:line="2624" pos:column="55">+<pos:position pos:line="2624" pos:column="56"/></operator> <name pos:line="2624" pos:column="57">handle<pos:position pos:line="2624" pos:column="63"/></name></expr></argument>)<pos:position pos:line="2624" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="2624" pos:column="65"/></throw>
    }<pos:position pos:line="2625" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="2627" pos:column="5">/**
     * Set the ImplementationLocation of the given ElementResidence
     * to the given Component.
     *
     * @param handle the ElementResidence
     * @param component the Component
     * @deprecated UML 1.3 only see setContainer
     */</comment>
    <function><specifier pos:line="2635" pos:column="5">public<pos:position pos:line="2635" pos:column="11"/></specifier> <type><name pos:line="2635" pos:column="12">void<pos:position pos:line="2635" pos:column="16"/></name></type> <name pos:line="2635" pos:column="17">setImplementationLocation<pos:position pos:line="2635" pos:column="42"/></name><parameter_list pos:line="2635" pos:column="42">(<parameter><decl><type><name pos:line="2635" pos:column="43">Object<pos:position pos:line="2635" pos:column="49"/></name></type> <name pos:line="2635" pos:column="50">handle<pos:position pos:line="2635" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2635" pos:column="58">Object<pos:position pos:line="2635" pos:column="64"/></name></type> <name pos:line="2635" pos:column="65">component<pos:position pos:line="2635" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="2635" pos:column="75"/></parameter_list> <block pos:line="2635" pos:column="76">{
        <expr_stmt><expr><call><name pos:line="2636" pos:column="9">setContainer<pos:position pos:line="2636" pos:column="21"/></name><argument_list pos:line="2636" pos:column="21">(<argument><expr><name pos:line="2636" pos:column="22">handle<pos:position pos:line="2636" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="2636" pos:column="30">component<pos:position pos:line="2636" pos:column="39"/></name></expr></argument>)<pos:position pos:line="2636" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="2636" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="2637" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="2639" pos:column="5">/**
     * Set the Container of the given ElementResidence to the given Component.
     *
     * @param handle
     *            the ElementResidence
     * @param component
     *            the Component
     */</comment>
    <function><specifier pos:line="2647" pos:column="5">public<pos:position pos:line="2647" pos:column="11"/></specifier> <type><name pos:line="2647" pos:column="12">void<pos:position pos:line="2647" pos:column="16"/></name></type> <name pos:line="2647" pos:column="17">setContainer<pos:position pos:line="2647" pos:column="29"/></name><parameter_list pos:line="2647" pos:column="29">(
        <parameter><decl><type><name pos:line="2648" pos:column="9">Object<pos:position pos:line="2648" pos:column="15"/></name></type> <name pos:line="2648" pos:column="16">handle<pos:position pos:line="2648" pos:column="22"/></name></decl></parameter>,
        <parameter><decl><type><name pos:line="2649" pos:column="9">Object<pos:position pos:line="2649" pos:column="15"/></name></type> <name pos:line="2649" pos:column="16">component<pos:position pos:line="2649" pos:column="25"/></name></decl></parameter>)<pos:position pos:line="2649" pos:column="26"/></parameter_list> <block pos:line="2649" pos:column="27">{
        <if pos:line="2650" pos:column="9">if <condition pos:line="2650" pos:column="12">(<expr><name pos:line="2650" pos:column="13">handle<pos:position pos:line="2650" pos:column="19"/></name> <operator pos:line="2650" pos:column="20">instanceof<pos:position pos:line="2650" pos:column="30"/></operator> <name pos:line="2650" pos:column="31">MElementResidence<pos:position pos:line="2650" pos:column="48"/></name>
                <operator pos:line="2651" pos:column="17">&amp;&amp;<pos:position pos:line="2651" pos:column="27"/></operator> <operator pos:line="2651" pos:column="20">(<pos:position pos:line="2651" pos:column="21"/></operator><name pos:line="2651" pos:column="21">component<pos:position pos:line="2651" pos:column="30"/></name> <operator pos:line="2651" pos:column="31">==<pos:position pos:line="2651" pos:column="33"/></operator> <literal type="null" pos:line="2651" pos:column="34">null<pos:position pos:line="2651" pos:column="38"/></literal> <operator pos:line="2651" pos:column="39">||<pos:position pos:line="2651" pos:column="41"/></operator> <name pos:line="2651" pos:column="42">component<pos:position pos:line="2651" pos:column="51"/></name> <operator pos:line="2651" pos:column="52">instanceof<pos:position pos:line="2651" pos:column="62"/></operator> <name pos:line="2651" pos:column="63">MComponent<pos:position pos:line="2651" pos:column="73"/></name><operator pos:line="2651" pos:column="73">)<pos:position pos:line="2651" pos:column="74"/></operator></expr>)<pos:position pos:line="2651" pos:column="75"/></condition><then pos:line="2651" pos:column="75"> <block pos:line="2651" pos:column="76">{
            <expr_stmt><expr><operator pos:line="2652" pos:column="13">(<pos:position pos:line="2652" pos:column="14"/></operator><operator pos:line="2652" pos:column="14">(<pos:position pos:line="2652" pos:column="15"/></operator><name pos:line="2652" pos:column="15">MElementResidence<pos:position pos:line="2652" pos:column="32"/></name><operator pos:line="2652" pos:column="32">)<pos:position pos:line="2652" pos:column="33"/></operator> <name pos:line="2652" pos:column="34">handle<pos:position pos:line="2652" pos:column="40"/></name><operator pos:line="2652" pos:column="40">)<pos:position pos:line="2652" pos:column="41"/></operator><operator pos:line="2652" pos:column="41">.<pos:position pos:line="2652" pos:column="42"/></operator><call><name pos:line="2652" pos:column="42">setImplementationLocation<pos:position pos:line="2652" pos:column="67"/></name><argument_list pos:line="2652" pos:column="67">(
                <argument><expr><operator pos:line="2653" pos:column="17">(<pos:position pos:line="2653" pos:column="18"/></operator><name pos:line="2653" pos:column="18">MComponent<pos:position pos:line="2653" pos:column="28"/></name><operator pos:line="2653" pos:column="28">)<pos:position pos:line="2653" pos:column="29"/></operator> <name pos:line="2653" pos:column="30">component<pos:position pos:line="2653" pos:column="39"/></name></expr></argument>)<pos:position pos:line="2653" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="2653" pos:column="41"/></expr_stmt>
            <return pos:line="2654" pos:column="13">return;<pos:position pos:line="2654" pos:column="20"/></return>
        }<pos:position pos:line="2655" pos:column="10"/></block></then></if>
        <throw pos:line="2656" pos:column="9">throw <expr><operator pos:line="2656" pos:column="15">new<pos:position pos:line="2656" pos:column="18"/></operator> <call><name pos:line="2656" pos:column="19">IllegalArgumentException<pos:position pos:line="2656" pos:column="43"/></name><argument_list pos:line="2656" pos:column="43">(<argument><expr><literal type="string" pos:line="2656" pos:column="44">"handle: "<pos:position pos:line="2656" pos:column="54"/></literal> <operator pos:line="2656" pos:column="55">+<pos:position pos:line="2656" pos:column="56"/></operator> <name pos:line="2656" pos:column="57">handle<pos:position pos:line="2656" pos:column="63"/></name>
                <operator pos:line="2657" pos:column="17">+<pos:position pos:line="2657" pos:column="18"/></operator> <literal type="string" pos:line="2657" pos:column="19">" or component: "<pos:position pos:line="2657" pos:column="36"/></literal> <operator pos:line="2657" pos:column="37">+<pos:position pos:line="2657" pos:column="38"/></operator> <name pos:line="2657" pos:column="39">component<pos:position pos:line="2657" pos:column="48"/></name></expr></argument>)<pos:position pos:line="2657" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="2657" pos:column="50"/></throw>
    }<pos:position pos:line="2658" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="2660" pos:column="5">/**
     * Sets an initial value.
     *
     * @param at attribute that we set the initial value of
     * @param expr that is the value to set. Can be &lt;code&gt;null&lt;/code&gt;.
     */</comment>
    <function><specifier pos:line="2666" pos:column="5">public<pos:position pos:line="2666" pos:column="11"/></specifier> <type><name pos:line="2666" pos:column="12">void<pos:position pos:line="2666" pos:column="16"/></name></type> <name pos:line="2666" pos:column="17">setInitialValue<pos:position pos:line="2666" pos:column="32"/></name><parameter_list pos:line="2666" pos:column="32">(<parameter><decl><type><name pos:line="2666" pos:column="33">Object<pos:position pos:line="2666" pos:column="39"/></name></type> <name pos:line="2666" pos:column="40">at<pos:position pos:line="2666" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2666" pos:column="44">Object<pos:position pos:line="2666" pos:column="50"/></name></type> <name pos:line="2666" pos:column="51">expr<pos:position pos:line="2666" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="2666" pos:column="56"/></parameter_list> <block pos:line="2666" pos:column="57">{
        <if pos:line="2667" pos:column="9">if <condition pos:line="2667" pos:column="12">(<expr><name pos:line="2667" pos:column="13">at<pos:position pos:line="2667" pos:column="15"/></name> <operator pos:line="2667" pos:column="16">instanceof<pos:position pos:line="2667" pos:column="26"/></operator> <name pos:line="2667" pos:column="27">MAttribute<pos:position pos:line="2667" pos:column="37"/></name>
                <operator pos:line="2668" pos:column="17">&amp;&amp;<pos:position pos:line="2668" pos:column="27"/></operator> <operator pos:line="2668" pos:column="20">(<pos:position pos:line="2668" pos:column="21"/></operator><name pos:line="2668" pos:column="21">expr<pos:position pos:line="2668" pos:column="25"/></name> <operator pos:line="2668" pos:column="26">==<pos:position pos:line="2668" pos:column="28"/></operator> <literal type="null" pos:line="2668" pos:column="29">null<pos:position pos:line="2668" pos:column="33"/></literal> <operator pos:line="2668" pos:column="34">||<pos:position pos:line="2668" pos:column="36"/></operator> <name pos:line="2668" pos:column="37">expr<pos:position pos:line="2668" pos:column="41"/></name> <operator pos:line="2668" pos:column="42">instanceof<pos:position pos:line="2668" pos:column="52"/></operator> <name pos:line="2668" pos:column="53">MExpression<pos:position pos:line="2668" pos:column="64"/></name><operator pos:line="2668" pos:column="64">)<pos:position pos:line="2668" pos:column="65"/></operator></expr>)<pos:position pos:line="2668" pos:column="66"/></condition><then pos:line="2668" pos:column="66"> <block pos:line="2668" pos:column="67">{
            <expr_stmt><expr><operator pos:line="2669" pos:column="13">(<pos:position pos:line="2669" pos:column="14"/></operator><operator pos:line="2669" pos:column="14">(<pos:position pos:line="2669" pos:column="15"/></operator><name pos:line="2669" pos:column="15">MAttribute<pos:position pos:line="2669" pos:column="25"/></name><operator pos:line="2669" pos:column="25">)<pos:position pos:line="2669" pos:column="26"/></operator> <name pos:line="2669" pos:column="27">at<pos:position pos:line="2669" pos:column="29"/></name><operator pos:line="2669" pos:column="29">)<pos:position pos:line="2669" pos:column="30"/></operator><operator pos:line="2669" pos:column="30">.<pos:position pos:line="2669" pos:column="31"/></operator><call><name pos:line="2669" pos:column="31">setInitialValue<pos:position pos:line="2669" pos:column="46"/></name><argument_list pos:line="2669" pos:column="46">(<argument><expr><operator pos:line="2669" pos:column="47">(<pos:position pos:line="2669" pos:column="48"/></operator><name pos:line="2669" pos:column="48">MExpression<pos:position pos:line="2669" pos:column="59"/></name><operator pos:line="2669" pos:column="59">)<pos:position pos:line="2669" pos:column="60"/></operator> <name pos:line="2669" pos:column="61">expr<pos:position pos:line="2669" pos:column="65"/></name></expr></argument>)<pos:position pos:line="2669" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="2669" pos:column="67"/></expr_stmt>
            <return pos:line="2670" pos:column="13">return;<pos:position pos:line="2670" pos:column="20"/></return>
        }<pos:position pos:line="2671" pos:column="10"/></block></then></if>
        <throw pos:line="2672" pos:column="9">throw <expr><operator pos:line="2672" pos:column="15">new<pos:position pos:line="2672" pos:column="18"/></operator> <call><name pos:line="2672" pos:column="19">IllegalArgumentException<pos:position pos:line="2672" pos:column="43"/></name><argument_list pos:line="2672" pos:column="43">(<argument><expr><literal type="string" pos:line="2672" pos:column="44">"at: "<pos:position pos:line="2672" pos:column="50"/></literal> <operator pos:line="2672" pos:column="51">+<pos:position pos:line="2672" pos:column="52"/></operator> <name pos:line="2672" pos:column="53">at<pos:position pos:line="2672" pos:column="55"/></name> <operator pos:line="2672" pos:column="56">+<pos:position pos:line="2672" pos:column="57"/></operator> <literal type="string" pos:line="2672" pos:column="58">" or expr: "<pos:position pos:line="2672" pos:column="70"/></literal> <operator pos:line="2672" pos:column="71">+<pos:position pos:line="2672" pos:column="72"/></operator> <name pos:line="2672" pos:column="73">expr<pos:position pos:line="2672" pos:column="77"/></name></expr></argument>)<pos:position pos:line="2672" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="2672" pos:column="79"/></throw>
    }<pos:position pos:line="2673" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="2675" pos:column="5">/**
     * Set some parameters kind.
     *
     * @param handle is the parameter
     * @param kind is the directionkind
     */</comment>
    <function><specifier pos:line="2681" pos:column="5">public<pos:position pos:line="2681" pos:column="11"/></specifier> <type><name pos:line="2681" pos:column="12">void<pos:position pos:line="2681" pos:column="16"/></name></type> <name pos:line="2681" pos:column="17">setKind<pos:position pos:line="2681" pos:column="24"/></name><parameter_list pos:line="2681" pos:column="24">(<parameter><decl><type><name pos:line="2681" pos:column="25">Object<pos:position pos:line="2681" pos:column="31"/></name></type> <name pos:line="2681" pos:column="32">handle<pos:position pos:line="2681" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2681" pos:column="40">Object<pos:position pos:line="2681" pos:column="46"/></name></type> <name pos:line="2681" pos:column="47">kind<pos:position pos:line="2681" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="2681" pos:column="52"/></parameter_list> <block pos:line="2681" pos:column="53">{
        <if pos:line="2682" pos:column="9">if <condition pos:line="2682" pos:column="12">(<expr><name pos:line="2682" pos:column="13">handle<pos:position pos:line="2682" pos:column="19"/></name> <operator pos:line="2682" pos:column="20">instanceof<pos:position pos:line="2682" pos:column="30"/></operator> <name pos:line="2682" pos:column="31">MParameter<pos:position pos:line="2682" pos:column="41"/></name>
            <operator pos:line="2683" pos:column="13">&amp;&amp;<pos:position pos:line="2683" pos:column="23"/></operator> <name pos:line="2683" pos:column="16">kind<pos:position pos:line="2683" pos:column="20"/></name> <operator pos:line="2683" pos:column="21">instanceof<pos:position pos:line="2683" pos:column="31"/></operator> <name pos:line="2683" pos:column="32">MParameterDirectionKind<pos:position pos:line="2683" pos:column="55"/></name></expr>)<pos:position pos:line="2683" pos:column="56"/></condition><then pos:line="2683" pos:column="56"> <block pos:line="2683" pos:column="57">{
            <expr_stmt><expr><operator pos:line="2684" pos:column="13">(<pos:position pos:line="2684" pos:column="14"/></operator><operator pos:line="2684" pos:column="14">(<pos:position pos:line="2684" pos:column="15"/></operator><name pos:line="2684" pos:column="15">MParameter<pos:position pos:line="2684" pos:column="25"/></name><operator pos:line="2684" pos:column="25">)<pos:position pos:line="2684" pos:column="26"/></operator> <name pos:line="2684" pos:column="27">handle<pos:position pos:line="2684" pos:column="33"/></name><operator pos:line="2684" pos:column="33">)<pos:position pos:line="2684" pos:column="34"/></operator><operator pos:line="2684" pos:column="34">.<pos:position pos:line="2684" pos:column="35"/></operator><call><name pos:line="2684" pos:column="35">setKind<pos:position pos:line="2684" pos:column="42"/></name><argument_list pos:line="2684" pos:column="42">(<argument><expr><operator pos:line="2684" pos:column="43">(<pos:position pos:line="2684" pos:column="44"/></operator><name pos:line="2684" pos:column="44">MParameterDirectionKind<pos:position pos:line="2684" pos:column="67"/></name><operator pos:line="2684" pos:column="67">)<pos:position pos:line="2684" pos:column="68"/></operator> <name pos:line="2684" pos:column="69">kind<pos:position pos:line="2684" pos:column="73"/></name></expr></argument>)<pos:position pos:line="2684" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="2684" pos:column="75"/></expr_stmt>
            <return pos:line="2685" pos:column="13">return;<pos:position pos:line="2685" pos:column="20"/></return>
        }<pos:position pos:line="2686" pos:column="10"/></block></then></if>
        <if pos:line="2687" pos:column="9">if <condition pos:line="2687" pos:column="12">(<expr><name pos:line="2687" pos:column="13">handle<pos:position pos:line="2687" pos:column="19"/></name> <operator pos:line="2687" pos:column="20">instanceof<pos:position pos:line="2687" pos:column="30"/></operator> <name pos:line="2687" pos:column="31">MPseudostate<pos:position pos:line="2687" pos:column="43"/></name>
            <operator pos:line="2688" pos:column="13">&amp;&amp;<pos:position pos:line="2688" pos:column="23"/></operator> <name pos:line="2688" pos:column="16">kind<pos:position pos:line="2688" pos:column="20"/></name> <operator pos:line="2688" pos:column="21">instanceof<pos:position pos:line="2688" pos:column="31"/></operator> <name pos:line="2688" pos:column="32">MPseudostateKind<pos:position pos:line="2688" pos:column="48"/></name></expr>)<pos:position pos:line="2688" pos:column="49"/></condition><then pos:line="2688" pos:column="49"> <block pos:line="2688" pos:column="50">{
            <expr_stmt><expr><operator pos:line="2689" pos:column="13">(<pos:position pos:line="2689" pos:column="14"/></operator><operator pos:line="2689" pos:column="14">(<pos:position pos:line="2689" pos:column="15"/></operator><name pos:line="2689" pos:column="15">MPseudostate<pos:position pos:line="2689" pos:column="27"/></name><operator pos:line="2689" pos:column="27">)<pos:position pos:line="2689" pos:column="28"/></operator> <name pos:line="2689" pos:column="29">handle<pos:position pos:line="2689" pos:column="35"/></name><operator pos:line="2689" pos:column="35">)<pos:position pos:line="2689" pos:column="36"/></operator><operator pos:line="2689" pos:column="36">.<pos:position pos:line="2689" pos:column="37"/></operator><call><name pos:line="2689" pos:column="37">setKind<pos:position pos:line="2689" pos:column="44"/></name><argument_list pos:line="2689" pos:column="44">(<argument><expr><operator pos:line="2689" pos:column="45">(<pos:position pos:line="2689" pos:column="46"/></operator><name pos:line="2689" pos:column="46">MPseudostateKind<pos:position pos:line="2689" pos:column="62"/></name><operator pos:line="2689" pos:column="62">)<pos:position pos:line="2689" pos:column="63"/></operator> <name pos:line="2689" pos:column="64">kind<pos:position pos:line="2689" pos:column="68"/></name></expr></argument>)<pos:position pos:line="2689" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="2689" pos:column="70"/></expr_stmt>
            <return pos:line="2690" pos:column="13">return;<pos:position pos:line="2690" pos:column="20"/></return>
        }<pos:position pos:line="2691" pos:column="10"/></block></then></if>
        <throw pos:line="2692" pos:column="9">throw <expr><operator pos:line="2692" pos:column="15">new<pos:position pos:line="2692" pos:column="18"/></operator> <call><name pos:line="2692" pos:column="19">IllegalArgumentException<pos:position pos:line="2692" pos:column="43"/></name><argument_list pos:line="2692" pos:column="43">(<argument><expr><literal type="string" pos:line="2692" pos:column="44">"handle: "<pos:position pos:line="2692" pos:column="54"/></literal> <operator pos:line="2692" pos:column="55">+<pos:position pos:line="2692" pos:column="56"/></operator> <name pos:line="2692" pos:column="57">handle<pos:position pos:line="2692" pos:column="63"/></name>
                <operator pos:line="2693" pos:column="17">+<pos:position pos:line="2693" pos:column="18"/></operator> <literal type="string" pos:line="2693" pos:column="19">" or kind: "<pos:position pos:line="2693" pos:column="31"/></literal> <operator pos:line="2693" pos:column="32">+<pos:position pos:line="2693" pos:column="33"/></operator> <name pos:line="2693" pos:column="34">kind<pos:position pos:line="2693" pos:column="38"/></name></expr></argument>)<pos:position pos:line="2693" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="2693" pos:column="40"/></throw>
    }<pos:position pos:line="2694" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="2696" pos:column="5">/**
     * Set some parameters kind to 'in'.
     *
     * @param handle is the parameter
     */</comment>
    <function><specifier pos:line="2701" pos:column="5">public<pos:position pos:line="2701" pos:column="11"/></specifier> <type><name pos:line="2701" pos:column="12">void<pos:position pos:line="2701" pos:column="16"/></name></type> <name pos:line="2701" pos:column="17">setKindToIn<pos:position pos:line="2701" pos:column="28"/></name><parameter_list pos:line="2701" pos:column="28">(<parameter><decl><type><name pos:line="2701" pos:column="29">Object<pos:position pos:line="2701" pos:column="35"/></name></type> <name pos:line="2701" pos:column="36">handle<pos:position pos:line="2701" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="2701" pos:column="43"/></parameter_list> <block pos:line="2701" pos:column="44">{
        <if pos:line="2702" pos:column="9">if <condition pos:line="2702" pos:column="12">(<expr><name pos:line="2702" pos:column="13">handle<pos:position pos:line="2702" pos:column="19"/></name> <operator pos:line="2702" pos:column="20">instanceof<pos:position pos:line="2702" pos:column="30"/></operator> <name pos:line="2702" pos:column="31">MParameter<pos:position pos:line="2702" pos:column="41"/></name></expr>)<pos:position pos:line="2702" pos:column="42"/></condition><then pos:line="2702" pos:column="42"> <block pos:line="2702" pos:column="43">{
            <expr_stmt><expr><operator pos:line="2703" pos:column="13">(<pos:position pos:line="2703" pos:column="14"/></operator><operator pos:line="2703" pos:column="14">(<pos:position pos:line="2703" pos:column="15"/></operator><name pos:line="2703" pos:column="15">MParameter<pos:position pos:line="2703" pos:column="25"/></name><operator pos:line="2703" pos:column="25">)<pos:position pos:line="2703" pos:column="26"/></operator> <name pos:line="2703" pos:column="27">handle<pos:position pos:line="2703" pos:column="33"/></name><operator pos:line="2703" pos:column="33">)<pos:position pos:line="2703" pos:column="34"/></operator><operator pos:line="2703" pos:column="34">.<pos:position pos:line="2703" pos:column="35"/></operator><call><name pos:line="2703" pos:column="35">setKind<pos:position pos:line="2703" pos:column="42"/></name><argument_list pos:line="2703" pos:column="42">(<argument><expr><name><name pos:line="2703" pos:column="43">MParameterDirectionKind<pos:position pos:line="2703" pos:column="66"/></name><operator pos:line="2703" pos:column="66">.<pos:position pos:line="2703" pos:column="67"/></operator><name pos:line="2703" pos:column="67">IN<pos:position pos:line="2703" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="2703" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="2703" pos:column="71"/></expr_stmt>
            <return pos:line="2704" pos:column="13">return;<pos:position pos:line="2704" pos:column="20"/></return>
        }<pos:position pos:line="2705" pos:column="10"/></block></then></if>
        <throw pos:line="2706" pos:column="9">throw <expr><operator pos:line="2706" pos:column="15">new<pos:position pos:line="2706" pos:column="18"/></operator> <call><name pos:line="2706" pos:column="19">IllegalArgumentException<pos:position pos:line="2706" pos:column="43"/></name><argument_list pos:line="2706" pos:column="43">(<argument><expr><literal type="string" pos:line="2706" pos:column="44">"handle: "<pos:position pos:line="2706" pos:column="54"/></literal> <operator pos:line="2706" pos:column="55">+<pos:position pos:line="2706" pos:column="56"/></operator> <name pos:line="2706" pos:column="57">handle<pos:position pos:line="2706" pos:column="63"/></name></expr></argument>)<pos:position pos:line="2706" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="2706" pos:column="65"/></throw>
    }<pos:position pos:line="2707" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="2709" pos:column="5">/**
     * Set some parameters kind to 'in/out'.
     *
     * @param handle is the parameter
     */</comment>
    <function><specifier pos:line="2714" pos:column="5">public<pos:position pos:line="2714" pos:column="11"/></specifier> <type><name pos:line="2714" pos:column="12">void<pos:position pos:line="2714" pos:column="16"/></name></type> <name pos:line="2714" pos:column="17">setKindToInOut<pos:position pos:line="2714" pos:column="31"/></name><parameter_list pos:line="2714" pos:column="31">(<parameter><decl><type><name pos:line="2714" pos:column="32">Object<pos:position pos:line="2714" pos:column="38"/></name></type> <name pos:line="2714" pos:column="39">handle<pos:position pos:line="2714" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="2714" pos:column="46"/></parameter_list> <block pos:line="2714" pos:column="47">{
        <if pos:line="2715" pos:column="9">if <condition pos:line="2715" pos:column="12">(<expr><name pos:line="2715" pos:column="13">handle<pos:position pos:line="2715" pos:column="19"/></name> <operator pos:line="2715" pos:column="20">instanceof<pos:position pos:line="2715" pos:column="30"/></operator> <name pos:line="2715" pos:column="31">MParameter<pos:position pos:line="2715" pos:column="41"/></name></expr>)<pos:position pos:line="2715" pos:column="42"/></condition><then pos:line="2715" pos:column="42"> <block pos:line="2715" pos:column="43">{
            <expr_stmt><expr><operator pos:line="2716" pos:column="13">(<pos:position pos:line="2716" pos:column="14"/></operator><operator pos:line="2716" pos:column="14">(<pos:position pos:line="2716" pos:column="15"/></operator><name pos:line="2716" pos:column="15">MParameter<pos:position pos:line="2716" pos:column="25"/></name><operator pos:line="2716" pos:column="25">)<pos:position pos:line="2716" pos:column="26"/></operator> <name pos:line="2716" pos:column="27">handle<pos:position pos:line="2716" pos:column="33"/></name><operator pos:line="2716" pos:column="33">)<pos:position pos:line="2716" pos:column="34"/></operator><operator pos:line="2716" pos:column="34">.<pos:position pos:line="2716" pos:column="35"/></operator><call><name pos:line="2716" pos:column="35">setKind<pos:position pos:line="2716" pos:column="42"/></name><argument_list pos:line="2716" pos:column="42">(<argument><expr><name><name pos:line="2716" pos:column="43">MParameterDirectionKind<pos:position pos:line="2716" pos:column="66"/></name><operator pos:line="2716" pos:column="66">.<pos:position pos:line="2716" pos:column="67"/></operator><name pos:line="2716" pos:column="67">INOUT<pos:position pos:line="2716" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="2716" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="2716" pos:column="74"/></expr_stmt>
            <return pos:line="2717" pos:column="13">return;<pos:position pos:line="2717" pos:column="20"/></return>
        }<pos:position pos:line="2718" pos:column="10"/></block></then></if>
        <throw pos:line="2719" pos:column="9">throw <expr><operator pos:line="2719" pos:column="15">new<pos:position pos:line="2719" pos:column="18"/></operator> <call><name pos:line="2719" pos:column="19">IllegalArgumentException<pos:position pos:line="2719" pos:column="43"/></name><argument_list pos:line="2719" pos:column="43">(<argument><expr><literal type="string" pos:line="2719" pos:column="44">"handle: "<pos:position pos:line="2719" pos:column="54"/></literal> <operator pos:line="2719" pos:column="55">+<pos:position pos:line="2719" pos:column="56"/></operator> <name pos:line="2719" pos:column="57">handle<pos:position pos:line="2719" pos:column="63"/></name></expr></argument>)<pos:position pos:line="2719" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="2719" pos:column="65"/></throw>
    }<pos:position pos:line="2720" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="2722" pos:column="5">/**
     * Set some parameters kind to 'out'.
     *
     * @param handle is the parameter
     */</comment>
    <function><specifier pos:line="2727" pos:column="5">public<pos:position pos:line="2727" pos:column="11"/></specifier> <type><name pos:line="2727" pos:column="12">void<pos:position pos:line="2727" pos:column="16"/></name></type> <name pos:line="2727" pos:column="17">setKindToOut<pos:position pos:line="2727" pos:column="29"/></name><parameter_list pos:line="2727" pos:column="29">(<parameter><decl><type><name pos:line="2727" pos:column="30">Object<pos:position pos:line="2727" pos:column="36"/></name></type> <name pos:line="2727" pos:column="37">handle<pos:position pos:line="2727" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="2727" pos:column="44"/></parameter_list> <block pos:line="2727" pos:column="45">{
        <if pos:line="2728" pos:column="9">if <condition pos:line="2728" pos:column="12">(<expr><name pos:line="2728" pos:column="13">handle<pos:position pos:line="2728" pos:column="19"/></name> <operator pos:line="2728" pos:column="20">instanceof<pos:position pos:line="2728" pos:column="30"/></operator> <name pos:line="2728" pos:column="31">MParameter<pos:position pos:line="2728" pos:column="41"/></name></expr>)<pos:position pos:line="2728" pos:column="42"/></condition><then pos:line="2728" pos:column="42"> <block pos:line="2728" pos:column="43">{
            <expr_stmt><expr><operator pos:line="2729" pos:column="13">(<pos:position pos:line="2729" pos:column="14"/></operator><operator pos:line="2729" pos:column="14">(<pos:position pos:line="2729" pos:column="15"/></operator><name pos:line="2729" pos:column="15">MParameter<pos:position pos:line="2729" pos:column="25"/></name><operator pos:line="2729" pos:column="25">)<pos:position pos:line="2729" pos:column="26"/></operator> <name pos:line="2729" pos:column="27">handle<pos:position pos:line="2729" pos:column="33"/></name><operator pos:line="2729" pos:column="33">)<pos:position pos:line="2729" pos:column="34"/></operator><operator pos:line="2729" pos:column="34">.<pos:position pos:line="2729" pos:column="35"/></operator><call><name pos:line="2729" pos:column="35">setKind<pos:position pos:line="2729" pos:column="42"/></name><argument_list pos:line="2729" pos:column="42">(<argument><expr><name><name pos:line="2729" pos:column="43">MParameterDirectionKind<pos:position pos:line="2729" pos:column="66"/></name><operator pos:line="2729" pos:column="66">.<pos:position pos:line="2729" pos:column="67"/></operator><name pos:line="2729" pos:column="67">OUT<pos:position pos:line="2729" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="2729" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="2729" pos:column="72"/></expr_stmt>
            <return pos:line="2730" pos:column="13">return;<pos:position pos:line="2730" pos:column="20"/></return>
        }<pos:position pos:line="2731" pos:column="10"/></block></then></if>
        <throw pos:line="2732" pos:column="9">throw <expr><operator pos:line="2732" pos:column="15">new<pos:position pos:line="2732" pos:column="18"/></operator> <call><name pos:line="2732" pos:column="19">IllegalArgumentException<pos:position pos:line="2732" pos:column="43"/></name><argument_list pos:line="2732" pos:column="43">(<argument><expr><literal type="string" pos:line="2732" pos:column="44">"handle: "<pos:position pos:line="2732" pos:column="54"/></literal> <operator pos:line="2732" pos:column="55">+<pos:position pos:line="2732" pos:column="56"/></operator> <name pos:line="2732" pos:column="57">handle<pos:position pos:line="2732" pos:column="63"/></name></expr></argument>)<pos:position pos:line="2732" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="2732" pos:column="65"/></throw>
    }<pos:position pos:line="2733" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="2735" pos:column="5">/**
     * Set some parameters kind to 'return'.
     *
     * @param handle is the parameter
     */</comment>
    <function><specifier pos:line="2740" pos:column="5">public<pos:position pos:line="2740" pos:column="11"/></specifier> <type><name pos:line="2740" pos:column="12">void<pos:position pos:line="2740" pos:column="16"/></name></type> <name pos:line="2740" pos:column="17">setKindToReturn<pos:position pos:line="2740" pos:column="32"/></name><parameter_list pos:line="2740" pos:column="32">(<parameter><decl><type><name pos:line="2740" pos:column="33">Object<pos:position pos:line="2740" pos:column="39"/></name></type> <name pos:line="2740" pos:column="40">handle<pos:position pos:line="2740" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="2740" pos:column="47"/></parameter_list> <block pos:line="2740" pos:column="48">{
        <if pos:line="2741" pos:column="9">if <condition pos:line="2741" pos:column="12">(<expr><name pos:line="2741" pos:column="13">handle<pos:position pos:line="2741" pos:column="19"/></name> <operator pos:line="2741" pos:column="20">instanceof<pos:position pos:line="2741" pos:column="30"/></operator> <name pos:line="2741" pos:column="31">MParameter<pos:position pos:line="2741" pos:column="41"/></name></expr>)<pos:position pos:line="2741" pos:column="42"/></condition><then pos:line="2741" pos:column="42"> <block pos:line="2741" pos:column="43">{
            <expr_stmt><expr><operator pos:line="2742" pos:column="13">(<pos:position pos:line="2742" pos:column="14"/></operator><operator pos:line="2742" pos:column="14">(<pos:position pos:line="2742" pos:column="15"/></operator><name pos:line="2742" pos:column="15">MParameter<pos:position pos:line="2742" pos:column="25"/></name><operator pos:line="2742" pos:column="25">)<pos:position pos:line="2742" pos:column="26"/></operator> <name pos:line="2742" pos:column="27">handle<pos:position pos:line="2742" pos:column="33"/></name><operator pos:line="2742" pos:column="33">)<pos:position pos:line="2742" pos:column="34"/></operator><operator pos:line="2742" pos:column="34">.<pos:position pos:line="2742" pos:column="35"/></operator><call><name pos:line="2742" pos:column="35">setKind<pos:position pos:line="2742" pos:column="42"/></name><argument_list pos:line="2742" pos:column="42">(<argument><expr><name><name pos:line="2742" pos:column="43">MParameterDirectionKind<pos:position pos:line="2742" pos:column="66"/></name><operator pos:line="2742" pos:column="66">.<pos:position pos:line="2742" pos:column="67"/></operator><name pos:line="2742" pos:column="67">RETURN<pos:position pos:line="2742" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="2742" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="2742" pos:column="75"/></expr_stmt>
            <return pos:line="2743" pos:column="13">return;<pos:position pos:line="2743" pos:column="20"/></return>
        }<pos:position pos:line="2744" pos:column="10"/></block></then></if>
        <throw pos:line="2745" pos:column="9">throw <expr><operator pos:line="2745" pos:column="15">new<pos:position pos:line="2745" pos:column="18"/></operator> <call><name pos:line="2745" pos:column="19">IllegalArgumentException<pos:position pos:line="2745" pos:column="43"/></name><argument_list pos:line="2745" pos:column="43">(<argument><expr><literal type="string" pos:line="2745" pos:column="44">"handle: "<pos:position pos:line="2745" pos:column="54"/></literal> <operator pos:line="2745" pos:column="55">+<pos:position pos:line="2745" pos:column="56"/></operator> <name pos:line="2745" pos:column="57">handle<pos:position pos:line="2745" pos:column="63"/></name></expr></argument>)<pos:position pos:line="2745" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="2745" pos:column="65"/></throw>
    }<pos:position pos:line="2746" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="2748" pos:column="5">/**
     * Sets the container that owns the handle. This must be set
     * correctly so every modelelement except the root model does have
     * an owner. Otherwise the saving/loading will fail.&lt;p&gt;
     *
     * &lt;em&gt;Warning: when changing the implementation of this method
     * be warned that the sequence of the if then else tree DOES
     * matter.&lt;/em&gt; Most notabely, do not move the setNamespace method
     * any level up in the tree.&lt;p&gt;
     *
     * &lt;em&gt;Warning: the implementation does not support setting the
     * owner of actions.&lt;/em&gt; Use setState1 etc. on action for that
     * goal&lt;p&gt;
     *
     * @param handle The modelelement that must be added to the container
     * @param container The owning modelelement
     * @exception IllegalArgumentException when the handle or
     * container is null or if the handle cannot be added to the
     * container.
     */</comment>
    <function><specifier pos:line="2768" pos:column="5">public<pos:position pos:line="2768" pos:column="11"/></specifier> <type><name pos:line="2768" pos:column="12">void<pos:position pos:line="2768" pos:column="16"/></name></type> <name pos:line="2768" pos:column="17">setModelElementContainer<pos:position pos:line="2768" pos:column="41"/></name><parameter_list pos:line="2768" pos:column="41">(
        <parameter><decl><type><name pos:line="2769" pos:column="9">Object<pos:position pos:line="2769" pos:column="15"/></name></type> <name pos:line="2769" pos:column="16">handle<pos:position pos:line="2769" pos:column="22"/></name></decl></parameter>,
        <parameter><decl><type><name pos:line="2770" pos:column="9">Object<pos:position pos:line="2770" pos:column="15"/></name></type> <name pos:line="2770" pos:column="16">container<pos:position pos:line="2770" pos:column="25"/></name></decl></parameter>)<pos:position pos:line="2770" pos:column="26"/></parameter_list> <block pos:line="2770" pos:column="27">{
        <if pos:line="2771" pos:column="9">if <condition pos:line="2771" pos:column="12">(<expr><name pos:line="2771" pos:column="13">handle<pos:position pos:line="2771" pos:column="19"/></name> <operator pos:line="2771" pos:column="20">instanceof<pos:position pos:line="2771" pos:column="30"/></operator> <name pos:line="2771" pos:column="31">MPartition<pos:position pos:line="2771" pos:column="41"/></name>
            <operator pos:line="2772" pos:column="13">&amp;&amp;<pos:position pos:line="2772" pos:column="23"/></operator> <name pos:line="2772" pos:column="16">container<pos:position pos:line="2772" pos:column="25"/></name> <operator pos:line="2772" pos:column="26">instanceof<pos:position pos:line="2772" pos:column="36"/></operator> <name pos:line="2772" pos:column="37">MActivityGraph<pos:position pos:line="2772" pos:column="51"/></name></expr>)<pos:position pos:line="2772" pos:column="52"/></condition><then pos:line="2772" pos:column="52"> <block pos:line="2772" pos:column="53">{
            <expr_stmt><expr><operator pos:line="2773" pos:column="13">(<pos:position pos:line="2773" pos:column="14"/></operator><operator pos:line="2773" pos:column="14">(<pos:position pos:line="2773" pos:column="15"/></operator><name pos:line="2773" pos:column="15">MPartition<pos:position pos:line="2773" pos:column="25"/></name><operator pos:line="2773" pos:column="25">)<pos:position pos:line="2773" pos:column="26"/></operator> <name pos:line="2773" pos:column="27">handle<pos:position pos:line="2773" pos:column="33"/></name><operator pos:line="2773" pos:column="33">)<pos:position pos:line="2773" pos:column="34"/></operator><operator pos:line="2773" pos:column="34">.<pos:position pos:line="2773" pos:column="35"/></operator><call><name pos:line="2773" pos:column="35">setActivityGraph<pos:position pos:line="2773" pos:column="51"/></name><argument_list pos:line="2773" pos:column="51">(<argument><expr><operator pos:line="2773" pos:column="52">(<pos:position pos:line="2773" pos:column="53"/></operator><name pos:line="2773" pos:column="53">MActivityGraph<pos:position pos:line="2773" pos:column="67"/></name><operator pos:line="2773" pos:column="67">)<pos:position pos:line="2773" pos:column="68"/></operator> <name pos:line="2773" pos:column="69">container<pos:position pos:line="2773" pos:column="78"/></name></expr></argument>)<pos:position pos:line="2773" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="2773" pos:column="80"/></expr_stmt>
        }<pos:position pos:line="2774" pos:column="10"/></block></then> <elseif pos:line="2774" pos:column="11">else <if pos:line="2774" pos:column="16">if <condition pos:line="2774" pos:column="19">(<expr><name pos:line="2774" pos:column="20">handle<pos:position pos:line="2774" pos:column="26"/></name> <operator pos:line="2774" pos:column="27">instanceof<pos:position pos:line="2774" pos:column="37"/></operator> <name pos:line="2774" pos:column="38">MModelElement<pos:position pos:line="2774" pos:column="51"/></name>
                <operator pos:line="2775" pos:column="17">&amp;&amp;<pos:position pos:line="2775" pos:column="27"/></operator> <name pos:line="2775" pos:column="20">container<pos:position pos:line="2775" pos:column="29"/></name> <operator pos:line="2775" pos:column="30">instanceof<pos:position pos:line="2775" pos:column="40"/></operator> <name pos:line="2775" pos:column="41">MPartition<pos:position pos:line="2775" pos:column="51"/></name></expr>)<pos:position pos:line="2775" pos:column="52"/></condition><then pos:line="2775" pos:column="52"> <block pos:line="2775" pos:column="53">{
            <expr_stmt><expr><operator pos:line="2776" pos:column="13">(<pos:position pos:line="2776" pos:column="14"/></operator><operator pos:line="2776" pos:column="14">(<pos:position pos:line="2776" pos:column="15"/></operator><name pos:line="2776" pos:column="15">MPartition<pos:position pos:line="2776" pos:column="25"/></name><operator pos:line="2776" pos:column="25">)<pos:position pos:line="2776" pos:column="26"/></operator> <name pos:line="2776" pos:column="27">container<pos:position pos:line="2776" pos:column="36"/></name><operator pos:line="2776" pos:column="36">)<pos:position pos:line="2776" pos:column="37"/></operator><operator pos:line="2776" pos:column="37">.<pos:position pos:line="2776" pos:column="38"/></operator><call><name pos:line="2776" pos:column="38">addContents<pos:position pos:line="2776" pos:column="49"/></name><argument_list pos:line="2776" pos:column="49">(<argument><expr><operator pos:line="2776" pos:column="50">(<pos:position pos:line="2776" pos:column="51"/></operator><name pos:line="2776" pos:column="51">MModelElement<pos:position pos:line="2776" pos:column="64"/></name><operator pos:line="2776" pos:column="64">)<pos:position pos:line="2776" pos:column="65"/></operator> <name pos:line="2776" pos:column="66">handle<pos:position pos:line="2776" pos:column="72"/></name></expr></argument>)<pos:position pos:line="2776" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="2776" pos:column="74"/></expr_stmt>
        }<pos:position pos:line="2777" pos:column="10"/></block></then></if></elseif> <elseif pos:line="2777" pos:column="11">else <if pos:line="2777" pos:column="16">if <condition pos:line="2777" pos:column="19">(
            <expr><name pos:line="2778" pos:column="13">handle<pos:position pos:line="2778" pos:column="19"/></name> <operator pos:line="2778" pos:column="20">instanceof<pos:position pos:line="2778" pos:column="30"/></operator> <name pos:line="2778" pos:column="31">MConstraint<pos:position pos:line="2778" pos:column="42"/></name>
                <operator pos:line="2779" pos:column="17">&amp;&amp;<pos:position pos:line="2779" pos:column="27"/></operator> <name pos:line="2779" pos:column="20">container<pos:position pos:line="2779" pos:column="29"/></name> <operator pos:line="2779" pos:column="30">instanceof<pos:position pos:line="2779" pos:column="40"/></operator> <name pos:line="2779" pos:column="41">MStereotype<pos:position pos:line="2779" pos:column="52"/></name></expr>)<pos:position pos:line="2779" pos:column="53"/></condition><then pos:line="2779" pos:column="53"> <block pos:line="2779" pos:column="54">{
            <decl_stmt><decl><type><name pos:line="2780" pos:column="13">MConstraint<pos:position pos:line="2780" pos:column="24"/></name></type> <name pos:line="2780" pos:column="25">c<pos:position pos:line="2780" pos:column="26"/></name> <init pos:line="2780" pos:column="27">= <expr><operator pos:line="2780" pos:column="29">(<pos:position pos:line="2780" pos:column="30"/></operator><name pos:line="2780" pos:column="30">MConstraint<pos:position pos:line="2780" pos:column="41"/></name><operator pos:line="2780" pos:column="41">)<pos:position pos:line="2780" pos:column="42"/></operator> <name pos:line="2780" pos:column="43">handle<pos:position pos:line="2780" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="2780" pos:column="50"/></decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="2781" pos:column="13">c<pos:position pos:line="2781" pos:column="14"/></name><operator pos:line="2781" pos:column="14">.<pos:position pos:line="2781" pos:column="15"/></operator><name pos:line="2781" pos:column="15">setConstrainedElement2<pos:position pos:line="2781" pos:column="37"/></name></name><argument_list pos:line="2781" pos:column="37">(<argument><expr><operator pos:line="2781" pos:column="38">(<pos:position pos:line="2781" pos:column="39"/></operator><name pos:line="2781" pos:column="39">MStereotype<pos:position pos:line="2781" pos:column="50"/></name><operator pos:line="2781" pos:column="50">)<pos:position pos:line="2781" pos:column="51"/></operator> <name pos:line="2781" pos:column="52">container<pos:position pos:line="2781" pos:column="61"/></name></expr></argument>)<pos:position pos:line="2781" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="2781" pos:column="63"/></expr_stmt>
        }<pos:position pos:line="2782" pos:column="10"/></block></then></if></elseif> <elseif pos:line="2782" pos:column="11">else <if pos:line="2782" pos:column="16">if <condition pos:line="2782" pos:column="19">(
            <expr><name pos:line="2783" pos:column="13">handle<pos:position pos:line="2783" pos:column="19"/></name> <operator pos:line="2783" pos:column="20">instanceof<pos:position pos:line="2783" pos:column="30"/></operator> <name pos:line="2783" pos:column="31">MInteraction<pos:position pos:line="2783" pos:column="43"/></name>
                <operator pos:line="2784" pos:column="17">&amp;&amp;<pos:position pos:line="2784" pos:column="27"/></operator> <name pos:line="2784" pos:column="20">container<pos:position pos:line="2784" pos:column="29"/></name> <operator pos:line="2784" pos:column="30">instanceof<pos:position pos:line="2784" pos:column="40"/></operator> <name pos:line="2784" pos:column="41">MCollaboration<pos:position pos:line="2784" pos:column="55"/></name></expr>)<pos:position pos:line="2784" pos:column="56"/></condition><then pos:line="2784" pos:column="56"> <block pos:line="2784" pos:column="57">{
            <expr_stmt><expr><operator pos:line="2785" pos:column="13">(<pos:position pos:line="2785" pos:column="14"/></operator><operator pos:line="2785" pos:column="14">(<pos:position pos:line="2785" pos:column="15"/></operator><name pos:line="2785" pos:column="15">MInteraction<pos:position pos:line="2785" pos:column="27"/></name><operator pos:line="2785" pos:column="27">)<pos:position pos:line="2785" pos:column="28"/></operator> <name pos:line="2785" pos:column="29">handle<pos:position pos:line="2785" pos:column="35"/></name><operator pos:line="2785" pos:column="35">)<pos:position pos:line="2785" pos:column="36"/></operator><operator pos:line="2785" pos:column="36">.<pos:position pos:line="2785" pos:column="37"/></operator><call><name pos:line="2785" pos:column="37">setContext<pos:position pos:line="2785" pos:column="47"/></name><argument_list pos:line="2785" pos:column="47">(<argument><expr><operator pos:line="2785" pos:column="48">(<pos:position pos:line="2785" pos:column="49"/></operator><name pos:line="2785" pos:column="49">MCollaboration<pos:position pos:line="2785" pos:column="63"/></name><operator pos:line="2785" pos:column="63">)<pos:position pos:line="2785" pos:column="64"/></operator> <name pos:line="2785" pos:column="65">container<pos:position pos:line="2785" pos:column="74"/></name></expr></argument>)<pos:position pos:line="2785" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="2785" pos:column="76"/></expr_stmt>
        }<pos:position pos:line="2786" pos:column="10"/></block></then></if></elseif> <elseif pos:line="2786" pos:column="11">else <if pos:line="2786" pos:column="16">if <condition pos:line="2786" pos:column="19">(
            <expr><name pos:line="2787" pos:column="13">handle<pos:position pos:line="2787" pos:column="19"/></name> <operator pos:line="2787" pos:column="20">instanceof<pos:position pos:line="2787" pos:column="30"/></operator> <name pos:line="2787" pos:column="31">MElementResidence<pos:position pos:line="2787" pos:column="48"/></name>
                <operator pos:line="2788" pos:column="17">&amp;&amp;<pos:position pos:line="2788" pos:column="27"/></operator> <name pos:line="2788" pos:column="20">container<pos:position pos:line="2788" pos:column="29"/></name> <operator pos:line="2788" pos:column="30">instanceof<pos:position pos:line="2788" pos:column="40"/></operator> <name pos:line="2788" pos:column="41">MComponent<pos:position pos:line="2788" pos:column="51"/></name></expr>)<pos:position pos:line="2788" pos:column="52"/></condition><then pos:line="2788" pos:column="52"> <block pos:line="2788" pos:column="53">{
            <decl_stmt><decl><type><name pos:line="2789" pos:column="13">MElementResidence<pos:position pos:line="2789" pos:column="30"/></name></type> <name pos:line="2789" pos:column="31">er<pos:position pos:line="2789" pos:column="33"/></name> <init pos:line="2789" pos:column="34">= <expr><operator pos:line="2789" pos:column="36">(<pos:position pos:line="2789" pos:column="37"/></operator><name pos:line="2789" pos:column="37">MElementResidence<pos:position pos:line="2789" pos:column="54"/></name><operator pos:line="2789" pos:column="54">)<pos:position pos:line="2789" pos:column="55"/></operator> <name pos:line="2789" pos:column="56">handle<pos:position pos:line="2789" pos:column="62"/></name></expr></init></decl>;<pos:position pos:line="2789" pos:column="63"/></decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="2790" pos:column="13">er<pos:position pos:line="2790" pos:column="15"/></name><operator pos:line="2790" pos:column="15">.<pos:position pos:line="2790" pos:column="16"/></operator><name pos:line="2790" pos:column="16">setImplementationLocation<pos:position pos:line="2790" pos:column="41"/></name></name><argument_list pos:line="2790" pos:column="41">(<argument><expr><operator pos:line="2790" pos:column="42">(<pos:position pos:line="2790" pos:column="43"/></operator><name pos:line="2790" pos:column="43">MComponent<pos:position pos:line="2790" pos:column="53"/></name><operator pos:line="2790" pos:column="53">)<pos:position pos:line="2790" pos:column="54"/></operator> <name pos:line="2790" pos:column="55">container<pos:position pos:line="2790" pos:column="64"/></name></expr></argument>)<pos:position pos:line="2790" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="2790" pos:column="66"/></expr_stmt>
        }<pos:position pos:line="2791" pos:column="10"/></block></then></if></elseif> <elseif pos:line="2791" pos:column="11">else <if pos:line="2791" pos:column="16">if <condition pos:line="2791" pos:column="19">(
            <expr><name pos:line="2792" pos:column="13">handle<pos:position pos:line="2792" pos:column="19"/></name> <operator pos:line="2792" pos:column="20">instanceof<pos:position pos:line="2792" pos:column="30"/></operator> <name pos:line="2792" pos:column="31">MAttributeLink<pos:position pos:line="2792" pos:column="45"/></name>
                <operator pos:line="2793" pos:column="17">&amp;&amp;<pos:position pos:line="2793" pos:column="27"/></operator> <name pos:line="2793" pos:column="20">container<pos:position pos:line="2793" pos:column="29"/></name> <operator pos:line="2793" pos:column="30">instanceof<pos:position pos:line="2793" pos:column="40"/></operator> <name pos:line="2793" pos:column="41">MInstance<pos:position pos:line="2793" pos:column="50"/></name></expr>)<pos:position pos:line="2793" pos:column="51"/></condition><then pos:line="2793" pos:column="51"> <block pos:line="2793" pos:column="52">{
            <expr_stmt><expr><operator pos:line="2794" pos:column="13">(<pos:position pos:line="2794" pos:column="14"/></operator><operator pos:line="2794" pos:column="14">(<pos:position pos:line="2794" pos:column="15"/></operator><name pos:line="2794" pos:column="15">MAttributeLink<pos:position pos:line="2794" pos:column="29"/></name><operator pos:line="2794" pos:column="29">)<pos:position pos:line="2794" pos:column="30"/></operator> <name pos:line="2794" pos:column="31">handle<pos:position pos:line="2794" pos:column="37"/></name><operator pos:line="2794" pos:column="37">)<pos:position pos:line="2794" pos:column="38"/></operator><operator pos:line="2794" pos:column="38">.<pos:position pos:line="2794" pos:column="39"/></operator><call><name pos:line="2794" pos:column="39">setInstance<pos:position pos:line="2794" pos:column="50"/></name><argument_list pos:line="2794" pos:column="50">(<argument><expr><operator pos:line="2794" pos:column="51">(<pos:position pos:line="2794" pos:column="52"/></operator><name pos:line="2794" pos:column="52">MInstance<pos:position pos:line="2794" pos:column="61"/></name><operator pos:line="2794" pos:column="61">)<pos:position pos:line="2794" pos:column="62"/></operator> <name pos:line="2794" pos:column="63">container<pos:position pos:line="2794" pos:column="72"/></name></expr></argument>)<pos:position pos:line="2794" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="2794" pos:column="74"/></expr_stmt>
        }<pos:position pos:line="2795" pos:column="10"/></block></then></if></elseif> <elseif pos:line="2795" pos:column="11">else <if pos:line="2795" pos:column="16">if <condition pos:line="2795" pos:column="19">(
            <expr><name pos:line="2796" pos:column="13">handle<pos:position pos:line="2796" pos:column="19"/></name> <operator pos:line="2796" pos:column="20">instanceof<pos:position pos:line="2796" pos:column="30"/></operator> <name pos:line="2796" pos:column="31">MMessage<pos:position pos:line="2796" pos:column="39"/></name> <operator pos:line="2796" pos:column="40">&amp;&amp;<pos:position pos:line="2796" pos:column="50"/></operator> <name pos:line="2796" pos:column="43">container<pos:position pos:line="2796" pos:column="52"/></name> <operator pos:line="2796" pos:column="53">instanceof<pos:position pos:line="2796" pos:column="63"/></operator> <name pos:line="2796" pos:column="64">MInteraction<pos:position pos:line="2796" pos:column="76"/></name></expr>)<pos:position pos:line="2796" pos:column="77"/></condition><then pos:line="2796" pos:column="77"> <block pos:line="2796" pos:column="78">{
            <expr_stmt><expr><operator pos:line="2797" pos:column="13">(<pos:position pos:line="2797" pos:column="14"/></operator><operator pos:line="2797" pos:column="14">(<pos:position pos:line="2797" pos:column="15"/></operator><name pos:line="2797" pos:column="15">MMessage<pos:position pos:line="2797" pos:column="23"/></name><operator pos:line="2797" pos:column="23">)<pos:position pos:line="2797" pos:column="24"/></operator> <name pos:line="2797" pos:column="25">handle<pos:position pos:line="2797" pos:column="31"/></name><operator pos:line="2797" pos:column="31">)<pos:position pos:line="2797" pos:column="32"/></operator><operator pos:line="2797" pos:column="32">.<pos:position pos:line="2797" pos:column="33"/></operator><call><name pos:line="2797" pos:column="33">setInteraction<pos:position pos:line="2797" pos:column="47"/></name><argument_list pos:line="2797" pos:column="47">(<argument><expr><operator pos:line="2797" pos:column="48">(<pos:position pos:line="2797" pos:column="49"/></operator><name pos:line="2797" pos:column="49">MInteraction<pos:position pos:line="2797" pos:column="61"/></name><operator pos:line="2797" pos:column="61">)<pos:position pos:line="2797" pos:column="62"/></operator> <name pos:line="2797" pos:column="63">container<pos:position pos:line="2797" pos:column="72"/></name></expr></argument>)<pos:position pos:line="2797" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="2797" pos:column="74"/></expr_stmt>
        }<pos:position pos:line="2798" pos:column="10"/></block></then></if></elseif> <elseif pos:line="2798" pos:column="11">else <if pos:line="2798" pos:column="16">if <condition pos:line="2798" pos:column="19">(<expr><name pos:line="2798" pos:column="20">handle<pos:position pos:line="2798" pos:column="26"/></name> <operator pos:line="2798" pos:column="27">instanceof<pos:position pos:line="2798" pos:column="37"/></operator> <name pos:line="2798" pos:column="38">MLinkEnd<pos:position pos:line="2798" pos:column="46"/></name> <operator pos:line="2798" pos:column="47">&amp;&amp;<pos:position pos:line="2798" pos:column="57"/></operator> <name pos:line="2798" pos:column="50">container<pos:position pos:line="2798" pos:column="59"/></name> <operator pos:line="2798" pos:column="60">instanceof<pos:position pos:line="2798" pos:column="70"/></operator> <name pos:line="2798" pos:column="71">MLink<pos:position pos:line="2798" pos:column="76"/></name></expr>)<pos:position pos:line="2798" pos:column="77"/></condition><then pos:line="2798" pos:column="77"> <block pos:line="2798" pos:column="78">{
            <expr_stmt><expr><operator pos:line="2799" pos:column="13">(<pos:position pos:line="2799" pos:column="14"/></operator><operator pos:line="2799" pos:column="14">(<pos:position pos:line="2799" pos:column="15"/></operator><name pos:line="2799" pos:column="15">MLinkEnd<pos:position pos:line="2799" pos:column="23"/></name><operator pos:line="2799" pos:column="23">)<pos:position pos:line="2799" pos:column="24"/></operator> <name pos:line="2799" pos:column="25">handle<pos:position pos:line="2799" pos:column="31"/></name><operator pos:line="2799" pos:column="31">)<pos:position pos:line="2799" pos:column="32"/></operator><operator pos:line="2799" pos:column="32">.<pos:position pos:line="2799" pos:column="33"/></operator><call><name pos:line="2799" pos:column="33">setLink<pos:position pos:line="2799" pos:column="40"/></name><argument_list pos:line="2799" pos:column="40">(<argument><expr><operator pos:line="2799" pos:column="41">(<pos:position pos:line="2799" pos:column="42"/></operator><name pos:line="2799" pos:column="42">MLink<pos:position pos:line="2799" pos:column="47"/></name><operator pos:line="2799" pos:column="47">)<pos:position pos:line="2799" pos:column="48"/></operator> <name pos:line="2799" pos:column="49">container<pos:position pos:line="2799" pos:column="58"/></name></expr></argument>)<pos:position pos:line="2799" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="2799" pos:column="60"/></expr_stmt>
        }<pos:position pos:line="2800" pos:column="10"/></block></then></if></elseif> <elseif pos:line="2800" pos:column="11">else <if pos:line="2800" pos:column="16">if <condition pos:line="2800" pos:column="19">(
            <expr><name pos:line="2801" pos:column="13">handle<pos:position pos:line="2801" pos:column="19"/></name> <operator pos:line="2801" pos:column="20">instanceof<pos:position pos:line="2801" pos:column="30"/></operator> <name pos:line="2801" pos:column="31">MAttributeLink<pos:position pos:line="2801" pos:column="45"/></name>
                <operator pos:line="2802" pos:column="17">&amp;&amp;<pos:position pos:line="2802" pos:column="27"/></operator> <name pos:line="2802" pos:column="20">container<pos:position pos:line="2802" pos:column="29"/></name> <operator pos:line="2802" pos:column="30">instanceof<pos:position pos:line="2802" pos:column="40"/></operator> <name pos:line="2802" pos:column="41">MLinkEnd<pos:position pos:line="2802" pos:column="49"/></name></expr>)<pos:position pos:line="2802" pos:column="50"/></condition><then pos:line="2802" pos:column="50"> <block pos:line="2802" pos:column="51">{
            <expr_stmt><expr><operator pos:line="2803" pos:column="13">(<pos:position pos:line="2803" pos:column="14"/></operator><operator pos:line="2803" pos:column="14">(<pos:position pos:line="2803" pos:column="15"/></operator><name pos:line="2803" pos:column="15">MAttributeLink<pos:position pos:line="2803" pos:column="29"/></name><operator pos:line="2803" pos:column="29">)<pos:position pos:line="2803" pos:column="30"/></operator> <name pos:line="2803" pos:column="31">handle<pos:position pos:line="2803" pos:column="37"/></name><operator pos:line="2803" pos:column="37">)<pos:position pos:line="2803" pos:column="38"/></operator><operator pos:line="2803" pos:column="38">.<pos:position pos:line="2803" pos:column="39"/></operator><call><name pos:line="2803" pos:column="39">setLinkEnd<pos:position pos:line="2803" pos:column="49"/></name><argument_list pos:line="2803" pos:column="49">(<argument><expr><operator pos:line="2803" pos:column="50">(<pos:position pos:line="2803" pos:column="51"/></operator><name pos:line="2803" pos:column="51">MLinkEnd<pos:position pos:line="2803" pos:column="59"/></name><operator pos:line="2803" pos:column="59">)<pos:position pos:line="2803" pos:column="60"/></operator> <name pos:line="2803" pos:column="61">container<pos:position pos:line="2803" pos:column="70"/></name></expr></argument>)<pos:position pos:line="2803" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="2803" pos:column="72"/></expr_stmt>
        }<pos:position pos:line="2804" pos:column="10"/></block></then></if></elseif> <elseif pos:line="2804" pos:column="11">else <if pos:line="2804" pos:column="16">if <condition pos:line="2804" pos:column="19">(
            <expr><name pos:line="2805" pos:column="13">handle<pos:position pos:line="2805" pos:column="19"/></name> <operator pos:line="2805" pos:column="20">instanceof<pos:position pos:line="2805" pos:column="30"/></operator> <name pos:line="2805" pos:column="31">MTaggedValue<pos:position pos:line="2805" pos:column="43"/></name>
                <operator pos:line="2806" pos:column="17">&amp;&amp;<pos:position pos:line="2806" pos:column="27"/></operator> <name pos:line="2806" pos:column="20">container<pos:position pos:line="2806" pos:column="29"/></name> <operator pos:line="2806" pos:column="30">instanceof<pos:position pos:line="2806" pos:column="40"/></operator> <name pos:line="2806" pos:column="41">MStereotype<pos:position pos:line="2806" pos:column="52"/></name></expr>)<pos:position pos:line="2806" pos:column="53"/></condition><then pos:line="2806" pos:column="53"> <block pos:line="2806" pos:column="54">{
            <expr_stmt><expr><operator pos:line="2807" pos:column="13">(<pos:position pos:line="2807" pos:column="14"/></operator><operator pos:line="2807" pos:column="14">(<pos:position pos:line="2807" pos:column="15"/></operator><name pos:line="2807" pos:column="15">MTaggedValue<pos:position pos:line="2807" pos:column="27"/></name><operator pos:line="2807" pos:column="27">)<pos:position pos:line="2807" pos:column="28"/></operator> <name pos:line="2807" pos:column="29">handle<pos:position pos:line="2807" pos:column="35"/></name><operator pos:line="2807" pos:column="35">)<pos:position pos:line="2807" pos:column="36"/></operator><operator pos:line="2807" pos:column="36">.<pos:position pos:line="2807" pos:column="37"/></operator><call><name pos:line="2807" pos:column="37">setStereotype<pos:position pos:line="2807" pos:column="50"/></name><argument_list pos:line="2807" pos:column="50">(<argument><expr><operator pos:line="2807" pos:column="51">(<pos:position pos:line="2807" pos:column="52"/></operator><name pos:line="2807" pos:column="52">MStereotype<pos:position pos:line="2807" pos:column="63"/></name><operator pos:line="2807" pos:column="63">)<pos:position pos:line="2807" pos:column="64"/></operator> <name pos:line="2807" pos:column="65">container<pos:position pos:line="2807" pos:column="74"/></name></expr></argument>)<pos:position pos:line="2807" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="2807" pos:column="76"/></expr_stmt>
        }<pos:position pos:line="2808" pos:column="10"/></block></then></if></elseif> <elseif pos:line="2808" pos:column="11">else <if pos:line="2808" pos:column="16">if <condition pos:line="2808" pos:column="19">(
            <expr><name pos:line="2809" pos:column="13">handle<pos:position pos:line="2809" pos:column="19"/></name> <operator pos:line="2809" pos:column="20">instanceof<pos:position pos:line="2809" pos:column="30"/></operator> <name pos:line="2809" pos:column="31">MTaggedValue<pos:position pos:line="2809" pos:column="43"/></name>
                <operator pos:line="2810" pos:column="17">&amp;&amp;<pos:position pos:line="2810" pos:column="27"/></operator> <name pos:line="2810" pos:column="20">container<pos:position pos:line="2810" pos:column="29"/></name> <operator pos:line="2810" pos:column="30">instanceof<pos:position pos:line="2810" pos:column="40"/></operator> <name pos:line="2810" pos:column="41">MModelElement<pos:position pos:line="2810" pos:column="54"/></name></expr>)<pos:position pos:line="2810" pos:column="55"/></condition><then pos:line="2810" pos:column="55"> <block pos:line="2810" pos:column="56">{
            <expr_stmt><expr><operator pos:line="2811" pos:column="13">(<pos:position pos:line="2811" pos:column="14"/></operator><operator pos:line="2811" pos:column="14">(<pos:position pos:line="2811" pos:column="15"/></operator><name pos:line="2811" pos:column="15">MTaggedValue<pos:position pos:line="2811" pos:column="27"/></name><operator pos:line="2811" pos:column="27">)<pos:position pos:line="2811" pos:column="28"/></operator> <name pos:line="2811" pos:column="29">handle<pos:position pos:line="2811" pos:column="35"/></name><operator pos:line="2811" pos:column="35">)<pos:position pos:line="2811" pos:column="36"/></operator><operator pos:line="2811" pos:column="36">.<pos:position pos:line="2811" pos:column="37"/></operator><call><name pos:line="2811" pos:column="37">setModelElement<pos:position pos:line="2811" pos:column="52"/></name><argument_list pos:line="2811" pos:column="52">(<argument><expr><operator pos:line="2811" pos:column="53">(<pos:position pos:line="2811" pos:column="54"/></operator><name pos:line="2811" pos:column="54">MModelElement<pos:position pos:line="2811" pos:column="67"/></name><operator pos:line="2811" pos:column="67">)<pos:position pos:line="2811" pos:column="68"/></operator> <name pos:line="2811" pos:column="69">container<pos:position pos:line="2811" pos:column="78"/></name></expr></argument>)<pos:position pos:line="2811" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="2811" pos:column="80"/></expr_stmt>
        }<pos:position pos:line="2812" pos:column="10"/></block></then></if></elseif> <elseif pos:line="2812" pos:column="11">else <if pos:line="2812" pos:column="16">if <condition pos:line="2812" pos:column="19">(
            <expr><name pos:line="2813" pos:column="13">handle<pos:position pos:line="2813" pos:column="19"/></name> <operator pos:line="2813" pos:column="20">instanceof<pos:position pos:line="2813" pos:column="30"/></operator> <name pos:line="2813" pos:column="31">MStateVertex<pos:position pos:line="2813" pos:column="43"/></name>
                <operator pos:line="2814" pos:column="17">&amp;&amp;<pos:position pos:line="2814" pos:column="27"/></operator> <name pos:line="2814" pos:column="20">container<pos:position pos:line="2814" pos:column="29"/></name> <operator pos:line="2814" pos:column="30">instanceof<pos:position pos:line="2814" pos:column="40"/></operator> <name pos:line="2814" pos:column="41">MCompositeState<pos:position pos:line="2814" pos:column="56"/></name></expr>)<pos:position pos:line="2814" pos:column="57"/></condition><then pos:line="2814" pos:column="57"> <block pos:line="2814" pos:column="58">{
            <expr_stmt><expr><operator pos:line="2815" pos:column="13">(<pos:position pos:line="2815" pos:column="14"/></operator><operator pos:line="2815" pos:column="14">(<pos:position pos:line="2815" pos:column="15"/></operator><name pos:line="2815" pos:column="15">MStateVertex<pos:position pos:line="2815" pos:column="27"/></name><operator pos:line="2815" pos:column="27">)<pos:position pos:line="2815" pos:column="28"/></operator> <name pos:line="2815" pos:column="29">handle<pos:position pos:line="2815" pos:column="35"/></name><operator pos:line="2815" pos:column="35">)<pos:position pos:line="2815" pos:column="36"/></operator><operator pos:line="2815" pos:column="36">.<pos:position pos:line="2815" pos:column="37"/></operator><call><name pos:line="2815" pos:column="37">setContainer<pos:position pos:line="2815" pos:column="49"/></name><argument_list pos:line="2815" pos:column="49">(<argument><expr><operator pos:line="2815" pos:column="50">(<pos:position pos:line="2815" pos:column="51"/></operator><name pos:line="2815" pos:column="51">MCompositeState<pos:position pos:line="2815" pos:column="66"/></name><operator pos:line="2815" pos:column="66">)<pos:position pos:line="2815" pos:column="67"/></operator> <name pos:line="2815" pos:column="68">container<pos:position pos:line="2815" pos:column="77"/></name></expr></argument>)<pos:position pos:line="2815" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="2815" pos:column="79"/></expr_stmt>
        }<pos:position pos:line="2816" pos:column="10"/></block></then></if></elseif> <elseif pos:line="2816" pos:column="11">else <if pos:line="2816" pos:column="16">if <condition pos:line="2816" pos:column="19">(
            <expr><name pos:line="2817" pos:column="13">handle<pos:position pos:line="2817" pos:column="19"/></name> <operator pos:line="2817" pos:column="20">instanceof<pos:position pos:line="2817" pos:column="30"/></operator> <name pos:line="2817" pos:column="31">MElementImport<pos:position pos:line="2817" pos:column="45"/></name>
                <operator pos:line="2818" pos:column="17">&amp;&amp;<pos:position pos:line="2818" pos:column="27"/></operator> <name pos:line="2818" pos:column="20">container<pos:position pos:line="2818" pos:column="29"/></name> <operator pos:line="2818" pos:column="30">instanceof<pos:position pos:line="2818" pos:column="40"/></operator> <name pos:line="2818" pos:column="41">MPackage<pos:position pos:line="2818" pos:column="49"/></name></expr>)<pos:position pos:line="2818" pos:column="50"/></condition><then pos:line="2818" pos:column="50"> <block pos:line="2818" pos:column="51">{
            <expr_stmt><expr><operator pos:line="2819" pos:column="13">(<pos:position pos:line="2819" pos:column="14"/></operator><operator pos:line="2819" pos:column="14">(<pos:position pos:line="2819" pos:column="15"/></operator><name pos:line="2819" pos:column="15">MElementImport<pos:position pos:line="2819" pos:column="29"/></name><operator pos:line="2819" pos:column="29">)<pos:position pos:line="2819" pos:column="30"/></operator> <name pos:line="2819" pos:column="31">handle<pos:position pos:line="2819" pos:column="37"/></name><operator pos:line="2819" pos:column="37">)<pos:position pos:line="2819" pos:column="38"/></operator><operator pos:line="2819" pos:column="38">.<pos:position pos:line="2819" pos:column="39"/></operator><call><name pos:line="2819" pos:column="39">setPackage<pos:position pos:line="2819" pos:column="49"/></name><argument_list pos:line="2819" pos:column="49">(<argument><expr><operator pos:line="2819" pos:column="50">(<pos:position pos:line="2819" pos:column="51"/></operator><name pos:line="2819" pos:column="51">MPackage<pos:position pos:line="2819" pos:column="59"/></name><operator pos:line="2819" pos:column="59">)<pos:position pos:line="2819" pos:column="60"/></operator> <name pos:line="2819" pos:column="61">container<pos:position pos:line="2819" pos:column="70"/></name></expr></argument>)<pos:position pos:line="2819" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="2819" pos:column="72"/></expr_stmt>
        }<pos:position pos:line="2820" pos:column="10"/></block></then></if></elseif> <elseif pos:line="2820" pos:column="11">else <if pos:line="2820" pos:column="16">if <condition pos:line="2820" pos:column="19">(
            <expr><name pos:line="2821" pos:column="13">handle<pos:position pos:line="2821" pos:column="19"/></name> <operator pos:line="2821" pos:column="20">instanceof<pos:position pos:line="2821" pos:column="30"/></operator> <name pos:line="2821" pos:column="31">MTransition<pos:position pos:line="2821" pos:column="42"/></name> <operator pos:line="2821" pos:column="43">&amp;&amp;<pos:position pos:line="2821" pos:column="53"/></operator> <name pos:line="2821" pos:column="46">container<pos:position pos:line="2821" pos:column="55"/></name> <operator pos:line="2821" pos:column="56">instanceof<pos:position pos:line="2821" pos:column="66"/></operator> <name pos:line="2821" pos:column="67">MState<pos:position pos:line="2821" pos:column="73"/></name></expr>)<pos:position pos:line="2821" pos:column="74"/></condition><then pos:line="2821" pos:column="74"> <block pos:line="2821" pos:column="75">{
            <expr_stmt><expr><operator pos:line="2822" pos:column="13">(<pos:position pos:line="2822" pos:column="14"/></operator><operator pos:line="2822" pos:column="14">(<pos:position pos:line="2822" pos:column="15"/></operator><name pos:line="2822" pos:column="15">MTransition<pos:position pos:line="2822" pos:column="26"/></name><operator pos:line="2822" pos:column="26">)<pos:position pos:line="2822" pos:column="27"/></operator> <name pos:line="2822" pos:column="28">handle<pos:position pos:line="2822" pos:column="34"/></name><operator pos:line="2822" pos:column="34">)<pos:position pos:line="2822" pos:column="35"/></operator><operator pos:line="2822" pos:column="35">.<pos:position pos:line="2822" pos:column="36"/></operator><call><name pos:line="2822" pos:column="36">setState<pos:position pos:line="2822" pos:column="44"/></name><argument_list pos:line="2822" pos:column="44">(<argument><expr><operator pos:line="2822" pos:column="45">(<pos:position pos:line="2822" pos:column="46"/></operator><name pos:line="2822" pos:column="46">MState<pos:position pos:line="2822" pos:column="52"/></name><operator pos:line="2822" pos:column="52">)<pos:position pos:line="2822" pos:column="53"/></operator> <name pos:line="2822" pos:column="54">container<pos:position pos:line="2822" pos:column="63"/></name></expr></argument>)<pos:position pos:line="2822" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="2822" pos:column="65"/></expr_stmt>
        }<pos:position pos:line="2823" pos:column="10"/></block></then></if></elseif> <elseif pos:line="2823" pos:column="11">else <if pos:line="2823" pos:column="16">if <condition pos:line="2823" pos:column="19">(
            <expr><name pos:line="2824" pos:column="13">handle<pos:position pos:line="2824" pos:column="19"/></name> <operator pos:line="2824" pos:column="20">instanceof<pos:position pos:line="2824" pos:column="30"/></operator> <name pos:line="2824" pos:column="31">MState<pos:position pos:line="2824" pos:column="37"/></name> <operator pos:line="2824" pos:column="38">&amp;&amp;<pos:position pos:line="2824" pos:column="48"/></operator> <name pos:line="2824" pos:column="41">container<pos:position pos:line="2824" pos:column="50"/></name> <operator pos:line="2824" pos:column="51">instanceof<pos:position pos:line="2824" pos:column="61"/></operator> <name pos:line="2824" pos:column="62">MStateMachine<pos:position pos:line="2824" pos:column="75"/></name></expr>)<pos:position pos:line="2824" pos:column="76"/></condition><then pos:line="2824" pos:column="76"> <block pos:line="2824" pos:column="77">{
            <expr_stmt><expr><operator pos:line="2825" pos:column="13">(<pos:position pos:line="2825" pos:column="14"/></operator><operator pos:line="2825" pos:column="14">(<pos:position pos:line="2825" pos:column="15"/></operator><name pos:line="2825" pos:column="15">MState<pos:position pos:line="2825" pos:column="21"/></name><operator pos:line="2825" pos:column="21">)<pos:position pos:line="2825" pos:column="22"/></operator> <name pos:line="2825" pos:column="23">handle<pos:position pos:line="2825" pos:column="29"/></name><operator pos:line="2825" pos:column="29">)<pos:position pos:line="2825" pos:column="30"/></operator><operator pos:line="2825" pos:column="30">.<pos:position pos:line="2825" pos:column="31"/></operator><call><name pos:line="2825" pos:column="31">setStateMachine<pos:position pos:line="2825" pos:column="46"/></name><argument_list pos:line="2825" pos:column="46">(<argument><expr><operator pos:line="2825" pos:column="47">(<pos:position pos:line="2825" pos:column="48"/></operator><name pos:line="2825" pos:column="48">MStateMachine<pos:position pos:line="2825" pos:column="61"/></name><operator pos:line="2825" pos:column="61">)<pos:position pos:line="2825" pos:column="62"/></operator> <name pos:line="2825" pos:column="63">container<pos:position pos:line="2825" pos:column="72"/></name></expr></argument>)<pos:position pos:line="2825" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="2825" pos:column="74"/></expr_stmt>
        }<pos:position pos:line="2826" pos:column="10"/></block></then></if></elseif> <elseif pos:line="2826" pos:column="11">else <if pos:line="2826" pos:column="16">if <condition pos:line="2826" pos:column="19">(
            <expr><name pos:line="2827" pos:column="13">handle<pos:position pos:line="2827" pos:column="19"/></name> <operator pos:line="2827" pos:column="20">instanceof<pos:position pos:line="2827" pos:column="30"/></operator> <name pos:line="2827" pos:column="31">MTransition<pos:position pos:line="2827" pos:column="42"/></name>
                <operator pos:line="2828" pos:column="17">&amp;&amp;<pos:position pos:line="2828" pos:column="27"/></operator> <name pos:line="2828" pos:column="20">container<pos:position pos:line="2828" pos:column="29"/></name> <operator pos:line="2828" pos:column="30">instanceof<pos:position pos:line="2828" pos:column="40"/></operator> <name pos:line="2828" pos:column="41">MStateMachine<pos:position pos:line="2828" pos:column="54"/></name></expr>)<pos:position pos:line="2828" pos:column="55"/></condition><then pos:line="2828" pos:column="55"> <block pos:line="2828" pos:column="56">{
            <expr_stmt><expr><operator pos:line="2829" pos:column="13">(<pos:position pos:line="2829" pos:column="14"/></operator><operator pos:line="2829" pos:column="14">(<pos:position pos:line="2829" pos:column="15"/></operator><name pos:line="2829" pos:column="15">MTransition<pos:position pos:line="2829" pos:column="26"/></name><operator pos:line="2829" pos:column="26">)<pos:position pos:line="2829" pos:column="27"/></operator> <name pos:line="2829" pos:column="28">handle<pos:position pos:line="2829" pos:column="34"/></name><operator pos:line="2829" pos:column="34">)<pos:position pos:line="2829" pos:column="35"/></operator><operator pos:line="2829" pos:column="35">.<pos:position pos:line="2829" pos:column="36"/></operator><call><name pos:line="2829" pos:column="36">setStateMachine<pos:position pos:line="2829" pos:column="51"/></name><argument_list pos:line="2829" pos:column="51">(<argument><expr><operator pos:line="2829" pos:column="52">(<pos:position pos:line="2829" pos:column="53"/></operator><name pos:line="2829" pos:column="53">MStateMachine<pos:position pos:line="2829" pos:column="66"/></name><operator pos:line="2829" pos:column="66">)<pos:position pos:line="2829" pos:column="67"/></operator> <name pos:line="2829" pos:column="68">container<pos:position pos:line="2829" pos:column="77"/></name></expr></argument>)<pos:position pos:line="2829" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="2829" pos:column="79"/></expr_stmt>
        }<pos:position pos:line="2830" pos:column="10"/></block></then></if></elseif> <elseif pos:line="2830" pos:column="11">else <if pos:line="2830" pos:column="16">if <condition pos:line="2830" pos:column="19">(
            <expr><name pos:line="2831" pos:column="13">handle<pos:position pos:line="2831" pos:column="19"/></name> <operator pos:line="2831" pos:column="20">instanceof<pos:position pos:line="2831" pos:column="30"/></operator> <name pos:line="2831" pos:column="31">MAction<pos:position pos:line="2831" pos:column="38"/></name> <operator pos:line="2831" pos:column="39">&amp;&amp;<pos:position pos:line="2831" pos:column="49"/></operator> <name pos:line="2831" pos:column="42">container<pos:position pos:line="2831" pos:column="51"/></name> <operator pos:line="2831" pos:column="52">instanceof<pos:position pos:line="2831" pos:column="62"/></operator> <name pos:line="2831" pos:column="63">MTransition<pos:position pos:line="2831" pos:column="74"/></name></expr>)<pos:position pos:line="2831" pos:column="75"/></condition><then pos:line="2831" pos:column="75"> <block pos:line="2831" pos:column="76">{
            <expr_stmt><expr><operator pos:line="2832" pos:column="13">(<pos:position pos:line="2832" pos:column="14"/></operator><operator pos:line="2832" pos:column="14">(<pos:position pos:line="2832" pos:column="15"/></operator><name pos:line="2832" pos:column="15">MAction<pos:position pos:line="2832" pos:column="22"/></name><operator pos:line="2832" pos:column="22">)<pos:position pos:line="2832" pos:column="23"/></operator> <name pos:line="2832" pos:column="24">handle<pos:position pos:line="2832" pos:column="30"/></name><operator pos:line="2832" pos:column="30">)<pos:position pos:line="2832" pos:column="31"/></operator><operator pos:line="2832" pos:column="31">.<pos:position pos:line="2832" pos:column="32"/></operator><call><name pos:line="2832" pos:column="32">setTransition<pos:position pos:line="2832" pos:column="45"/></name><argument_list pos:line="2832" pos:column="45">(<argument><expr><operator pos:line="2832" pos:column="46">(<pos:position pos:line="2832" pos:column="47"/></operator><name pos:line="2832" pos:column="47">MTransition<pos:position pos:line="2832" pos:column="58"/></name><operator pos:line="2832" pos:column="58">)<pos:position pos:line="2832" pos:column="59"/></operator> <name pos:line="2832" pos:column="60">container<pos:position pos:line="2832" pos:column="69"/></name></expr></argument>)<pos:position pos:line="2832" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="2832" pos:column="71"/></expr_stmt>
        }<pos:position pos:line="2833" pos:column="10"/></block></then></if></elseif> <elseif pos:line="2833" pos:column="11">else <if pos:line="2833" pos:column="16">if <condition pos:line="2833" pos:column="19">(
            <expr><name pos:line="2834" pos:column="13">handle<pos:position pos:line="2834" pos:column="19"/></name> <operator pos:line="2834" pos:column="20">instanceof<pos:position pos:line="2834" pos:column="30"/></operator> <name pos:line="2834" pos:column="31">MGuard<pos:position pos:line="2834" pos:column="37"/></name> <operator pos:line="2834" pos:column="38">&amp;&amp;<pos:position pos:line="2834" pos:column="48"/></operator> <name pos:line="2834" pos:column="41">container<pos:position pos:line="2834" pos:column="50"/></name> <operator pos:line="2834" pos:column="51">instanceof<pos:position pos:line="2834" pos:column="61"/></operator> <name pos:line="2834" pos:column="62">MTransition<pos:position pos:line="2834" pos:column="73"/></name></expr>)<pos:position pos:line="2834" pos:column="74"/></condition><then pos:line="2834" pos:column="74"> <block pos:line="2834" pos:column="75">{
            <expr_stmt><expr><operator pos:line="2835" pos:column="13">(<pos:position pos:line="2835" pos:column="14"/></operator><operator pos:line="2835" pos:column="14">(<pos:position pos:line="2835" pos:column="15"/></operator><name pos:line="2835" pos:column="15">MGuard<pos:position pos:line="2835" pos:column="21"/></name><operator pos:line="2835" pos:column="21">)<pos:position pos:line="2835" pos:column="22"/></operator> <name pos:line="2835" pos:column="23">handle<pos:position pos:line="2835" pos:column="29"/></name><operator pos:line="2835" pos:column="29">)<pos:position pos:line="2835" pos:column="30"/></operator><operator pos:line="2835" pos:column="30">.<pos:position pos:line="2835" pos:column="31"/></operator><call><name pos:line="2835" pos:column="31">setTransition<pos:position pos:line="2835" pos:column="44"/></name><argument_list pos:line="2835" pos:column="44">(<argument><expr><operator pos:line="2835" pos:column="45">(<pos:position pos:line="2835" pos:column="46"/></operator><name pos:line="2835" pos:column="46">MTransition<pos:position pos:line="2835" pos:column="57"/></name><operator pos:line="2835" pos:column="57">)<pos:position pos:line="2835" pos:column="58"/></operator> <name pos:line="2835" pos:column="59">container<pos:position pos:line="2835" pos:column="68"/></name></expr></argument>)<pos:position pos:line="2835" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="2835" pos:column="70"/></expr_stmt>
        }<pos:position pos:line="2836" pos:column="10"/></block></then></if></elseif> <elseif pos:line="2836" pos:column="11">else <if pos:line="2836" pos:column="16">if <condition pos:line="2836" pos:column="19">(
            <expr><name pos:line="2837" pos:column="13">handle<pos:position pos:line="2837" pos:column="19"/></name> <operator pos:line="2837" pos:column="20">instanceof<pos:position pos:line="2837" pos:column="30"/></operator> <name pos:line="2837" pos:column="31">MModelElement<pos:position pos:line="2837" pos:column="44"/></name>
                <operator pos:line="2838" pos:column="17">&amp;&amp;<pos:position pos:line="2838" pos:column="27"/></operator> <name pos:line="2838" pos:column="20">container<pos:position pos:line="2838" pos:column="29"/></name> <operator pos:line="2838" pos:column="30">instanceof<pos:position pos:line="2838" pos:column="40"/></operator> <name pos:line="2838" pos:column="41">MNamespace<pos:position pos:line="2838" pos:column="51"/></name></expr>)<pos:position pos:line="2838" pos:column="52"/></condition><then pos:line="2838" pos:column="52"> <block pos:line="2838" pos:column="53">{
            <expr_stmt><expr><operator pos:line="2839" pos:column="13">(<pos:position pos:line="2839" pos:column="14"/></operator><operator pos:line="2839" pos:column="14">(<pos:position pos:line="2839" pos:column="15"/></operator><name pos:line="2839" pos:column="15">MModelElement<pos:position pos:line="2839" pos:column="28"/></name><operator pos:line="2839" pos:column="28">)<pos:position pos:line="2839" pos:column="29"/></operator> <name pos:line="2839" pos:column="30">handle<pos:position pos:line="2839" pos:column="36"/></name><operator pos:line="2839" pos:column="36">)<pos:position pos:line="2839" pos:column="37"/></operator><operator pos:line="2839" pos:column="37">.<pos:position pos:line="2839" pos:column="38"/></operator><call><name pos:line="2839" pos:column="38">setNamespace<pos:position pos:line="2839" pos:column="50"/></name><argument_list pos:line="2839" pos:column="50">(<argument><expr><operator pos:line="2839" pos:column="51">(<pos:position pos:line="2839" pos:column="52"/></operator><name pos:line="2839" pos:column="52">MNamespace<pos:position pos:line="2839" pos:column="62"/></name><operator pos:line="2839" pos:column="62">)<pos:position pos:line="2839" pos:column="63"/></operator> <name pos:line="2839" pos:column="64">container<pos:position pos:line="2839" pos:column="73"/></name></expr></argument>)<pos:position pos:line="2839" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="2839" pos:column="75"/></expr_stmt>
        }<pos:position pos:line="2840" pos:column="10"/></block></then></if></elseif> <else pos:line="2840" pos:column="11">else <block pos:line="2840" pos:column="16">{
            <throw pos:line="2841" pos:column="13">throw <expr><operator pos:line="2841" pos:column="19">new<pos:position pos:line="2841" pos:column="22"/></operator> <call><name pos:line="2841" pos:column="23">IllegalArgumentException<pos:position pos:line="2841" pos:column="47"/></name><argument_list pos:line="2841" pos:column="47">(<argument><expr><literal type="string" pos:line="2841" pos:column="48">"handle: "<pos:position pos:line="2841" pos:column="58"/></literal> <operator pos:line="2841" pos:column="59">+<pos:position pos:line="2841" pos:column="60"/></operator> <name pos:line="2841" pos:column="61">handle<pos:position pos:line="2841" pos:column="67"/></name>
                    <operator pos:line="2842" pos:column="21">+<pos:position pos:line="2842" pos:column="22"/></operator> <literal type="string" pos:line="2842" pos:column="23">" or container: "<pos:position pos:line="2842" pos:column="40"/></literal> <operator pos:line="2842" pos:column="41">+<pos:position pos:line="2842" pos:column="42"/></operator> <name pos:line="2842" pos:column="43">container<pos:position pos:line="2842" pos:column="52"/></name></expr></argument>)<pos:position pos:line="2842" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="2842" pos:column="54"/></throw>
        }<pos:position pos:line="2843" pos:column="10"/></block></else></if>
    }<pos:position pos:line="2844" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="2846" pos:column="5">/**
     * Sets a multiplicity of some model element.
     *
     * @param handle model element
     * @param arg multiplicity as string OR multiplicity object
     */</comment>
    <function><specifier pos:line="2852" pos:column="5">public<pos:position pos:line="2852" pos:column="11"/></specifier> <type><name pos:line="2852" pos:column="12">void<pos:position pos:line="2852" pos:column="16"/></name></type> <name pos:line="2852" pos:column="17">setMultiplicity<pos:position pos:line="2852" pos:column="32"/></name><parameter_list pos:line="2852" pos:column="32">(<parameter><decl><type><name pos:line="2852" pos:column="33">Object<pos:position pos:line="2852" pos:column="39"/></name></type> <name pos:line="2852" pos:column="40">handle<pos:position pos:line="2852" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2852" pos:column="48">Object<pos:position pos:line="2852" pos:column="54"/></name></type> <name pos:line="2852" pos:column="55">arg<pos:position pos:line="2852" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="2852" pos:column="59"/></parameter_list> <block pos:line="2852" pos:column="60">{
        <if pos:line="2853" pos:column="9">if <condition pos:line="2853" pos:column="12">(<expr><name pos:line="2853" pos:column="13">arg<pos:position pos:line="2853" pos:column="16"/></name> <operator pos:line="2853" pos:column="17">instanceof<pos:position pos:line="2853" pos:column="27"/></operator> <name pos:line="2853" pos:column="28">String<pos:position pos:line="2853" pos:column="34"/></name></expr>)<pos:position pos:line="2853" pos:column="35"/></condition><then pos:line="2853" pos:column="35"> <block pos:line="2853" pos:column="36">{
            <expr_stmt><expr><name pos:line="2854" pos:column="13">arg<pos:position pos:line="2854" pos:column="16"/></name> <operator pos:line="2854" pos:column="17">=<pos:position pos:line="2854" pos:column="18"/></operator>
                <ternary><condition><expr><operator pos:line="2855" pos:column="17">(<pos:position pos:line="2855" pos:column="18"/></operator><literal type="string" pos:line="2855" pos:column="18">"1_N"<pos:position pos:line="2855" pos:column="23"/></literal><operator pos:line="2855" pos:column="23">.<pos:position pos:line="2855" pos:column="24"/></operator><call><name pos:line="2855" pos:column="24">equals<pos:position pos:line="2855" pos:column="30"/></name><argument_list pos:line="2855" pos:column="30">(<argument><expr><name pos:line="2855" pos:column="31">arg<pos:position pos:line="2855" pos:column="34"/></name></expr></argument>)<pos:position pos:line="2855" pos:column="35"/></argument_list></call><operator pos:line="2855" pos:column="35">)<pos:position pos:line="2855" pos:column="36"/></operator></expr> ?<pos:position pos:line="2855" pos:column="38"/></condition><then pos:line="2855" pos:column="38"> <expr><name><name pos:line="2855" pos:column="39">MMultiplicity<pos:position pos:line="2855" pos:column="52"/></name><operator pos:line="2855" pos:column="52">.<pos:position pos:line="2855" pos:column="53"/></operator><name pos:line="2855" pos:column="53">M1_N<pos:position pos:line="2855" pos:column="57"/></name></name></expr> <pos:position pos:line="2855" pos:column="58"/></then><else pos:line="2855" pos:column="58">: <expr><name><name pos:line="2855" pos:column="60">MMultiplicity<pos:position pos:line="2855" pos:column="73"/></name><operator pos:line="2855" pos:column="73">.<pos:position pos:line="2855" pos:column="74"/></operator><name pos:line="2855" pos:column="74">M1_1<pos:position pos:line="2855" pos:column="78"/></name></name></expr></else></ternary></expr>;<pos:position pos:line="2855" pos:column="79"/></expr_stmt>
        }<pos:position pos:line="2856" pos:column="10"/></block></then></if>

        <if pos:line="2858" pos:column="9">if <condition pos:line="2858" pos:column="12">(<expr><name pos:line="2858" pos:column="13">arg<pos:position pos:line="2858" pos:column="16"/></name> <operator pos:line="2858" pos:column="17">instanceof<pos:position pos:line="2858" pos:column="27"/></operator> <name pos:line="2858" pos:column="28">MMultiplicity<pos:position pos:line="2858" pos:column="41"/></name></expr>)<pos:position pos:line="2858" pos:column="42"/></condition><then pos:line="2858" pos:column="42"> <block pos:line="2858" pos:column="43">{
            <decl_stmt><decl><type><name pos:line="2859" pos:column="13">MMultiplicity<pos:position pos:line="2859" pos:column="26"/></name></type> <name pos:line="2859" pos:column="27">mult<pos:position pos:line="2859" pos:column="31"/></name> <init pos:line="2859" pos:column="32">= <expr><operator pos:line="2859" pos:column="34">(<pos:position pos:line="2859" pos:column="35"/></operator><name pos:line="2859" pos:column="35">MMultiplicity<pos:position pos:line="2859" pos:column="48"/></name><operator pos:line="2859" pos:column="48">)<pos:position pos:line="2859" pos:column="49"/></operator> <name pos:line="2859" pos:column="50">arg<pos:position pos:line="2859" pos:column="53"/></name></expr></init></decl>;<pos:position pos:line="2859" pos:column="54"/></decl_stmt>

            <if pos:line="2861" pos:column="13">if <condition pos:line="2861" pos:column="16">(<expr><name pos:line="2861" pos:column="17">handle<pos:position pos:line="2861" pos:column="23"/></name> <operator pos:line="2861" pos:column="24">instanceof<pos:position pos:line="2861" pos:column="34"/></operator> <name pos:line="2861" pos:column="35">MAssociationRole<pos:position pos:line="2861" pos:column="51"/></name></expr>)<pos:position pos:line="2861" pos:column="52"/></condition><then pos:line="2861" pos:column="52"> <block pos:line="2861" pos:column="53">{
                <expr_stmt><expr><operator pos:line="2862" pos:column="17">(<pos:position pos:line="2862" pos:column="18"/></operator><operator pos:line="2862" pos:column="18">(<pos:position pos:line="2862" pos:column="19"/></operator><name pos:line="2862" pos:column="19">MAssociationRole<pos:position pos:line="2862" pos:column="35"/></name><operator pos:line="2862" pos:column="35">)<pos:position pos:line="2862" pos:column="36"/></operator> <name pos:line="2862" pos:column="37">handle<pos:position pos:line="2862" pos:column="43"/></name><operator pos:line="2862" pos:column="43">)<pos:position pos:line="2862" pos:column="44"/></operator><operator pos:line="2862" pos:column="44">.<pos:position pos:line="2862" pos:column="45"/></operator><call><name pos:line="2862" pos:column="45">setMultiplicity<pos:position pos:line="2862" pos:column="60"/></name><argument_list pos:line="2862" pos:column="60">(<argument><expr><name pos:line="2862" pos:column="61">mult<pos:position pos:line="2862" pos:column="65"/></name></expr></argument>)<pos:position pos:line="2862" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="2862" pos:column="67"/></expr_stmt>
                <return pos:line="2863" pos:column="17">return;<pos:position pos:line="2863" pos:column="24"/></return>
            }<pos:position pos:line="2864" pos:column="14"/></block></then></if>
            <if pos:line="2865" pos:column="13">if <condition pos:line="2865" pos:column="16">(<expr><name pos:line="2865" pos:column="17">handle<pos:position pos:line="2865" pos:column="23"/></name> <operator pos:line="2865" pos:column="24">instanceof<pos:position pos:line="2865" pos:column="34"/></operator> <name pos:line="2865" pos:column="35">MClassifierRole<pos:position pos:line="2865" pos:column="50"/></name></expr>)<pos:position pos:line="2865" pos:column="51"/></condition><then pos:line="2865" pos:column="51"> <block pos:line="2865" pos:column="52">{
                <expr_stmt><expr><operator pos:line="2866" pos:column="17">(<pos:position pos:line="2866" pos:column="18"/></operator><operator pos:line="2866" pos:column="18">(<pos:position pos:line="2866" pos:column="19"/></operator><name pos:line="2866" pos:column="19">MClassifierRole<pos:position pos:line="2866" pos:column="34"/></name><operator pos:line="2866" pos:column="34">)<pos:position pos:line="2866" pos:column="35"/></operator> <name pos:line="2866" pos:column="36">handle<pos:position pos:line="2866" pos:column="42"/></name><operator pos:line="2866" pos:column="42">)<pos:position pos:line="2866" pos:column="43"/></operator><operator pos:line="2866" pos:column="43">.<pos:position pos:line="2866" pos:column="44"/></operator><call><name pos:line="2866" pos:column="44">setMultiplicity<pos:position pos:line="2866" pos:column="59"/></name><argument_list pos:line="2866" pos:column="59">(<argument><expr><name pos:line="2866" pos:column="60">mult<pos:position pos:line="2866" pos:column="64"/></name></expr></argument>)<pos:position pos:line="2866" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="2866" pos:column="66"/></expr_stmt>
                <return pos:line="2867" pos:column="17">return;<pos:position pos:line="2867" pos:column="24"/></return>
            }<pos:position pos:line="2868" pos:column="14"/></block></then></if>
            <if pos:line="2869" pos:column="13">if <condition pos:line="2869" pos:column="16">(<expr><name pos:line="2869" pos:column="17">handle<pos:position pos:line="2869" pos:column="23"/></name> <operator pos:line="2869" pos:column="24">instanceof<pos:position pos:line="2869" pos:column="34"/></operator> <name pos:line="2869" pos:column="35">MStructuralFeature<pos:position pos:line="2869" pos:column="53"/></name></expr>)<pos:position pos:line="2869" pos:column="54"/></condition><then pos:line="2869" pos:column="54"> <block pos:line="2869" pos:column="55">{
                <expr_stmt><expr><operator pos:line="2870" pos:column="17">(<pos:position pos:line="2870" pos:column="18"/></operator><operator pos:line="2870" pos:column="18">(<pos:position pos:line="2870" pos:column="19"/></operator><name pos:line="2870" pos:column="19">MStructuralFeature<pos:position pos:line="2870" pos:column="37"/></name><operator pos:line="2870" pos:column="37">)<pos:position pos:line="2870" pos:column="38"/></operator> <name pos:line="2870" pos:column="39">handle<pos:position pos:line="2870" pos:column="45"/></name><operator pos:line="2870" pos:column="45">)<pos:position pos:line="2870" pos:column="46"/></operator><operator pos:line="2870" pos:column="46">.<pos:position pos:line="2870" pos:column="47"/></operator><call><name pos:line="2870" pos:column="47">setMultiplicity<pos:position pos:line="2870" pos:column="62"/></name><argument_list pos:line="2870" pos:column="62">(<argument><expr><name pos:line="2870" pos:column="63">mult<pos:position pos:line="2870" pos:column="67"/></name></expr></argument>)<pos:position pos:line="2870" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="2870" pos:column="69"/></expr_stmt>
                <return pos:line="2871" pos:column="17">return;<pos:position pos:line="2871" pos:column="24"/></return>
            }<pos:position pos:line="2872" pos:column="14"/></block></then></if>
            <if pos:line="2873" pos:column="13">if <condition pos:line="2873" pos:column="16">(<expr><name pos:line="2873" pos:column="17">handle<pos:position pos:line="2873" pos:column="23"/></name> <operator pos:line="2873" pos:column="24">instanceof<pos:position pos:line="2873" pos:column="34"/></operator> <name pos:line="2873" pos:column="35">MAssociationEnd<pos:position pos:line="2873" pos:column="50"/></name></expr>)<pos:position pos:line="2873" pos:column="51"/></condition><then pos:line="2873" pos:column="51"> <block pos:line="2873" pos:column="52">{
                <expr_stmt><expr><operator pos:line="2874" pos:column="17">(<pos:position pos:line="2874" pos:column="18"/></operator><operator pos:line="2874" pos:column="18">(<pos:position pos:line="2874" pos:column="19"/></operator><name pos:line="2874" pos:column="19">MAssociationEnd<pos:position pos:line="2874" pos:column="34"/></name><operator pos:line="2874" pos:column="34">)<pos:position pos:line="2874" pos:column="35"/></operator> <name pos:line="2874" pos:column="36">handle<pos:position pos:line="2874" pos:column="42"/></name><operator pos:line="2874" pos:column="42">)<pos:position pos:line="2874" pos:column="43"/></operator><operator pos:line="2874" pos:column="43">.<pos:position pos:line="2874" pos:column="44"/></operator><call><name pos:line="2874" pos:column="44">setMultiplicity<pos:position pos:line="2874" pos:column="59"/></name><argument_list pos:line="2874" pos:column="59">(<argument><expr><name pos:line="2874" pos:column="60">mult<pos:position pos:line="2874" pos:column="64"/></name></expr></argument>)<pos:position pos:line="2874" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="2874" pos:column="66"/></expr_stmt>
                <return pos:line="2875" pos:column="17">return;<pos:position pos:line="2875" pos:column="24"/></return>
            }<pos:position pos:line="2876" pos:column="14"/></block></then></if>
        }<pos:position pos:line="2877" pos:column="10"/></block></then></if>
        <throw pos:line="2878" pos:column="9">throw <expr><operator pos:line="2878" pos:column="15">new<pos:position pos:line="2878" pos:column="18"/></operator> <call><name pos:line="2878" pos:column="19">IllegalArgumentException<pos:position pos:line="2878" pos:column="43"/></name><argument_list pos:line="2878" pos:column="43">(<argument><expr><literal type="string" pos:line="2878" pos:column="44">"handle: "<pos:position pos:line="2878" pos:column="54"/></literal> <operator pos:line="2878" pos:column="55">+<pos:position pos:line="2878" pos:column="56"/></operator> <name pos:line="2878" pos:column="57">handle<pos:position pos:line="2878" pos:column="63"/></name>
                <operator pos:line="2879" pos:column="17">+<pos:position pos:line="2879" pos:column="18"/></operator> <literal type="string" pos:line="2879" pos:column="19">" or arg: "<pos:position pos:line="2879" pos:column="30"/></literal> <operator pos:line="2879" pos:column="31">+<pos:position pos:line="2879" pos:column="32"/></operator> <name pos:line="2879" pos:column="33">arg<pos:position pos:line="2879" pos:column="36"/></name></expr></argument>)<pos:position pos:line="2879" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="2879" pos:column="38"/></throw>
    }<pos:position pos:line="2880" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="2882" pos:column="5">/**
     * Sets a name of some modelelement.
     *
     * @param handle is the model element
     * @param name to set
     */</comment>
    <function><specifier pos:line="2888" pos:column="5">public<pos:position pos:line="2888" pos:column="11"/></specifier> <type><name pos:line="2888" pos:column="12">void<pos:position pos:line="2888" pos:column="16"/></name></type> <name pos:line="2888" pos:column="17">setName<pos:position pos:line="2888" pos:column="24"/></name><parameter_list pos:line="2888" pos:column="24">(<parameter><decl><type><name pos:line="2888" pos:column="25">Object<pos:position pos:line="2888" pos:column="31"/></name></type> <name pos:line="2888" pos:column="32">handle<pos:position pos:line="2888" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2888" pos:column="40">String<pos:position pos:line="2888" pos:column="46"/></name></type> <name pos:line="2888" pos:column="47">name<pos:position pos:line="2888" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="2888" pos:column="52"/></parameter_list> <block pos:line="2888" pos:column="53">{
        <if pos:line="2889" pos:column="9">if <condition pos:line="2889" pos:column="12">(<expr><operator pos:line="2889" pos:column="13">(<pos:position pos:line="2889" pos:column="14"/></operator><name pos:line="2889" pos:column="14">handle<pos:position pos:line="2889" pos:column="20"/></name> <operator pos:line="2889" pos:column="21">instanceof<pos:position pos:line="2889" pos:column="31"/></operator> <name pos:line="2889" pos:column="32">MModelElement<pos:position pos:line="2889" pos:column="45"/></name><operator pos:line="2889" pos:column="45">)<pos:position pos:line="2889" pos:column="46"/></operator> <operator pos:line="2889" pos:column="47">&amp;&amp;<pos:position pos:line="2889" pos:column="57"/></operator> <operator pos:line="2889" pos:column="50">(<pos:position pos:line="2889" pos:column="51"/></operator><name pos:line="2889" pos:column="51">name<pos:position pos:line="2889" pos:column="55"/></name> <operator pos:line="2889" pos:column="56">!=<pos:position pos:line="2889" pos:column="58"/></operator> <literal type="null" pos:line="2889" pos:column="59">null<pos:position pos:line="2889" pos:column="63"/></literal><operator pos:line="2889" pos:column="63">)<pos:position pos:line="2889" pos:column="64"/></operator></expr>)<pos:position pos:line="2889" pos:column="65"/></condition><then pos:line="2889" pos:column="65"> <block pos:line="2889" pos:column="66">{
            <comment type="line" pos:line="2890" pos:column="13">// The following code is a workaround for issue</comment>
            <comment type="line" pos:line="2891" pos:column="13">// http://argouml.tigris.org/issues/show_bug.cgi?id=2847.</comment>
            <comment type="line" pos:line="2892" pos:column="13">// The cause is</comment>
            <comment type="line" pos:line="2893" pos:column="13">// not known and the best fix available for the moment is to remove</comment>
            <comment type="line" pos:line="2894" pos:column="13">// the corruptions as they are found.</comment>

            <decl_stmt><decl><type><name pos:line="2896" pos:column="13">int<pos:position pos:line="2896" pos:column="16"/></name></type> <name pos:line="2896" pos:column="17">pos<pos:position pos:line="2896" pos:column="20"/></name> <init pos:line="2896" pos:column="21">= <expr><literal type="number" pos:line="2896" pos:column="23">0<pos:position pos:line="2896" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="2896" pos:column="25"/></decl_stmt>
            <while pos:line="2897" pos:column="13">while <condition pos:line="2897" pos:column="19">(<expr><operator pos:line="2897" pos:column="20">(<pos:position pos:line="2897" pos:column="21"/></operator><name pos:line="2897" pos:column="21">pos<pos:position pos:line="2897" pos:column="24"/></name> <operator pos:line="2897" pos:column="25">=<pos:position pos:line="2897" pos:column="26"/></operator> <call><name><name pos:line="2897" pos:column="27">name<pos:position pos:line="2897" pos:column="31"/></name><operator pos:line="2897" pos:column="31">.<pos:position pos:line="2897" pos:column="32"/></operator><name pos:line="2897" pos:column="32">indexOf<pos:position pos:line="2897" pos:column="39"/></name></name><argument_list pos:line="2897" pos:column="39">(<argument><expr><literal type="number" pos:line="2897" pos:column="40">0xffff<pos:position pos:line="2897" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="2897" pos:column="47"/></argument_list></call><operator pos:line="2897" pos:column="47">)<pos:position pos:line="2897" pos:column="48"/></operator> <operator pos:line="2897" pos:column="49">&gt;=<pos:position pos:line="2897" pos:column="54"/></operator> <literal type="number" pos:line="2897" pos:column="52">0<pos:position pos:line="2897" pos:column="53"/></literal></expr>)<pos:position pos:line="2897" pos:column="54"/></condition> <block pos:line="2897" pos:column="55">{
                <expr_stmt><expr><name pos:line="2898" pos:column="17">name<pos:position pos:line="2898" pos:column="21"/></name> <operator pos:line="2898" pos:column="22">=<pos:position pos:line="2898" pos:column="23"/></operator>
                    <call><name><name pos:line="2899" pos:column="21">name<pos:position pos:line="2899" pos:column="25"/></name><operator pos:line="2899" pos:column="25">.<pos:position pos:line="2899" pos:column="26"/></operator><name pos:line="2899" pos:column="26">substring<pos:position pos:line="2899" pos:column="35"/></name></name><argument_list pos:line="2899" pos:column="35">(<argument><expr><literal type="number" pos:line="2899" pos:column="36">0<pos:position pos:line="2899" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="2899" pos:column="39">pos<pos:position pos:line="2899" pos:column="42"/></name></expr></argument>)<pos:position pos:line="2899" pos:column="43"/></argument_list></call>
                    <operator pos:line="2900" pos:column="21">+<pos:position pos:line="2900" pos:column="22"/></operator> <call><name><name pos:line="2900" pos:column="23">name<pos:position pos:line="2900" pos:column="27"/></name><operator pos:line="2900" pos:column="27">.<pos:position pos:line="2900" pos:column="28"/></operator><name pos:line="2900" pos:column="28">substring<pos:position pos:line="2900" pos:column="37"/></name></name><argument_list pos:line="2900" pos:column="37">(<argument><expr><name pos:line="2900" pos:column="38">pos<pos:position pos:line="2900" pos:column="41"/></name> <operator pos:line="2900" pos:column="42">+<pos:position pos:line="2900" pos:column="43"/></operator> <literal type="number" pos:line="2900" pos:column="44">1<pos:position pos:line="2900" pos:column="45"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="2900" pos:column="47">name<pos:position pos:line="2900" pos:column="51"/></name><operator pos:line="2900" pos:column="51">.<pos:position pos:line="2900" pos:column="52"/></operator><name pos:line="2900" pos:column="52">length<pos:position pos:line="2900" pos:column="58"/></name></name><argument_list pos:line="2900" pos:column="58">()<pos:position pos:line="2900" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="2900" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="2900" pos:column="62"/></expr_stmt>
                <try pos:line="2901" pos:column="17">try <block pos:line="2901" pos:column="21">{
                    <throw pos:line="2902" pos:column="21">throw <expr><operator pos:line="2902" pos:column="27">new<pos:position pos:line="2902" pos:column="30"/></operator> <call><name pos:line="2902" pos:column="31">UmlException<pos:position pos:line="2902" pos:column="43"/></name><argument_list pos:line="2902" pos:column="43">(
                            <argument><expr><literal type="string" pos:line="2903" pos:column="29">"Illegal character stripped out of element name"<pos:position pos:line="2903" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="2903" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="2903" pos:column="79"/></throw>
                }<pos:position pos:line="2904" pos:column="18"/></block> <catch pos:line="2904" pos:column="19">catch <parameter_list pos:line="2904" pos:column="25">(<parameter><decl><type><name pos:line="2904" pos:column="26">UmlException<pos:position pos:line="2904" pos:column="38"/></name></type> <name pos:line="2904" pos:column="39">e<pos:position pos:line="2904" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="2904" pos:column="41"/></parameter_list> <block pos:line="2904" pos:column="42">{
                    <expr_stmt><expr><call><name><name pos:line="2905" pos:column="21">LOG<pos:position pos:line="2905" pos:column="24"/></name><operator pos:line="2905" pos:column="24">.<pos:position pos:line="2905" pos:column="25"/></operator><name pos:line="2905" pos:column="25">warn<pos:position pos:line="2905" pos:column="29"/></name></name><argument_list pos:line="2905" pos:column="29">(<argument><expr><literal type="string" pos:line="2905" pos:column="30">"0xFFFF detected in element name"<pos:position pos:line="2905" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="2905" pos:column="65">e<pos:position pos:line="2905" pos:column="66"/></name></expr></argument>)<pos:position pos:line="2905" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="2905" pos:column="68"/></expr_stmt>
                }<pos:position pos:line="2906" pos:column="18"/></block></catch></try>
            }<pos:position pos:line="2907" pos:column="14"/></block></while>
            <decl_stmt><decl><type><specifier pos:line="2908" pos:column="13">final<pos:position pos:line="2908" pos:column="18"/></specifier> <name pos:line="2908" pos:column="19">String<pos:position pos:line="2908" pos:column="25"/></name></type> <name pos:line="2908" pos:column="26">safeName<pos:position pos:line="2908" pos:column="34"/></name> <init pos:line="2908" pos:column="35">= <expr><name pos:line="2908" pos:column="37">name<pos:position pos:line="2908" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="2908" pos:column="42"/></decl_stmt>
            
            <decl_stmt><decl><type><specifier pos:line="2910" pos:column="13">final<pos:position pos:line="2910" pos:column="18"/></specifier> <name pos:line="2910" pos:column="19">MModelElement<pos:position pos:line="2910" pos:column="32"/></name></type> <name pos:line="2910" pos:column="33">modelElement<pos:position pos:line="2910" pos:column="45"/></name> <init pos:line="2910" pos:column="46">= <expr><operator pos:line="2910" pos:column="48">(<pos:position pos:line="2910" pos:column="49"/></operator><name pos:line="2910" pos:column="49">MModelElement<pos:position pos:line="2910" pos:column="62"/></name><operator pos:line="2910" pos:column="62">)<pos:position pos:line="2910" pos:column="63"/></operator> <name pos:line="2910" pos:column="64">handle<pos:position pos:line="2910" pos:column="70"/></name></expr></init></decl>;<pos:position pos:line="2910" pos:column="71"/></decl_stmt>

            <expr_stmt><expr><call><name><name pos:line="2912" pos:column="13">Model<pos:position pos:line="2912" pos:column="18"/></name><operator pos:line="2912" pos:column="18">.<pos:position pos:line="2912" pos:column="19"/></operator><name pos:line="2912" pos:column="19">notifyMementoCreationObserver<pos:position pos:line="2912" pos:column="48"/></name></name><argument_list pos:line="2912" pos:column="48">(
                <argument><expr><operator pos:line="2913" pos:column="17">new<pos:position pos:line="2913" pos:column="20"/></operator> <class><super><name pos:line="2913" pos:column="21">ModelMemento<pos:position pos:line="2913" pos:column="33"/></name></super><argument_list pos:line="2913" pos:column="33">()<pos:position pos:line="2913" pos:column="35"/></argument_list> <block pos:line="2913" pos:column="36">{
                    <decl_stmt><decl><type><name pos:line="2914" pos:column="21">String<pos:position pos:line="2914" pos:column="27"/></name></type> <name pos:line="2914" pos:column="28">oldName<pos:position pos:line="2914" pos:column="35"/></name> <init pos:line="2914" pos:column="36">= <expr><call><name><name pos:line="2914" pos:column="38">modelElement<pos:position pos:line="2914" pos:column="50"/></name><operator pos:line="2914" pos:column="50">.<pos:position pos:line="2914" pos:column="51"/></operator><name pos:line="2914" pos:column="51">getName<pos:position pos:line="2914" pos:column="58"/></name></name><argument_list pos:line="2914" pos:column="58">()<pos:position pos:line="2914" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="2914" pos:column="61"/></decl_stmt>
                    <function><specifier pos:line="2915" pos:column="21">public<pos:position pos:line="2915" pos:column="27"/></specifier> <type><name pos:line="2915" pos:column="28">void<pos:position pos:line="2915" pos:column="32"/></name></type> <name pos:line="2915" pos:column="33">undo<pos:position pos:line="2915" pos:column="37"/></name><parameter_list pos:line="2915" pos:column="37">()<pos:position pos:line="2915" pos:column="39"/></parameter_list> <block pos:line="2915" pos:column="40">{
                        <expr_stmt><expr><call><name><name pos:line="2916" pos:column="25">modelElement<pos:position pos:line="2916" pos:column="37"/></name><operator pos:line="2916" pos:column="37">.<pos:position pos:line="2916" pos:column="38"/></operator><name pos:line="2916" pos:column="38">setName<pos:position pos:line="2916" pos:column="45"/></name></name><argument_list pos:line="2916" pos:column="45">(<argument><expr><name pos:line="2916" pos:column="46">oldName<pos:position pos:line="2916" pos:column="53"/></name></expr></argument>)<pos:position pos:line="2916" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="2916" pos:column="55"/></expr_stmt>
                    }<pos:position pos:line="2917" pos:column="22"/></block></function>
                    <function><specifier pos:line="2918" pos:column="21">public<pos:position pos:line="2918" pos:column="27"/></specifier> <type><name pos:line="2918" pos:column="28">void<pos:position pos:line="2918" pos:column="32"/></name></type> <name pos:line="2918" pos:column="33">redo<pos:position pos:line="2918" pos:column="37"/></name><parameter_list pos:line="2918" pos:column="37">()<pos:position pos:line="2918" pos:column="39"/></parameter_list> <block pos:line="2918" pos:column="40">{
                        <expr_stmt><expr><call><name><name pos:line="2919" pos:column="25">modelElement<pos:position pos:line="2919" pos:column="37"/></name><operator pos:line="2919" pos:column="37">.<pos:position pos:line="2919" pos:column="38"/></operator><name pos:line="2919" pos:column="38">setName<pos:position pos:line="2919" pos:column="45"/></name></name><argument_list pos:line="2919" pos:column="45">(<argument><expr><name pos:line="2919" pos:column="46">safeName<pos:position pos:line="2919" pos:column="54"/></name></expr></argument>)<pos:position pos:line="2919" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="2919" pos:column="56"/></expr_stmt>
                    }<pos:position pos:line="2920" pos:column="22"/></block></function>
                }<pos:position pos:line="2921" pos:column="18"/></block></class></expr></argument>
            )<pos:position pos:line="2922" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="2922" pos:column="15"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="2923" pos:column="13">modelElement<pos:position pos:line="2923" pos:column="25"/></name><operator pos:line="2923" pos:column="25">.<pos:position pos:line="2923" pos:column="26"/></operator><name pos:line="2923" pos:column="26">setName<pos:position pos:line="2923" pos:column="33"/></name></name><argument_list pos:line="2923" pos:column="33">(<argument><expr><name pos:line="2923" pos:column="34">safeName<pos:position pos:line="2923" pos:column="42"/></name></expr></argument>)<pos:position pos:line="2923" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="2923" pos:column="44"/></expr_stmt>

            <return pos:line="2925" pos:column="13">return;<pos:position pos:line="2925" pos:column="20"/></return>
        }<pos:position pos:line="2926" pos:column="10"/></block></then></if>
        <throw pos:line="2927" pos:column="9">throw <expr><operator pos:line="2927" pos:column="15">new<pos:position pos:line="2927" pos:column="18"/></operator> <call><name pos:line="2927" pos:column="19">IllegalArgumentException<pos:position pos:line="2927" pos:column="43"/></name><argument_list pos:line="2927" pos:column="43">(<argument><expr><literal type="string" pos:line="2927" pos:column="44">"handle: "<pos:position pos:line="2927" pos:column="54"/></literal> <operator pos:line="2927" pos:column="55">+<pos:position pos:line="2927" pos:column="56"/></operator> <name pos:line="2927" pos:column="57">handle<pos:position pos:line="2927" pos:column="63"/></name>
                <operator pos:line="2928" pos:column="17">+<pos:position pos:line="2928" pos:column="18"/></operator> <literal type="string" pos:line="2928" pos:column="19">" or name: "<pos:position pos:line="2928" pos:column="31"/></literal> <operator pos:line="2928" pos:column="32">+<pos:position pos:line="2928" pos:column="33"/></operator> <name pos:line="2928" pos:column="34">name<pos:position pos:line="2928" pos:column="38"/></name></expr></argument>)<pos:position pos:line="2928" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="2928" pos:column="40"/></throw>
    }<pos:position pos:line="2929" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="2931" pos:column="5">/**
     * @see org.argouml.model.CoreHelper#setBody(
     *         java.lang.Object, java.lang.String)
     */</comment>
    <function><specifier pos:line="2935" pos:column="5">public<pos:position pos:line="2935" pos:column="11"/></specifier> <type><name pos:line="2935" pos:column="12">void<pos:position pos:line="2935" pos:column="16"/></name></type> <name pos:line="2935" pos:column="17">setBody<pos:position pos:line="2935" pos:column="24"/></name><parameter_list pos:line="2935" pos:column="24">(<parameter><decl><type><name pos:line="2935" pos:column="25">Object<pos:position pos:line="2935" pos:column="31"/></name></type> <name pos:line="2935" pos:column="32">handle<pos:position pos:line="2935" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2935" pos:column="40">String<pos:position pos:line="2935" pos:column="46"/></name></type> <name pos:line="2935" pos:column="47">body<pos:position pos:line="2935" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="2935" pos:column="52"/></parameter_list> <block pos:line="2935" pos:column="53">{
        <if pos:line="2936" pos:column="9">if <condition pos:line="2936" pos:column="12">(<expr><operator pos:line="2936" pos:column="13">(<pos:position pos:line="2936" pos:column="14"/></operator><name pos:line="2936" pos:column="14">handle<pos:position pos:line="2936" pos:column="20"/></name> <operator pos:line="2936" pos:column="21">instanceof<pos:position pos:line="2936" pos:column="31"/></operator> <name pos:line="2936" pos:column="32">MComment<pos:position pos:line="2936" pos:column="40"/></name><operator pos:line="2936" pos:column="40">)<pos:position pos:line="2936" pos:column="41"/></operator> <operator pos:line="2936" pos:column="42">&amp;&amp;<pos:position pos:line="2936" pos:column="52"/></operator> <operator pos:line="2936" pos:column="45">(<pos:position pos:line="2936" pos:column="46"/></operator><name pos:line="2936" pos:column="46">body<pos:position pos:line="2936" pos:column="50"/></name> <operator pos:line="2936" pos:column="51">!=<pos:position pos:line="2936" pos:column="53"/></operator> <literal type="null" pos:line="2936" pos:column="54">null<pos:position pos:line="2936" pos:column="58"/></literal><operator pos:line="2936" pos:column="58">)<pos:position pos:line="2936" pos:column="59"/></operator></expr>)<pos:position pos:line="2936" pos:column="60"/></condition><then pos:line="2936" pos:column="60"> <block pos:line="2936" pos:column="61">{
            <comment type="line" pos:line="2937" pos:column="13">//in UML 1.3 we store it in the name:</comment>
            <expr_stmt><expr><operator pos:line="2938" pos:column="13">(<pos:position pos:line="2938" pos:column="14"/></operator><operator pos:line="2938" pos:column="14">(<pos:position pos:line="2938" pos:column="15"/></operator><name pos:line="2938" pos:column="15">MComment<pos:position pos:line="2938" pos:column="23"/></name><operator pos:line="2938" pos:column="23">)<pos:position pos:line="2938" pos:column="24"/></operator> <name pos:line="2938" pos:column="25">handle<pos:position pos:line="2938" pos:column="31"/></name><operator pos:line="2938" pos:column="31">)<pos:position pos:line="2938" pos:column="32"/></operator><operator pos:line="2938" pos:column="32">.<pos:position pos:line="2938" pos:column="33"/></operator><call><name pos:line="2938" pos:column="33">setName<pos:position pos:line="2938" pos:column="40"/></name><argument_list pos:line="2938" pos:column="40">(<argument><expr><name pos:line="2938" pos:column="41">body<pos:position pos:line="2938" pos:column="45"/></name></expr></argument>)<pos:position pos:line="2938" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="2938" pos:column="47"/></expr_stmt>
        }<pos:position pos:line="2939" pos:column="10"/></block></then></if>
    }<pos:position pos:line="2940" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="2942" pos:column="5">/**
     * Sets a namespace of some modelelement.
     *
     * @param handle is the model element
     * @param ns is the namespace. Can be &lt;code&gt;null&lt;/code&gt;.
     */</comment>
    <function><specifier pos:line="2948" pos:column="5">public<pos:position pos:line="2948" pos:column="11"/></specifier> <type><name pos:line="2948" pos:column="12">void<pos:position pos:line="2948" pos:column="16"/></name></type> <name pos:line="2948" pos:column="17">setNamespace<pos:position pos:line="2948" pos:column="29"/></name><parameter_list pos:line="2948" pos:column="29">(<parameter><decl><type><name pos:line="2948" pos:column="30">Object<pos:position pos:line="2948" pos:column="36"/></name></type> <name pos:line="2948" pos:column="37">handle<pos:position pos:line="2948" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2948" pos:column="45">Object<pos:position pos:line="2948" pos:column="51"/></name></type> <name pos:line="2948" pos:column="52">ns<pos:position pos:line="2948" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2948" pos:column="55"/></parameter_list> <block pos:line="2948" pos:column="56">{
        <if pos:line="2949" pos:column="9">if <condition pos:line="2949" pos:column="12">(<expr><name pos:line="2949" pos:column="13">handle<pos:position pos:line="2949" pos:column="19"/></name> <operator pos:line="2949" pos:column="20">instanceof<pos:position pos:line="2949" pos:column="30"/></operator> <name pos:line="2949" pos:column="31">MModelElement<pos:position pos:line="2949" pos:column="44"/></name>
            <operator pos:line="2950" pos:column="13">&amp;&amp;<pos:position pos:line="2950" pos:column="23"/></operator> <operator pos:line="2950" pos:column="16">(<pos:position pos:line="2950" pos:column="17"/></operator><name pos:line="2950" pos:column="17">ns<pos:position pos:line="2950" pos:column="19"/></name> <operator pos:line="2950" pos:column="20">==<pos:position pos:line="2950" pos:column="22"/></operator> <literal type="null" pos:line="2950" pos:column="23">null<pos:position pos:line="2950" pos:column="27"/></literal> <operator pos:line="2950" pos:column="28">||<pos:position pos:line="2950" pos:column="30"/></operator> <name pos:line="2950" pos:column="31">ns<pos:position pos:line="2950" pos:column="33"/></name> <operator pos:line="2950" pos:column="34">instanceof<pos:position pos:line="2950" pos:column="44"/></operator> <name pos:line="2950" pos:column="45">MNamespace<pos:position pos:line="2950" pos:column="55"/></name><operator pos:line="2950" pos:column="55">)<pos:position pos:line="2950" pos:column="56"/></operator></expr>)<pos:position pos:line="2950" pos:column="57"/></condition><then pos:line="2950" pos:column="57"> <block pos:line="2950" pos:column="58">{
            <expr_stmt><expr><operator pos:line="2951" pos:column="13">(<pos:position pos:line="2951" pos:column="14"/></operator><operator pos:line="2951" pos:column="14">(<pos:position pos:line="2951" pos:column="15"/></operator><name pos:line="2951" pos:column="15">MModelElement<pos:position pos:line="2951" pos:column="28"/></name><operator pos:line="2951" pos:column="28">)<pos:position pos:line="2951" pos:column="29"/></operator> <name pos:line="2951" pos:column="30">handle<pos:position pos:line="2951" pos:column="36"/></name><operator pos:line="2951" pos:column="36">)<pos:position pos:line="2951" pos:column="37"/></operator><operator pos:line="2951" pos:column="37">.<pos:position pos:line="2951" pos:column="38"/></operator><call><name pos:line="2951" pos:column="38">setNamespace<pos:position pos:line="2951" pos:column="50"/></name><argument_list pos:line="2951" pos:column="50">(<argument><expr><operator pos:line="2951" pos:column="51">(<pos:position pos:line="2951" pos:column="52"/></operator><name pos:line="2951" pos:column="52">MNamespace<pos:position pos:line="2951" pos:column="62"/></name><operator pos:line="2951" pos:column="62">)<pos:position pos:line="2951" pos:column="63"/></operator> <name pos:line="2951" pos:column="64">ns<pos:position pos:line="2951" pos:column="66"/></name></expr></argument>)<pos:position pos:line="2951" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="2951" pos:column="68"/></expr_stmt>
            <return pos:line="2952" pos:column="13">return;<pos:position pos:line="2952" pos:column="20"/></return>
        }<pos:position pos:line="2953" pos:column="10"/></block></then></if>
        <throw pos:line="2954" pos:column="9">throw <expr><operator pos:line="2954" pos:column="15">new<pos:position pos:line="2954" pos:column="18"/></operator> <call><name pos:line="2954" pos:column="19">IllegalArgumentException<pos:position pos:line="2954" pos:column="43"/></name><argument_list pos:line="2954" pos:column="43">(<argument><expr><literal type="string" pos:line="2954" pos:column="44">"handle: "<pos:position pos:line="2954" pos:column="54"/></literal> <operator pos:line="2954" pos:column="55">+<pos:position pos:line="2954" pos:column="56"/></operator> <name pos:line="2954" pos:column="57">handle<pos:position pos:line="2954" pos:column="63"/></name>
                <operator pos:line="2955" pos:column="17">+<pos:position pos:line="2955" pos:column="18"/></operator> <literal type="string" pos:line="2955" pos:column="19">" or ns: "<pos:position pos:line="2955" pos:column="29"/></literal> <operator pos:line="2955" pos:column="30">+<pos:position pos:line="2955" pos:column="31"/></operator> <name pos:line="2955" pos:column="32">ns<pos:position pos:line="2955" pos:column="34"/></name></expr></argument>)<pos:position pos:line="2955" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="2955" pos:column="36"/></throw>
    }<pos:position pos:line="2956" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="2958" pos:column="5">/**
     * Sets the navigability of some association end.
     *
     * @param handle is the association end
     * @param flag is the navigability flag
     */</comment>
    <function><specifier pos:line="2964" pos:column="5">public<pos:position pos:line="2964" pos:column="11"/></specifier> <type><name pos:line="2964" pos:column="12">void<pos:position pos:line="2964" pos:column="16"/></name></type> <name pos:line="2964" pos:column="17">setNavigable<pos:position pos:line="2964" pos:column="29"/></name><parameter_list pos:line="2964" pos:column="29">(<parameter><decl><type><name pos:line="2964" pos:column="30">Object<pos:position pos:line="2964" pos:column="36"/></name></type> <name pos:line="2964" pos:column="37">handle<pos:position pos:line="2964" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2964" pos:column="45">boolean<pos:position pos:line="2964" pos:column="52"/></name></type> <name pos:line="2964" pos:column="53">flag<pos:position pos:line="2964" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="2964" pos:column="58"/></parameter_list> <block pos:line="2964" pos:column="59">{
        <if pos:line="2965" pos:column="9">if <condition pos:line="2965" pos:column="12">(<expr><name pos:line="2965" pos:column="13">handle<pos:position pos:line="2965" pos:column="19"/></name> <operator pos:line="2965" pos:column="20">instanceof<pos:position pos:line="2965" pos:column="30"/></operator> <name pos:line="2965" pos:column="31">MAssociationEnd<pos:position pos:line="2965" pos:column="46"/></name></expr>)<pos:position pos:line="2965" pos:column="47"/></condition><then pos:line="2965" pos:column="47"> <block pos:line="2965" pos:column="48">{
            <expr_stmt><expr><operator pos:line="2966" pos:column="13">(<pos:position pos:line="2966" pos:column="14"/></operator><operator pos:line="2966" pos:column="14">(<pos:position pos:line="2966" pos:column="15"/></operator><name pos:line="2966" pos:column="15">MAssociationEnd<pos:position pos:line="2966" pos:column="30"/></name><operator pos:line="2966" pos:column="30">)<pos:position pos:line="2966" pos:column="31"/></operator> <name pos:line="2966" pos:column="32">handle<pos:position pos:line="2966" pos:column="38"/></name><operator pos:line="2966" pos:column="38">)<pos:position pos:line="2966" pos:column="39"/></operator><operator pos:line="2966" pos:column="39">.<pos:position pos:line="2966" pos:column="40"/></operator><call><name pos:line="2966" pos:column="40">setNavigable<pos:position pos:line="2966" pos:column="52"/></name><argument_list pos:line="2966" pos:column="52">(<argument><expr><name pos:line="2966" pos:column="53">flag<pos:position pos:line="2966" pos:column="57"/></name></expr></argument>)<pos:position pos:line="2966" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="2966" pos:column="59"/></expr_stmt>
            <return pos:line="2967" pos:column="13">return;<pos:position pos:line="2967" pos:column="20"/></return>
        }<pos:position pos:line="2968" pos:column="10"/></block></then></if>
        <throw pos:line="2969" pos:column="9">throw <expr><operator pos:line="2969" pos:column="15">new<pos:position pos:line="2969" pos:column="18"/></operator> <call><name pos:line="2969" pos:column="19">IllegalArgumentException<pos:position pos:line="2969" pos:column="43"/></name><argument_list pos:line="2969" pos:column="43">(<argument><expr><literal type="string" pos:line="2969" pos:column="44">"handle: "<pos:position pos:line="2969" pos:column="54"/></literal> <operator pos:line="2969" pos:column="55">+<pos:position pos:line="2969" pos:column="56"/></operator> <name pos:line="2969" pos:column="57">handle<pos:position pos:line="2969" pos:column="63"/></name></expr></argument>)<pos:position pos:line="2969" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="2969" pos:column="65"/></throw>
    }<pos:position pos:line="2970" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="2972" pos:column="5">/**
     * Set the OrderingKind of a given AssociationEnd.
     *
     * @param handle AssociationEnd
     * @param ok OrderingKind
     */</comment>
    <function><specifier pos:line="2978" pos:column="5">public<pos:position pos:line="2978" pos:column="11"/></specifier> <type><name pos:line="2978" pos:column="12">void<pos:position pos:line="2978" pos:column="16"/></name></type> <name pos:line="2978" pos:column="17">setOrdering<pos:position pos:line="2978" pos:column="28"/></name><parameter_list pos:line="2978" pos:column="28">(<parameter><decl><type><name pos:line="2978" pos:column="29">Object<pos:position pos:line="2978" pos:column="35"/></name></type> <name pos:line="2978" pos:column="36">handle<pos:position pos:line="2978" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2978" pos:column="44">Object<pos:position pos:line="2978" pos:column="50"/></name></type> <name pos:line="2978" pos:column="51">ok<pos:position pos:line="2978" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2978" pos:column="54"/></parameter_list> <block pos:line="2978" pos:column="55">{
        <if pos:line="2979" pos:column="9">if <condition pos:line="2979" pos:column="12">(<expr><name pos:line="2979" pos:column="13">handle<pos:position pos:line="2979" pos:column="19"/></name> <operator pos:line="2979" pos:column="20">instanceof<pos:position pos:line="2979" pos:column="30"/></operator> <name pos:line="2979" pos:column="31">MAssociationEnd<pos:position pos:line="2979" pos:column="46"/></name> <operator pos:line="2979" pos:column="47">&amp;&amp;<pos:position pos:line="2979" pos:column="57"/></operator> <name pos:line="2979" pos:column="50">ok<pos:position pos:line="2979" pos:column="52"/></name> <operator pos:line="2979" pos:column="53">instanceof<pos:position pos:line="2979" pos:column="63"/></operator> <name pos:line="2979" pos:column="64">MOrderingKind<pos:position pos:line="2979" pos:column="77"/></name></expr>)<pos:position pos:line="2979" pos:column="78"/></condition><then pos:line="2979" pos:column="78"> <block pos:line="2979" pos:column="79">{
            <expr_stmt><expr><operator pos:line="2980" pos:column="13">(<pos:position pos:line="2980" pos:column="14"/></operator><operator pos:line="2980" pos:column="14">(<pos:position pos:line="2980" pos:column="15"/></operator><name pos:line="2980" pos:column="15">MAssociationEnd<pos:position pos:line="2980" pos:column="30"/></name><operator pos:line="2980" pos:column="30">)<pos:position pos:line="2980" pos:column="31"/></operator> <name pos:line="2980" pos:column="32">handle<pos:position pos:line="2980" pos:column="38"/></name><operator pos:line="2980" pos:column="38">)<pos:position pos:line="2980" pos:column="39"/></operator><operator pos:line="2980" pos:column="39">.<pos:position pos:line="2980" pos:column="40"/></operator><call><name pos:line="2980" pos:column="40">setOrdering<pos:position pos:line="2980" pos:column="51"/></name><argument_list pos:line="2980" pos:column="51">(<argument><expr><operator pos:line="2980" pos:column="52">(<pos:position pos:line="2980" pos:column="53"/></operator><name pos:line="2980" pos:column="53">MOrderingKind<pos:position pos:line="2980" pos:column="66"/></name><operator pos:line="2980" pos:column="66">)<pos:position pos:line="2980" pos:column="67"/></operator> <name pos:line="2980" pos:column="68">ok<pos:position pos:line="2980" pos:column="70"/></name></expr></argument>)<pos:position pos:line="2980" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="2980" pos:column="72"/></expr_stmt>
            <return pos:line="2981" pos:column="13">return;<pos:position pos:line="2981" pos:column="20"/></return>
        }<pos:position pos:line="2982" pos:column="10"/></block></then></if>
        <throw pos:line="2983" pos:column="9">throw <expr><operator pos:line="2983" pos:column="15">new<pos:position pos:line="2983" pos:column="18"/></operator> <call><name pos:line="2983" pos:column="19">IllegalArgumentException<pos:position pos:line="2983" pos:column="43"/></name><argument_list pos:line="2983" pos:column="43">(<argument><expr><literal type="string" pos:line="2983" pos:column="44">"handle: "<pos:position pos:line="2983" pos:column="54"/></literal> <operator pos:line="2983" pos:column="55">+<pos:position pos:line="2983" pos:column="56"/></operator> <name pos:line="2983" pos:column="57">handle<pos:position pos:line="2983" pos:column="63"/></name>
                <operator pos:line="2984" pos:column="17">+<pos:position pos:line="2984" pos:column="18"/></operator> <literal type="string" pos:line="2984" pos:column="19">" or ok: "<pos:position pos:line="2984" pos:column="29"/></literal> <operator pos:line="2984" pos:column="30">+<pos:position pos:line="2984" pos:column="31"/></operator> <name pos:line="2984" pos:column="32">ok<pos:position pos:line="2984" pos:column="34"/></name></expr></argument>)<pos:position pos:line="2984" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="2984" pos:column="36"/></throw>
    }<pos:position pos:line="2985" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="2987" pos:column="5">/**
     * Set the owner of a Feature.
     *
     * @param handle Feature
     * @param owner Classifier or null
     */</comment>
    <function><specifier pos:line="2993" pos:column="5">public<pos:position pos:line="2993" pos:column="11"/></specifier> <type><name pos:line="2993" pos:column="12">void<pos:position pos:line="2993" pos:column="16"/></name></type> <name pos:line="2993" pos:column="17">setOwner<pos:position pos:line="2993" pos:column="25"/></name><parameter_list pos:line="2993" pos:column="25">(<parameter><decl><type><name pos:line="2993" pos:column="26">Object<pos:position pos:line="2993" pos:column="32"/></name></type> <name pos:line="2993" pos:column="33">handle<pos:position pos:line="2993" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2993" pos:column="41">Object<pos:position pos:line="2993" pos:column="47"/></name></type> <name pos:line="2993" pos:column="48">owner<pos:position pos:line="2993" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2993" pos:column="54"/></parameter_list> <block pos:line="2993" pos:column="55">{
        <if pos:line="2994" pos:column="9">if <condition pos:line="2994" pos:column="12">(<expr><name pos:line="2994" pos:column="13">handle<pos:position pos:line="2994" pos:column="19"/></name> <operator pos:line="2994" pos:column="20">instanceof<pos:position pos:line="2994" pos:column="30"/></operator> <name pos:line="2994" pos:column="31">MFeature<pos:position pos:line="2994" pos:column="39"/></name>
            <operator pos:line="2995" pos:column="13">&amp;&amp;<pos:position pos:line="2995" pos:column="23"/></operator> <operator pos:line="2995" pos:column="16">(<pos:position pos:line="2995" pos:column="17"/></operator><name pos:line="2995" pos:column="17">owner<pos:position pos:line="2995" pos:column="22"/></name> <operator pos:line="2995" pos:column="23">==<pos:position pos:line="2995" pos:column="25"/></operator> <literal type="null" pos:line="2995" pos:column="26">null<pos:position pos:line="2995" pos:column="30"/></literal> <operator pos:line="2995" pos:column="31">||<pos:position pos:line="2995" pos:column="33"/></operator> <name pos:line="2995" pos:column="34">owner<pos:position pos:line="2995" pos:column="39"/></name> <operator pos:line="2995" pos:column="40">instanceof<pos:position pos:line="2995" pos:column="50"/></operator> <name pos:line="2995" pos:column="51">MClassifier<pos:position pos:line="2995" pos:column="62"/></name><operator pos:line="2995" pos:column="62">)<pos:position pos:line="2995" pos:column="63"/></operator></expr>)<pos:position pos:line="2995" pos:column="64"/></condition><then pos:line="2995" pos:column="64"> <block pos:line="2995" pos:column="65">{
            <expr_stmt><expr><operator pos:line="2996" pos:column="13">(<pos:position pos:line="2996" pos:column="14"/></operator><operator pos:line="2996" pos:column="14">(<pos:position pos:line="2996" pos:column="15"/></operator><name pos:line="2996" pos:column="15">MFeature<pos:position pos:line="2996" pos:column="23"/></name><operator pos:line="2996" pos:column="23">)<pos:position pos:line="2996" pos:column="24"/></operator> <name pos:line="2996" pos:column="25">handle<pos:position pos:line="2996" pos:column="31"/></name><operator pos:line="2996" pos:column="31">)<pos:position pos:line="2996" pos:column="32"/></operator><operator pos:line="2996" pos:column="32">.<pos:position pos:line="2996" pos:column="33"/></operator><call><name pos:line="2996" pos:column="33">setOwner<pos:position pos:line="2996" pos:column="41"/></name><argument_list pos:line="2996" pos:column="41">(<argument><expr><operator pos:line="2996" pos:column="42">(<pos:position pos:line="2996" pos:column="43"/></operator><name pos:line="2996" pos:column="43">MClassifier<pos:position pos:line="2996" pos:column="54"/></name><operator pos:line="2996" pos:column="54">)<pos:position pos:line="2996" pos:column="55"/></operator> <name pos:line="2996" pos:column="56">owner<pos:position pos:line="2996" pos:column="61"/></name></expr></argument>)<pos:position pos:line="2996" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="2996" pos:column="63"/></expr_stmt>
            <return pos:line="2997" pos:column="13">return;<pos:position pos:line="2997" pos:column="20"/></return>
        }<pos:position pos:line="2998" pos:column="10"/></block></then></if>
        <throw pos:line="2999" pos:column="9">throw <expr><operator pos:line="2999" pos:column="15">new<pos:position pos:line="2999" pos:column="18"/></operator> <call><name pos:line="2999" pos:column="19">IllegalArgumentException<pos:position pos:line="2999" pos:column="43"/></name><argument_list pos:line="2999" pos:column="43">(<argument><expr><literal type="string" pos:line="2999" pos:column="44">"handle: "<pos:position pos:line="2999" pos:column="54"/></literal> <operator pos:line="2999" pos:column="55">+<pos:position pos:line="2999" pos:column="56"/></operator> <name pos:line="2999" pos:column="57">handle<pos:position pos:line="2999" pos:column="63"/></name>
                <operator pos:line="3000" pos:column="17">+<pos:position pos:line="3000" pos:column="18"/></operator> <literal type="string" pos:line="3000" pos:column="19">" or owner: "<pos:position pos:line="3000" pos:column="32"/></literal> <operator pos:line="3000" pos:column="33">+<pos:position pos:line="3000" pos:column="34"/></operator> <name pos:line="3000" pos:column="35">owner<pos:position pos:line="3000" pos:column="40"/></name></expr></argument>)<pos:position pos:line="3000" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="3000" pos:column="42"/></throw>
    }<pos:position pos:line="3001" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="3003" pos:column="5">/**
     * @param handle Feature
     * @param os ScopeKind
     */</comment>
    <function><specifier pos:line="3007" pos:column="5">public<pos:position pos:line="3007" pos:column="11"/></specifier> <type><name pos:line="3007" pos:column="12">void<pos:position pos:line="3007" pos:column="16"/></name></type> <name pos:line="3007" pos:column="17">setOwnerScope<pos:position pos:line="3007" pos:column="30"/></name><parameter_list pos:line="3007" pos:column="30">(<parameter><decl><type><name pos:line="3007" pos:column="31">Object<pos:position pos:line="3007" pos:column="37"/></name></type> <name pos:line="3007" pos:column="38">handle<pos:position pos:line="3007" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3007" pos:column="46">Object<pos:position pos:line="3007" pos:column="52"/></name></type> <name pos:line="3007" pos:column="53">os<pos:position pos:line="3007" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="3007" pos:column="56"/></parameter_list> <block pos:line="3007" pos:column="57">{
        <if pos:line="3008" pos:column="9">if <condition pos:line="3008" pos:column="12">(<expr><name pos:line="3008" pos:column="13">handle<pos:position pos:line="3008" pos:column="19"/></name> <operator pos:line="3008" pos:column="20">instanceof<pos:position pos:line="3008" pos:column="30"/></operator> <name pos:line="3008" pos:column="31">MFeature<pos:position pos:line="3008" pos:column="39"/></name>
            <operator pos:line="3009" pos:column="13">&amp;&amp;<pos:position pos:line="3009" pos:column="23"/></operator> <operator pos:line="3009" pos:column="16">(<pos:position pos:line="3009" pos:column="17"/></operator><name pos:line="3009" pos:column="17">os<pos:position pos:line="3009" pos:column="19"/></name> <operator pos:line="3009" pos:column="20">==<pos:position pos:line="3009" pos:column="22"/></operator> <literal type="null" pos:line="3009" pos:column="23">null<pos:position pos:line="3009" pos:column="27"/></literal> <operator pos:line="3009" pos:column="28">||<pos:position pos:line="3009" pos:column="30"/></operator> <name pos:line="3009" pos:column="31">os<pos:position pos:line="3009" pos:column="33"/></name> <operator pos:line="3009" pos:column="34">instanceof<pos:position pos:line="3009" pos:column="44"/></operator> <name pos:line="3009" pos:column="45">MScopeKind<pos:position pos:line="3009" pos:column="55"/></name><operator pos:line="3009" pos:column="55">)<pos:position pos:line="3009" pos:column="56"/></operator></expr>)<pos:position pos:line="3009" pos:column="57"/></condition><then pos:line="3009" pos:column="57"> <block pos:line="3009" pos:column="58">{
            <expr_stmt><expr><operator pos:line="3010" pos:column="13">(<pos:position pos:line="3010" pos:column="14"/></operator><operator pos:line="3010" pos:column="14">(<pos:position pos:line="3010" pos:column="15"/></operator><name pos:line="3010" pos:column="15">MFeature<pos:position pos:line="3010" pos:column="23"/></name><operator pos:line="3010" pos:column="23">)<pos:position pos:line="3010" pos:column="24"/></operator> <name pos:line="3010" pos:column="25">handle<pos:position pos:line="3010" pos:column="31"/></name><operator pos:line="3010" pos:column="31">)<pos:position pos:line="3010" pos:column="32"/></operator><operator pos:line="3010" pos:column="32">.<pos:position pos:line="3010" pos:column="33"/></operator><call><name pos:line="3010" pos:column="33">setOwnerScope<pos:position pos:line="3010" pos:column="46"/></name><argument_list pos:line="3010" pos:column="46">(<argument><expr><operator pos:line="3010" pos:column="47">(<pos:position pos:line="3010" pos:column="48"/></operator><name pos:line="3010" pos:column="48">MScopeKind<pos:position pos:line="3010" pos:column="58"/></name><operator pos:line="3010" pos:column="58">)<pos:position pos:line="3010" pos:column="59"/></operator> <name pos:line="3010" pos:column="60">os<pos:position pos:line="3010" pos:column="62"/></name></expr></argument>)<pos:position pos:line="3010" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="3010" pos:column="64"/></expr_stmt>
            <return pos:line="3011" pos:column="13">return;<pos:position pos:line="3011" pos:column="20"/></return>
        }<pos:position pos:line="3012" pos:column="10"/></block></then></if>
        <throw pos:line="3013" pos:column="9">throw <expr><operator pos:line="3013" pos:column="15">new<pos:position pos:line="3013" pos:column="18"/></operator> <call><name pos:line="3013" pos:column="19">IllegalArgumentException<pos:position pos:line="3013" pos:column="43"/></name><argument_list pos:line="3013" pos:column="43">(<argument><expr><literal type="string" pos:line="3013" pos:column="44">"handle: "<pos:position pos:line="3013" pos:column="54"/></literal> <operator pos:line="3013" pos:column="55">+<pos:position pos:line="3013" pos:column="56"/></operator> <name pos:line="3013" pos:column="57">handle<pos:position pos:line="3013" pos:column="63"/></name>
                <operator pos:line="3014" pos:column="17">+<pos:position pos:line="3014" pos:column="18"/></operator> <literal type="string" pos:line="3014" pos:column="19">" or os: "<pos:position pos:line="3014" pos:column="29"/></literal> <operator pos:line="3014" pos:column="30">+<pos:position pos:line="3014" pos:column="31"/></operator> <name pos:line="3014" pos:column="32">os<pos:position pos:line="3014" pos:column="34"/></name></expr></argument>)<pos:position pos:line="3014" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="3014" pos:column="36"/></throw>
    }<pos:position pos:line="3015" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="3017" pos:column="5">/**
     * Sets the parameters of a classifier, event, objectflowstate or
     * behavioralfeature.
     *
     * @param handle the classifier, event, objectflowstate or
     * behavioralfeature
     * @param parameters is a Collection of parameters
     */</comment>
    <function><specifier pos:line="3025" pos:column="5">public<pos:position pos:line="3025" pos:column="11"/></specifier> <type><name pos:line="3025" pos:column="12">void<pos:position pos:line="3025" pos:column="16"/></name></type> <name pos:line="3025" pos:column="17">setParameters<pos:position pos:line="3025" pos:column="30"/></name><parameter_list pos:line="3025" pos:column="30">(<parameter><decl><type><name pos:line="3025" pos:column="31">Object<pos:position pos:line="3025" pos:column="37"/></name></type> <name pos:line="3025" pos:column="38">handle<pos:position pos:line="3025" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3025" pos:column="46">Collection<pos:position pos:line="3025" pos:column="56"/></name></type> <name pos:line="3025" pos:column="57">parameters<pos:position pos:line="3025" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="3025" pos:column="68"/></parameter_list> <block pos:line="3025" pos:column="69">{
        <if pos:line="3026" pos:column="9">if <condition pos:line="3026" pos:column="12">(<expr><name pos:line="3026" pos:column="13">handle<pos:position pos:line="3026" pos:column="19"/></name> <operator pos:line="3026" pos:column="20">instanceof<pos:position pos:line="3026" pos:column="30"/></operator> <name pos:line="3026" pos:column="31">MObjectFlowState<pos:position pos:line="3026" pos:column="47"/></name></expr>)<pos:position pos:line="3026" pos:column="48"/></condition><then pos:line="3026" pos:column="48"> <block pos:line="3026" pos:column="49">{
            <expr_stmt><expr><operator pos:line="3027" pos:column="13">(<pos:position pos:line="3027" pos:column="14"/></operator><operator pos:line="3027" pos:column="14">(<pos:position pos:line="3027" pos:column="15"/></operator><name pos:line="3027" pos:column="15">MObjectFlowState<pos:position pos:line="3027" pos:column="31"/></name><operator pos:line="3027" pos:column="31">)<pos:position pos:line="3027" pos:column="32"/></operator> <name pos:line="3027" pos:column="33">handle<pos:position pos:line="3027" pos:column="39"/></name><operator pos:line="3027" pos:column="39">)<pos:position pos:line="3027" pos:column="40"/></operator><operator pos:line="3027" pos:column="40">.<pos:position pos:line="3027" pos:column="41"/></operator><call><name pos:line="3027" pos:column="41">setParameters<pos:position pos:line="3027" pos:column="54"/></name><argument_list pos:line="3027" pos:column="54">(<argument><expr><name pos:line="3027" pos:column="55">parameters<pos:position pos:line="3027" pos:column="65"/></name></expr></argument>)<pos:position pos:line="3027" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="3027" pos:column="67"/></expr_stmt>
            <return pos:line="3028" pos:column="13">return;<pos:position pos:line="3028" pos:column="20"/></return>
        }<pos:position pos:line="3029" pos:column="10"/></block></then></if>
        <if pos:line="3030" pos:column="9">if <condition pos:line="3030" pos:column="12">(<expr><name pos:line="3030" pos:column="13">handle<pos:position pos:line="3030" pos:column="19"/></name> <operator pos:line="3030" pos:column="20">instanceof<pos:position pos:line="3030" pos:column="30"/></operator> <name pos:line="3030" pos:column="31">MClassifier<pos:position pos:line="3030" pos:column="42"/></name></expr>)<pos:position pos:line="3030" pos:column="43"/></condition><then pos:line="3030" pos:column="43"> <block pos:line="3030" pos:column="44">{
            <expr_stmt><expr><operator pos:line="3031" pos:column="13">(<pos:position pos:line="3031" pos:column="14"/></operator><operator pos:line="3031" pos:column="14">(<pos:position pos:line="3031" pos:column="15"/></operator><name pos:line="3031" pos:column="15">MClassifier<pos:position pos:line="3031" pos:column="26"/></name><operator pos:line="3031" pos:column="26">)<pos:position pos:line="3031" pos:column="27"/></operator> <name pos:line="3031" pos:column="28">handle<pos:position pos:line="3031" pos:column="34"/></name><operator pos:line="3031" pos:column="34">)<pos:position pos:line="3031" pos:column="35"/></operator><operator pos:line="3031" pos:column="35">.<pos:position pos:line="3031" pos:column="36"/></operator><call><name pos:line="3031" pos:column="36">setParameters<pos:position pos:line="3031" pos:column="49"/></name><argument_list pos:line="3031" pos:column="49">(<argument><expr><name pos:line="3031" pos:column="50">parameters<pos:position pos:line="3031" pos:column="60"/></name></expr></argument>)<pos:position pos:line="3031" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="3031" pos:column="62"/></expr_stmt>
            <return pos:line="3032" pos:column="13">return;<pos:position pos:line="3032" pos:column="20"/></return>
        }<pos:position pos:line="3033" pos:column="10"/></block></then></if>
        <if pos:line="3034" pos:column="9">if <condition pos:line="3034" pos:column="12">(<expr><name pos:line="3034" pos:column="13">handle<pos:position pos:line="3034" pos:column="19"/></name> <operator pos:line="3034" pos:column="20">instanceof<pos:position pos:line="3034" pos:column="30"/></operator> <name pos:line="3034" pos:column="31">MEvent<pos:position pos:line="3034" pos:column="37"/></name> <operator pos:line="3034" pos:column="38">&amp;&amp;<pos:position pos:line="3034" pos:column="48"/></operator> <name pos:line="3034" pos:column="41">parameters<pos:position pos:line="3034" pos:column="51"/></name> <operator pos:line="3034" pos:column="52">instanceof<pos:position pos:line="3034" pos:column="62"/></operator> <name pos:line="3034" pos:column="63">List<pos:position pos:line="3034" pos:column="67"/></name></expr>)<pos:position pos:line="3034" pos:column="68"/></condition><then pos:line="3034" pos:column="68"> <block pos:line="3034" pos:column="69">{
            <expr_stmt><expr><operator pos:line="3035" pos:column="13">(<pos:position pos:line="3035" pos:column="14"/></operator><operator pos:line="3035" pos:column="14">(<pos:position pos:line="3035" pos:column="15"/></operator><name pos:line="3035" pos:column="15">MEvent<pos:position pos:line="3035" pos:column="21"/></name><operator pos:line="3035" pos:column="21">)<pos:position pos:line="3035" pos:column="22"/></operator> <name pos:line="3035" pos:column="23">handle<pos:position pos:line="3035" pos:column="29"/></name><operator pos:line="3035" pos:column="29">)<pos:position pos:line="3035" pos:column="30"/></operator><operator pos:line="3035" pos:column="30">.<pos:position pos:line="3035" pos:column="31"/></operator><call><name pos:line="3035" pos:column="31">setParameters<pos:position pos:line="3035" pos:column="44"/></name><argument_list pos:line="3035" pos:column="44">(<argument><expr><operator pos:line="3035" pos:column="45">(<pos:position pos:line="3035" pos:column="46"/></operator><name pos:line="3035" pos:column="46">List<pos:position pos:line="3035" pos:column="50"/></name><operator pos:line="3035" pos:column="50">)<pos:position pos:line="3035" pos:column="51"/></operator> <name pos:line="3035" pos:column="52">parameters<pos:position pos:line="3035" pos:column="62"/></name></expr></argument>)<pos:position pos:line="3035" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="3035" pos:column="64"/></expr_stmt>
            <return pos:line="3036" pos:column="13">return;<pos:position pos:line="3036" pos:column="20"/></return>
        }<pos:position pos:line="3037" pos:column="10"/></block></then></if>
        <if pos:line="3038" pos:column="9">if <condition pos:line="3038" pos:column="12">(<expr><name pos:line="3038" pos:column="13">handle<pos:position pos:line="3038" pos:column="19"/></name> <operator pos:line="3038" pos:column="20">instanceof<pos:position pos:line="3038" pos:column="30"/></operator> <name pos:line="3038" pos:column="31">MBehavioralFeature<pos:position pos:line="3038" pos:column="49"/></name>
            <operator pos:line="3039" pos:column="13">&amp;&amp;<pos:position pos:line="3039" pos:column="23"/></operator> <name pos:line="3039" pos:column="16">parameters<pos:position pos:line="3039" pos:column="26"/></name> <operator pos:line="3039" pos:column="27">instanceof<pos:position pos:line="3039" pos:column="37"/></operator> <name pos:line="3039" pos:column="38">List<pos:position pos:line="3039" pos:column="42"/></name></expr>)<pos:position pos:line="3039" pos:column="43"/></condition><then pos:line="3039" pos:column="43"> <block pos:line="3039" pos:column="44">{
            <expr_stmt><expr><operator pos:line="3040" pos:column="13">(<pos:position pos:line="3040" pos:column="14"/></operator><operator pos:line="3040" pos:column="14">(<pos:position pos:line="3040" pos:column="15"/></operator><name pos:line="3040" pos:column="15">MBehavioralFeature<pos:position pos:line="3040" pos:column="33"/></name><operator pos:line="3040" pos:column="33">)<pos:position pos:line="3040" pos:column="34"/></operator> <name pos:line="3040" pos:column="35">handle<pos:position pos:line="3040" pos:column="41"/></name><operator pos:line="3040" pos:column="41">)<pos:position pos:line="3040" pos:column="42"/></operator><operator pos:line="3040" pos:column="42">.<pos:position pos:line="3040" pos:column="43"/></operator><call><name pos:line="3040" pos:column="43">setParameters<pos:position pos:line="3040" pos:column="56"/></name><argument_list pos:line="3040" pos:column="56">(<argument><expr><operator pos:line="3040" pos:column="57">(<pos:position pos:line="3040" pos:column="58"/></operator><name pos:line="3040" pos:column="58">List<pos:position pos:line="3040" pos:column="62"/></name><operator pos:line="3040" pos:column="62">)<pos:position pos:line="3040" pos:column="63"/></operator> <name pos:line="3040" pos:column="64">parameters<pos:position pos:line="3040" pos:column="74"/></name></expr></argument>)<pos:position pos:line="3040" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="3040" pos:column="76"/></expr_stmt>
            <return pos:line="3041" pos:column="13">return;<pos:position pos:line="3041" pos:column="20"/></return>
        }<pos:position pos:line="3042" pos:column="10"/></block></then></if>
        <throw pos:line="3043" pos:column="9">throw <expr><operator pos:line="3043" pos:column="15">new<pos:position pos:line="3043" pos:column="18"/></operator> <call><name pos:line="3043" pos:column="19">IllegalArgumentException<pos:position pos:line="3043" pos:column="43"/></name><argument_list pos:line="3043" pos:column="43">(<argument><expr><literal type="string" pos:line="3043" pos:column="44">"handle: "<pos:position pos:line="3043" pos:column="54"/></literal> <operator pos:line="3043" pos:column="55">+<pos:position pos:line="3043" pos:column="56"/></operator> <name pos:line="3043" pos:column="57">handle<pos:position pos:line="3043" pos:column="63"/></name>
                <operator pos:line="3044" pos:column="17">+<pos:position pos:line="3044" pos:column="18"/></operator> <literal type="string" pos:line="3044" pos:column="19">" or parameters: "<pos:position pos:line="3044" pos:column="37"/></literal> <operator pos:line="3044" pos:column="38">+<pos:position pos:line="3044" pos:column="39"/></operator> <name pos:line="3044" pos:column="40">parameters<pos:position pos:line="3044" pos:column="50"/></name></expr></argument>)<pos:position pos:line="3044" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="3044" pos:column="52"/></throw>
    }<pos:position pos:line="3045" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="3047" pos:column="5">/**
     * Sets the parent of a generalization.
     *
     * @param handle generalization
     * @param parent generalizable element (parent)
     */</comment>
    <function><specifier pos:line="3053" pos:column="5">public<pos:position pos:line="3053" pos:column="11"/></specifier> <type><name pos:line="3053" pos:column="12">void<pos:position pos:line="3053" pos:column="16"/></name></type> <name pos:line="3053" pos:column="17">setParent<pos:position pos:line="3053" pos:column="26"/></name><parameter_list pos:line="3053" pos:column="26">(<parameter><decl><type><name pos:line="3053" pos:column="27">Object<pos:position pos:line="3053" pos:column="33"/></name></type> <name pos:line="3053" pos:column="34">handle<pos:position pos:line="3053" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3053" pos:column="42">Object<pos:position pos:line="3053" pos:column="48"/></name></type> <name pos:line="3053" pos:column="49">parent<pos:position pos:line="3053" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="3053" pos:column="56"/></parameter_list> <block pos:line="3053" pos:column="57">{
        <if pos:line="3054" pos:column="9">if <condition pos:line="3054" pos:column="12">(<expr><name pos:line="3054" pos:column="13">handle<pos:position pos:line="3054" pos:column="19"/></name> <operator pos:line="3054" pos:column="20">instanceof<pos:position pos:line="3054" pos:column="30"/></operator> <name pos:line="3054" pos:column="31">MGeneralization<pos:position pos:line="3054" pos:column="46"/></name>
            <operator pos:line="3055" pos:column="13">&amp;&amp;<pos:position pos:line="3055" pos:column="23"/></operator> <name pos:line="3055" pos:column="16">parent<pos:position pos:line="3055" pos:column="22"/></name> <operator pos:line="3055" pos:column="23">instanceof<pos:position pos:line="3055" pos:column="33"/></operator> <name pos:line="3055" pos:column="34">MGeneralizableElement<pos:position pos:line="3055" pos:column="55"/></name></expr>)<pos:position pos:line="3055" pos:column="56"/></condition><then pos:line="3055" pos:column="56"> <block pos:line="3055" pos:column="57">{
            <expr_stmt><expr><operator pos:line="3056" pos:column="13">(<pos:position pos:line="3056" pos:column="14"/></operator><operator pos:line="3056" pos:column="14">(<pos:position pos:line="3056" pos:column="15"/></operator><name pos:line="3056" pos:column="15">MGeneralization<pos:position pos:line="3056" pos:column="30"/></name><operator pos:line="3056" pos:column="30">)<pos:position pos:line="3056" pos:column="31"/></operator> <name pos:line="3056" pos:column="32">handle<pos:position pos:line="3056" pos:column="38"/></name><operator pos:line="3056" pos:column="38">)<pos:position pos:line="3056" pos:column="39"/></operator><operator pos:line="3056" pos:column="39">.<pos:position pos:line="3056" pos:column="40"/></operator><call><name pos:line="3056" pos:column="40">setParent<pos:position pos:line="3056" pos:column="49"/></name><argument_list pos:line="3056" pos:column="49">(
                <argument><expr><operator pos:line="3057" pos:column="17">(<pos:position pos:line="3057" pos:column="18"/></operator><name pos:line="3057" pos:column="18">MGeneralizableElement<pos:position pos:line="3057" pos:column="39"/></name><operator pos:line="3057" pos:column="39">)<pos:position pos:line="3057" pos:column="40"/></operator> <name pos:line="3057" pos:column="41">parent<pos:position pos:line="3057" pos:column="47"/></name></expr></argument>)<pos:position pos:line="3057" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="3057" pos:column="49"/></expr_stmt>
            <return pos:line="3058" pos:column="13">return;<pos:position pos:line="3058" pos:column="20"/></return>
        }<pos:position pos:line="3059" pos:column="10"/></block></then></if>
        <throw pos:line="3060" pos:column="9">throw <expr><operator pos:line="3060" pos:column="15">new<pos:position pos:line="3060" pos:column="18"/></operator> <call><name pos:line="3060" pos:column="19">IllegalArgumentException<pos:position pos:line="3060" pos:column="43"/></name><argument_list pos:line="3060" pos:column="43">(<argument><expr><literal type="string" pos:line="3060" pos:column="44">"handle: "<pos:position pos:line="3060" pos:column="54"/></literal> <operator pos:line="3060" pos:column="55">+<pos:position pos:line="3060" pos:column="56"/></operator> <name pos:line="3060" pos:column="57">handle<pos:position pos:line="3060" pos:column="63"/></name>
                <operator pos:line="3061" pos:column="17">+<pos:position pos:line="3061" pos:column="18"/></operator> <literal type="string" pos:line="3061" pos:column="19">" or parent: "<pos:position pos:line="3061" pos:column="33"/></literal> <operator pos:line="3061" pos:column="34">+<pos:position pos:line="3061" pos:column="35"/></operator> <name pos:line="3061" pos:column="36">parent<pos:position pos:line="3061" pos:column="42"/></name></expr></argument>)<pos:position pos:line="3061" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="3061" pos:column="44"/></throw>
    }<pos:position pos:line="3062" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="3064" pos:column="5">/**
     * Set the PowerType of a Generalization.
     * @param handle Generalization
     * @param pt Classifier
     */</comment>
    <function><specifier pos:line="3069" pos:column="5">public<pos:position pos:line="3069" pos:column="11"/></specifier> <type><name pos:line="3069" pos:column="12">void<pos:position pos:line="3069" pos:column="16"/></name></type> <name pos:line="3069" pos:column="17">setPowertype<pos:position pos:line="3069" pos:column="29"/></name><parameter_list pos:line="3069" pos:column="29">(<parameter><decl><type><name pos:line="3069" pos:column="30">Object<pos:position pos:line="3069" pos:column="36"/></name></type> <name pos:line="3069" pos:column="37">handle<pos:position pos:line="3069" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3069" pos:column="45">Object<pos:position pos:line="3069" pos:column="51"/></name></type> <name pos:line="3069" pos:column="52">pt<pos:position pos:line="3069" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="3069" pos:column="55"/></parameter_list> <block pos:line="3069" pos:column="56">{
        <if pos:line="3070" pos:column="9">if <condition pos:line="3070" pos:column="12">(<expr><name pos:line="3070" pos:column="13">handle<pos:position pos:line="3070" pos:column="19"/></name> <operator pos:line="3070" pos:column="20">instanceof<pos:position pos:line="3070" pos:column="30"/></operator> <name pos:line="3070" pos:column="31">MGeneralization<pos:position pos:line="3070" pos:column="46"/></name>
                <operator pos:line="3071" pos:column="17">&amp;&amp;<pos:position pos:line="3071" pos:column="27"/></operator> <operator pos:line="3071" pos:column="20">(<pos:position pos:line="3071" pos:column="21"/></operator><name pos:line="3071" pos:column="21">pt<pos:position pos:line="3071" pos:column="23"/></name> <operator pos:line="3071" pos:column="24">==<pos:position pos:line="3071" pos:column="26"/></operator> <literal type="null" pos:line="3071" pos:column="27">null<pos:position pos:line="3071" pos:column="31"/></literal>
                        <operator pos:line="3072" pos:column="25">||<pos:position pos:line="3072" pos:column="27"/></operator> <name pos:line="3072" pos:column="28">pt<pos:position pos:line="3072" pos:column="30"/></name> <operator pos:line="3072" pos:column="31">instanceof<pos:position pos:line="3072" pos:column="41"/></operator> <name pos:line="3072" pos:column="42">MClassifier<pos:position pos:line="3072" pos:column="53"/></name><operator pos:line="3072" pos:column="53">)<pos:position pos:line="3072" pos:column="54"/></operator></expr>)<pos:position pos:line="3072" pos:column="55"/></condition><then pos:line="3072" pos:column="55"> <block pos:line="3072" pos:column="56">{
            <expr_stmt><expr><operator pos:line="3073" pos:column="13">(<pos:position pos:line="3073" pos:column="14"/></operator><operator pos:line="3073" pos:column="14">(<pos:position pos:line="3073" pos:column="15"/></operator><name pos:line="3073" pos:column="15">MGeneralization<pos:position pos:line="3073" pos:column="30"/></name><operator pos:line="3073" pos:column="30">)<pos:position pos:line="3073" pos:column="31"/></operator> <name pos:line="3073" pos:column="32">handle<pos:position pos:line="3073" pos:column="38"/></name><operator pos:line="3073" pos:column="38">)<pos:position pos:line="3073" pos:column="39"/></operator><operator pos:line="3073" pos:column="39">.<pos:position pos:line="3073" pos:column="40"/></operator><call><name pos:line="3073" pos:column="40">setPowertype<pos:position pos:line="3073" pos:column="52"/></name><argument_list pos:line="3073" pos:column="52">(<argument><expr><operator pos:line="3073" pos:column="53">(<pos:position pos:line="3073" pos:column="54"/></operator><name pos:line="3073" pos:column="54">MClassifier<pos:position pos:line="3073" pos:column="65"/></name><operator pos:line="3073" pos:column="65">)<pos:position pos:line="3073" pos:column="66"/></operator> <name pos:line="3073" pos:column="67">pt<pos:position pos:line="3073" pos:column="69"/></name></expr></argument>)<pos:position pos:line="3073" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="3073" pos:column="71"/></expr_stmt>
            <return pos:line="3074" pos:column="13">return;<pos:position pos:line="3074" pos:column="20"/></return>
        }<pos:position pos:line="3075" pos:column="10"/></block></then></if>
        <throw pos:line="3076" pos:column="9">throw <expr><operator pos:line="3076" pos:column="15">new<pos:position pos:line="3076" pos:column="18"/></operator> <call><name pos:line="3076" pos:column="19">IllegalArgumentException<pos:position pos:line="3076" pos:column="43"/></name><argument_list pos:line="3076" pos:column="43">(<argument><expr><literal type="string" pos:line="3076" pos:column="44">"handle: "<pos:position pos:line="3076" pos:column="54"/></literal> <operator pos:line="3076" pos:column="55">+<pos:position pos:line="3076" pos:column="56"/></operator> <name pos:line="3076" pos:column="57">handle<pos:position pos:line="3076" pos:column="63"/></name>
                <operator pos:line="3077" pos:column="17">+<pos:position pos:line="3077" pos:column="18"/></operator> <literal type="string" pos:line="3077" pos:column="19">" or pt: "<pos:position pos:line="3077" pos:column="29"/></literal> <operator pos:line="3077" pos:column="30">+<pos:position pos:line="3077" pos:column="31"/></operator> <name pos:line="3077" pos:column="32">pt<pos:position pos:line="3077" pos:column="34"/></name></expr></argument>)<pos:position pos:line="3077" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="3077" pos:column="36"/></throw>
    }<pos:position pos:line="3078" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="3080" pos:column="5">/**
     * Sets the qualified attributes of an association end.
     *
     * @param handle the association end
     * @param elems is a Collection of qualifiers
     */</comment>
    <function><specifier pos:line="3086" pos:column="5">public<pos:position pos:line="3086" pos:column="11"/></specifier> <type><name pos:line="3086" pos:column="12">void<pos:position pos:line="3086" pos:column="16"/></name></type> <name pos:line="3086" pos:column="17">setQualifiers<pos:position pos:line="3086" pos:column="30"/></name><parameter_list pos:line="3086" pos:column="30">(<parameter><decl><type><name pos:line="3086" pos:column="31">Object<pos:position pos:line="3086" pos:column="37"/></name></type> <name pos:line="3086" pos:column="38">handle<pos:position pos:line="3086" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3086" pos:column="46">Collection<pos:position pos:line="3086" pos:column="56"/></name></type> <name pos:line="3086" pos:column="57">elems<pos:position pos:line="3086" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="3086" pos:column="63"/></parameter_list> <block pos:line="3086" pos:column="64">{
        <if pos:line="3087" pos:column="9">if <condition pos:line="3087" pos:column="12">(<expr><name pos:line="3087" pos:column="13">handle<pos:position pos:line="3087" pos:column="19"/></name> <operator pos:line="3087" pos:column="20">instanceof<pos:position pos:line="3087" pos:column="30"/></operator> <name pos:line="3087" pos:column="31">MAssociationEnd<pos:position pos:line="3087" pos:column="46"/></name> <operator pos:line="3087" pos:column="47">&amp;&amp;<pos:position pos:line="3087" pos:column="57"/></operator> <name pos:line="3087" pos:column="50">elems<pos:position pos:line="3087" pos:column="55"/></name> <operator pos:line="3087" pos:column="56">instanceof<pos:position pos:line="3087" pos:column="66"/></operator> <name pos:line="3087" pos:column="67">List<pos:position pos:line="3087" pos:column="71"/></name></expr>)<pos:position pos:line="3087" pos:column="72"/></condition><then pos:line="3087" pos:column="72"> <block pos:line="3087" pos:column="73">{
            <expr_stmt><expr><operator pos:line="3088" pos:column="13">(<pos:position pos:line="3088" pos:column="14"/></operator><operator pos:line="3088" pos:column="14">(<pos:position pos:line="3088" pos:column="15"/></operator><name pos:line="3088" pos:column="15">MAssociationEnd<pos:position pos:line="3088" pos:column="30"/></name><operator pos:line="3088" pos:column="30">)<pos:position pos:line="3088" pos:column="31"/></operator> <name pos:line="3088" pos:column="32">handle<pos:position pos:line="3088" pos:column="38"/></name><operator pos:line="3088" pos:column="38">)<pos:position pos:line="3088" pos:column="39"/></operator><operator pos:line="3088" pos:column="39">.<pos:position pos:line="3088" pos:column="40"/></operator><call><name pos:line="3088" pos:column="40">setQualifiers<pos:position pos:line="3088" pos:column="53"/></name><argument_list pos:line="3088" pos:column="53">(<argument><expr><operator pos:line="3088" pos:column="54">(<pos:position pos:line="3088" pos:column="55"/></operator><name pos:line="3088" pos:column="55">List<pos:position pos:line="3088" pos:column="59"/></name><operator pos:line="3088" pos:column="59">)<pos:position pos:line="3088" pos:column="60"/></operator> <name pos:line="3088" pos:column="61">elems<pos:position pos:line="3088" pos:column="66"/></name></expr></argument>)<pos:position pos:line="3088" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="3088" pos:column="68"/></expr_stmt>
            <return pos:line="3089" pos:column="13">return;<pos:position pos:line="3089" pos:column="20"/></return>
        }<pos:position pos:line="3090" pos:column="10"/></block></then></if>
        <throw pos:line="3091" pos:column="9">throw <expr><operator pos:line="3091" pos:column="15">new<pos:position pos:line="3091" pos:column="18"/></operator> <call><name pos:line="3091" pos:column="19">IllegalArgumentException<pos:position pos:line="3091" pos:column="43"/></name><argument_list pos:line="3091" pos:column="43">(<argument><expr><literal type="string" pos:line="3091" pos:column="44">"handle: "<pos:position pos:line="3091" pos:column="54"/></literal> <operator pos:line="3091" pos:column="55">+<pos:position pos:line="3091" pos:column="56"/></operator> <name pos:line="3091" pos:column="57">handle<pos:position pos:line="3091" pos:column="63"/></name></expr></argument>)<pos:position pos:line="3091" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="3091" pos:column="65"/></throw>
    }<pos:position pos:line="3092" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="3094" pos:column="5">/**
     * Sets the query flag of a behavioral feature.
     *
     * @param handle is the behavioral feature
     * @param flag is the query flag
     */</comment>
    <function><specifier pos:line="3100" pos:column="5">public<pos:position pos:line="3100" pos:column="11"/></specifier> <type><name pos:line="3100" pos:column="12">void<pos:position pos:line="3100" pos:column="16"/></name></type> <name pos:line="3100" pos:column="17">setQuery<pos:position pos:line="3100" pos:column="25"/></name><parameter_list pos:line="3100" pos:column="25">(<parameter><decl><type><name pos:line="3100" pos:column="26">Object<pos:position pos:line="3100" pos:column="32"/></name></type> <name pos:line="3100" pos:column="33">handle<pos:position pos:line="3100" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3100" pos:column="41">boolean<pos:position pos:line="3100" pos:column="48"/></name></type> <name pos:line="3100" pos:column="49">flag<pos:position pos:line="3100" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="3100" pos:column="54"/></parameter_list> <block pos:line="3100" pos:column="55">{
        <if pos:line="3101" pos:column="9">if <condition pos:line="3101" pos:column="12">(<expr><name pos:line="3101" pos:column="13">handle<pos:position pos:line="3101" pos:column="19"/></name> <operator pos:line="3101" pos:column="20">instanceof<pos:position pos:line="3101" pos:column="30"/></operator> <name pos:line="3101" pos:column="31">MBehavioralFeature<pos:position pos:line="3101" pos:column="49"/></name></expr>)<pos:position pos:line="3101" pos:column="50"/></condition><then pos:line="3101" pos:column="50"> <block pos:line="3101" pos:column="51">{
            <expr_stmt><expr><operator pos:line="3102" pos:column="13">(<pos:position pos:line="3102" pos:column="14"/></operator><operator pos:line="3102" pos:column="14">(<pos:position pos:line="3102" pos:column="15"/></operator><name pos:line="3102" pos:column="15">MBehavioralFeature<pos:position pos:line="3102" pos:column="33"/></name><operator pos:line="3102" pos:column="33">)<pos:position pos:line="3102" pos:column="34"/></operator> <name pos:line="3102" pos:column="35">handle<pos:position pos:line="3102" pos:column="41"/></name><operator pos:line="3102" pos:column="41">)<pos:position pos:line="3102" pos:column="42"/></operator><operator pos:line="3102" pos:column="42">.<pos:position pos:line="3102" pos:column="43"/></operator><call><name pos:line="3102" pos:column="43">setQuery<pos:position pos:line="3102" pos:column="51"/></name><argument_list pos:line="3102" pos:column="51">(<argument><expr><name pos:line="3102" pos:column="52">flag<pos:position pos:line="3102" pos:column="56"/></name></expr></argument>)<pos:position pos:line="3102" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="3102" pos:column="58"/></expr_stmt>
            <return pos:line="3103" pos:column="13">return;<pos:position pos:line="3103" pos:column="20"/></return>
        }<pos:position pos:line="3104" pos:column="10"/></block></then></if>
    <throw pos:line="3105" pos:column="5">throw <expr><operator pos:line="3105" pos:column="11">new<pos:position pos:line="3105" pos:column="14"/></operator> <call><name pos:line="3105" pos:column="15">IllegalArgumentException<pos:position pos:line="3105" pos:column="39"/></name><argument_list pos:line="3105" pos:column="39">(<argument><expr><literal type="string" pos:line="3105" pos:column="40">"handle: "<pos:position pos:line="3105" pos:column="50"/></literal> <operator pos:line="3105" pos:column="51">+<pos:position pos:line="3105" pos:column="52"/></operator> <name pos:line="3105" pos:column="53">handle<pos:position pos:line="3105" pos:column="59"/></name></expr></argument>)<pos:position pos:line="3105" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="3105" pos:column="61"/></throw>
    }<pos:position pos:line="3106" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="3108" pos:column="5">/**
     * @param handle ElementResidence
     * @param resident ModelElement or null
     */</comment>
    <function><specifier pos:line="3112" pos:column="5">public<pos:position pos:line="3112" pos:column="11"/></specifier> <type><name pos:line="3112" pos:column="12">void<pos:position pos:line="3112" pos:column="16"/></name></type> <name pos:line="3112" pos:column="17">setResident<pos:position pos:line="3112" pos:column="28"/></name><parameter_list pos:line="3112" pos:column="28">(<parameter><decl><type><name pos:line="3112" pos:column="29">Object<pos:position pos:line="3112" pos:column="35"/></name></type> <name pos:line="3112" pos:column="36">handle<pos:position pos:line="3112" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3112" pos:column="44">Object<pos:position pos:line="3112" pos:column="50"/></name></type> <name pos:line="3112" pos:column="51">resident<pos:position pos:line="3112" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="3112" pos:column="60"/></parameter_list> <block pos:line="3112" pos:column="61">{
        <if pos:line="3113" pos:column="9">if <condition pos:line="3113" pos:column="12">(<expr><name pos:line="3113" pos:column="13">handle<pos:position pos:line="3113" pos:column="19"/></name> <operator pos:line="3113" pos:column="20">instanceof<pos:position pos:line="3113" pos:column="30"/></operator> <name pos:line="3113" pos:column="31">MElementResidence<pos:position pos:line="3113" pos:column="48"/></name>
            <operator pos:line="3114" pos:column="13">&amp;&amp;<pos:position pos:line="3114" pos:column="23"/></operator> <operator pos:line="3114" pos:column="16">(<pos:position pos:line="3114" pos:column="17"/></operator><name pos:line="3114" pos:column="17">resident<pos:position pos:line="3114" pos:column="25"/></name> <operator pos:line="3114" pos:column="26">==<pos:position pos:line="3114" pos:column="28"/></operator> <literal type="null" pos:line="3114" pos:column="29">null<pos:position pos:line="3114" pos:column="33"/></literal> <operator pos:line="3114" pos:column="34">||<pos:position pos:line="3114" pos:column="36"/></operator> <name pos:line="3114" pos:column="37">resident<pos:position pos:line="3114" pos:column="45"/></name> <operator pos:line="3114" pos:column="46">instanceof<pos:position pos:line="3114" pos:column="56"/></operator> <name pos:line="3114" pos:column="57">MModelElement<pos:position pos:line="3114" pos:column="70"/></name><operator pos:line="3114" pos:column="70">)<pos:position pos:line="3114" pos:column="71"/></operator></expr>)<pos:position pos:line="3114" pos:column="72"/></condition><then pos:line="3114" pos:column="72"> <block pos:line="3114" pos:column="73">{
            <expr_stmt><expr><operator pos:line="3115" pos:column="13">(<pos:position pos:line="3115" pos:column="14"/></operator><operator pos:line="3115" pos:column="14">(<pos:position pos:line="3115" pos:column="15"/></operator><name pos:line="3115" pos:column="15">MElementResidence<pos:position pos:line="3115" pos:column="32"/></name><operator pos:line="3115" pos:column="32">)<pos:position pos:line="3115" pos:column="33"/></operator> <name pos:line="3115" pos:column="34">handle<pos:position pos:line="3115" pos:column="40"/></name><operator pos:line="3115" pos:column="40">)<pos:position pos:line="3115" pos:column="41"/></operator><operator pos:line="3115" pos:column="41">.<pos:position pos:line="3115" pos:column="42"/></operator><call><name pos:line="3115" pos:column="42">setResident<pos:position pos:line="3115" pos:column="53"/></name><argument_list pos:line="3115" pos:column="53">(<argument><expr><operator pos:line="3115" pos:column="54">(<pos:position pos:line="3115" pos:column="55"/></operator><name pos:line="3115" pos:column="55">MModelElement<pos:position pos:line="3115" pos:column="68"/></name><operator pos:line="3115" pos:column="68">)<pos:position pos:line="3115" pos:column="69"/></operator> <name pos:line="3115" pos:column="70">resident<pos:position pos:line="3115" pos:column="78"/></name></expr></argument>)<pos:position pos:line="3115" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="3115" pos:column="80"/></expr_stmt>
            <return pos:line="3116" pos:column="13">return;<pos:position pos:line="3116" pos:column="20"/></return>
        }<pos:position pos:line="3117" pos:column="10"/></block></then></if>
        <throw pos:line="3118" pos:column="9">throw <expr><operator pos:line="3118" pos:column="15">new<pos:position pos:line="3118" pos:column="18"/></operator> <call><name pos:line="3118" pos:column="19">IllegalArgumentException<pos:position pos:line="3118" pos:column="43"/></name><argument_list pos:line="3118" pos:column="43">(<argument><expr><literal type="string" pos:line="3118" pos:column="44">"handle: "<pos:position pos:line="3118" pos:column="54"/></literal> <operator pos:line="3118" pos:column="55">+<pos:position pos:line="3118" pos:column="56"/></operator> <name pos:line="3118" pos:column="57">handle<pos:position pos:line="3118" pos:column="63"/></name>
                <operator pos:line="3119" pos:column="17">+<pos:position pos:line="3119" pos:column="18"/></operator> <literal type="string" pos:line="3119" pos:column="19">" or resident: "<pos:position pos:line="3119" pos:column="35"/></literal> <operator pos:line="3119" pos:column="36">+<pos:position pos:line="3119" pos:column="37"/></operator> <name pos:line="3119" pos:column="38">resident<pos:position pos:line="3119" pos:column="46"/></name></expr></argument>)<pos:position pos:line="3119" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="3119" pos:column="48"/></throw>
    }<pos:position pos:line="3120" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="3122" pos:column="5">/**
     * Sets the residents of some model element.
     *
     * @param handle the model element
     * @param residents collection
     */</comment>
    <function><specifier pos:line="3128" pos:column="5">public<pos:position pos:line="3128" pos:column="11"/></specifier> <type><name pos:line="3128" pos:column="12">void<pos:position pos:line="3128" pos:column="16"/></name></type> <name pos:line="3128" pos:column="17">setResidents<pos:position pos:line="3128" pos:column="29"/></name><parameter_list pos:line="3128" pos:column="29">(<parameter><decl><type><name pos:line="3128" pos:column="30">Object<pos:position pos:line="3128" pos:column="36"/></name></type> <name pos:line="3128" pos:column="37">handle<pos:position pos:line="3128" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3128" pos:column="45">Collection<pos:position pos:line="3128" pos:column="55"/></name></type> <name pos:line="3128" pos:column="56">residents<pos:position pos:line="3128" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="3128" pos:column="66"/></parameter_list> <block pos:line="3128" pos:column="67">{
        <if pos:line="3129" pos:column="9">if <condition pos:line="3129" pos:column="12">(<expr><name pos:line="3129" pos:column="13">handle<pos:position pos:line="3129" pos:column="19"/></name> <operator pos:line="3129" pos:column="20">instanceof<pos:position pos:line="3129" pos:column="30"/></operator> <name pos:line="3129" pos:column="31">MNodeInstance<pos:position pos:line="3129" pos:column="44"/></name></expr>)<pos:position pos:line="3129" pos:column="45"/></condition><then pos:line="3129" pos:column="45"> <block pos:line="3129" pos:column="46">{
            <expr_stmt><expr><operator pos:line="3130" pos:column="13">(<pos:position pos:line="3130" pos:column="14"/></operator><operator pos:line="3130" pos:column="14">(<pos:position pos:line="3130" pos:column="15"/></operator><name pos:line="3130" pos:column="15">MNodeInstance<pos:position pos:line="3130" pos:column="28"/></name><operator pos:line="3130" pos:column="28">)<pos:position pos:line="3130" pos:column="29"/></operator> <name pos:line="3130" pos:column="30">handle<pos:position pos:line="3130" pos:column="36"/></name><operator pos:line="3130" pos:column="36">)<pos:position pos:line="3130" pos:column="37"/></operator><operator pos:line="3130" pos:column="37">.<pos:position pos:line="3130" pos:column="38"/></operator><call><name pos:line="3130" pos:column="38">setResidents<pos:position pos:line="3130" pos:column="50"/></name><argument_list pos:line="3130" pos:column="50">(<argument><expr><name pos:line="3130" pos:column="51">residents<pos:position pos:line="3130" pos:column="60"/></name></expr></argument>)<pos:position pos:line="3130" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="3130" pos:column="62"/></expr_stmt>
            <return pos:line="3131" pos:column="13">return;<pos:position pos:line="3131" pos:column="20"/></return>
        }<pos:position pos:line="3132" pos:column="10"/></block></then></if>
        <if pos:line="3133" pos:column="9">if <condition pos:line="3133" pos:column="12">(<expr><name pos:line="3133" pos:column="13">handle<pos:position pos:line="3133" pos:column="19"/></name> <operator pos:line="3133" pos:column="20">instanceof<pos:position pos:line="3133" pos:column="30"/></operator> <name pos:line="3133" pos:column="31">MComponentInstance<pos:position pos:line="3133" pos:column="49"/></name></expr>)<pos:position pos:line="3133" pos:column="50"/></condition><then pos:line="3133" pos:column="50"> <block pos:line="3133" pos:column="51">{
            <expr_stmt><expr><operator pos:line="3134" pos:column="13">(<pos:position pos:line="3134" pos:column="14"/></operator><operator pos:line="3134" pos:column="14">(<pos:position pos:line="3134" pos:column="15"/></operator><name pos:line="3134" pos:column="15">MComponentInstance<pos:position pos:line="3134" pos:column="33"/></name><operator pos:line="3134" pos:column="33">)<pos:position pos:line="3134" pos:column="34"/></operator> <name pos:line="3134" pos:column="35">handle<pos:position pos:line="3134" pos:column="41"/></name><operator pos:line="3134" pos:column="41">)<pos:position pos:line="3134" pos:column="42"/></operator><operator pos:line="3134" pos:column="42">.<pos:position pos:line="3134" pos:column="43"/></operator><call><name pos:line="3134" pos:column="43">setResidents<pos:position pos:line="3134" pos:column="55"/></name><argument_list pos:line="3134" pos:column="55">(<argument><expr><name pos:line="3134" pos:column="56">residents<pos:position pos:line="3134" pos:column="65"/></name></expr></argument>)<pos:position pos:line="3134" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="3134" pos:column="67"/></expr_stmt>
            <return pos:line="3135" pos:column="13">return;<pos:position pos:line="3135" pos:column="20"/></return>
        }<pos:position pos:line="3136" pos:column="10"/></block></then></if>
        <if pos:line="3137" pos:column="9">if <condition pos:line="3137" pos:column="12">(<expr><name pos:line="3137" pos:column="13">handle<pos:position pos:line="3137" pos:column="19"/></name> <operator pos:line="3137" pos:column="20">instanceof<pos:position pos:line="3137" pos:column="30"/></operator> <name pos:line="3137" pos:column="31">MNode<pos:position pos:line="3137" pos:column="36"/></name></expr>)<pos:position pos:line="3137" pos:column="37"/></condition><then pos:line="3137" pos:column="37"> <block pos:line="3137" pos:column="38">{
            <expr_stmt><expr><operator pos:line="3138" pos:column="13">(<pos:position pos:line="3138" pos:column="14"/></operator><operator pos:line="3138" pos:column="14">(<pos:position pos:line="3138" pos:column="15"/></operator><name pos:line="3138" pos:column="15">MNode<pos:position pos:line="3138" pos:column="20"/></name><operator pos:line="3138" pos:column="20">)<pos:position pos:line="3138" pos:column="21"/></operator> <name pos:line="3138" pos:column="22">handle<pos:position pos:line="3138" pos:column="28"/></name><operator pos:line="3138" pos:column="28">)<pos:position pos:line="3138" pos:column="29"/></operator><operator pos:line="3138" pos:column="29">.<pos:position pos:line="3138" pos:column="30"/></operator><call><name pos:line="3138" pos:column="30">setResidents<pos:position pos:line="3138" pos:column="42"/></name><argument_list pos:line="3138" pos:column="42">(<argument><expr><name pos:line="3138" pos:column="43">residents<pos:position pos:line="3138" pos:column="52"/></name></expr></argument>)<pos:position pos:line="3138" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="3138" pos:column="54"/></expr_stmt>
            <return pos:line="3139" pos:column="13">return;<pos:position pos:line="3139" pos:column="20"/></return>
        }<pos:position pos:line="3140" pos:column="10"/></block></then></if>
    <throw pos:line="3141" pos:column="5">throw <expr><operator pos:line="3141" pos:column="11">new<pos:position pos:line="3141" pos:column="14"/></operator> <call><name pos:line="3141" pos:column="15">IllegalArgumentException<pos:position pos:line="3141" pos:column="39"/></name><argument_list pos:line="3141" pos:column="39">(<argument><expr><literal type="string" pos:line="3141" pos:column="40">"handle: "<pos:position pos:line="3141" pos:column="50"/></literal> <operator pos:line="3141" pos:column="51">+<pos:position pos:line="3141" pos:column="52"/></operator> <name pos:line="3141" pos:column="53">handle<pos:position pos:line="3141" pos:column="59"/></name></expr></argument>)<pos:position pos:line="3141" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="3141" pos:column="61"/></throw>
    }<pos:position pos:line="3142" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="3144" pos:column="5">/**
     * Sets if some model element is a root.
     *
     * @param handle model element
     * @param flag is true if it is a root
     */</comment>
    <function><specifier pos:line="3150" pos:column="5">public<pos:position pos:line="3150" pos:column="11"/></specifier> <type><name pos:line="3150" pos:column="12">void<pos:position pos:line="3150" pos:column="16"/></name></type> <name pos:line="3150" pos:column="17">setRoot<pos:position pos:line="3150" pos:column="24"/></name><parameter_list pos:line="3150" pos:column="24">(<parameter><decl><type><name pos:line="3150" pos:column="25">Object<pos:position pos:line="3150" pos:column="31"/></name></type> <name pos:line="3150" pos:column="32">handle<pos:position pos:line="3150" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3150" pos:column="40">boolean<pos:position pos:line="3150" pos:column="47"/></name></type> <name pos:line="3150" pos:column="48">flag<pos:position pos:line="3150" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="3150" pos:column="53"/></parameter_list> <block pos:line="3150" pos:column="54">{
        <if pos:line="3151" pos:column="9">if <condition pos:line="3151" pos:column="12">(<expr><name pos:line="3151" pos:column="13">handle<pos:position pos:line="3151" pos:column="19"/></name> <operator pos:line="3151" pos:column="20">instanceof<pos:position pos:line="3151" pos:column="30"/></operator> <name pos:line="3151" pos:column="31">MReception<pos:position pos:line="3151" pos:column="41"/></name></expr>)<pos:position pos:line="3151" pos:column="42"/></condition><then pos:line="3151" pos:column="42"> <block pos:line="3151" pos:column="43">{
            <expr_stmt><expr><operator pos:line="3152" pos:column="13">(<pos:position pos:line="3152" pos:column="14"/></operator><operator pos:line="3152" pos:column="14">(<pos:position pos:line="3152" pos:column="15"/></operator><name pos:line="3152" pos:column="15">MReception<pos:position pos:line="3152" pos:column="25"/></name><operator pos:line="3152" pos:column="25">)<pos:position pos:line="3152" pos:column="26"/></operator> <name pos:line="3152" pos:column="27">handle<pos:position pos:line="3152" pos:column="33"/></name><operator pos:line="3152" pos:column="33">)<pos:position pos:line="3152" pos:column="34"/></operator><operator pos:line="3152" pos:column="34">.<pos:position pos:line="3152" pos:column="35"/></operator><call><name pos:line="3152" pos:column="35">setRoot<pos:position pos:line="3152" pos:column="42"/></name><argument_list pos:line="3152" pos:column="42">(<argument><expr><name pos:line="3152" pos:column="43">flag<pos:position pos:line="3152" pos:column="47"/></name></expr></argument>)<pos:position pos:line="3152" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="3152" pos:column="49"/></expr_stmt>
            <return pos:line="3153" pos:column="13">return;<pos:position pos:line="3153" pos:column="20"/></return>
        }<pos:position pos:line="3154" pos:column="10"/></block></then></if>
        <if pos:line="3155" pos:column="9">if <condition pos:line="3155" pos:column="12">(<expr><name pos:line="3155" pos:column="13">handle<pos:position pos:line="3155" pos:column="19"/></name> <operator pos:line="3155" pos:column="20">instanceof<pos:position pos:line="3155" pos:column="30"/></operator> <name pos:line="3155" pos:column="31">MOperation<pos:position pos:line="3155" pos:column="41"/></name></expr>)<pos:position pos:line="3155" pos:column="42"/></condition><then pos:line="3155" pos:column="42"> <block pos:line="3155" pos:column="43">{
            <expr_stmt><expr><operator pos:line="3156" pos:column="13">(<pos:position pos:line="3156" pos:column="14"/></operator><operator pos:line="3156" pos:column="14">(<pos:position pos:line="3156" pos:column="15"/></operator><name pos:line="3156" pos:column="15">MOperation<pos:position pos:line="3156" pos:column="25"/></name><operator pos:line="3156" pos:column="25">)<pos:position pos:line="3156" pos:column="26"/></operator> <name pos:line="3156" pos:column="27">handle<pos:position pos:line="3156" pos:column="33"/></name><operator pos:line="3156" pos:column="33">)<pos:position pos:line="3156" pos:column="34"/></operator><operator pos:line="3156" pos:column="34">.<pos:position pos:line="3156" pos:column="35"/></operator><call><name pos:line="3156" pos:column="35">setRoot<pos:position pos:line="3156" pos:column="42"/></name><argument_list pos:line="3156" pos:column="42">(<argument><expr><name pos:line="3156" pos:column="43">flag<pos:position pos:line="3156" pos:column="47"/></name></expr></argument>)<pos:position pos:line="3156" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="3156" pos:column="49"/></expr_stmt>
            <return pos:line="3157" pos:column="13">return;<pos:position pos:line="3157" pos:column="20"/></return>
        }<pos:position pos:line="3158" pos:column="10"/></block></then></if>
        <if pos:line="3159" pos:column="9">if <condition pos:line="3159" pos:column="12">(<expr><name pos:line="3159" pos:column="13">handle<pos:position pos:line="3159" pos:column="19"/></name> <operator pos:line="3159" pos:column="20">instanceof<pos:position pos:line="3159" pos:column="30"/></operator> <name pos:line="3159" pos:column="31">MGeneralizableElement<pos:position pos:line="3159" pos:column="52"/></name></expr>)<pos:position pos:line="3159" pos:column="53"/></condition><then pos:line="3159" pos:column="53"> <block pos:line="3159" pos:column="54">{
            <expr_stmt><expr><operator pos:line="3160" pos:column="13">(<pos:position pos:line="3160" pos:column="14"/></operator><operator pos:line="3160" pos:column="14">(<pos:position pos:line="3160" pos:column="15"/></operator><name pos:line="3160" pos:column="15">MGeneralizableElement<pos:position pos:line="3160" pos:column="36"/></name><operator pos:line="3160" pos:column="36">)<pos:position pos:line="3160" pos:column="37"/></operator> <name pos:line="3160" pos:column="38">handle<pos:position pos:line="3160" pos:column="44"/></name><operator pos:line="3160" pos:column="44">)<pos:position pos:line="3160" pos:column="45"/></operator><operator pos:line="3160" pos:column="45">.<pos:position pos:line="3160" pos:column="46"/></operator><call><name pos:line="3160" pos:column="46">setRoot<pos:position pos:line="3160" pos:column="53"/></name><argument_list pos:line="3160" pos:column="53">(<argument><expr><name pos:line="3160" pos:column="54">flag<pos:position pos:line="3160" pos:column="58"/></name></expr></argument>)<pos:position pos:line="3160" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="3160" pos:column="60"/></expr_stmt>
            <return pos:line="3161" pos:column="13">return;<pos:position pos:line="3161" pos:column="20"/></return>
        }<pos:position pos:line="3162" pos:column="10"/></block></then></if>
    <throw pos:line="3163" pos:column="5">throw <expr><operator pos:line="3163" pos:column="11">new<pos:position pos:line="3163" pos:column="14"/></operator> <call><name pos:line="3163" pos:column="15">IllegalArgumentException<pos:position pos:line="3163" pos:column="39"/></name><argument_list pos:line="3163" pos:column="39">(<argument><expr><literal type="string" pos:line="3163" pos:column="40">"handle: "<pos:position pos:line="3163" pos:column="50"/></literal> <operator pos:line="3163" pos:column="51">+<pos:position pos:line="3163" pos:column="52"/></operator> <name pos:line="3163" pos:column="53">handle<pos:position pos:line="3163" pos:column="59"/></name></expr></argument>)<pos:position pos:line="3163" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="3163" pos:column="61"/></throw>
    }<pos:position pos:line="3164" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="3166" pos:column="5">/**
     * @param handle Flow
     * @param specifications the collection of ModelEvents (sourceFlow)
     */</comment>
    <function><specifier pos:line="3170" pos:column="5">public<pos:position pos:line="3170" pos:column="11"/></specifier> <type><name pos:line="3170" pos:column="12">void<pos:position pos:line="3170" pos:column="16"/></name></type> <name pos:line="3170" pos:column="17">setSources<pos:position pos:line="3170" pos:column="27"/></name><parameter_list pos:line="3170" pos:column="27">(<parameter><decl><type><name pos:line="3170" pos:column="28">Object<pos:position pos:line="3170" pos:column="34"/></name></type> <name pos:line="3170" pos:column="35">handle<pos:position pos:line="3170" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3170" pos:column="43">Collection<pos:position pos:line="3170" pos:column="53"/></name></type> <name pos:line="3170" pos:column="54">specifications<pos:position pos:line="3170" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="3170" pos:column="69"/></parameter_list> <block pos:line="3170" pos:column="70">{
        <if pos:line="3171" pos:column="9">if <condition pos:line="3171" pos:column="12">(<expr><name pos:line="3171" pos:column="13">handle<pos:position pos:line="3171" pos:column="19"/></name> <operator pos:line="3171" pos:column="20">instanceof<pos:position pos:line="3171" pos:column="30"/></operator> <name pos:line="3171" pos:column="31">MFlow<pos:position pos:line="3171" pos:column="36"/></name></expr>)<pos:position pos:line="3171" pos:column="37"/></condition><then pos:line="3171" pos:column="37"> <block pos:line="3171" pos:column="38">{
            <expr_stmt><expr><operator pos:line="3172" pos:column="13">(<pos:position pos:line="3172" pos:column="14"/></operator><operator pos:line="3172" pos:column="14">(<pos:position pos:line="3172" pos:column="15"/></operator><name pos:line="3172" pos:column="15">MFlow<pos:position pos:line="3172" pos:column="20"/></name><operator pos:line="3172" pos:column="20">)<pos:position pos:line="3172" pos:column="21"/></operator> <name pos:line="3172" pos:column="22">handle<pos:position pos:line="3172" pos:column="28"/></name><operator pos:line="3172" pos:column="28">)<pos:position pos:line="3172" pos:column="29"/></operator><operator pos:line="3172" pos:column="29">.<pos:position pos:line="3172" pos:column="30"/></operator><call><name pos:line="3172" pos:column="30">setSources<pos:position pos:line="3172" pos:column="40"/></name><argument_list pos:line="3172" pos:column="40">(<argument><expr><name pos:line="3172" pos:column="41">specifications<pos:position pos:line="3172" pos:column="55"/></name></expr></argument>)<pos:position pos:line="3172" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="3172" pos:column="57"/></expr_stmt>
            <return pos:line="3173" pos:column="13">return;<pos:position pos:line="3173" pos:column="20"/></return>
        }<pos:position pos:line="3174" pos:column="10"/></block></then></if>
    <throw pos:line="3175" pos:column="5">throw <expr><operator pos:line="3175" pos:column="11">new<pos:position pos:line="3175" pos:column="14"/></operator> <call><name pos:line="3175" pos:column="15">IllegalArgumentException<pos:position pos:line="3175" pos:column="39"/></name><argument_list pos:line="3175" pos:column="39">(<argument><expr><literal type="string" pos:line="3175" pos:column="40">"handle: "<pos:position pos:line="3175" pos:column="50"/></literal> <operator pos:line="3175" pos:column="51">+<pos:position pos:line="3175" pos:column="52"/></operator> <name pos:line="3175" pos:column="53">handle<pos:position pos:line="3175" pos:column="59"/></name></expr></argument>)<pos:position pos:line="3175" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="3175" pos:column="61"/></throw>
    }<pos:position pos:line="3176" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="3178" pos:column="5">/**
     * Set the Specification flag for a ModelElement.
     *
     * @param handle ModelElement
     * @param specification boolean
     */</comment>
    <function><specifier pos:line="3184" pos:column="5">public<pos:position pos:line="3184" pos:column="11"/></specifier> <type><name pos:line="3184" pos:column="12">void<pos:position pos:line="3184" pos:column="16"/></name></type> <name pos:line="3184" pos:column="17">setSpecification<pos:position pos:line="3184" pos:column="33"/></name><parameter_list pos:line="3184" pos:column="33">(<parameter><decl><type><name pos:line="3184" pos:column="34">Object<pos:position pos:line="3184" pos:column="40"/></name></type> <name pos:line="3184" pos:column="41">handle<pos:position pos:line="3184" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3184" pos:column="49">boolean<pos:position pos:line="3184" pos:column="56"/></name></type> <name pos:line="3184" pos:column="57">specification<pos:position pos:line="3184" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="3184" pos:column="71"/></parameter_list> <block pos:line="3184" pos:column="72">{
        <if pos:line="3185" pos:column="9">if <condition pos:line="3185" pos:column="12">(<expr><name pos:line="3185" pos:column="13">handle<pos:position pos:line="3185" pos:column="19"/></name> <operator pos:line="3185" pos:column="20">instanceof<pos:position pos:line="3185" pos:column="30"/></operator> <name pos:line="3185" pos:column="31">MModelElement<pos:position pos:line="3185" pos:column="44"/></name></expr>)<pos:position pos:line="3185" pos:column="45"/></condition><then pos:line="3185" pos:column="45"> <block pos:line="3185" pos:column="46">{
            <expr_stmt><expr><operator pos:line="3186" pos:column="13">(<pos:position pos:line="3186" pos:column="14"/></operator><operator pos:line="3186" pos:column="14">(<pos:position pos:line="3186" pos:column="15"/></operator><name pos:line="3186" pos:column="15">MModelElement<pos:position pos:line="3186" pos:column="28"/></name><operator pos:line="3186" pos:column="28">)<pos:position pos:line="3186" pos:column="29"/></operator> <name pos:line="3186" pos:column="30">handle<pos:position pos:line="3186" pos:column="36"/></name><operator pos:line="3186" pos:column="36">)<pos:position pos:line="3186" pos:column="37"/></operator><operator pos:line="3186" pos:column="37">.<pos:position pos:line="3186" pos:column="38"/></operator><call><name pos:line="3186" pos:column="38">setSpecification<pos:position pos:line="3186" pos:column="54"/></name><argument_list pos:line="3186" pos:column="54">(<argument><expr><name pos:line="3186" pos:column="55">specification<pos:position pos:line="3186" pos:column="68"/></name></expr></argument>)<pos:position pos:line="3186" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="3186" pos:column="70"/></expr_stmt>
            <return pos:line="3187" pos:column="13">return;<pos:position pos:line="3187" pos:column="20"/></return>
        }<pos:position pos:line="3188" pos:column="10"/></block></then></if>
    <throw pos:line="3189" pos:column="5">throw <expr><operator pos:line="3189" pos:column="11">new<pos:position pos:line="3189" pos:column="14"/></operator> <call><name pos:line="3189" pos:column="15">IllegalArgumentException<pos:position pos:line="3189" pos:column="39"/></name><argument_list pos:line="3189" pos:column="39">(<argument><expr><literal type="string" pos:line="3189" pos:column="40">"handle: "<pos:position pos:line="3189" pos:column="50"/></literal> <operator pos:line="3189" pos:column="51">+<pos:position pos:line="3189" pos:column="52"/></operator> <name pos:line="3189" pos:column="53">handle<pos:position pos:line="3189" pos:column="59"/></name></expr></argument>)<pos:position pos:line="3189" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="3189" pos:column="61"/></throw>
    }<pos:position pos:line="3190" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="3192" pos:column="5">/**
     * Sets the specifications of some association end.
     *
     * @param handle the association end
     * @param specifications collection
     */</comment>
    <function><specifier pos:line="3198" pos:column="5">public<pos:position pos:line="3198" pos:column="11"/></specifier> <type><name pos:line="3198" pos:column="12">void<pos:position pos:line="3198" pos:column="16"/></name></type> <name pos:line="3198" pos:column="17">setSpecifications<pos:position pos:line="3198" pos:column="34"/></name><parameter_list pos:line="3198" pos:column="34">(
        <parameter><decl><type><name pos:line="3199" pos:column="9">Object<pos:position pos:line="3199" pos:column="15"/></name></type> <name pos:line="3199" pos:column="16">handle<pos:position pos:line="3199" pos:column="22"/></name></decl></parameter>,
        <parameter><decl><type><name pos:line="3200" pos:column="9">Collection<pos:position pos:line="3200" pos:column="19"/></name></type> <name pos:line="3200" pos:column="20">specifications<pos:position pos:line="3200" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="3200" pos:column="35"/></parameter_list> <block pos:line="3200" pos:column="36">{
        <if pos:line="3201" pos:column="9">if <condition pos:line="3201" pos:column="12">(<expr><name pos:line="3201" pos:column="13">handle<pos:position pos:line="3201" pos:column="19"/></name> <operator pos:line="3201" pos:column="20">instanceof<pos:position pos:line="3201" pos:column="30"/></operator> <name pos:line="3201" pos:column="31">MAssociationEnd<pos:position pos:line="3201" pos:column="46"/></name></expr>)<pos:position pos:line="3201" pos:column="47"/></condition><then pos:line="3201" pos:column="47"> <block pos:line="3201" pos:column="48">{
            <expr_stmt><expr><operator pos:line="3202" pos:column="13">(<pos:position pos:line="3202" pos:column="14"/></operator><operator pos:line="3202" pos:column="14">(<pos:position pos:line="3202" pos:column="15"/></operator><name pos:line="3202" pos:column="15">MAssociationEnd<pos:position pos:line="3202" pos:column="30"/></name><operator pos:line="3202" pos:column="30">)<pos:position pos:line="3202" pos:column="31"/></operator> <name pos:line="3202" pos:column="32">handle<pos:position pos:line="3202" pos:column="38"/></name><operator pos:line="3202" pos:column="38">)<pos:position pos:line="3202" pos:column="39"/></operator><operator pos:line="3202" pos:column="39">.<pos:position pos:line="3202" pos:column="40"/></operator><call><name pos:line="3202" pos:column="40">setSpecifications<pos:position pos:line="3202" pos:column="57"/></name><argument_list pos:line="3202" pos:column="57">(<argument><expr><name pos:line="3202" pos:column="58">specifications<pos:position pos:line="3202" pos:column="72"/></name></expr></argument>)<pos:position pos:line="3202" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="3202" pos:column="74"/></expr_stmt>
            <return pos:line="3203" pos:column="13">return;<pos:position pos:line="3203" pos:column="20"/></return>
        }<pos:position pos:line="3204" pos:column="10"/></block></then></if>
    <throw pos:line="3205" pos:column="5">throw <expr><operator pos:line="3205" pos:column="11">new<pos:position pos:line="3205" pos:column="14"/></operator> <call><name pos:line="3205" pos:column="15">IllegalArgumentException<pos:position pos:line="3205" pos:column="39"/></name><argument_list pos:line="3205" pos:column="39">(<argument><expr><literal type="string" pos:line="3205" pos:column="40">"handle: "<pos:position pos:line="3205" pos:column="50"/></literal> <operator pos:line="3205" pos:column="51">+<pos:position pos:line="3205" pos:column="52"/></operator> <name pos:line="3205" pos:column="53">handle<pos:position pos:line="3205" pos:column="59"/></name></expr></argument>)<pos:position pos:line="3205" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="3205" pos:column="61"/></throw>
    }<pos:position pos:line="3206" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="3208" pos:column="5">/**
     * Sets the stereotype of some modelelement. The method also
     * copies a stereotype that is not a part of the current model to
     * the current model.&lt;p&gt;
     *
     * TODO: Currently does not copy the stereotype, but changes the
     * namespace to the new model (kidnapping it). That might possibly be
     * dangerous, especially if more complex profile models are developed.
     * This documentation should say what is supposed to be done. I think
     * it would have been better if the caller had been responsible for the
     * stereotype being in the right model and been adviced of
     * eg ModelManagementHelper.getCorrespondingElement(...). Or if that had
     * been used here. This function could possibly assert that the caller had
     * got it right.
     *
     * TODO: For moving towards future version of UML we should instead
     * have addStereotype and removeStereotype.
     *
     * @param handle model element
     * @param stereo stereotype
     */</comment>
    <function><specifier pos:line="3229" pos:column="5">public<pos:position pos:line="3229" pos:column="11"/></specifier> <type><name pos:line="3229" pos:column="12">void<pos:position pos:line="3229" pos:column="16"/></name></type> <name pos:line="3229" pos:column="17">setStereotype<pos:position pos:line="3229" pos:column="30"/></name><parameter_list pos:line="3229" pos:column="30">(<parameter><decl><type><name pos:line="3229" pos:column="31">Object<pos:position pos:line="3229" pos:column="37"/></name></type> <name pos:line="3229" pos:column="38">handle<pos:position pos:line="3229" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3229" pos:column="46">Object<pos:position pos:line="3229" pos:column="52"/></name></type> <name pos:line="3229" pos:column="53">stereo<pos:position pos:line="3229" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="3229" pos:column="60"/></parameter_list> <block pos:line="3229" pos:column="61">{
        <if pos:line="3230" pos:column="9">if <condition pos:line="3230" pos:column="12">(<expr><name pos:line="3230" pos:column="13">handle<pos:position pos:line="3230" pos:column="19"/></name> <operator pos:line="3230" pos:column="20">instanceof<pos:position pos:line="3230" pos:column="30"/></operator> <name pos:line="3230" pos:column="31">MModelElement<pos:position pos:line="3230" pos:column="44"/></name>
                <operator pos:line="3231" pos:column="17">&amp;&amp;<pos:position pos:line="3231" pos:column="27"/></operator> <operator pos:line="3231" pos:column="20">(<pos:position pos:line="3231" pos:column="21"/></operator><name pos:line="3231" pos:column="21">stereo<pos:position pos:line="3231" pos:column="27"/></name> <operator pos:line="3231" pos:column="28">instanceof<pos:position pos:line="3231" pos:column="38"/></operator> <name pos:line="3231" pos:column="39">MStereotype<pos:position pos:line="3231" pos:column="50"/></name> <operator pos:line="3231" pos:column="51">||<pos:position pos:line="3231" pos:column="53"/></operator> <name pos:line="3231" pos:column="54">stereo<pos:position pos:line="3231" pos:column="60"/></name> <operator pos:line="3231" pos:column="61">==<pos:position pos:line="3231" pos:column="63"/></operator> <literal type="null" pos:line="3231" pos:column="64">null<pos:position pos:line="3231" pos:column="68"/></literal><operator pos:line="3231" pos:column="68">)<pos:position pos:line="3231" pos:column="69"/></operator></expr>)<pos:position pos:line="3231" pos:column="70"/></condition><then pos:line="3231" pos:column="70"> <block pos:line="3231" pos:column="71">{

            <decl_stmt><decl><type><name pos:line="3233" pos:column="13">MModelElement<pos:position pos:line="3233" pos:column="26"/></name></type> <name pos:line="3233" pos:column="27">me<pos:position pos:line="3233" pos:column="29"/></name> <init pos:line="3233" pos:column="30">= <expr><operator pos:line="3233" pos:column="32">(<pos:position pos:line="3233" pos:column="33"/></operator><name pos:line="3233" pos:column="33">MModelElement<pos:position pos:line="3233" pos:column="46"/></name><operator pos:line="3233" pos:column="46">)<pos:position pos:line="3233" pos:column="47"/></operator> <name pos:line="3233" pos:column="48">handle<pos:position pos:line="3233" pos:column="54"/></name></expr></init></decl>;<pos:position pos:line="3233" pos:column="55"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="3234" pos:column="13">MStereotype<pos:position pos:line="3234" pos:column="24"/></name></type> <name pos:line="3234" pos:column="25">stereotype<pos:position pos:line="3234" pos:column="35"/></name> <init pos:line="3234" pos:column="36">= <expr><operator pos:line="3234" pos:column="38">(<pos:position pos:line="3234" pos:column="39"/></operator><name pos:line="3234" pos:column="39">MStereotype<pos:position pos:line="3234" pos:column="50"/></name><operator pos:line="3234" pos:column="50">)<pos:position pos:line="3234" pos:column="51"/></operator> <name pos:line="3234" pos:column="52">stereo<pos:position pos:line="3234" pos:column="58"/></name></expr></init></decl>;<pos:position pos:line="3234" pos:column="59"/></decl_stmt>

            <decl_stmt><decl><type><name pos:line="3236" pos:column="13">MStereotype<pos:position pos:line="3236" pos:column="24"/></name></type> <name pos:line="3236" pos:column="25">existingStereotype<pos:position pos:line="3236" pos:column="43"/></name> <init pos:line="3236" pos:column="44">= <expr><call><name><name pos:line="3236" pos:column="46">me<pos:position pos:line="3236" pos:column="48"/></name><operator pos:line="3236" pos:column="48">.<pos:position pos:line="3236" pos:column="49"/></operator><name pos:line="3236" pos:column="49">getStereotype<pos:position pos:line="3236" pos:column="62"/></name></name><argument_list pos:line="3236" pos:column="62">()<pos:position pos:line="3236" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3236" pos:column="65"/></decl_stmt>

            <if pos:line="3238" pos:column="13">if <condition pos:line="3238" pos:column="16">(<expr><call><name><name pos:line="3238" pos:column="17">LOG<pos:position pos:line="3238" pos:column="20"/></name><operator pos:line="3238" pos:column="20">.<pos:position pos:line="3238" pos:column="21"/></operator><name pos:line="3238" pos:column="21">isInfoEnabled<pos:position pos:line="3238" pos:column="34"/></name></name><argument_list pos:line="3238" pos:column="34">()<pos:position pos:line="3238" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="3238" pos:column="37"/></condition><then pos:line="3238" pos:column="37"> <block pos:line="3238" pos:column="38">{
                <if pos:line="3239" pos:column="17">if <condition pos:line="3239" pos:column="20">(<expr><name pos:line="3239" pos:column="21">existingStereotype<pos:position pos:line="3239" pos:column="39"/></name> <operator pos:line="3239" pos:column="40">==<pos:position pos:line="3239" pos:column="42"/></operator> <literal type="null" pos:line="3239" pos:column="43">null<pos:position pos:line="3239" pos:column="47"/></literal></expr>)<pos:position pos:line="3239" pos:column="48"/></condition><then pos:line="3239" pos:column="48"> <block pos:line="3239" pos:column="49">{
                    <expr_stmt><expr><call><name><name pos:line="3240" pos:column="21">LOG<pos:position pos:line="3240" pos:column="24"/></name><operator pos:line="3240" pos:column="24">.<pos:position pos:line="3240" pos:column="25"/></operator><name pos:line="3240" pos:column="25">info<pos:position pos:line="3240" pos:column="29"/></name></name><argument_list pos:line="3240" pos:column="29">(<argument><expr><literal type="string" pos:line="3240" pos:column="30">"About to give a stereotype to "<pos:position pos:line="3240" pos:column="62"/></literal> <operator pos:line="3240" pos:column="63">+<pos:position pos:line="3240" pos:column="64"/></operator> <name pos:line="3240" pos:column="65">handle<pos:position pos:line="3240" pos:column="71"/></name></expr></argument>)<pos:position pos:line="3240" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="3240" pos:column="73"/></expr_stmt>
                }<pos:position pos:line="3241" pos:column="18"/></block></then> <else pos:line="3241" pos:column="19">else <block pos:line="3241" pos:column="24">{
                    <expr_stmt><expr><call><name><name pos:line="3242" pos:column="21">LOG<pos:position pos:line="3242" pos:column="24"/></name><operator pos:line="3242" pos:column="24">.<pos:position pos:line="3242" pos:column="25"/></operator><name pos:line="3242" pos:column="25">info<pos:position pos:line="3242" pos:column="29"/></name></name><argument_list pos:line="3242" pos:column="29">(<argument><expr><literal type="string" pos:line="3242" pos:column="30">"About to change stereotype on "<pos:position pos:line="3242" pos:column="62"/></literal> <operator pos:line="3242" pos:column="63">+<pos:position pos:line="3242" pos:column="64"/></operator> <name pos:line="3242" pos:column="65">handle<pos:position pos:line="3242" pos:column="71"/></name>
                            <operator pos:line="3243" pos:column="29">+<pos:position pos:line="3243" pos:column="30"/></operator> <literal type="string" pos:line="3243" pos:column="31">" to &lt;&lt;"<pos:position pos:line="3243" pos:column="45"/></literal> <operator pos:line="3243" pos:column="40">+<pos:position pos:line="3243" pos:column="41"/></operator> <call><name><name pos:line="3243" pos:column="42">existingStereotype<pos:position pos:line="3243" pos:column="60"/></name><operator pos:line="3243" pos:column="60">.<pos:position pos:line="3243" pos:column="61"/></operator><name pos:line="3243" pos:column="61">getName<pos:position pos:line="3243" pos:column="68"/></name></name><argument_list pos:line="3243" pos:column="68">()<pos:position pos:line="3243" pos:column="70"/></argument_list></call> <operator pos:line="3243" pos:column="71">+<pos:position pos:line="3243" pos:column="72"/></operator> <literal type="string" pos:line="3243" pos:column="73">"&gt;&gt;"<pos:position pos:line="3243" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="3243" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="3243" pos:column="79"/></expr_stmt>
                }<pos:position pos:line="3244" pos:column="18"/></block></else></if>
            }<pos:position pos:line="3245" pos:column="14"/></block></then></if>

            <if pos:line="3247" pos:column="13">if <condition pos:line="3247" pos:column="16">(<expr><name pos:line="3247" pos:column="17">existingStereotype<pos:position pos:line="3247" pos:column="35"/></name> <operator pos:line="3247" pos:column="36">==<pos:position pos:line="3247" pos:column="38"/></operator> <name pos:line="3247" pos:column="39">stereotype<pos:position pos:line="3247" pos:column="49"/></name></expr>)<pos:position pos:line="3247" pos:column="50"/></condition><then pos:line="3247" pos:column="50"> <block pos:line="3247" pos:column="51">{
                <expr_stmt><expr><call><name><name pos:line="3248" pos:column="17">LOG<pos:position pos:line="3248" pos:column="20"/></name><operator pos:line="3248" pos:column="20">.<pos:position pos:line="3248" pos:column="21"/></operator><name pos:line="3248" pos:column="21">info<pos:position pos:line="3248" pos:column="25"/></name></name><argument_list pos:line="3248" pos:column="25">(<argument><expr><literal type="string" pos:line="3248" pos:column="26">"Stereotype is already set. Do nothing."<pos:position pos:line="3248" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="3248" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="3248" pos:column="68"/></expr_stmt>
                <return pos:line="3249" pos:column="17">return;<pos:position pos:line="3249" pos:column="24"/></return>
            }<pos:position pos:line="3250" pos:column="14"/></block></then></if>

            <if pos:line="3252" pos:column="13">if <condition pos:line="3252" pos:column="16">(<expr><call><name><name pos:line="3252" pos:column="17">LOG<pos:position pos:line="3252" pos:column="20"/></name><operator pos:line="3252" pos:column="20">.<pos:position pos:line="3252" pos:column="21"/></operator><name pos:line="3252" pos:column="21">isInfoEnabled<pos:position pos:line="3252" pos:column="34"/></name></name><argument_list pos:line="3252" pos:column="34">()<pos:position pos:line="3252" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="3252" pos:column="37"/></condition><then pos:line="3252" pos:column="37"> <block pos:line="3252" pos:column="38">{
                <if pos:line="3253" pos:column="17">if <condition pos:line="3253" pos:column="20">(<expr><name pos:line="3253" pos:column="21">stereotype<pos:position pos:line="3253" pos:column="31"/></name> <operator pos:line="3253" pos:column="32">==<pos:position pos:line="3253" pos:column="34"/></operator> <literal type="null" pos:line="3253" pos:column="35">null<pos:position pos:line="3253" pos:column="39"/></literal></expr>)<pos:position pos:line="3253" pos:column="40"/></condition><then pos:line="3253" pos:column="40"> <block pos:line="3253" pos:column="41">{
                    <expr_stmt><expr><call><name><name pos:line="3254" pos:column="21">LOG<pos:position pos:line="3254" pos:column="24"/></name><operator pos:line="3254" pos:column="24">.<pos:position pos:line="3254" pos:column="25"/></operator><name pos:line="3254" pos:column="25">info<pos:position pos:line="3254" pos:column="29"/></name></name><argument_list pos:line="3254" pos:column="29">(<argument><expr><literal type="string" pos:line="3254" pos:column="30">"Removing any stereotype on "<pos:position pos:line="3254" pos:column="59"/></literal> <operator pos:line="3254" pos:column="60">+<pos:position pos:line="3254" pos:column="61"/></operator> <name pos:line="3254" pos:column="62">handle<pos:position pos:line="3254" pos:column="68"/></name></expr></argument>)<pos:position pos:line="3254" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="3254" pos:column="70"/></expr_stmt>
                }<pos:position pos:line="3255" pos:column="18"/></block></then> <else pos:line="3255" pos:column="19">else <block pos:line="3255" pos:column="24">{
                    <expr_stmt><expr><call><name><name pos:line="3256" pos:column="21">LOG<pos:position pos:line="3256" pos:column="24"/></name><operator pos:line="3256" pos:column="24">.<pos:position pos:line="3256" pos:column="25"/></operator><name pos:line="3256" pos:column="25">info<pos:position pos:line="3256" pos:column="29"/></name></name><argument_list pos:line="3256" pos:column="29">(<argument><expr><literal type="string" pos:line="3256" pos:column="30">"Setting the stereotype on "<pos:position pos:line="3256" pos:column="58"/></literal> <operator pos:line="3256" pos:column="59">+<pos:position pos:line="3256" pos:column="60"/></operator> <name pos:line="3256" pos:column="61">handle<pos:position pos:line="3256" pos:column="67"/></name>
                            <operator pos:line="3257" pos:column="29">+<pos:position pos:line="3257" pos:column="30"/></operator> <literal type="string" pos:line="3257" pos:column="31">" to &lt;&lt;"<pos:position pos:line="3257" pos:column="45"/></literal> <operator pos:line="3257" pos:column="40">+<pos:position pos:line="3257" pos:column="41"/></operator> <call><name><name pos:line="3257" pos:column="42">stereotype<pos:position pos:line="3257" pos:column="52"/></name><operator pos:line="3257" pos:column="52">.<pos:position pos:line="3257" pos:column="53"/></operator><name pos:line="3257" pos:column="53">getName<pos:position pos:line="3257" pos:column="60"/></name></name><argument_list pos:line="3257" pos:column="60">()<pos:position pos:line="3257" pos:column="62"/></argument_list></call> <operator pos:line="3257" pos:column="63">+<pos:position pos:line="3257" pos:column="64"/></operator> <literal type="string" pos:line="3257" pos:column="65">"&gt;&gt;"<pos:position pos:line="3257" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="3257" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="3257" pos:column="71"/></expr_stmt>
                }<pos:position pos:line="3258" pos:column="18"/></block></else></if>
            }<pos:position pos:line="3259" pos:column="14"/></block></then></if>

            <comment type="line" pos:line="3261" pos:column="13">// With this block in place save fails with an error</comment>
            <comment type="line" pos:line="3262" pos:column="13">// With this block removed save appears to work but</comment>
            <comment type="line" pos:line="3263" pos:column="13">// the save file does not record the stereotype</comment>
            <if pos:line="3264" pos:column="13">if <condition pos:line="3264" pos:column="16">(<expr><name pos:line="3264" pos:column="17">stereotype<pos:position pos:line="3264" pos:column="27"/></name> <operator pos:line="3264" pos:column="28">!=<pos:position pos:line="3264" pos:column="30"/></operator> <literal type="null" pos:line="3264" pos:column="31">null<pos:position pos:line="3264" pos:column="35"/></literal> <operator pos:line="3264" pos:column="36">&amp;&amp;<pos:position pos:line="3264" pos:column="46"/></operator> <call><name><name pos:line="3264" pos:column="39">me<pos:position pos:line="3264" pos:column="41"/></name><operator pos:line="3264" pos:column="41">.<pos:position pos:line="3264" pos:column="42"/></operator><name pos:line="3264" pos:column="42">getModel<pos:position pos:line="3264" pos:column="50"/></name></name><argument_list pos:line="3264" pos:column="50">()<pos:position pos:line="3264" pos:column="52"/></argument_list></call> <operator pos:line="3264" pos:column="53">!=<pos:position pos:line="3264" pos:column="55"/></operator> <call><name><name pos:line="3264" pos:column="56">stereotype<pos:position pos:line="3264" pos:column="66"/></name><operator pos:line="3264" pos:column="66">.<pos:position pos:line="3264" pos:column="67"/></operator><name pos:line="3264" pos:column="67">getModel<pos:position pos:line="3264" pos:column="75"/></name></name><argument_list pos:line="3264" pos:column="75">()<pos:position pos:line="3264" pos:column="77"/></argument_list></call></expr>)<pos:position pos:line="3264" pos:column="78"/></condition><then pos:line="3264" pos:column="78"> <block pos:line="3264" pos:column="79">{
                <if pos:line="3265" pos:column="17">if <condition pos:line="3265" pos:column="20">(<expr><call><name><name pos:line="3265" pos:column="21">LOG<pos:position pos:line="3265" pos:column="24"/></name><operator pos:line="3265" pos:column="24">.<pos:position pos:line="3265" pos:column="25"/></operator><name pos:line="3265" pos:column="25">isInfoEnabled<pos:position pos:line="3265" pos:column="38"/></name></name><argument_list pos:line="3265" pos:column="38">()<pos:position pos:line="3265" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="3265" pos:column="41"/></condition><then pos:line="3265" pos:column="41"> <block pos:line="3265" pos:column="42">{
                    <expr_stmt><expr><call><name><name pos:line="3266" pos:column="21">LOG<pos:position pos:line="3266" pos:column="24"/></name><operator pos:line="3266" pos:column="24">.<pos:position pos:line="3266" pos:column="25"/></operator><name pos:line="3266" pos:column="25">info<pos:position pos:line="3266" pos:column="29"/></name></name><argument_list pos:line="3266" pos:column="29">(<argument><expr><literal type="string" pos:line="3266" pos:column="30">"Changing the stereotype namespace from "<pos:position pos:line="3266" pos:column="71"/></literal>
                            <operator pos:line="3267" pos:column="29">+<pos:position pos:line="3267" pos:column="30"/></operator> <call><name><name pos:line="3267" pos:column="31">stereotype<pos:position pos:line="3267" pos:column="41"/></name><operator pos:line="3267" pos:column="41">.<pos:position pos:line="3267" pos:column="42"/></operator><name pos:line="3267" pos:column="42">getModel<pos:position pos:line="3267" pos:column="50"/></name></name><argument_list pos:line="3267" pos:column="50">()<pos:position pos:line="3267" pos:column="52"/></argument_list></call> <operator pos:line="3267" pos:column="53">+<pos:position pos:line="3267" pos:column="54"/></operator> <literal type="string" pos:line="3267" pos:column="55">" to "<pos:position pos:line="3267" pos:column="61"/></literal> <operator pos:line="3267" pos:column="62">+<pos:position pos:line="3267" pos:column="63"/></operator> <call><name><name pos:line="3267" pos:column="64">me<pos:position pos:line="3267" pos:column="66"/></name><operator pos:line="3267" pos:column="66">.<pos:position pos:line="3267" pos:column="67"/></operator><name pos:line="3267" pos:column="67">getModel<pos:position pos:line="3267" pos:column="75"/></name></name><argument_list pos:line="3267" pos:column="75">()<pos:position pos:line="3267" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="3267" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="3267" pos:column="79"/></expr_stmt>
                }<pos:position pos:line="3268" pos:column="18"/></block></then></if>
                <expr_stmt><expr><call><name><name pos:line="3269" pos:column="17">stereotype<pos:position pos:line="3269" pos:column="27"/></name><operator pos:line="3269" pos:column="27">.<pos:position pos:line="3269" pos:column="28"/></operator><name pos:line="3269" pos:column="28">setNamespace<pos:position pos:line="3269" pos:column="40"/></name></name><argument_list pos:line="3269" pos:column="40">(<argument><expr><call><name><name pos:line="3269" pos:column="41">me<pos:position pos:line="3269" pos:column="43"/></name><operator pos:line="3269" pos:column="43">.<pos:position pos:line="3269" pos:column="44"/></operator><name pos:line="3269" pos:column="44">getModel<pos:position pos:line="3269" pos:column="52"/></name></name><argument_list pos:line="3269" pos:column="52">()<pos:position pos:line="3269" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="3269" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="3269" pos:column="56"/></expr_stmt>
            }<pos:position pos:line="3270" pos:column="14"/></block></then></if>

            <expr_stmt><expr><call><name><name pos:line="3272" pos:column="13">me<pos:position pos:line="3272" pos:column="15"/></name><operator pos:line="3272" pos:column="15">.<pos:position pos:line="3272" pos:column="16"/></operator><name pos:line="3272" pos:column="16">setStereotype<pos:position pos:line="3272" pos:column="29"/></name></name><argument_list pos:line="3272" pos:column="29">(<argument><expr><name pos:line="3272" pos:column="30">stereotype<pos:position pos:line="3272" pos:column="40"/></name></expr></argument>)<pos:position pos:line="3272" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="3272" pos:column="42"/></expr_stmt>

            <return pos:line="3274" pos:column="13">return;<pos:position pos:line="3274" pos:column="20"/></return>
        }<pos:position pos:line="3275" pos:column="10"/></block></then></if>
        <throw pos:line="3276" pos:column="9">throw <expr><operator pos:line="3276" pos:column="15">new<pos:position pos:line="3276" pos:column="18"/></operator> <call><name pos:line="3276" pos:column="19">IllegalArgumentException<pos:position pos:line="3276" pos:column="43"/></name><argument_list pos:line="3276" pos:column="43">(<argument><expr><literal type="string" pos:line="3276" pos:column="44">"handle: "<pos:position pos:line="3276" pos:column="54"/></literal> <operator pos:line="3276" pos:column="55">+<pos:position pos:line="3276" pos:column="56"/></operator> <name pos:line="3276" pos:column="57">handle<pos:position pos:line="3276" pos:column="63"/></name>
                <operator pos:line="3277" pos:column="17">+<pos:position pos:line="3277" pos:column="18"/></operator> <literal type="string" pos:line="3277" pos:column="19">" or stereo: "<pos:position pos:line="3277" pos:column="33"/></literal> <operator pos:line="3277" pos:column="34">+<pos:position pos:line="3277" pos:column="35"/></operator> <name pos:line="3277" pos:column="36">stereo<pos:position pos:line="3277" pos:column="42"/></name></expr></argument>)<pos:position pos:line="3277" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="3277" pos:column="44"/></throw>
    }<pos:position pos:line="3278" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="3280" pos:column="5">/**
     * Sets a tagged value of some modelelement.
     *
     * @param handle is the model element
     * @param tag is the tag name (a string)
     * @param value is the value
     */</comment>
    <function><specifier pos:line="3287" pos:column="5">public<pos:position pos:line="3287" pos:column="11"/></specifier> <type><name pos:line="3287" pos:column="12">void<pos:position pos:line="3287" pos:column="16"/></name></type> <name pos:line="3287" pos:column="17">setTaggedValue<pos:position pos:line="3287" pos:column="31"/></name><parameter_list pos:line="3287" pos:column="31">(
        <parameter><decl><type><name pos:line="3288" pos:column="9">Object<pos:position pos:line="3288" pos:column="15"/></name></type> <name pos:line="3288" pos:column="16">handle<pos:position pos:line="3288" pos:column="22"/></name></decl></parameter>,
        <parameter><decl><type><name pos:line="3289" pos:column="9">String<pos:position pos:line="3289" pos:column="15"/></name></type> <name pos:line="3289" pos:column="16">tag<pos:position pos:line="3289" pos:column="19"/></name></decl></parameter>,
        <parameter><decl><type><name pos:line="3290" pos:column="9">String<pos:position pos:line="3290" pos:column="15"/></name></type> <name pos:line="3290" pos:column="16">value<pos:position pos:line="3290" pos:column="21"/></name></decl></parameter>)<pos:position pos:line="3290" pos:column="22"/></parameter_list> <block pos:line="3290" pos:column="23">{
        <if pos:line="3291" pos:column="9">if <condition pos:line="3291" pos:column="12">(<expr><name pos:line="3291" pos:column="13">handle<pos:position pos:line="3291" pos:column="19"/></name> <operator pos:line="3291" pos:column="20">instanceof<pos:position pos:line="3291" pos:column="30"/></operator> <name pos:line="3291" pos:column="31">MModelElement<pos:position pos:line="3291" pos:column="44"/></name></expr>)<pos:position pos:line="3291" pos:column="45"/></condition><then pos:line="3291" pos:column="45"> <block pos:line="3291" pos:column="46">{
            <expr_stmt><expr><operator pos:line="3292" pos:column="13">(<pos:position pos:line="3292" pos:column="14"/></operator><operator pos:line="3292" pos:column="14">(<pos:position pos:line="3292" pos:column="15"/></operator><name pos:line="3292" pos:column="15">MModelElement<pos:position pos:line="3292" pos:column="28"/></name><operator pos:line="3292" pos:column="28">)<pos:position pos:line="3292" pos:column="29"/></operator> <name pos:line="3292" pos:column="30">handle<pos:position pos:line="3292" pos:column="36"/></name><operator pos:line="3292" pos:column="36">)<pos:position pos:line="3292" pos:column="37"/></operator><operator pos:line="3292" pos:column="37">.<pos:position pos:line="3292" pos:column="38"/></operator><call><name pos:line="3292" pos:column="38">setTaggedValue<pos:position pos:line="3292" pos:column="52"/></name><argument_list pos:line="3292" pos:column="52">(<argument><expr><name pos:line="3292" pos:column="53">tag<pos:position pos:line="3292" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="3292" pos:column="58">value<pos:position pos:line="3292" pos:column="63"/></name></expr></argument>)<pos:position pos:line="3292" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="3292" pos:column="65"/></expr_stmt>
            <return pos:line="3293" pos:column="13">return;<pos:position pos:line="3293" pos:column="20"/></return>
        }<pos:position pos:line="3294" pos:column="10"/></block></then></if>
    <throw pos:line="3295" pos:column="5">throw <expr><operator pos:line="3295" pos:column="11">new<pos:position pos:line="3295" pos:column="14"/></operator> <call><name pos:line="3295" pos:column="15">IllegalArgumentException<pos:position pos:line="3295" pos:column="39"/></name><argument_list pos:line="3295" pos:column="39">(<argument><expr><literal type="string" pos:line="3295" pos:column="40">"handle: "<pos:position pos:line="3295" pos:column="50"/></literal> <operator pos:line="3295" pos:column="51">+<pos:position pos:line="3295" pos:column="52"/></operator> <name pos:line="3295" pos:column="53">handle<pos:position pos:line="3295" pos:column="59"/></name></expr></argument>)<pos:position pos:line="3295" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="3295" pos:column="61"/></throw>
    }<pos:position pos:line="3296" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="3298" pos:column="5">/**
     * Set the TaggedValues of a ModelElement.
     *
     * @param handle ModelElement
     * @param taggedValues Collection of TaggedValues
     */</comment>
    <function><specifier pos:line="3304" pos:column="5">public<pos:position pos:line="3304" pos:column="11"/></specifier> <type><name pos:line="3304" pos:column="12">void<pos:position pos:line="3304" pos:column="16"/></name></type> <name pos:line="3304" pos:column="17">setTaggedValues<pos:position pos:line="3304" pos:column="32"/></name><parameter_list pos:line="3304" pos:column="32">(
        <parameter><decl><type><name pos:line="3305" pos:column="9">Object<pos:position pos:line="3305" pos:column="15"/></name></type> <name pos:line="3305" pos:column="16">handle<pos:position pos:line="3305" pos:column="22"/></name></decl></parameter>,
        <parameter><decl><type><name pos:line="3306" pos:column="9">Collection<pos:position pos:line="3306" pos:column="19"/></name></type> <name pos:line="3306" pos:column="20">taggedValues<pos:position pos:line="3306" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="3306" pos:column="33"/></parameter_list> <block pos:line="3306" pos:column="34">{
        <if pos:line="3307" pos:column="9">if <condition pos:line="3307" pos:column="12">(<expr><name pos:line="3307" pos:column="13">handle<pos:position pos:line="3307" pos:column="19"/></name> <operator pos:line="3307" pos:column="20">instanceof<pos:position pos:line="3307" pos:column="30"/></operator> <name pos:line="3307" pos:column="31">MModelElement<pos:position pos:line="3307" pos:column="44"/></name></expr>)<pos:position pos:line="3307" pos:column="45"/></condition><then pos:line="3307" pos:column="45"> <block pos:line="3307" pos:column="46">{
            <expr_stmt><expr><operator pos:line="3308" pos:column="13">(<pos:position pos:line="3308" pos:column="14"/></operator><operator pos:line="3308" pos:column="14">(<pos:position pos:line="3308" pos:column="15"/></operator><name pos:line="3308" pos:column="15">MModelElement<pos:position pos:line="3308" pos:column="28"/></name><operator pos:line="3308" pos:column="28">)<pos:position pos:line="3308" pos:column="29"/></operator> <name pos:line="3308" pos:column="30">handle<pos:position pos:line="3308" pos:column="36"/></name><operator pos:line="3308" pos:column="36">)<pos:position pos:line="3308" pos:column="37"/></operator><operator pos:line="3308" pos:column="37">.<pos:position pos:line="3308" pos:column="38"/></operator><call><name pos:line="3308" pos:column="38">setTaggedValues<pos:position pos:line="3308" pos:column="53"/></name><argument_list pos:line="3308" pos:column="53">(<argument><expr><name pos:line="3308" pos:column="54">taggedValues<pos:position pos:line="3308" pos:column="66"/></name></expr></argument>)<pos:position pos:line="3308" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="3308" pos:column="68"/></expr_stmt>
            <return pos:line="3309" pos:column="13">return;<pos:position pos:line="3309" pos:column="20"/></return>
        }<pos:position pos:line="3310" pos:column="10"/></block></then></if>
    <throw pos:line="3311" pos:column="5">throw <expr><operator pos:line="3311" pos:column="11">new<pos:position pos:line="3311" pos:column="14"/></operator> <call><name pos:line="3311" pos:column="15">IllegalArgumentException<pos:position pos:line="3311" pos:column="39"/></name><argument_list pos:line="3311" pos:column="39">(<argument><expr><literal type="string" pos:line="3311" pos:column="40">"handle: "<pos:position pos:line="3311" pos:column="50"/></literal> <operator pos:line="3311" pos:column="51">+<pos:position pos:line="3311" pos:column="52"/></operator> <name pos:line="3311" pos:column="53">handle<pos:position pos:line="3311" pos:column="59"/></name></expr></argument>)<pos:position pos:line="3311" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="3311" pos:column="61"/></throw>
    }<pos:position pos:line="3312" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="3314" pos:column="5">/**
     * Set the target scope of some association end or structural feature.
     *
     * @param handle the model element
     * @param scopeKind the target scope
     */</comment>
    <function><specifier pos:line="3320" pos:column="5">public<pos:position pos:line="3320" pos:column="11"/></specifier> <type><name pos:line="3320" pos:column="12">void<pos:position pos:line="3320" pos:column="16"/></name></type> <name pos:line="3320" pos:column="17">setTargetScope<pos:position pos:line="3320" pos:column="31"/></name><parameter_list pos:line="3320" pos:column="31">(<parameter><decl><type><name pos:line="3320" pos:column="32">Object<pos:position pos:line="3320" pos:column="38"/></name></type> <name pos:line="3320" pos:column="39">handle<pos:position pos:line="3320" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3320" pos:column="47">Object<pos:position pos:line="3320" pos:column="53"/></name></type> <name pos:line="3320" pos:column="54">scopeKind<pos:position pos:line="3320" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="3320" pos:column="64"/></parameter_list> <block pos:line="3320" pos:column="65">{
        <if pos:line="3321" pos:column="9">if <condition pos:line="3321" pos:column="12">(<expr><name pos:line="3321" pos:column="13">scopeKind<pos:position pos:line="3321" pos:column="22"/></name> <operator pos:line="3321" pos:column="23">instanceof<pos:position pos:line="3321" pos:column="33"/></operator> <name pos:line="3321" pos:column="34">MScopeKind<pos:position pos:line="3321" pos:column="44"/></name></expr>)<pos:position pos:line="3321" pos:column="45"/></condition><then pos:line="3321" pos:column="45"> <block pos:line="3321" pos:column="46">{
            <if pos:line="3322" pos:column="13">if <condition pos:line="3322" pos:column="16">(<expr><name pos:line="3322" pos:column="17">handle<pos:position pos:line="3322" pos:column="23"/></name> <operator pos:line="3322" pos:column="24">instanceof<pos:position pos:line="3322" pos:column="34"/></operator> <name pos:line="3322" pos:column="35">MStructuralFeature<pos:position pos:line="3322" pos:column="53"/></name></expr>)<pos:position pos:line="3322" pos:column="54"/></condition><then pos:line="3322" pos:column="54"> <block pos:line="3322" pos:column="55">{
                <expr_stmt><expr><operator pos:line="3323" pos:column="17">(<pos:position pos:line="3323" pos:column="18"/></operator><operator pos:line="3323" pos:column="18">(<pos:position pos:line="3323" pos:column="19"/></operator><name pos:line="3323" pos:column="19">MStructuralFeature<pos:position pos:line="3323" pos:column="37"/></name><operator pos:line="3323" pos:column="37">)<pos:position pos:line="3323" pos:column="38"/></operator> <name pos:line="3323" pos:column="39">handle<pos:position pos:line="3323" pos:column="45"/></name><operator pos:line="3323" pos:column="45">)<pos:position pos:line="3323" pos:column="46"/></operator><operator pos:line="3323" pos:column="46">.<pos:position pos:line="3323" pos:column="47"/></operator><call><name pos:line="3323" pos:column="47">setTargetScope<pos:position pos:line="3323" pos:column="61"/></name><argument_list pos:line="3323" pos:column="61">(
                    <argument><expr><operator pos:line="3324" pos:column="21">(<pos:position pos:line="3324" pos:column="22"/></operator><name pos:line="3324" pos:column="22">MScopeKind<pos:position pos:line="3324" pos:column="32"/></name><operator pos:line="3324" pos:column="32">)<pos:position pos:line="3324" pos:column="33"/></operator> <name pos:line="3324" pos:column="34">scopeKind<pos:position pos:line="3324" pos:column="43"/></name></expr></argument>)<pos:position pos:line="3324" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="3324" pos:column="45"/></expr_stmt>
                <return pos:line="3325" pos:column="17">return;<pos:position pos:line="3325" pos:column="24"/></return>
            }<pos:position pos:line="3326" pos:column="14"/></block></then></if>
            <if pos:line="3327" pos:column="13">if <condition pos:line="3327" pos:column="16">(<expr><name pos:line="3327" pos:column="17">handle<pos:position pos:line="3327" pos:column="23"/></name> <operator pos:line="3327" pos:column="24">instanceof<pos:position pos:line="3327" pos:column="34"/></operator> <name pos:line="3327" pos:column="35">MAssociationEnd<pos:position pos:line="3327" pos:column="50"/></name></expr>)<pos:position pos:line="3327" pos:column="51"/></condition><then pos:line="3327" pos:column="51"> <block pos:line="3327" pos:column="52">{
                <expr_stmt><expr><operator pos:line="3328" pos:column="17">(<pos:position pos:line="3328" pos:column="18"/></operator><operator pos:line="3328" pos:column="18">(<pos:position pos:line="3328" pos:column="19"/></operator><name pos:line="3328" pos:column="19">MAssociationEnd<pos:position pos:line="3328" pos:column="34"/></name><operator pos:line="3328" pos:column="34">)<pos:position pos:line="3328" pos:column="35"/></operator> <name pos:line="3328" pos:column="36">handle<pos:position pos:line="3328" pos:column="42"/></name><operator pos:line="3328" pos:column="42">)<pos:position pos:line="3328" pos:column="43"/></operator>
                	<operator pos:line="3329" pos:column="25">.<pos:position pos:line="3329" pos:column="26"/></operator><call><name pos:line="3329" pos:column="26">setTargetScope<pos:position pos:line="3329" pos:column="40"/></name><argument_list pos:line="3329" pos:column="40">(<argument><expr><operator pos:line="3329" pos:column="41">(<pos:position pos:line="3329" pos:column="42"/></operator><name pos:line="3329" pos:column="42">MScopeKind<pos:position pos:line="3329" pos:column="52"/></name><operator pos:line="3329" pos:column="52">)<pos:position pos:line="3329" pos:column="53"/></operator> <name pos:line="3329" pos:column="54">scopeKind<pos:position pos:line="3329" pos:column="63"/></name></expr></argument>)<pos:position pos:line="3329" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="3329" pos:column="65"/></expr_stmt>
                <return pos:line="3330" pos:column="17">return;<pos:position pos:line="3330" pos:column="24"/></return>
            }<pos:position pos:line="3331" pos:column="14"/></block></then></if>
        }<pos:position pos:line="3332" pos:column="10"/></block></then></if>
        <throw pos:line="3333" pos:column="9">throw <expr><operator pos:line="3333" pos:column="15">new<pos:position pos:line="3333" pos:column="18"/></operator> <call><name pos:line="3333" pos:column="19">IllegalArgumentException<pos:position pos:line="3333" pos:column="43"/></name><argument_list pos:line="3333" pos:column="43">(<argument><expr><literal type="string" pos:line="3333" pos:column="44">"handle: "<pos:position pos:line="3333" pos:column="54"/></literal> <operator pos:line="3333" pos:column="55">+<pos:position pos:line="3333" pos:column="56"/></operator> <name pos:line="3333" pos:column="57">handle<pos:position pos:line="3333" pos:column="63"/></name>
                <operator pos:line="3334" pos:column="17">+<pos:position pos:line="3334" pos:column="18"/></operator> <literal type="string" pos:line="3334" pos:column="19">" or scopeKind: "<pos:position pos:line="3334" pos:column="36"/></literal> <operator pos:line="3334" pos:column="37">+<pos:position pos:line="3334" pos:column="38"/></operator> <name pos:line="3334" pos:column="39">scopeKind<pos:position pos:line="3334" pos:column="48"/></name></expr></argument>)<pos:position pos:line="3334" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="3334" pos:column="50"/></throw>
    }<pos:position pos:line="3335" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="3337" pos:column="5">/**
     * Sets the type of some parameter.
     *
     * @param handle is the model element
     * @param type is the type (a classifier)
     */</comment>
    <function><specifier pos:line="3343" pos:column="5">public<pos:position pos:line="3343" pos:column="11"/></specifier> <type><name pos:line="3343" pos:column="12">void<pos:position pos:line="3343" pos:column="16"/></name></type> <name pos:line="3343" pos:column="17">setType<pos:position pos:line="3343" pos:column="24"/></name><parameter_list pos:line="3343" pos:column="24">(<parameter><decl><type><name pos:line="3343" pos:column="25">Object<pos:position pos:line="3343" pos:column="31"/></name></type> <name pos:line="3343" pos:column="32">handle<pos:position pos:line="3343" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3343" pos:column="40">Object<pos:position pos:line="3343" pos:column="46"/></name></type> <name pos:line="3343" pos:column="47">type<pos:position pos:line="3343" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="3343" pos:column="52"/></parameter_list> <block pos:line="3343" pos:column="53">{
        <if pos:line="3344" pos:column="9">if <condition pos:line="3344" pos:column="12">(<expr><name pos:line="3344" pos:column="13">type<pos:position pos:line="3344" pos:column="17"/></name> <operator pos:line="3344" pos:column="18">==<pos:position pos:line="3344" pos:column="20"/></operator> <literal type="null" pos:line="3344" pos:column="21">null<pos:position pos:line="3344" pos:column="25"/></literal> <operator pos:line="3344" pos:column="26">||<pos:position pos:line="3344" pos:column="28"/></operator> <name pos:line="3344" pos:column="29">type<pos:position pos:line="3344" pos:column="33"/></name> <operator pos:line="3344" pos:column="34">instanceof<pos:position pos:line="3344" pos:column="44"/></operator> <name pos:line="3344" pos:column="45">MClassifier<pos:position pos:line="3344" pos:column="56"/></name></expr>)<pos:position pos:line="3344" pos:column="57"/></condition><then pos:line="3344" pos:column="57"> <block pos:line="3344" pos:column="58">{
            <if pos:line="3345" pos:column="13">if <condition pos:line="3345" pos:column="16">(<expr><name pos:line="3345" pos:column="17">handle<pos:position pos:line="3345" pos:column="23"/></name> <operator pos:line="3345" pos:column="24">instanceof<pos:position pos:line="3345" pos:column="34"/></operator> <name pos:line="3345" pos:column="35">MObjectFlowState<pos:position pos:line="3345" pos:column="51"/></name></expr>)<pos:position pos:line="3345" pos:column="52"/></condition><then pos:line="3345" pos:column="52"> <block pos:line="3345" pos:column="53">{
                <expr_stmt><expr><operator pos:line="3346" pos:column="17">(<pos:position pos:line="3346" pos:column="18"/></operator><operator pos:line="3346" pos:column="18">(<pos:position pos:line="3346" pos:column="19"/></operator><name pos:line="3346" pos:column="19">MObjectFlowState<pos:position pos:line="3346" pos:column="35"/></name><operator pos:line="3346" pos:column="35">)<pos:position pos:line="3346" pos:column="36"/></operator> <name pos:line="3346" pos:column="37">handle<pos:position pos:line="3346" pos:column="43"/></name><operator pos:line="3346" pos:column="43">)<pos:position pos:line="3346" pos:column="44"/></operator><operator pos:line="3346" pos:column="44">.<pos:position pos:line="3346" pos:column="45"/></operator><call><name pos:line="3346" pos:column="45">setType<pos:position pos:line="3346" pos:column="52"/></name><argument_list pos:line="3346" pos:column="52">(<argument><expr><operator pos:line="3346" pos:column="53">(<pos:position pos:line="3346" pos:column="54"/></operator><name pos:line="3346" pos:column="54">MClassifier<pos:position pos:line="3346" pos:column="65"/></name><operator pos:line="3346" pos:column="65">)<pos:position pos:line="3346" pos:column="66"/></operator> <name pos:line="3346" pos:column="67">type<pos:position pos:line="3346" pos:column="71"/></name></expr></argument>)<pos:position pos:line="3346" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="3346" pos:column="73"/></expr_stmt>
                <return pos:line="3347" pos:column="17">return;<pos:position pos:line="3347" pos:column="24"/></return>
            }<pos:position pos:line="3348" pos:column="14"/></block></then></if>
            <if pos:line="3349" pos:column="13">if <condition pos:line="3349" pos:column="16">(<expr><name pos:line="3349" pos:column="17">handle<pos:position pos:line="3349" pos:column="23"/></name> <operator pos:line="3349" pos:column="24">instanceof<pos:position pos:line="3349" pos:column="34"/></operator> <name pos:line="3349" pos:column="35">MClassifierInState<pos:position pos:line="3349" pos:column="53"/></name></expr>)<pos:position pos:line="3349" pos:column="54"/></condition><then pos:line="3349" pos:column="54"> <block pos:line="3349" pos:column="55">{
                <expr_stmt><expr><operator pos:line="3350" pos:column="17">(<pos:position pos:line="3350" pos:column="18"/></operator><operator pos:line="3350" pos:column="18">(<pos:position pos:line="3350" pos:column="19"/></operator><name pos:line="3350" pos:column="19">MClassifierInState<pos:position pos:line="3350" pos:column="37"/></name><operator pos:line="3350" pos:column="37">)<pos:position pos:line="3350" pos:column="38"/></operator> <name pos:line="3350" pos:column="39">handle<pos:position pos:line="3350" pos:column="45"/></name><operator pos:line="3350" pos:column="45">)<pos:position pos:line="3350" pos:column="46"/></operator><operator pos:line="3350" pos:column="46">.<pos:position pos:line="3350" pos:column="47"/></operator><call><name pos:line="3350" pos:column="47">setType<pos:position pos:line="3350" pos:column="54"/></name><argument_list pos:line="3350" pos:column="54">(<argument><expr><operator pos:line="3350" pos:column="55">(<pos:position pos:line="3350" pos:column="56"/></operator><name pos:line="3350" pos:column="56">MClassifier<pos:position pos:line="3350" pos:column="67"/></name><operator pos:line="3350" pos:column="67">)<pos:position pos:line="3350" pos:column="68"/></operator> <name pos:line="3350" pos:column="69">type<pos:position pos:line="3350" pos:column="73"/></name></expr></argument>)<pos:position pos:line="3350" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="3350" pos:column="75"/></expr_stmt>
                <return pos:line="3351" pos:column="17">return;<pos:position pos:line="3351" pos:column="24"/></return>
            }<pos:position pos:line="3352" pos:column="14"/></block></then></if>
            <if pos:line="3353" pos:column="13">if <condition pos:line="3353" pos:column="16">(<expr><name pos:line="3353" pos:column="17">handle<pos:position pos:line="3353" pos:column="23"/></name> <operator pos:line="3353" pos:column="24">instanceof<pos:position pos:line="3353" pos:column="34"/></operator> <name pos:line="3353" pos:column="35">MParameter<pos:position pos:line="3353" pos:column="45"/></name></expr>)<pos:position pos:line="3353" pos:column="46"/></condition><then pos:line="3353" pos:column="46"> <block pos:line="3353" pos:column="47">{
                <expr_stmt><expr><operator pos:line="3354" pos:column="17">(<pos:position pos:line="3354" pos:column="18"/></operator><operator pos:line="3354" pos:column="18">(<pos:position pos:line="3354" pos:column="19"/></operator><name pos:line="3354" pos:column="19">MParameter<pos:position pos:line="3354" pos:column="29"/></name><operator pos:line="3354" pos:column="29">)<pos:position pos:line="3354" pos:column="30"/></operator> <name pos:line="3354" pos:column="31">handle<pos:position pos:line="3354" pos:column="37"/></name><operator pos:line="3354" pos:column="37">)<pos:position pos:line="3354" pos:column="38"/></operator><operator pos:line="3354" pos:column="38">.<pos:position pos:line="3354" pos:column="39"/></operator><call><name pos:line="3354" pos:column="39">setType<pos:position pos:line="3354" pos:column="46"/></name><argument_list pos:line="3354" pos:column="46">(<argument><expr><operator pos:line="3354" pos:column="47">(<pos:position pos:line="3354" pos:column="48"/></operator><name pos:line="3354" pos:column="48">MClassifier<pos:position pos:line="3354" pos:column="59"/></name><operator pos:line="3354" pos:column="59">)<pos:position pos:line="3354" pos:column="60"/></operator> <name pos:line="3354" pos:column="61">type<pos:position pos:line="3354" pos:column="65"/></name></expr></argument>)<pos:position pos:line="3354" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="3354" pos:column="67"/></expr_stmt>
                <return pos:line="3355" pos:column="17">return;<pos:position pos:line="3355" pos:column="24"/></return>
            }<pos:position pos:line="3356" pos:column="14"/></block></then></if>
            <if pos:line="3357" pos:column="13">if <condition pos:line="3357" pos:column="16">(<expr><name pos:line="3357" pos:column="17">handle<pos:position pos:line="3357" pos:column="23"/></name> <operator pos:line="3357" pos:column="24">instanceof<pos:position pos:line="3357" pos:column="34"/></operator> <name pos:line="3357" pos:column="35">MAssociationEnd<pos:position pos:line="3357" pos:column="50"/></name></expr>)<pos:position pos:line="3357" pos:column="51"/></condition><then pos:line="3357" pos:column="51"> <block pos:line="3357" pos:column="52">{
                <expr_stmt><expr><operator pos:line="3358" pos:column="17">(<pos:position pos:line="3358" pos:column="18"/></operator><operator pos:line="3358" pos:column="18">(<pos:position pos:line="3358" pos:column="19"/></operator><name pos:line="3358" pos:column="19">MAssociationEnd<pos:position pos:line="3358" pos:column="34"/></name><operator pos:line="3358" pos:column="34">)<pos:position pos:line="3358" pos:column="35"/></operator> <name pos:line="3358" pos:column="36">handle<pos:position pos:line="3358" pos:column="42"/></name><operator pos:line="3358" pos:column="42">)<pos:position pos:line="3358" pos:column="43"/></operator><operator pos:line="3358" pos:column="43">.<pos:position pos:line="3358" pos:column="44"/></operator><call><name pos:line="3358" pos:column="44">setType<pos:position pos:line="3358" pos:column="51"/></name><argument_list pos:line="3358" pos:column="51">(<argument><expr><operator pos:line="3358" pos:column="52">(<pos:position pos:line="3358" pos:column="53"/></operator><name pos:line="3358" pos:column="53">MClassifier<pos:position pos:line="3358" pos:column="64"/></name><operator pos:line="3358" pos:column="64">)<pos:position pos:line="3358" pos:column="65"/></operator> <name pos:line="3358" pos:column="66">type<pos:position pos:line="3358" pos:column="70"/></name></expr></argument>)<pos:position pos:line="3358" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="3358" pos:column="72"/></expr_stmt>
                <return pos:line="3359" pos:column="17">return;<pos:position pos:line="3359" pos:column="24"/></return>
            }<pos:position pos:line="3360" pos:column="14"/></block></then></if>
            <if pos:line="3361" pos:column="13">if <condition pos:line="3361" pos:column="16">(<expr><name pos:line="3361" pos:column="17">handle<pos:position pos:line="3361" pos:column="23"/></name> <operator pos:line="3361" pos:column="24">instanceof<pos:position pos:line="3361" pos:column="34"/></operator> <name pos:line="3361" pos:column="35">MStructuralFeature<pos:position pos:line="3361" pos:column="53"/></name></expr>)<pos:position pos:line="3361" pos:column="54"/></condition><then pos:line="3361" pos:column="54"> <block pos:line="3361" pos:column="55">{
                <expr_stmt><expr><operator pos:line="3362" pos:column="17">(<pos:position pos:line="3362" pos:column="18"/></operator><operator pos:line="3362" pos:column="18">(<pos:position pos:line="3362" pos:column="19"/></operator><name pos:line="3362" pos:column="19">MStructuralFeature<pos:position pos:line="3362" pos:column="37"/></name><operator pos:line="3362" pos:column="37">)<pos:position pos:line="3362" pos:column="38"/></operator> <name pos:line="3362" pos:column="39">handle<pos:position pos:line="3362" pos:column="45"/></name><operator pos:line="3362" pos:column="45">)<pos:position pos:line="3362" pos:column="46"/></operator><operator pos:line="3362" pos:column="46">.<pos:position pos:line="3362" pos:column="47"/></operator><call><name pos:line="3362" pos:column="47">setType<pos:position pos:line="3362" pos:column="54"/></name><argument_list pos:line="3362" pos:column="54">(<argument><expr><operator pos:line="3362" pos:column="55">(<pos:position pos:line="3362" pos:column="56"/></operator><name pos:line="3362" pos:column="56">MClassifier<pos:position pos:line="3362" pos:column="67"/></name><operator pos:line="3362" pos:column="67">)<pos:position pos:line="3362" pos:column="68"/></operator> <name pos:line="3362" pos:column="69">type<pos:position pos:line="3362" pos:column="73"/></name></expr></argument>)<pos:position pos:line="3362" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="3362" pos:column="75"/></expr_stmt>
                <return pos:line="3363" pos:column="17">return;<pos:position pos:line="3363" pos:column="24"/></return>
            }<pos:position pos:line="3364" pos:column="14"/></block></then></if>
        }<pos:position pos:line="3365" pos:column="10"/></block></then></if>
        <throw pos:line="3366" pos:column="9">throw <expr><operator pos:line="3366" pos:column="15">new<pos:position pos:line="3366" pos:column="18"/></operator> <call><name pos:line="3366" pos:column="19">IllegalArgumentException<pos:position pos:line="3366" pos:column="43"/></name><argument_list pos:line="3366" pos:column="43">(<argument><expr><literal type="string" pos:line="3366" pos:column="44">"handle: "<pos:position pos:line="3366" pos:column="54"/></literal> <operator pos:line="3366" pos:column="55">+<pos:position pos:line="3366" pos:column="56"/></operator> <name pos:line="3366" pos:column="57">handle<pos:position pos:line="3366" pos:column="63"/></name>
                <operator pos:line="3367" pos:column="17">+<pos:position pos:line="3367" pos:column="18"/></operator> <literal type="string" pos:line="3367" pos:column="19">" or type: "<pos:position pos:line="3367" pos:column="31"/></literal> <operator pos:line="3367" pos:column="32">+<pos:position pos:line="3367" pos:column="33"/></operator> <name pos:line="3367" pos:column="34">type<pos:position pos:line="3367" pos:column="38"/></name></expr></argument>)<pos:position pos:line="3367" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="3367" pos:column="40"/></throw>
    }<pos:position pos:line="3368" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="3370" pos:column="5">/**
     * Set the UUID of this element.
     *
     * @param handle base element (MBase type)
     * @param uuid is the UUID
     */</comment>
    <function><specifier pos:line="3376" pos:column="5">public<pos:position pos:line="3376" pos:column="11"/></specifier> <type><name pos:line="3376" pos:column="12">void<pos:position pos:line="3376" pos:column="16"/></name></type> <name pos:line="3376" pos:column="17">setUUID<pos:position pos:line="3376" pos:column="24"/></name><parameter_list pos:line="3376" pos:column="24">(<parameter><decl><type><name pos:line="3376" pos:column="25">Object<pos:position pos:line="3376" pos:column="31"/></name></type> <name pos:line="3376" pos:column="32">handle<pos:position pos:line="3376" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3376" pos:column="40">String<pos:position pos:line="3376" pos:column="46"/></name></type> <name pos:line="3376" pos:column="47">uuid<pos:position pos:line="3376" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="3376" pos:column="52"/></parameter_list> <block pos:line="3376" pos:column="53">{
        <if pos:line="3377" pos:column="9">if <condition pos:line="3377" pos:column="12">(<expr><name pos:line="3377" pos:column="13">handle<pos:position pos:line="3377" pos:column="19"/></name> <operator pos:line="3377" pos:column="20">instanceof<pos:position pos:line="3377" pos:column="30"/></operator> <name pos:line="3377" pos:column="31">MBase<pos:position pos:line="3377" pos:column="36"/></name></expr>)<pos:position pos:line="3377" pos:column="37"/></condition><then pos:line="3377" pos:column="37"> <block pos:line="3377" pos:column="38">{
            <expr_stmt><expr><operator pos:line="3378" pos:column="13">(<pos:position pos:line="3378" pos:column="14"/></operator><operator pos:line="3378" pos:column="14">(<pos:position pos:line="3378" pos:column="15"/></operator><name pos:line="3378" pos:column="15">MBase<pos:position pos:line="3378" pos:column="20"/></name><operator pos:line="3378" pos:column="20">)<pos:position pos:line="3378" pos:column="21"/></operator> <name pos:line="3378" pos:column="22">handle<pos:position pos:line="3378" pos:column="28"/></name><operator pos:line="3378" pos:column="28">)<pos:position pos:line="3378" pos:column="29"/></operator><operator pos:line="3378" pos:column="29">.<pos:position pos:line="3378" pos:column="30"/></operator><call><name pos:line="3378" pos:column="30">setUUID<pos:position pos:line="3378" pos:column="37"/></name><argument_list pos:line="3378" pos:column="37">(<argument><expr><name pos:line="3378" pos:column="38">uuid<pos:position pos:line="3378" pos:column="42"/></name></expr></argument>)<pos:position pos:line="3378" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="3378" pos:column="44"/></expr_stmt>
            <return pos:line="3379" pos:column="13">return;<pos:position pos:line="3379" pos:column="20"/></return>
        }<pos:position pos:line="3380" pos:column="10"/></block></then></if>
    <throw pos:line="3381" pos:column="5">throw <expr><operator pos:line="3381" pos:column="11">new<pos:position pos:line="3381" pos:column="14"/></operator> <call><name pos:line="3381" pos:column="15">IllegalArgumentException<pos:position pos:line="3381" pos:column="39"/></name><argument_list pos:line="3381" pos:column="39">(<argument><expr><literal type="string" pos:line="3381" pos:column="40">"handle: "<pos:position pos:line="3381" pos:column="50"/></literal> <operator pos:line="3381" pos:column="51">+<pos:position pos:line="3381" pos:column="52"/></operator> <name pos:line="3381" pos:column="53">handle<pos:position pos:line="3381" pos:column="59"/></name></expr></argument>)<pos:position pos:line="3381" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="3381" pos:column="61"/></throw>
    }<pos:position pos:line="3382" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="3384" pos:column="5">/**
     * Set the visibility of some modelelement.
     *
     * @param handle element
     * @param visibility is the visibility
     */</comment>
    <function><specifier pos:line="3390" pos:column="5">public<pos:position pos:line="3390" pos:column="11"/></specifier> <type><name pos:line="3390" pos:column="12">void<pos:position pos:line="3390" pos:column="16"/></name></type> <name pos:line="3390" pos:column="17">setVisibility<pos:position pos:line="3390" pos:column="30"/></name><parameter_list pos:line="3390" pos:column="30">(<parameter><decl><type><name pos:line="3390" pos:column="31">Object<pos:position pos:line="3390" pos:column="37"/></name></type> <name pos:line="3390" pos:column="38">handle<pos:position pos:line="3390" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3390" pos:column="46">Object<pos:position pos:line="3390" pos:column="52"/></name></type> <name pos:line="3390" pos:column="53">visibility<pos:position pos:line="3390" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="3390" pos:column="64"/></parameter_list> <block pos:line="3390" pos:column="65">{
        <if pos:line="3391" pos:column="9">if <condition pos:line="3391" pos:column="12">(<expr><name pos:line="3391" pos:column="13">visibility<pos:position pos:line="3391" pos:column="23"/></name> <operator pos:line="3391" pos:column="24">instanceof<pos:position pos:line="3391" pos:column="34"/></operator> <name pos:line="3391" pos:column="35">MVisibilityKind<pos:position pos:line="3391" pos:column="50"/></name></expr>)<pos:position pos:line="3391" pos:column="51"/></condition><then pos:line="3391" pos:column="51"> <block pos:line="3391" pos:column="52">{
            <if pos:line="3392" pos:column="13">if <condition pos:line="3392" pos:column="16">(<expr><name pos:line="3392" pos:column="17">handle<pos:position pos:line="3392" pos:column="23"/></name> <operator pos:line="3392" pos:column="24">instanceof<pos:position pos:line="3392" pos:column="34"/></operator> <name pos:line="3392" pos:column="35">MModelElement<pos:position pos:line="3392" pos:column="48"/></name></expr>)<pos:position pos:line="3392" pos:column="49"/></condition><then pos:line="3392" pos:column="49"> <block pos:line="3392" pos:column="50">{
                <expr_stmt><expr><operator pos:line="3393" pos:column="17">(<pos:position pos:line="3393" pos:column="18"/></operator><operator pos:line="3393" pos:column="18">(<pos:position pos:line="3393" pos:column="19"/></operator><name pos:line="3393" pos:column="19">MModelElement<pos:position pos:line="3393" pos:column="32"/></name><operator pos:line="3393" pos:column="32">)<pos:position pos:line="3393" pos:column="33"/></operator> <name pos:line="3393" pos:column="34">handle<pos:position pos:line="3393" pos:column="40"/></name><operator pos:line="3393" pos:column="40">)<pos:position pos:line="3393" pos:column="41"/></operator><operator pos:line="3393" pos:column="41">.<pos:position pos:line="3393" pos:column="42"/></operator><call><name pos:line="3393" pos:column="42">setVisibility<pos:position pos:line="3393" pos:column="55"/></name><argument_list pos:line="3393" pos:column="55">(
                    <argument><expr><operator pos:line="3394" pos:column="21">(<pos:position pos:line="3394" pos:column="22"/></operator><name pos:line="3394" pos:column="22">MVisibilityKind<pos:position pos:line="3394" pos:column="37"/></name><operator pos:line="3394" pos:column="37">)<pos:position pos:line="3394" pos:column="38"/></operator> <name pos:line="3394" pos:column="39">visibility<pos:position pos:line="3394" pos:column="49"/></name></expr></argument>)<pos:position pos:line="3394" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="3394" pos:column="51"/></expr_stmt>
                <return pos:line="3395" pos:column="17">return;<pos:position pos:line="3395" pos:column="24"/></return>
            }<pos:position pos:line="3396" pos:column="14"/></block></then></if>
            <if pos:line="3397" pos:column="13">if <condition pos:line="3397" pos:column="16">(<expr><name pos:line="3397" pos:column="17">handle<pos:position pos:line="3397" pos:column="23"/></name> <operator pos:line="3397" pos:column="24">instanceof<pos:position pos:line="3397" pos:column="34"/></operator> <name pos:line="3397" pos:column="35">MElementResidence<pos:position pos:line="3397" pos:column="52"/></name></expr>)<pos:position pos:line="3397" pos:column="53"/></condition><then pos:line="3397" pos:column="53"> <block pos:line="3397" pos:column="54">{
                <expr_stmt><expr><operator pos:line="3398" pos:column="17">(<pos:position pos:line="3398" pos:column="18"/></operator><operator pos:line="3398" pos:column="18">(<pos:position pos:line="3398" pos:column="19"/></operator><name pos:line="3398" pos:column="19">MElementResidence<pos:position pos:line="3398" pos:column="36"/></name><operator pos:line="3398" pos:column="36">)<pos:position pos:line="3398" pos:column="37"/></operator> <name pos:line="3398" pos:column="38">handle<pos:position pos:line="3398" pos:column="44"/></name><operator pos:line="3398" pos:column="44">)<pos:position pos:line="3398" pos:column="45"/></operator><operator pos:line="3398" pos:column="45">.<pos:position pos:line="3398" pos:column="46"/></operator><call><name pos:line="3398" pos:column="46">setVisibility<pos:position pos:line="3398" pos:column="59"/></name><argument_list pos:line="3398" pos:column="59">(
                    <argument><expr><operator pos:line="3399" pos:column="21">(<pos:position pos:line="3399" pos:column="22"/></operator><name pos:line="3399" pos:column="22">MVisibilityKind<pos:position pos:line="3399" pos:column="37"/></name><operator pos:line="3399" pos:column="37">)<pos:position pos:line="3399" pos:column="38"/></operator> <name pos:line="3399" pos:column="39">visibility<pos:position pos:line="3399" pos:column="49"/></name></expr></argument>)<pos:position pos:line="3399" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="3399" pos:column="51"/></expr_stmt>
                    <return pos:line="3400" pos:column="21">return;<pos:position pos:line="3400" pos:column="28"/></return>
            }<pos:position pos:line="3401" pos:column="14"/></block></then></if>
            <if pos:line="3402" pos:column="13">if <condition pos:line="3402" pos:column="16">(<expr><name pos:line="3402" pos:column="17">handle<pos:position pos:line="3402" pos:column="23"/></name> <operator pos:line="3402" pos:column="24">instanceof<pos:position pos:line="3402" pos:column="34"/></operator> <name pos:line="3402" pos:column="35">MElementImport<pos:position pos:line="3402" pos:column="49"/></name></expr>)<pos:position pos:line="3402" pos:column="50"/></condition><then pos:line="3402" pos:column="50"> <block pos:line="3402" pos:column="51">{
                <expr_stmt><expr><operator pos:line="3403" pos:column="17">(<pos:position pos:line="3403" pos:column="18"/></operator><operator pos:line="3403" pos:column="18">(<pos:position pos:line="3403" pos:column="19"/></operator><name pos:line="3403" pos:column="19">MElementImport<pos:position pos:line="3403" pos:column="33"/></name><operator pos:line="3403" pos:column="33">)<pos:position pos:line="3403" pos:column="34"/></operator> <name pos:line="3403" pos:column="35">handle<pos:position pos:line="3403" pos:column="41"/></name><operator pos:line="3403" pos:column="41">)<pos:position pos:line="3403" pos:column="42"/></operator><operator pos:line="3403" pos:column="42">.<pos:position pos:line="3403" pos:column="43"/></operator><call><name pos:line="3403" pos:column="43">setVisibility<pos:position pos:line="3403" pos:column="56"/></name><argument_list pos:line="3403" pos:column="56">(
                    <argument><expr><operator pos:line="3404" pos:column="21">(<pos:position pos:line="3404" pos:column="22"/></operator><name pos:line="3404" pos:column="22">MVisibilityKind<pos:position pos:line="3404" pos:column="37"/></name><operator pos:line="3404" pos:column="37">)<pos:position pos:line="3404" pos:column="38"/></operator> <name pos:line="3404" pos:column="39">visibility<pos:position pos:line="3404" pos:column="49"/></name></expr></argument>)<pos:position pos:line="3404" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="3404" pos:column="51"/></expr_stmt>
                    <return pos:line="3405" pos:column="21">return;<pos:position pos:line="3405" pos:column="28"/></return>
            }<pos:position pos:line="3406" pos:column="14"/></block></then></if>
        }<pos:position pos:line="3407" pos:column="10"/></block></then></if>
        <throw pos:line="3408" pos:column="9">throw <expr><operator pos:line="3408" pos:column="15">new<pos:position pos:line="3408" pos:column="18"/></operator> <call><name pos:line="3408" pos:column="19">IllegalArgumentException<pos:position pos:line="3408" pos:column="43"/></name><argument_list pos:line="3408" pos:column="43">(<argument><expr><literal type="string" pos:line="3408" pos:column="44">"handle: "<pos:position pos:line="3408" pos:column="54"/></literal> <operator pos:line="3408" pos:column="55">+<pos:position pos:line="3408" pos:column="56"/></operator> <name pos:line="3408" pos:column="57">handle<pos:position pos:line="3408" pos:column="63"/></name>
                <operator pos:line="3409" pos:column="17">+<pos:position pos:line="3409" pos:column="18"/></operator> <literal type="string" pos:line="3409" pos:column="19">" or visibility: "<pos:position pos:line="3409" pos:column="37"/></literal> <operator pos:line="3409" pos:column="38">+<pos:position pos:line="3409" pos:column="39"/></operator> <name pos:line="3409" pos:column="40">visibility<pos:position pos:line="3409" pos:column="50"/></name></expr></argument>)<pos:position pos:line="3409" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="3409" pos:column="52"/></throw>
    }<pos:position pos:line="3410" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="3412" pos:column="5">/**
     * @param handle Component
     * @param node Node
     */</comment>
    <function><specifier pos:line="3416" pos:column="5">public<pos:position pos:line="3416" pos:column="11"/></specifier> <type><name pos:line="3416" pos:column="12">void<pos:position pos:line="3416" pos:column="16"/></name></type> <name pos:line="3416" pos:column="17">removeDeploymentLocation<pos:position pos:line="3416" pos:column="41"/></name><parameter_list pos:line="3416" pos:column="41">(<parameter><decl><type><name pos:line="3416" pos:column="42">Object<pos:position pos:line="3416" pos:column="48"/></name></type> <name pos:line="3416" pos:column="49">handle<pos:position pos:line="3416" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3416" pos:column="57">Object<pos:position pos:line="3416" pos:column="63"/></name></type> <name pos:line="3416" pos:column="64">node<pos:position pos:line="3416" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="3416" pos:column="69"/></parameter_list> <block pos:line="3416" pos:column="70">{
        <if pos:line="3417" pos:column="9">if <condition pos:line="3417" pos:column="12">(<expr><name pos:line="3417" pos:column="13">handle<pos:position pos:line="3417" pos:column="19"/></name> <operator pos:line="3417" pos:column="20">instanceof<pos:position pos:line="3417" pos:column="30"/></operator> <name pos:line="3417" pos:column="31">MComponent<pos:position pos:line="3417" pos:column="41"/></name> <operator pos:line="3417" pos:column="42">&amp;&amp;<pos:position pos:line="3417" pos:column="52"/></operator> <name pos:line="3417" pos:column="45">node<pos:position pos:line="3417" pos:column="49"/></name> <operator pos:line="3417" pos:column="50">instanceof<pos:position pos:line="3417" pos:column="60"/></operator> <name pos:line="3417" pos:column="61">MNode<pos:position pos:line="3417" pos:column="66"/></name></expr>)<pos:position pos:line="3417" pos:column="67"/></condition><then pos:line="3417" pos:column="67"> <block pos:line="3417" pos:column="68">{
            <expr_stmt><expr><operator pos:line="3418" pos:column="13">(<pos:position pos:line="3418" pos:column="14"/></operator><operator pos:line="3418" pos:column="14">(<pos:position pos:line="3418" pos:column="15"/></operator><name pos:line="3418" pos:column="15">MComponent<pos:position pos:line="3418" pos:column="25"/></name><operator pos:line="3418" pos:column="25">)<pos:position pos:line="3418" pos:column="26"/></operator> <name pos:line="3418" pos:column="27">handle<pos:position pos:line="3418" pos:column="33"/></name><operator pos:line="3418" pos:column="33">)<pos:position pos:line="3418" pos:column="34"/></operator><operator pos:line="3418" pos:column="34">.<pos:position pos:line="3418" pos:column="35"/></operator><call><name pos:line="3418" pos:column="35">removeDeploymentLocation<pos:position pos:line="3418" pos:column="59"/></name><argument_list pos:line="3418" pos:column="59">(<argument><expr><operator pos:line="3418" pos:column="60">(<pos:position pos:line="3418" pos:column="61"/></operator><name pos:line="3418" pos:column="61">MNode<pos:position pos:line="3418" pos:column="66"/></name><operator pos:line="3418" pos:column="66">)<pos:position pos:line="3418" pos:column="67"/></operator> <name pos:line="3418" pos:column="68">node<pos:position pos:line="3418" pos:column="72"/></name></expr></argument>)<pos:position pos:line="3418" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="3418" pos:column="74"/></expr_stmt>
            <return pos:line="3419" pos:column="13">return;<pos:position pos:line="3419" pos:column="20"/></return>
        }<pos:position pos:line="3420" pos:column="10"/></block></then></if>
        <throw pos:line="3421" pos:column="9">throw <expr><operator pos:line="3421" pos:column="15">new<pos:position pos:line="3421" pos:column="18"/></operator> <call><name pos:line="3421" pos:column="19">IllegalArgumentException<pos:position pos:line="3421" pos:column="43"/></name><argument_list pos:line="3421" pos:column="43">(<argument><expr><literal type="string" pos:line="3421" pos:column="44">"handle: "<pos:position pos:line="3421" pos:column="54"/></literal> <operator pos:line="3421" pos:column="55">+<pos:position pos:line="3421" pos:column="56"/></operator> <name pos:line="3421" pos:column="57">handle<pos:position pos:line="3421" pos:column="63"/></name>
                <operator pos:line="3422" pos:column="17">+<pos:position pos:line="3422" pos:column="18"/></operator> <literal type="string" pos:line="3422" pos:column="19">" or node: "<pos:position pos:line="3422" pos:column="31"/></literal> <operator pos:line="3422" pos:column="32">+<pos:position pos:line="3422" pos:column="33"/></operator> <name pos:line="3422" pos:column="34">node<pos:position pos:line="3422" pos:column="38"/></name></expr></argument>)<pos:position pos:line="3422" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="3422" pos:column="40"/></throw>
    }<pos:position pos:line="3423" pos:column="6"/></block></function>

	<comment type="block" pos:line="3425" pos:column="9">/* (non-Javadoc)
	 * @see org.argouml.model.CoreHelper#addElementResidence(java.lang.Object, java.lang.Object)
	 */</comment>
	<function><specifier pos:line="3428" pos:column="9">public<pos:position pos:line="3428" pos:column="15"/></specifier> <type><name pos:line="3428" pos:column="16">void<pos:position pos:line="3428" pos:column="20"/></name></type> <name pos:line="3428" pos:column="21">addElementResidence<pos:position pos:line="3428" pos:column="40"/></name><parameter_list pos:line="3428" pos:column="40">(<parameter><decl><type><name pos:line="3428" pos:column="41">Object<pos:position pos:line="3428" pos:column="47"/></name></type> <name pos:line="3428" pos:column="48">handle<pos:position pos:line="3428" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3428" pos:column="56">Object<pos:position pos:line="3428" pos:column="62"/></name></type> <name pos:line="3428" pos:column="63">residence<pos:position pos:line="3428" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="3428" pos:column="73"/></parameter_list> <block pos:line="3428" pos:column="74">{
        <if pos:line="3429" pos:column="9">if <condition pos:line="3429" pos:column="12">(<expr><name pos:line="3429" pos:column="13">handle<pos:position pos:line="3429" pos:column="19"/></name> <operator pos:line="3429" pos:column="20">instanceof<pos:position pos:line="3429" pos:column="30"/></operator> <name pos:line="3429" pos:column="31">MModelElement<pos:position pos:line="3429" pos:column="44"/></name> <operator pos:line="3429" pos:column="45">&amp;&amp;<pos:position pos:line="3429" pos:column="55"/></operator> <name pos:line="3429" pos:column="48">residence<pos:position pos:line="3429" pos:column="57"/></name> <operator pos:line="3429" pos:column="58">instanceof<pos:position pos:line="3429" pos:column="68"/></operator> <name pos:line="3429" pos:column="69">MElementResidence<pos:position pos:line="3429" pos:column="86"/></name></expr>)<pos:position pos:line="3429" pos:column="87"/></condition><then pos:line="3429" pos:column="87"> <block pos:line="3429" pos:column="88">{
            <expr_stmt><expr><operator pos:line="3430" pos:column="13">(<pos:position pos:line="3430" pos:column="14"/></operator><operator pos:line="3430" pos:column="14">(<pos:position pos:line="3430" pos:column="15"/></operator><name pos:line="3430" pos:column="15">MModelElement<pos:position pos:line="3430" pos:column="28"/></name><operator pos:line="3430" pos:column="28">)<pos:position pos:line="3430" pos:column="29"/></operator> <name pos:line="3430" pos:column="30">handle<pos:position pos:line="3430" pos:column="36"/></name><operator pos:line="3430" pos:column="36">)<pos:position pos:line="3430" pos:column="37"/></operator><operator pos:line="3430" pos:column="37">.<pos:position pos:line="3430" pos:column="38"/></operator><call><name pos:line="3430" pos:column="38">addElementResidence<pos:position pos:line="3430" pos:column="57"/></name><argument_list pos:line="3430" pos:column="57">(<argument><expr><operator pos:line="3430" pos:column="58">(<pos:position pos:line="3430" pos:column="59"/></operator><name pos:line="3430" pos:column="59">MElementResidence<pos:position pos:line="3430" pos:column="76"/></name><operator pos:line="3430" pos:column="76">)<pos:position pos:line="3430" pos:column="77"/></operator> <name pos:line="3430" pos:column="78">residence<pos:position pos:line="3430" pos:column="87"/></name></expr></argument>)<pos:position pos:line="3430" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="3430" pos:column="89"/></expr_stmt>
            <return pos:line="3431" pos:column="13">return;<pos:position pos:line="3431" pos:column="20"/></return>
        }<pos:position pos:line="3432" pos:column="10"/></block></then></if>	
        <throw pos:line="3433" pos:column="9">throw <expr><operator pos:line="3433" pos:column="15">new<pos:position pos:line="3433" pos:column="18"/></operator> <call><name pos:line="3433" pos:column="19">IllegalArgumentException<pos:position pos:line="3433" pos:column="43"/></name><argument_list pos:line="3433" pos:column="43">(<argument><expr><literal type="string" pos:line="3433" pos:column="44">"handle: "<pos:position pos:line="3433" pos:column="54"/></literal> <operator pos:line="3433" pos:column="55">+<pos:position pos:line="3433" pos:column="56"/></operator> <name pos:line="3433" pos:column="57">handle<pos:position pos:line="3433" pos:column="63"/></name>
                <operator pos:line="3434" pos:column="17">+<pos:position pos:line="3434" pos:column="18"/></operator> <literal type="string" pos:line="3434" pos:column="19">" or residence: "<pos:position pos:line="3434" pos:column="36"/></literal> <operator pos:line="3434" pos:column="37">+<pos:position pos:line="3434" pos:column="38"/></operator> <name pos:line="3434" pos:column="39">residence<pos:position pos:line="3434" pos:column="48"/></name></expr></argument>)<pos:position pos:line="3434" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="3434" pos:column="50"/></throw>        
	}<pos:position pos:line="3435" pos:column="10"/></block></function>

	<comment type="block" pos:line="3437" pos:column="9">/* (non-Javadoc)
	 * @see org.argouml.model.CoreHelper#removeConnection(java.lang.Object, java.lang.Object)
	 */</comment>
	<function><specifier pos:line="3440" pos:column="9">public<pos:position pos:line="3440" pos:column="15"/></specifier> <type><name pos:line="3440" pos:column="16">void<pos:position pos:line="3440" pos:column="20"/></name></type> <name pos:line="3440" pos:column="21">removeConnection<pos:position pos:line="3440" pos:column="37"/></name><parameter_list pos:line="3440" pos:column="37">(<parameter><decl><type><name pos:line="3440" pos:column="38">Object<pos:position pos:line="3440" pos:column="44"/></name></type> <name pos:line="3440" pos:column="45">handle<pos:position pos:line="3440" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3440" pos:column="53">Object<pos:position pos:line="3440" pos:column="59"/></name></type> <name pos:line="3440" pos:column="60">connection<pos:position pos:line="3440" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="3440" pos:column="71"/></parameter_list> <block pos:line="3440" pos:column="72">{
        <if pos:line="3441" pos:column="9">if <condition pos:line="3441" pos:column="12">(<expr><name pos:line="3441" pos:column="13">handle<pos:position pos:line="3441" pos:column="19"/></name> <operator pos:line="3441" pos:column="20">instanceof<pos:position pos:line="3441" pos:column="30"/></operator> <name pos:line="3441" pos:column="31">MAssociationRole<pos:position pos:line="3441" pos:column="47"/></name> <operator pos:line="3441" pos:column="48">&amp;&amp;<pos:position pos:line="3441" pos:column="58"/></operator> <name pos:line="3441" pos:column="51">connection<pos:position pos:line="3441" pos:column="61"/></name> <operator pos:line="3441" pos:column="62">instanceof<pos:position pos:line="3441" pos:column="72"/></operator> <name pos:line="3441" pos:column="73">MAssociationEnd<pos:position pos:line="3441" pos:column="88"/></name></expr>)<pos:position pos:line="3441" pos:column="89"/></condition><then pos:line="3441" pos:column="89"> <block pos:line="3441" pos:column="90">{
            <expr_stmt><expr><operator pos:line="3442" pos:column="13">(<pos:position pos:line="3442" pos:column="14"/></operator><operator pos:line="3442" pos:column="14">(<pos:position pos:line="3442" pos:column="15"/></operator><name pos:line="3442" pos:column="15">MAssociationRole<pos:position pos:line="3442" pos:column="31"/></name><operator pos:line="3442" pos:column="31">)<pos:position pos:line="3442" pos:column="32"/></operator> <name pos:line="3442" pos:column="33">handle<pos:position pos:line="3442" pos:column="39"/></name><operator pos:line="3442" pos:column="39">)<pos:position pos:line="3442" pos:column="40"/></operator><operator pos:line="3442" pos:column="40">.<pos:position pos:line="3442" pos:column="41"/></operator><call><name pos:line="3442" pos:column="41">removeConnection<pos:position pos:line="3442" pos:column="57"/></name><argument_list pos:line="3442" pos:column="57">(<argument><expr><operator pos:line="3442" pos:column="58">(<pos:position pos:line="3442" pos:column="59"/></operator><name pos:line="3442" pos:column="59">MAssociationEnd<pos:position pos:line="3442" pos:column="74"/></name><operator pos:line="3442" pos:column="74">)<pos:position pos:line="3442" pos:column="75"/></operator> <name pos:line="3442" pos:column="76">connection<pos:position pos:line="3442" pos:column="86"/></name></expr></argument>)<pos:position pos:line="3442" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="3442" pos:column="88"/></expr_stmt>
            <return pos:line="3443" pos:column="13">return;<pos:position pos:line="3443" pos:column="20"/></return>
        }<pos:position pos:line="3444" pos:column="10"/></block></then></if>	
        <throw pos:line="3445" pos:column="9">throw <expr><operator pos:line="3445" pos:column="15">new<pos:position pos:line="3445" pos:column="18"/></operator> <call><name pos:line="3445" pos:column="19">IllegalArgumentException<pos:position pos:line="3445" pos:column="43"/></name><argument_list pos:line="3445" pos:column="43">(<argument><expr><literal type="string" pos:line="3445" pos:column="44">"handle: "<pos:position pos:line="3445" pos:column="54"/></literal> <operator pos:line="3445" pos:column="55">+<pos:position pos:line="3445" pos:column="56"/></operator> <name pos:line="3445" pos:column="57">handle<pos:position pos:line="3445" pos:column="63"/></name>
                <operator pos:line="3446" pos:column="17">+<pos:position pos:line="3446" pos:column="18"/></operator> <literal type="string" pos:line="3446" pos:column="19">" or connection: "<pos:position pos:line="3446" pos:column="37"/></literal> <operator pos:line="3446" pos:column="38">+<pos:position pos:line="3446" pos:column="39"/></operator> <name pos:line="3446" pos:column="40">connection<pos:position pos:line="3446" pos:column="50"/></name></expr></argument>)<pos:position pos:line="3446" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="3446" pos:column="52"/></throw>        
	}<pos:position pos:line="3447" pos:column="10"/></block></function>

	<comment type="block" pos:line="3449" pos:column="9">/* (non-Javadoc)
	 * @see org.argouml.model.CoreHelper#removeElementResidence(java.lang.Object, java.lang.Object)
	 */</comment>
	<function><specifier pos:line="3452" pos:column="9">public<pos:position pos:line="3452" pos:column="15"/></specifier> <type><name pos:line="3452" pos:column="16">void<pos:position pos:line="3452" pos:column="20"/></name></type> <name pos:line="3452" pos:column="21">removeElementResidence<pos:position pos:line="3452" pos:column="43"/></name><parameter_list pos:line="3452" pos:column="43">(<parameter><decl><type><name pos:line="3452" pos:column="44">Object<pos:position pos:line="3452" pos:column="50"/></name></type> <name pos:line="3452" pos:column="51">handle<pos:position pos:line="3452" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3452" pos:column="59">Object<pos:position pos:line="3452" pos:column="65"/></name></type> <name pos:line="3452" pos:column="66">residence<pos:position pos:line="3452" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="3452" pos:column="76"/></parameter_list> <block pos:line="3452" pos:column="77">{
        <if pos:line="3453" pos:column="9">if <condition pos:line="3453" pos:column="12">(<expr><name pos:line="3453" pos:column="13">handle<pos:position pos:line="3453" pos:column="19"/></name> <operator pos:line="3453" pos:column="20">instanceof<pos:position pos:line="3453" pos:column="30"/></operator> <name pos:line="3453" pos:column="31">MModelElement<pos:position pos:line="3453" pos:column="44"/></name> <operator pos:line="3453" pos:column="45">&amp;&amp;<pos:position pos:line="3453" pos:column="55"/></operator> <name pos:line="3453" pos:column="48">residence<pos:position pos:line="3453" pos:column="57"/></name> <operator pos:line="3453" pos:column="58">instanceof<pos:position pos:line="3453" pos:column="68"/></operator> <name pos:line="3453" pos:column="69">MElementResidence<pos:position pos:line="3453" pos:column="86"/></name></expr>)<pos:position pos:line="3453" pos:column="87"/></condition><then pos:line="3453" pos:column="87"> <block pos:line="3453" pos:column="88">{
            <expr_stmt><expr><operator pos:line="3454" pos:column="13">(<pos:position pos:line="3454" pos:column="14"/></operator><operator pos:line="3454" pos:column="14">(<pos:position pos:line="3454" pos:column="15"/></operator><name pos:line="3454" pos:column="15">MModelElement<pos:position pos:line="3454" pos:column="28"/></name><operator pos:line="3454" pos:column="28">)<pos:position pos:line="3454" pos:column="29"/></operator> <name pos:line="3454" pos:column="30">handle<pos:position pos:line="3454" pos:column="36"/></name><operator pos:line="3454" pos:column="36">)<pos:position pos:line="3454" pos:column="37"/></operator><operator pos:line="3454" pos:column="37">.<pos:position pos:line="3454" pos:column="38"/></operator><call><name pos:line="3454" pos:column="38">removeElementResidence<pos:position pos:line="3454" pos:column="60"/></name><argument_list pos:line="3454" pos:column="60">(<argument><expr><operator pos:line="3454" pos:column="61">(<pos:position pos:line="3454" pos:column="62"/></operator><name pos:line="3454" pos:column="62">MElementResidence<pos:position pos:line="3454" pos:column="79"/></name><operator pos:line="3454" pos:column="79">)<pos:position pos:line="3454" pos:column="80"/></operator> <name pos:line="3454" pos:column="81">residence<pos:position pos:line="3454" pos:column="90"/></name></expr></argument>)<pos:position pos:line="3454" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="3454" pos:column="92"/></expr_stmt>
            <return pos:line="3455" pos:column="13">return;<pos:position pos:line="3455" pos:column="20"/></return>
        }<pos:position pos:line="3456" pos:column="10"/></block></then></if>	
        <throw pos:line="3457" pos:column="9">throw <expr><operator pos:line="3457" pos:column="15">new<pos:position pos:line="3457" pos:column="18"/></operator> <call><name pos:line="3457" pos:column="19">IllegalArgumentException<pos:position pos:line="3457" pos:column="43"/></name><argument_list pos:line="3457" pos:column="43">(<argument><expr><literal type="string" pos:line="3457" pos:column="44">"handle: "<pos:position pos:line="3457" pos:column="54"/></literal> <operator pos:line="3457" pos:column="55">+<pos:position pos:line="3457" pos:column="56"/></operator> <name pos:line="3457" pos:column="57">handle<pos:position pos:line="3457" pos:column="63"/></name>
                <operator pos:line="3458" pos:column="17">+<pos:position pos:line="3458" pos:column="18"/></operator> <literal type="string" pos:line="3458" pos:column="19">" or residence: "<pos:position pos:line="3458" pos:column="36"/></literal> <operator pos:line="3458" pos:column="37">+<pos:position pos:line="3458" pos:column="38"/></operator> <name pos:line="3458" pos:column="39">residence<pos:position pos:line="3458" pos:column="48"/></name></expr></argument>)<pos:position pos:line="3458" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="3458" pos:column="50"/></throw>        
	}<pos:position pos:line="3459" pos:column="10"/></block></function>

    <comment type="block" format="javadoc" pos:line="3461" pos:column="5">/**
     * @see org.argouml.model.CoreHelper#addStereotype(java.lang.Object, java.lang.Object)
     */</comment>
    <function><specifier pos:line="3464" pos:column="5">public<pos:position pos:line="3464" pos:column="11"/></specifier> <type><name pos:line="3464" pos:column="12">void<pos:position pos:line="3464" pos:column="16"/></name></type> <name pos:line="3464" pos:column="17">addStereotype<pos:position pos:line="3464" pos:column="30"/></name><parameter_list pos:line="3464" pos:column="30">(<parameter><decl><type><name pos:line="3464" pos:column="31">Object<pos:position pos:line="3464" pos:column="37"/></name></type> <name pos:line="3464" pos:column="38">modelElement<pos:position pos:line="3464" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3464" pos:column="52">Object<pos:position pos:line="3464" pos:column="58"/></name></type> <name pos:line="3464" pos:column="59">stereo<pos:position pos:line="3464" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="3464" pos:column="66"/></parameter_list> <block pos:line="3464" pos:column="67">{
        <comment type="line" pos:line="3465" pos:column="9">// This will never be implemented in NSUML</comment>
    }<pos:position pos:line="3466" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="3468" pos:column="5">/**
     * @see org.argouml.model.CoreHelper#removeStereotype(java.lang.Object, java.lang.Object)
     */</comment>
    <function><specifier pos:line="3471" pos:column="5">public<pos:position pos:line="3471" pos:column="11"/></specifier> <type><name pos:line="3471" pos:column="12">void<pos:position pos:line="3471" pos:column="16"/></name></type> <name pos:line="3471" pos:column="17">removeStereotype<pos:position pos:line="3471" pos:column="33"/></name><parameter_list pos:line="3471" pos:column="33">(<parameter><decl><type><name pos:line="3471" pos:column="34">Object<pos:position pos:line="3471" pos:column="40"/></name></type> <name pos:line="3471" pos:column="41">handle<pos:position pos:line="3471" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3471" pos:column="49">Object<pos:position pos:line="3471" pos:column="55"/></name></type> <name pos:line="3471" pos:column="56">stereo<pos:position pos:line="3471" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="3471" pos:column="63"/></parameter_list> <block pos:line="3471" pos:column="64">{
        <comment type="line" pos:line="3472" pos:column="9">// This will never be implemented in NSUML</comment>
    }<pos:position pos:line="3473" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="3475" pos:column="5">/**
     * Unimplemented in UML 1.3
     * @see org.argouml.model.CoreHelper#setEnumerationLiterals(java.lang.Object, java.util.List)
     */</comment>
    <function><specifier pos:line="3479" pos:column="5">public<pos:position pos:line="3479" pos:column="11"/></specifier> <type><name pos:line="3479" pos:column="12">void<pos:position pos:line="3479" pos:column="16"/></name></type> <name pos:line="3479" pos:column="17">setEnumerationLiterals<pos:position pos:line="3479" pos:column="39"/></name><parameter_list pos:line="3479" pos:column="39">(<parameter><decl><type><name pos:line="3479" pos:column="40">Object<pos:position pos:line="3479" pos:column="46"/></name></type> <name pos:line="3479" pos:column="47">enumeration<pos:position pos:line="3479" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3479" pos:column="60">List<pos:position pos:line="3479" pos:column="64"/></name></type> <name pos:line="3479" pos:column="65">literals<pos:position pos:line="3479" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="3479" pos:column="74"/></parameter_list> <block pos:line="3479" pos:column="75">{
        <comment type="line" pos:line="3480" pos:column="9">// ILB</comment>
    }<pos:position pos:line="3481" pos:column="6"/></block></function>
}<pos:position pos:line="3482" pos:column="2"/></block></class>
</unit>
