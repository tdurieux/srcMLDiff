<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:err="http://www.srcML.org/srcML/srcerr" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="Java" filename="gumtree-spoon-ast-diff/src/test/resources/examples/t_209184/right_ActionCollaborationDiagram_1.29.java" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// $Id: ActionCollaborationDiagram.java,v 1.29 2004-04-22 20:43:08 d00mst Exp $</comment>
<comment type="line" pos:line="2" pos:column="1">// Copyright (c) 1996-2003 The Regents of the University of California. All</comment>
<comment type="line" pos:line="3" pos:column="1">// Rights Reserved. Permission to use, copy, modify, and distribute this</comment>
<comment type="line" pos:line="4" pos:column="1">// software and its documentation without fee, and without a written</comment>
<comment type="line" pos:line="5" pos:column="1">// agreement is hereby granted, provided that the above copyright notice</comment>
<comment type="line" pos:line="6" pos:column="1">// and this paragraph appear in all copies.  This software program and</comment>
<comment type="line" pos:line="7" pos:column="1">// documentation are copyrighted by The Regents of the University of</comment>
<comment type="line" pos:line="8" pos:column="1">// California. The software program and documentation are supplied "AS</comment>
<comment type="line" pos:line="9" pos:column="1">// IS", without any accompanying services from The Regents. The Regents</comment>
<comment type="line" pos:line="10" pos:column="1">// does not warrant that the operation of the program will be</comment>
<comment type="line" pos:line="11" pos:column="1">// uninterrupted or error-free. The end-user understands that the program</comment>
<comment type="line" pos:line="12" pos:column="1">// was developed for research purposes and is advised not to rely</comment>
<comment type="line" pos:line="13" pos:column="1">// exclusively on the program for any reason.  IN NO EVENT SHALL THE</comment>
<comment type="line" pos:line="14" pos:column="1">// UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY FOR DIRECT, INDIRECT,</comment>
<comment type="line" pos:line="15" pos:column="1">// SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, INCLUDING LOST PROFITS,</comment>
<comment type="line" pos:line="16" pos:column="1">// ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF</comment>
<comment type="line" pos:line="17" pos:column="1">// THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF</comment>
<comment type="line" pos:line="18" pos:column="1">// SUCH DAMAGE. THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY</comment>
<comment type="line" pos:line="19" pos:column="1">// WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF</comment>
<comment type="line" pos:line="20" pos:column="1">// MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE</comment>
<comment type="line" pos:line="21" pos:column="1">// PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF</comment>
<comment type="line" pos:line="22" pos:column="1">// CALIFORNIA HAS NO OBLIGATIONS TO PROVIDE MAINTENANCE, SUPPORT,</comment>
<comment type="line" pos:line="23" pos:column="1">// UPDATES, ENHANCEMENTS, OR MODIFICATIONS.</comment>

<package pos:line="25" pos:column="1">package <name><name pos:line="25" pos:column="9">org<pos:position pos:line="25" pos:column="12"/></name><operator pos:line="25" pos:column="12">.<pos:position pos:line="25" pos:column="13"/></operator><name pos:line="25" pos:column="13">argouml<pos:position pos:line="25" pos:column="20"/></name><operator pos:line="25" pos:column="20">.<pos:position pos:line="25" pos:column="21"/></operator><name pos:line="25" pos:column="21">uml<pos:position pos:line="25" pos:column="24"/></name><operator pos:line="25" pos:column="24">.<pos:position pos:line="25" pos:column="25"/></operator><name pos:line="25" pos:column="25">ui<pos:position pos:line="25" pos:column="27"/></name></name>;<pos:position pos:line="25" pos:column="28"/></package>
<import pos:line="26" pos:column="1">import <name><name pos:line="26" pos:column="8">org<pos:position pos:line="26" pos:column="11"/></name><operator pos:line="26" pos:column="11">.<pos:position pos:line="26" pos:column="12"/></operator><name pos:line="26" pos:column="12">argouml<pos:position pos:line="26" pos:column="19"/></name><operator pos:line="26" pos:column="19">.<pos:position pos:line="26" pos:column="20"/></operator><name pos:line="26" pos:column="20">model<pos:position pos:line="26" pos:column="25"/></name><operator pos:line="26" pos:column="25">.<pos:position pos:line="26" pos:column="26"/></operator><name pos:line="26" pos:column="26">ModelFacade<pos:position pos:line="26" pos:column="37"/></name></name>;<pos:position pos:line="26" pos:column="38"/></import>
<import pos:line="27" pos:column="1">import <name><name pos:line="27" pos:column="8">org<pos:position pos:line="27" pos:column="11"/></name><operator pos:line="27" pos:column="11">.<pos:position pos:line="27" pos:column="12"/></operator><name pos:line="27" pos:column="12">argouml<pos:position pos:line="27" pos:column="19"/></name><operator pos:line="27" pos:column="19">.<pos:position pos:line="27" pos:column="20"/></operator><name pos:line="27" pos:column="20">model<pos:position pos:line="27" pos:column="25"/></name><operator pos:line="27" pos:column="25">.<pos:position pos:line="27" pos:column="26"/></operator><name pos:line="27" pos:column="26">uml<pos:position pos:line="27" pos:column="29"/></name><operator pos:line="27" pos:column="29">.<pos:position pos:line="27" pos:column="30"/></operator><name pos:line="27" pos:column="30">UmlFactory<pos:position pos:line="27" pos:column="40"/></name></name>;<pos:position pos:line="27" pos:column="41"/></import>
<import pos:line="28" pos:column="1">import <name><name pos:line="28" pos:column="8">org<pos:position pos:line="28" pos:column="11"/></name><operator pos:line="28" pos:column="11">.<pos:position pos:line="28" pos:column="12"/></operator><name pos:line="28" pos:column="12">argouml<pos:position pos:line="28" pos:column="19"/></name><operator pos:line="28" pos:column="19">.<pos:position pos:line="28" pos:column="20"/></operator><name pos:line="28" pos:column="20">model<pos:position pos:line="28" pos:column="25"/></name><operator pos:line="28" pos:column="25">.<pos:position pos:line="28" pos:column="26"/></operator><name pos:line="28" pos:column="26">uml<pos:position pos:line="28" pos:column="29"/></name><operator pos:line="28" pos:column="29">.<pos:position pos:line="28" pos:column="30"/></operator><name pos:line="28" pos:column="30">behavioralelements<pos:position pos:line="28" pos:column="48"/></name><operator pos:line="28" pos:column="48">.<pos:position pos:line="28" pos:column="49"/></operator><name pos:line="28" pos:column="49">collaborations<pos:position pos:line="28" pos:column="63"/></name><operator pos:line="28" pos:column="63">.<pos:position pos:line="28" pos:column="64"/></operator><name pos:line="28" pos:column="64">CollaborationsHelper<pos:position pos:line="28" pos:column="84"/></name></name>;<pos:position pos:line="28" pos:column="85"/></import>
<import pos:line="29" pos:column="1">import <name><name pos:line="29" pos:column="8">org<pos:position pos:line="29" pos:column="11"/></name><operator pos:line="29" pos:column="11">.<pos:position pos:line="29" pos:column="12"/></operator><name pos:line="29" pos:column="12">argouml<pos:position pos:line="29" pos:column="19"/></name><operator pos:line="29" pos:column="19">.<pos:position pos:line="29" pos:column="20"/></operator><name pos:line="29" pos:column="20">ui<pos:position pos:line="29" pos:column="22"/></name><operator pos:line="29" pos:column="22">.<pos:position pos:line="29" pos:column="23"/></operator><name pos:line="29" pos:column="23">targetmanager<pos:position pos:line="29" pos:column="36"/></name><operator pos:line="29" pos:column="36">.<pos:position pos:line="29" pos:column="37"/></operator><name pos:line="29" pos:column="37">TargetManager<pos:position pos:line="29" pos:column="50"/></name></name>;<pos:position pos:line="29" pos:column="51"/></import>
<import pos:line="30" pos:column="1">import <name><name pos:line="30" pos:column="8">org<pos:position pos:line="30" pos:column="11"/></name><operator pos:line="30" pos:column="11">.<pos:position pos:line="30" pos:column="12"/></operator><name pos:line="30" pos:column="12">argouml<pos:position pos:line="30" pos:column="19"/></name><operator pos:line="30" pos:column="19">.<pos:position pos:line="30" pos:column="20"/></operator><name pos:line="30" pos:column="20">uml<pos:position pos:line="30" pos:column="23"/></name><operator pos:line="30" pos:column="23">.<pos:position pos:line="30" pos:column="24"/></operator><name pos:line="30" pos:column="24">diagram<pos:position pos:line="30" pos:column="31"/></name><operator pos:line="30" pos:column="31">.<pos:position pos:line="30" pos:column="32"/></operator><name pos:line="30" pos:column="32">collaboration<pos:position pos:line="30" pos:column="45"/></name><operator pos:line="30" pos:column="45">.<pos:position pos:line="30" pos:column="46"/></operator><name pos:line="30" pos:column="46">ui<pos:position pos:line="30" pos:column="48"/></name><operator pos:line="30" pos:column="48">.<pos:position pos:line="30" pos:column="49"/></operator><name pos:line="30" pos:column="49">UMLCollaborationDiagram<pos:position pos:line="30" pos:column="72"/></name></name>;<pos:position pos:line="30" pos:column="73"/></import>
<import pos:line="31" pos:column="1">import <name><name pos:line="31" pos:column="8">org<pos:position pos:line="31" pos:column="11"/></name><operator pos:line="31" pos:column="11">.<pos:position pos:line="31" pos:column="12"/></operator><name pos:line="31" pos:column="12">argouml<pos:position pos:line="31" pos:column="19"/></name><operator pos:line="31" pos:column="19">.<pos:position pos:line="31" pos:column="20"/></operator><name pos:line="31" pos:column="20">uml<pos:position pos:line="31" pos:column="23"/></name><operator pos:line="31" pos:column="23">.<pos:position pos:line="31" pos:column="24"/></operator><name pos:line="31" pos:column="24">diagram<pos:position pos:line="31" pos:column="31"/></name><operator pos:line="31" pos:column="31">.<pos:position pos:line="31" pos:column="32"/></operator><name pos:line="31" pos:column="32">ui<pos:position pos:line="31" pos:column="34"/></name><operator pos:line="31" pos:column="34">.<pos:position pos:line="31" pos:column="35"/></operator><name pos:line="31" pos:column="35">UMLDiagram<pos:position pos:line="31" pos:column="45"/></name></name>;<pos:position pos:line="31" pos:column="46"/></import>

<comment type="block" format="javadoc" pos:line="33" pos:column="1">/** Action to trigger creation of new collaboration diagram.
 *  @stereotype singleton
 */</comment>
<class><specifier pos:line="36" pos:column="1">public<pos:position pos:line="36" pos:column="7"/></specifier> class <name pos:line="36" pos:column="14">ActionCollaborationDiagram<pos:position pos:line="36" pos:column="40"/></name> <super><extends pos:line="36" pos:column="41">extends <name pos:line="36" pos:column="49">ActionAddDiagram<pos:position pos:line="36" pos:column="65"/></name></extends></super> <block pos:line="36" pos:column="66">{

    <decl_stmt><decl><specifier pos:line="38" pos:column="5">public<pos:position pos:line="38" pos:column="11"/></specifier> <specifier pos:line="38" pos:column="12">static<pos:position pos:line="38" pos:column="18"/></specifier> <type><name pos:line="38" pos:column="19">ActionCollaborationDiagram<pos:position pos:line="38" pos:column="45"/></name></type> <name pos:line="38" pos:column="46">SINGLETON<pos:position pos:line="38" pos:column="55"/></name> <init pos:line="38" pos:column="56">=
        <expr><operator pos:line="39" pos:column="9">new<pos:position pos:line="39" pos:column="12"/></operator> <call><name pos:line="39" pos:column="13">ActionCollaborationDiagram<pos:position pos:line="39" pos:column="39"/></name><argument_list pos:line="39" pos:column="39">()<pos:position pos:line="39" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="39" pos:column="42"/></decl_stmt>

    <constructor><specifier pos:line="41" pos:column="5">private<pos:position pos:line="41" pos:column="12"/></specifier> <name pos:line="41" pos:column="13">ActionCollaborationDiagram<pos:position pos:line="41" pos:column="39"/></name><parameter_list pos:line="41" pos:column="39">()<pos:position pos:line="41" pos:column="41"/></parameter_list> <block pos:line="41" pos:column="42">{
        <expr_stmt><expr><call><name pos:line="42" pos:column="9">super<pos:position pos:line="42" pos:column="14"/></name><argument_list pos:line="42" pos:column="14">(<argument><expr><literal type="string" pos:line="42" pos:column="15">"action.collaboration-diagram"<pos:position pos:line="42" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="43" pos:column="6"/></block></constructor>

    <comment type="block" format="javadoc" pos:line="45" pos:column="5">/**
     * @see org.argouml.uml.ui.ActionAddDiagram#createDiagram(Object)
     */</comment>
    <function><specifier pos:line="48" pos:column="5">public<pos:position pos:line="48" pos:column="11"/></specifier> <type><name pos:line="48" pos:column="12">UMLDiagram<pos:position pos:line="48" pos:column="22"/></name></type> <name pos:line="48" pos:column="23">createDiagram<pos:position pos:line="48" pos:column="36"/></name><parameter_list pos:line="48" pos:column="36">(<parameter><decl><type><name pos:line="48" pos:column="37">Object<pos:position pos:line="48" pos:column="43"/></name></type> <name pos:line="48" pos:column="44">handle<pos:position pos:line="48" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="48" pos:column="51"/></parameter_list> <block pos:line="48" pos:column="52">{
        <if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><operator pos:line="49" pos:column="13">!<pos:position pos:line="49" pos:column="14"/></operator><call><name><name pos:line="49" pos:column="14">ModelFacade<pos:position pos:line="49" pos:column="25"/></name><operator pos:line="49" pos:column="25">.<pos:position pos:line="49" pos:column="26"/></operator><name pos:line="49" pos:column="26">isANamespace<pos:position pos:line="49" pos:column="38"/></name></name><argument_list pos:line="49" pos:column="38">(<argument><expr><name pos:line="49" pos:column="39">handle<pos:position pos:line="49" pos:column="45"/></name></expr></argument>)<pos:position pos:line="49" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="47"/></condition><then pos:line="49" pos:column="47"> <block pos:line="49" pos:column="48">{
            <expr_stmt><expr><call><name><name pos:line="50" pos:column="13">cat<pos:position pos:line="50" pos:column="16"/></name><operator pos:line="50" pos:column="16">.<pos:position pos:line="50" pos:column="17"/></operator><name pos:line="50" pos:column="17">error<pos:position pos:line="50" pos:column="22"/></name></name><argument_list pos:line="50" pos:column="22">(<argument><expr><literal type="string" pos:line="50" pos:column="23">"No namespace as argument"<pos:position pos:line="50" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="51"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="51" pos:column="13">cat<pos:position pos:line="51" pos:column="16"/></name><operator pos:line="51" pos:column="16">.<pos:position pos:line="51" pos:column="17"/></operator><name pos:line="51" pos:column="17">error<pos:position pos:line="51" pos:column="22"/></name></name><argument_list pos:line="51" pos:column="22">(<argument><expr><name pos:line="51" pos:column="23">handle<pos:position pos:line="51" pos:column="29"/></name></expr></argument>)<pos:position pos:line="51" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="31"/></expr_stmt>
            <throw pos:line="52" pos:column="13">throw <expr><operator pos:line="52" pos:column="19">new<pos:position pos:line="52" pos:column="22"/></operator> <call><name pos:line="52" pos:column="23">IllegalArgumentException<pos:position pos:line="52" pos:column="47"/></name><argument_list pos:line="52" pos:column="47">(
                <argument><expr><literal type="string" pos:line="53" pos:column="17">"The argument "<pos:position pos:line="53" pos:column="32"/></literal> <operator pos:line="53" pos:column="33">+<pos:position pos:line="53" pos:column="34"/></operator> <name pos:line="53" pos:column="35">handle<pos:position pos:line="53" pos:column="41"/></name> <operator pos:line="53" pos:column="42">+<pos:position pos:line="53" pos:column="43"/></operator> <literal type="string" pos:line="53" pos:column="44">"is not a namespace."<pos:position pos:line="53" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="67"/></throw>
        }<pos:position pos:line="54" pos:column="10"/></block></then></if>
        <decl_stmt><decl><type><name pos:line="55" pos:column="9">Object<pos:position pos:line="55" pos:column="15"/></name></type><comment type="block" pos:line="55" pos:column="15">/*MNamespace*/</comment> <name pos:line="55" pos:column="30">namespace<pos:position pos:line="55" pos:column="39"/></name> <init pos:line="55" pos:column="40">= <expr><name pos:line="55" pos:column="42">handle<pos:position pos:line="55" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="55" pos:column="49"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="56" pos:column="9">Object<pos:position pos:line="56" pos:column="15"/></name></type> <name pos:line="56" pos:column="16">target<pos:position pos:line="56" pos:column="22"/></name> <init pos:line="56" pos:column="23">= <expr><call><name><name pos:line="56" pos:column="25">TargetManager<pos:position pos:line="56" pos:column="38"/></name><operator pos:line="56" pos:column="38">.<pos:position pos:line="56" pos:column="39"/></operator><name pos:line="56" pos:column="39">getInstance<pos:position pos:line="56" pos:column="50"/></name></name><argument_list pos:line="56" pos:column="50">()<pos:position pos:line="56" pos:column="52"/></argument_list></call><operator pos:line="56" pos:column="52">.<pos:position pos:line="56" pos:column="53"/></operator><call><name pos:line="56" pos:column="53">getTarget<pos:position pos:line="56" pos:column="62"/></name><argument_list pos:line="56" pos:column="62">()<pos:position pos:line="56" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="56" pos:column="65"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="57" pos:column="9">Object<pos:position pos:line="57" pos:column="15"/></name></type> <name pos:line="57" pos:column="16">collaboration<pos:position pos:line="57" pos:column="29"/></name> <init pos:line="57" pos:column="30">= <expr><literal type="null" pos:line="57" pos:column="32">null<pos:position pos:line="57" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="57" pos:column="37"/></decl_stmt>
        <if pos:line="58" pos:column="9">if <condition pos:line="58" pos:column="12">(<expr><call><name><name pos:line="58" pos:column="13">ModelFacade<pos:position pos:line="58" pos:column="24"/></name><operator pos:line="58" pos:column="24">.<pos:position pos:line="58" pos:column="25"/></operator><name pos:line="58" pos:column="25">isAOperation<pos:position pos:line="58" pos:column="37"/></name></name><argument_list pos:line="58" pos:column="37">(<argument><expr><name pos:line="58" pos:column="38">target<pos:position pos:line="58" pos:column="44"/></name></expr></argument>)<pos:position pos:line="58" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="58" pos:column="46"/></condition><then pos:line="58" pos:column="46"> <block pos:line="58" pos:column="47">{
            <expr_stmt><expr><name pos:line="59" pos:column="13">collaboration<pos:position pos:line="59" pos:column="26"/></name> <operator pos:line="59" pos:column="27">=<pos:position pos:line="59" pos:column="28"/></operator>
                <call><name><name pos:line="60" pos:column="17">UmlFactory<pos:position pos:line="60" pos:column="27"/></name><operator pos:line="60" pos:column="27">.<pos:position pos:line="60" pos:column="28"/></operator><name pos:line="60" pos:column="28">getFactory<pos:position pos:line="60" pos:column="38"/></name></name><argument_list pos:line="60" pos:column="38">()<pos:position pos:line="60" pos:column="40"/></argument_list></call><operator pos:line="60" pos:column="40">.<pos:position pos:line="60" pos:column="41"/></operator><call><name pos:line="60" pos:column="41">getCollaborations<pos:position pos:line="60" pos:column="58"/></name><argument_list pos:line="60" pos:column="58">()<pos:position pos:line="60" pos:column="60"/></argument_list></call><operator pos:line="60" pos:column="60">.<pos:position pos:line="60" pos:column="61"/></operator><call><name pos:line="60" pos:column="61">buildCollaboration<pos:position pos:line="60" pos:column="79"/></name><argument_list pos:line="60" pos:column="79">(<argument><expr><name pos:line="60" pos:column="80">namespace<pos:position pos:line="60" pos:column="89"/></name></expr></argument>)<pos:position pos:line="60" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="91"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="61" pos:column="13">ModelFacade<pos:position pos:line="61" pos:column="24"/></name><operator pos:line="61" pos:column="24">.<pos:position pos:line="61" pos:column="25"/></operator><name pos:line="61" pos:column="25">setRepresentedOperation<pos:position pos:line="61" pos:column="48"/></name></name><argument_list pos:line="61" pos:column="48">(<argument><expr><name pos:line="61" pos:column="49">collaboration<pos:position pos:line="61" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="64">target<pos:position pos:line="61" pos:column="70"/></name></expr></argument>)<pos:position pos:line="61" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="72"/></expr_stmt>
        }<pos:position pos:line="62" pos:column="10"/></block></then> <elseif pos:line="62" pos:column="11">else <if pos:line="62" pos:column="16">if <condition pos:line="62" pos:column="19">(<expr><call><name><name pos:line="62" pos:column="20">ModelFacade<pos:position pos:line="62" pos:column="31"/></name><operator pos:line="62" pos:column="31">.<pos:position pos:line="62" pos:column="32"/></operator><name pos:line="62" pos:column="32">isAClassifier<pos:position pos:line="62" pos:column="45"/></name></name><argument_list pos:line="62" pos:column="45">(<argument><expr><name pos:line="62" pos:column="46">target<pos:position pos:line="62" pos:column="52"/></name></expr></argument>)<pos:position pos:line="62" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="62" pos:column="54"/></condition><then pos:line="62" pos:column="54"> <block pos:line="62" pos:column="55">{
            <expr_stmt><expr><name pos:line="63" pos:column="13">collaboration<pos:position pos:line="63" pos:column="26"/></name> <operator pos:line="63" pos:column="27">=<pos:position pos:line="63" pos:column="28"/></operator>
                <call><name><name pos:line="64" pos:column="17">UmlFactory<pos:position pos:line="64" pos:column="27"/></name><operator pos:line="64" pos:column="27">.<pos:position pos:line="64" pos:column="28"/></operator><name pos:line="64" pos:column="28">getFactory<pos:position pos:line="64" pos:column="38"/></name></name><argument_list pos:line="64" pos:column="38">()<pos:position pos:line="64" pos:column="40"/></argument_list></call><operator pos:line="64" pos:column="40">.<pos:position pos:line="64" pos:column="41"/></operator><call><name pos:line="64" pos:column="41">getCollaborations<pos:position pos:line="64" pos:column="58"/></name><argument_list pos:line="64" pos:column="58">()<pos:position pos:line="64" pos:column="60"/></argument_list></call><operator pos:line="64" pos:column="60">.<pos:position pos:line="64" pos:column="61"/></operator><call><name pos:line="64" pos:column="61">buildCollaboration<pos:position pos:line="64" pos:column="79"/></name><argument_list pos:line="64" pos:column="79">(<argument><expr><name pos:line="64" pos:column="80">target<pos:position pos:line="64" pos:column="86"/></name></expr></argument>)<pos:position pos:line="64" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="88"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="65" pos:column="13">ModelFacade<pos:position pos:line="65" pos:column="24"/></name><operator pos:line="65" pos:column="24">.<pos:position pos:line="65" pos:column="25"/></operator><name pos:line="65" pos:column="25">setRepresentedClassifier<pos:position pos:line="65" pos:column="49"/></name></name><argument_list pos:line="65" pos:column="49">(<argument><expr><name pos:line="65" pos:column="50">collaboration<pos:position pos:line="65" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="65">target<pos:position pos:line="65" pos:column="71"/></name></expr></argument>)<pos:position pos:line="65" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="73"/></expr_stmt>
        }<pos:position pos:line="66" pos:column="10"/></block></then></if></elseif> <elseif pos:line="66" pos:column="11">else <if pos:line="66" pos:column="16">if <condition pos:line="66" pos:column="19">(<expr><call><name><name pos:line="66" pos:column="20">ModelFacade<pos:position pos:line="66" pos:column="31"/></name><operator pos:line="66" pos:column="31">.<pos:position pos:line="66" pos:column="32"/></operator><name pos:line="66" pos:column="32">isAModel<pos:position pos:line="66" pos:column="40"/></name></name><argument_list pos:line="66" pos:column="40">(<argument><expr><name pos:line="66" pos:column="41">target<pos:position pos:line="66" pos:column="47"/></name></expr></argument>)<pos:position pos:line="66" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="66" pos:column="49"/></condition><then pos:line="66" pos:column="49"> <block pos:line="66" pos:column="50">{
            <expr_stmt><expr><name pos:line="67" pos:column="13">collaboration<pos:position pos:line="67" pos:column="26"/></name> <operator pos:line="67" pos:column="27">=<pos:position pos:line="67" pos:column="28"/></operator>
                <call><name><name pos:line="68" pos:column="17">UmlFactory<pos:position pos:line="68" pos:column="27"/></name><operator pos:line="68" pos:column="27">.<pos:position pos:line="68" pos:column="28"/></operator><name pos:line="68" pos:column="28">getFactory<pos:position pos:line="68" pos:column="38"/></name></name><argument_list pos:line="68" pos:column="38">()<pos:position pos:line="68" pos:column="40"/></argument_list></call><operator pos:line="68" pos:column="40">.<pos:position pos:line="68" pos:column="41"/></operator><call><name pos:line="68" pos:column="41">getCollaborations<pos:position pos:line="68" pos:column="58"/></name><argument_list pos:line="68" pos:column="58">()<pos:position pos:line="68" pos:column="60"/></argument_list></call><operator pos:line="68" pos:column="60">.<pos:position pos:line="68" pos:column="61"/></operator><call><name pos:line="68" pos:column="61">buildCollaboration<pos:position pos:line="68" pos:column="79"/></name><argument_list pos:line="68" pos:column="79">(<argument><expr><name pos:line="68" pos:column="80">target<pos:position pos:line="68" pos:column="86"/></name></expr></argument>)<pos:position pos:line="68" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="88"/></expr_stmt>
        }<pos:position pos:line="69" pos:column="10"/></block></then></if></elseif> <elseif pos:line="69" pos:column="11">else <if pos:line="69" pos:column="16">if <condition pos:line="69" pos:column="19">(<expr><call><name><name pos:line="69" pos:column="20">ModelFacade<pos:position pos:line="69" pos:column="31"/></name><operator pos:line="69" pos:column="31">.<pos:position pos:line="69" pos:column="32"/></operator><name pos:line="69" pos:column="32">isAInteraction<pos:position pos:line="69" pos:column="46"/></name></name><argument_list pos:line="69" pos:column="46">(<argument><expr><name pos:line="69" pos:column="47">target<pos:position pos:line="69" pos:column="53"/></name></expr></argument>)<pos:position pos:line="69" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="69" pos:column="55"/></condition><then pos:line="69" pos:column="55"> <block pos:line="69" pos:column="56">{
            <expr_stmt><expr><name pos:line="70" pos:column="13">collaboration<pos:position pos:line="70" pos:column="26"/></name> <operator pos:line="70" pos:column="27">=<pos:position pos:line="70" pos:column="28"/></operator> <call><name><name pos:line="70" pos:column="29">ModelFacade<pos:position pos:line="70" pos:column="40"/></name><operator pos:line="70" pos:column="40">.<pos:position pos:line="70" pos:column="41"/></operator><name pos:line="70" pos:column="41">getContext<pos:position pos:line="70" pos:column="51"/></name></name><argument_list pos:line="70" pos:column="51">(<argument><expr><name pos:line="70" pos:column="52">target<pos:position pos:line="70" pos:column="58"/></name></expr></argument>)<pos:position pos:line="70" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="60"/></expr_stmt>
        }<pos:position pos:line="71" pos:column="10"/></block></then></if></elseif> <elseif pos:line="71" pos:column="11">else <if pos:line="71" pos:column="16">if <condition pos:line="71" pos:column="19">(<expr><name pos:line="71" pos:column="20">target<pos:position pos:line="71" pos:column="26"/></name> <operator pos:line="71" pos:column="27">instanceof<pos:position pos:line="71" pos:column="37"/></operator> <name pos:line="71" pos:column="38">UMLCollaborationDiagram<pos:position pos:line="71" pos:column="61"/></name></expr>)<pos:position pos:line="71" pos:column="62"/></condition><then pos:line="71" pos:column="62"> <block pos:line="71" pos:column="63">{
            <decl_stmt><decl><type><name pos:line="72" pos:column="13">Object<pos:position pos:line="72" pos:column="19"/></name></type> <name pos:line="72" pos:column="20">owner<pos:position pos:line="72" pos:column="25"/></name> <init pos:line="72" pos:column="26">= <expr><operator pos:line="72" pos:column="28">(<pos:position pos:line="72" pos:column="29"/></operator><operator pos:line="72" pos:column="29">(<pos:position pos:line="72" pos:column="30"/></operator><name pos:line="72" pos:column="30">UMLCollaborationDiagram<pos:position pos:line="72" pos:column="53"/></name><operator pos:line="72" pos:column="53">)<pos:position pos:line="72" pos:column="54"/></operator> <name pos:line="72" pos:column="55">target<pos:position pos:line="72" pos:column="61"/></name><operator pos:line="72" pos:column="61">)<pos:position pos:line="72" pos:column="62"/></operator><operator pos:line="72" pos:column="62">.<pos:position pos:line="72" pos:column="63"/></operator><call><name pos:line="72" pos:column="63">getOwner<pos:position pos:line="72" pos:column="71"/></name><argument_list pos:line="72" pos:column="71">()<pos:position pos:line="72" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="72" pos:column="74"/></decl_stmt>
            <if pos:line="73" pos:column="13">if <condition pos:line="73" pos:column="16">(<expr><call><name><name pos:line="73" pos:column="17">ModelFacade<pos:position pos:line="73" pos:column="28"/></name><operator pos:line="73" pos:column="28">.<pos:position pos:line="73" pos:column="29"/></operator><name pos:line="73" pos:column="29">isACollaboration<pos:position pos:line="73" pos:column="45"/></name></name><argument_list pos:line="73" pos:column="45">(<argument><expr><name pos:line="73" pos:column="46">owner<pos:position pos:line="73" pos:column="51"/></name></expr></argument>)<pos:position pos:line="73" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="73" pos:column="53"/></condition><then pos:line="73" pos:column="53"> <block pos:line="73" pos:column="54">{
                <comment type="line" pos:line="74" pos:column="17">//preventing backward compat problems</comment>
                <expr_stmt><expr><name pos:line="75" pos:column="17">collaboration<pos:position pos:line="75" pos:column="30"/></name> <operator pos:line="75" pos:column="31">=<pos:position pos:line="75" pos:column="32"/></operator> <name pos:line="75" pos:column="33">owner<pos:position pos:line="75" pos:column="38"/></name></expr>;<pos:position pos:line="75" pos:column="39"/></expr_stmt>
            }<pos:position pos:line="76" pos:column="14"/></block></then></if>
        }<pos:position pos:line="77" pos:column="10"/></block></then></if></elseif> <elseif pos:line="77" pos:column="11">else <if pos:line="77" pos:column="16">if <condition pos:line="77" pos:column="19">(<expr><call><name><name pos:line="77" pos:column="20">ModelFacade<pos:position pos:line="77" pos:column="31"/></name><operator pos:line="77" pos:column="31">.<pos:position pos:line="77" pos:column="32"/></operator><name pos:line="77" pos:column="32">isACollaboration<pos:position pos:line="77" pos:column="48"/></name></name><argument_list pos:line="77" pos:column="48">(<argument><expr><name pos:line="77" pos:column="49">target<pos:position pos:line="77" pos:column="55"/></name></expr></argument>)<pos:position pos:line="77" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="77" pos:column="57"/></condition><then pos:line="77" pos:column="57"> <block pos:line="77" pos:column="58">{
            <expr_stmt><expr><name pos:line="78" pos:column="13">collaboration<pos:position pos:line="78" pos:column="26"/></name> <operator pos:line="78" pos:column="27">=<pos:position pos:line="78" pos:column="28"/></operator> <name pos:line="78" pos:column="29">target<pos:position pos:line="78" pos:column="35"/></name></expr>;<pos:position pos:line="78" pos:column="36"/></expr_stmt>
        }<pos:position pos:line="79" pos:column="10"/></block></then></if></elseif> <else pos:line="79" pos:column="11">else <block pos:line="79" pos:column="16">{
            <expr_stmt><expr><name pos:line="80" pos:column="13">collaboration<pos:position pos:line="80" pos:column="26"/></name> <operator pos:line="80" pos:column="27">=<pos:position pos:line="80" pos:column="28"/></operator>
                <call><name><name pos:line="81" pos:column="17">UmlFactory<pos:position pos:line="81" pos:column="27"/></name><operator pos:line="81" pos:column="27">.<pos:position pos:line="81" pos:column="28"/></operator><name pos:line="81" pos:column="28">getFactory<pos:position pos:line="81" pos:column="38"/></name></name><argument_list pos:line="81" pos:column="38">()<pos:position pos:line="81" pos:column="40"/></argument_list></call><operator pos:line="81" pos:column="40">.<pos:position pos:line="81" pos:column="41"/></operator><call><name pos:line="81" pos:column="41">getCollaborations<pos:position pos:line="81" pos:column="58"/></name><argument_list pos:line="81" pos:column="58">()<pos:position pos:line="81" pos:column="60"/></argument_list></call><operator pos:line="81" pos:column="60">.<pos:position pos:line="81" pos:column="61"/></operator><call><name pos:line="81" pos:column="61">buildCollaboration<pos:position pos:line="81" pos:column="79"/></name><argument_list pos:line="81" pos:column="79">(
                    <argument><expr><name pos:line="82" pos:column="21">namespace<pos:position pos:line="82" pos:column="30"/></name></expr></argument>)<pos:position pos:line="82" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="32"/></expr_stmt>
        }<pos:position pos:line="83" pos:column="10"/></block></else></if>
        <decl_stmt><decl><type><name pos:line="84" pos:column="9">UMLCollaborationDiagram<pos:position pos:line="84" pos:column="32"/></name></type> <name pos:line="84" pos:column="33">d<pos:position pos:line="84" pos:column="34"/></name> <init pos:line="84" pos:column="35">= <expr><operator pos:line="84" pos:column="37">new<pos:position pos:line="84" pos:column="40"/></operator> <call><name pos:line="84" pos:column="41">UMLCollaborationDiagram<pos:position pos:line="84" pos:column="64"/></name><argument_list pos:line="84" pos:column="64">(<argument><expr><name pos:line="84" pos:column="65">collaboration<pos:position pos:line="84" pos:column="78"/></name></expr></argument>)<pos:position pos:line="84" pos:column="79"/></argument_list></call></expr></init></decl>;<pos:position pos:line="84" pos:column="80"/></decl_stmt>
        <return pos:line="85" pos:column="9">return <expr><name pos:line="85" pos:column="16">d<pos:position pos:line="85" pos:column="17"/></name></expr>;<pos:position pos:line="85" pos:column="18"/></return>
    }<pos:position pos:line="86" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="88" pos:column="5">/**
     * @see
     * org.argouml.model.uml.behavioralelements.collaborations.CollaborationsHelper#isAddingCollaborationAllowed(Object)
     * @see org.argouml.uml.ui.ActionAddDiagram#isValidNamespace(Object)
     */</comment>
    <function><specifier pos:line="93" pos:column="5">public<pos:position pos:line="93" pos:column="11"/></specifier> <type><name pos:line="93" pos:column="12">boolean<pos:position pos:line="93" pos:column="19"/></name></type> <name pos:line="93" pos:column="20">isValidNamespace<pos:position pos:line="93" pos:column="36"/></name><parameter_list pos:line="93" pos:column="36">(<parameter><decl><type><name pos:line="93" pos:column="37">Object<pos:position pos:line="93" pos:column="43"/></name></type> <name pos:line="93" pos:column="44">handle<pos:position pos:line="93" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="93" pos:column="51"/></parameter_list> <block pos:line="93" pos:column="52">{
        <if pos:line="94" pos:column="9">if <condition pos:line="94" pos:column="12">(<expr><operator pos:line="94" pos:column="13">!<pos:position pos:line="94" pos:column="14"/></operator><call><name><name pos:line="94" pos:column="14">ModelFacade<pos:position pos:line="94" pos:column="25"/></name><operator pos:line="94" pos:column="25">.<pos:position pos:line="94" pos:column="26"/></operator><name pos:line="94" pos:column="26">isANamespace<pos:position pos:line="94" pos:column="38"/></name></name><argument_list pos:line="94" pos:column="38">(<argument><expr><name pos:line="94" pos:column="39">handle<pos:position pos:line="94" pos:column="45"/></name></expr></argument>)<pos:position pos:line="94" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="94" pos:column="47"/></condition><then pos:line="94" pos:column="47"> <block pos:line="94" pos:column="48">{
            <expr_stmt><expr><call><name><name pos:line="95" pos:column="13">cat<pos:position pos:line="95" pos:column="16"/></name><operator pos:line="95" pos:column="16">.<pos:position pos:line="95" pos:column="17"/></operator><name pos:line="95" pos:column="17">error<pos:position pos:line="95" pos:column="22"/></name></name><argument_list pos:line="95" pos:column="22">(<argument><expr><literal type="string" pos:line="95" pos:column="23">"No namespace as argument"<pos:position pos:line="95" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="51"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="96" pos:column="13">cat<pos:position pos:line="96" pos:column="16"/></name><operator pos:line="96" pos:column="16">.<pos:position pos:line="96" pos:column="17"/></operator><name pos:line="96" pos:column="17">error<pos:position pos:line="96" pos:column="22"/></name></name><argument_list pos:line="96" pos:column="22">(<argument><expr><name pos:line="96" pos:column="23">handle<pos:position pos:line="96" pos:column="29"/></name></expr></argument>)<pos:position pos:line="96" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="31"/></expr_stmt>
            <throw pos:line="97" pos:column="13">throw <expr><operator pos:line="97" pos:column="19">new<pos:position pos:line="97" pos:column="22"/></operator> <call><name pos:line="97" pos:column="23">IllegalArgumentException<pos:position pos:line="97" pos:column="47"/></name><argument_list pos:line="97" pos:column="47">(
                <argument><expr><literal type="string" pos:line="98" pos:column="17">"The argument "<pos:position pos:line="98" pos:column="32"/></literal> <operator pos:line="98" pos:column="33">+<pos:position pos:line="98" pos:column="34"/></operator> <name pos:line="98" pos:column="35">handle<pos:position pos:line="98" pos:column="41"/></name> <operator pos:line="98" pos:column="42">+<pos:position pos:line="98" pos:column="43"/></operator> <literal type="string" pos:line="98" pos:column="44">"is not a namespace."<pos:position pos:line="98" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="98" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="67"/></throw>
        }<pos:position pos:line="99" pos:column="10"/></block></then></if>
        <decl_stmt><decl><type><name pos:line="100" pos:column="9">Object<pos:position pos:line="100" pos:column="15"/></name></type><comment type="block" pos:line="100" pos:column="15">/*MNamespace*/</comment> <name pos:line="100" pos:column="30">ns<pos:position pos:line="100" pos:column="32"/></name> <init pos:line="100" pos:column="33">= <expr><name pos:line="100" pos:column="35">handle<pos:position pos:line="100" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="100" pos:column="42"/></decl_stmt>
        <return pos:line="101" pos:column="9">return <expr><call><name><name pos:line="101" pos:column="16">CollaborationsHelper<pos:position pos:line="101" pos:column="36"/></name><operator pos:line="101" pos:column="36">.<pos:position pos:line="101" pos:column="37"/></operator><name pos:line="101" pos:column="37">getHelper<pos:position pos:line="101" pos:column="46"/></name></name><argument_list pos:line="101" pos:column="46">()<pos:position pos:line="101" pos:column="48"/></argument_list></call><operator pos:line="101" pos:column="48">.<pos:position pos:line="101" pos:column="49"/></operator><call><name pos:line="101" pos:column="49">isAddingCollaborationAllowed<pos:position pos:line="101" pos:column="77"/></name><argument_list pos:line="101" pos:column="77">(<argument><expr><name pos:line="101" pos:column="78">ns<pos:position pos:line="101" pos:column="80"/></name></expr></argument>)<pos:position pos:line="101" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="82"/></return>
    }<pos:position pos:line="102" pos:column="6"/></block></function>

    <comment type="block" format="javadoc" pos:line="104" pos:column="5">/**
     * Just calls isValidNamespace(...) on the nav pane target.
     * @see org.argouml.uml.ui.UMLAction#shouldBeEnabled()
     */</comment>
    <function><specifier pos:line="108" pos:column="5">public<pos:position pos:line="108" pos:column="11"/></specifier> <type><name pos:line="108" pos:column="12">boolean<pos:position pos:line="108" pos:column="19"/></name></type> <name pos:line="108" pos:column="20">shouldBeEnabled<pos:position pos:line="108" pos:column="35"/></name><parameter_list pos:line="108" pos:column="35">()<pos:position pos:line="108" pos:column="37"/></parameter_list> <block pos:line="108" pos:column="38">{

        <decl_stmt><decl><type><name pos:line="110" pos:column="9">Object<pos:position pos:line="110" pos:column="15"/></name></type> <name pos:line="110" pos:column="16">target<pos:position pos:line="110" pos:column="22"/></name> <init pos:line="110" pos:column="23">= <expr><call><name><name pos:line="110" pos:column="25">TargetManager<pos:position pos:line="110" pos:column="38"/></name><operator pos:line="110" pos:column="38">.<pos:position pos:line="110" pos:column="39"/></operator><name pos:line="110" pos:column="39">getInstance<pos:position pos:line="110" pos:column="50"/></name></name><argument_list pos:line="110" pos:column="50">()<pos:position pos:line="110" pos:column="52"/></argument_list></call><operator pos:line="110" pos:column="52">.<pos:position pos:line="110" pos:column="53"/></operator><call><name pos:line="110" pos:column="53">getModelTarget<pos:position pos:line="110" pos:column="67"/></name><argument_list pos:line="110" pos:column="67">()<pos:position pos:line="110" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="110" pos:column="70"/></decl_stmt>
        <if pos:line="111" pos:column="9">if <condition pos:line="111" pos:column="12">(<expr><call><name><name pos:line="111" pos:column="13">org<pos:position pos:line="111" pos:column="16"/></name><operator pos:line="111" pos:column="16">.<pos:position pos:line="111" pos:column="17"/></operator><name pos:line="111" pos:column="17">argouml<pos:position pos:line="111" pos:column="24"/></name><operator pos:line="111" pos:column="24">.<pos:position pos:line="111" pos:column="25"/></operator><name pos:line="111" pos:column="25">model<pos:position pos:line="111" pos:column="30"/></name><operator pos:line="111" pos:column="30">.<pos:position pos:line="111" pos:column="31"/></operator><name pos:line="111" pos:column="31">ModelFacade<pos:position pos:line="111" pos:column="42"/></name><operator pos:line="111" pos:column="42">.<pos:position pos:line="111" pos:column="43"/></operator><name pos:line="111" pos:column="43">isANamespace<pos:position pos:line="111" pos:column="55"/></name></name><argument_list pos:line="111" pos:column="55">(<argument><expr><name pos:line="111" pos:column="56">target<pos:position pos:line="111" pos:column="62"/></name></expr></argument>)<pos:position pos:line="111" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="111" pos:column="64"/></condition><then pos:line="111" pos:column="64">
            <block type="pseudo"><return pos:line="112" pos:column="13">return <expr><call><name pos:line="112" pos:column="20">isValidNamespace<pos:position pos:line="112" pos:column="36"/></name><argument_list pos:line="112" pos:column="36">(<argument><expr><name pos:line="112" pos:column="37">target<pos:position pos:line="112" pos:column="43"/></name></expr></argument>)<pos:position pos:line="112" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="45"/></return></block></then>
        <else pos:line="113" pos:column="9">else
            <block type="pseudo"><return pos:line="114" pos:column="13">return <expr><literal type="boolean" pos:line="114" pos:column="20">false<pos:position pos:line="114" pos:column="25"/></literal></expr>;<pos:position pos:line="114" pos:column="26"/></return></block></else></if>
    }<pos:position pos:line="115" pos:column="6"/></block></function>

}<pos:position pos:line="117" pos:column="2"/></block></class> <comment type="block" pos:line="117" pos:column="3">/* end class ActionCollaborationDiagram */</comment>
</unit>
